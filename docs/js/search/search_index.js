var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,1.179,1,2.859]],["body/interfaces/AddMatchData.html",[0,1.676,1,4.588,2,0.162,3,0.162,4,0.146,5,3.294,6,0.469,7,1.001,8,4.906,9,4.906,10,2.797,11,0.69,12,0.014,13,1.76,14,0.289,15,3.145,16,2.629,17,1.394,18,0.24,19,1.348,20,0.835,21,0.162,22,5.575,23,2.571,24,1.502,25,4.426,26,4.426,27,1.003,28,2.197,29,1.926,30,4.998,31,2.475,32,2.475,33,2.475,34,2.68,35,2.015,36,3.058,37,1.695,38,1.695,39,0.196,40,1.003,41,0.932,42,3.656,43,1.003,44,3.656,45,0.097,46,0.967,47,0.899,48,3.656,49,3.656,50,1.627,51,1.843,52,3.294,53,3.656,54,3.325,55,3.656,56,0.561,57,1.13,58,2.221,59,1.364,60,1.343,61,2.629,62,1.627,63,3.294,64,3.294,65,2.808,66,3.294,67,1.203,68,1.04,69,4.998,70,1.343,71,3.024,72,3.294,73,1.208,74,3.656,75,3.656,76,3.656,77,3.656,78,3.656,79,3.656,80,4.912,81,2.839,82,4.912,83,4.912,84,4.426,85,3.656,86,3.773,87,3.656,88,2.475,89,3.656,90,3.656,91,1.843,92,3.656,93,3.656,94,4.912,95,3.656,96,4.912,97,3.656,98,3.656,99,3.656,100,3.024,101,2.808,102,1.448,103,3.656,104,3.325,105,3.656,106,0.01,107,0.01]],["title/components/AddteamComponent.html",[18,0.169,108,0.948]],["body/components/AddteamComponent.html",[2,0.161,3,0.161,4,0.145,6,0.466,7,0.997,11,0.777,12,0.014,13,1.573,14,0.217,18,0.302,19,0.997,21,0.161,28,2.703,29,1.914,39,0.145,40,1.978,41,1.839,43,1.342,45,0.097,46,0.961,56,0.751,57,1.127,72,4.408,106,0.01,107,0.011,108,1.623,109,1.153,110,1.153,111,1.153,112,3.634,113,1.153,114,1.443,115,5.627,116,5.627,117,1.036,118,4.892,119,3.634,120,1.084,121,4.18,122,1.036,123,1.115,124,0.997,125,4.408,126,4.18,127,3.274,128,0.582,129,0.961,130,4.18,131,4.18,132,3.518,133,5.627,134,1.866,135,0.799,136,1.552,137,1.552,138,1.552,139,1.877,140,1.153,141,1.153,142,1.153,143,0.961,144,1.153,145,0.997,146,1.153,147,0.997,148,1.153,149,0.997,150,1.153,151,0.997,152,1.112,153,1.153,154,0.961,155,1.153,156,0.997,157,1.153,158,0.997,159,1.153,160,0.997,161,1.153,162,0.997,163,1.153,164,1.034,165,1.153,166,0.997,167,1.153,168,0.997,169,1.153,170,0.997,171,1.153,172,0.927,173,1.153,174,0.961,175,1.153,176,0.961,177,1.153,178,0.997,179,1.153,180,0.997,181,1.153,182,0.927,183,1.153,184,0.961,185,1.153,186,0.961,187,1.153,188,0.997,189,1.153,190,0.961,191,1.034,192,1.153]],["title/components/AddtournamentroundComponent.html",[18,0.169,46,0.914]],["body/components/AddtournamentroundComponent.html",[0,0.784,1,4.497,2,0.102,3,0.102,4,0.091,5,2.07,6,0.294,7,0.716,8,3.532,9,1.9,10,1.158,11,0.896,12,0.014,13,1.61,14,0.251,15,3.481,16,1.652,17,0.876,18,0.252,19,1.171,20,0.802,21,0.102,22,5.39,23,2.705,24,1.463,25,3.167,26,3.167,27,0.63,28,2.494,29,1.21,30,5.098,31,1.555,32,1.555,33,1.555,34,2.734,35,1.266,36,3.119,37,1.065,38,1.065,39,0.14,40,1.9,41,1.766,42,3.515,43,0.964,44,3.515,45,0.061,46,1.265,47,0.864,48,4.783,49,4.783,50,1.414,51,1.772,52,4.31,53,4.783,54,3.681,55,4.783,56,0.539,57,1.219,58,3.132,59,1.05,60,1.568,61,1.652,62,2.42,63,2.07,64,2.07,65,1.764,66,2.07,67,1.404,68,1.361,69,3.847,70,0.844,71,1.9,72,4.31,73,0.864,74,2.297,75,2.297,76,2.297,77,2.297,78,2.297,79,2.297,80,3.515,81,2.032,82,3.515,83,3.515,84,3.167,85,3.515,86,2.7,87,2.297,88,1.555,89,3.515,90,4.783,91,1.158,92,2.297,93,2.297,94,3.515,95,2.297,96,3.515,97,2.297,98,2.297,99,2.297,100,1.9,101,1.764,102,0.91,103,3.515,104,2.38,105,3.515,106,0.007,107,0.008,108,0.63,109,0.729,110,0.729,111,0.729,113,0.729,117,0.744,120,1.286,122,1.013,123,1.025,124,0.975,128,0.871,129,1.364,132,3.439,134,2.402,135,0.505,136,1.115,137,1.115,138,1.115,139,1.517,140,0.729,141,0.729,142,0.729,143,0.608,144,0.729,145,0.63,146,0.729,147,0.63,148,0.729,149,0.63,150,0.729,151,0.63,152,0.703,153,0.729,154,0.608,155,0.729,156,0.63,157,0.729,158,0.63,159,0.729,160,0.63,161,0.729,162,0.63,163,0.729,164,0.653,165,0.729,166,0.63,167,0.729,168,0.63,169,0.729,170,0.63,171,0.729,172,0.586,173,0.729,174,0.608,175,0.729,176,0.608,177,0.729,178,0.63,179,0.729,180,0.63,181,0.729,182,0.586,183,0.729,184,0.608,185,0.729,186,0.608,187,0.729,188,0.63,189,0.729,190,0.608,191,0.653,192,0.729,193,4.043,194,4.043,195,4.043,196,2.297,197,4.043,198,2.642,199,2.642,200,2.642,201,2.642,202,2.642,203,2.135,204,2.642,205,1.652,206,2.642,207,2.642,208,2.642,209,2.642,210,2.642,211,2.642,212,1.158,213,0.945,214,2.642,215,2.642,216,4.043,217,4.043,218,4.043,219,4.043,220,4.043,221,4.31,222,4.043,223,4.043]],["title/components/AdminComponent.html",[18,0.169,143,0.914]],["body/components/AdminComponent.html",[2,0.172,3,0.172,4,0.154,6,0.497,12,0.014,14,0.226,18,0.309,19,1.567,21,0.172,28,1.536,29,2.042,39,0.154,40,1.987,41,1.847,43,1.401,45,0.103,46,1.026,47,1.256,56,0.877,68,1.727,106,0.01,107,0.011,108,1.064,109,1.23,110,1.23,111,1.23,113,1.23,114,1.507,117,1.081,120,1.001,123,0.963,128,0.621,129,1.026,135,0.853,136,1.62,137,1.62,138,1.62,139,1.926,140,1.23,141,1.23,142,1.23,143,1.606,144,1.23,145,1.064,146,1.23,147,1.064,148,1.23,149,1.064,150,1.23,151,1.064,152,1.186,153,1.23,154,1.026,155,1.23,156,1.064,157,1.23,158,1.064,159,1.23,160,1.064,161,1.23,162,1.064,163,1.23,164,1.103,165,1.23,166,1.064,167,1.23,168,1.064,169,1.23,170,1.064,171,1.23,172,0.989,173,1.23,174,1.026,175,1.23,176,1.026,177,1.23,178,1.064,179,1.23,180,1.064,181,1.23,182,0.989,183,1.23,184,1.026,185,1.23,186,1.026,187,1.23,188,1.064,189,1.23,190,1.026,191,1.103,192,1.23,224,3.877,225,4.225,226,5.875,227,5.875,228,4.459,229,4.459]],["title/guards/AdminGuard.html",[230,2.655,231,3.114]],["body/guards/AdminGuard.html",[2,0.212,3,0.212,4,0.19,6,0.613,11,0.672,12,0.014,14,0.279,20,1.332,21,0.212,39,0.19,45,0.127,47,1.176,56,0.896,59,1.176,106,0.011,107,0.011,117,1.236,120,1.235,122,1.013,123,0.902,124,0.975,128,1.05,230,3.675,231,5.259,232,5.502,233,6.163,234,6.163,235,3.675,236,3.168,237,5.502,238,3.736,239,5.502,240,5.502,241,2.217,242,2.906,243,2.412,244,2.311,245,6.713]],["title/modules/AdminModule.html",[246,0.601,247,2.859]],["body/modules/AdminModule.html",[2,0.181,3,0.181,4,0.162,12,0.014,14,0.31,21,0.181,39,0.21,45,0.109,46,1.792,106,0.01,107,0.01,108,1.802,135,0.897,143,1.738,164,1.869,166,1.802,168,1.802,172,1.675,225,3.374,246,0.919,247,5.963,248,2.148,249,3.084,250,2.248,251,2.148,252,4.078,253,4.078,254,4.078,255,5.046,256,3.621,257,3.052,258,2.358,259,2.358,260,4.691,261,4.757,262,2.091,263,4.078,264,2.611,265,2.761,266,4.691,267,4.691,268,4.691,269,4.691,270,4.691,271,4.691,272,3.133,273,4.691]],["title/modules/AdminRoutingModule.html",[246,0.601,255,2.655]],["body/modules/AdminRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.26,106,0.012,107,0.012,143,1.609,241,2.376,246,0.892,255,4.674,262,2.41,263,5.126,274,5.896,275,3.281,276,3.577,277,3.281,278,3.281,279,3.47]],["title/components/AppComponent.html",[18,0.169,145,0.948]],["body/components/AppComponent.html",[2,0.167,3,0.112,4,0.1,6,0.322,7,0.767,11,0.82,12,0.014,13,1.284,14,0.285,17,0.959,18,0.263,19,1.238,21,0.112,34,3.104,35,1.387,36,3.218,37,1.166,38,1.166,39,0.1,40,1.918,41,1.783,43,1.033,45,0.067,46,0.665,47,0.926,56,0.578,57,1.348,59,1.109,62,1.676,65,1.932,67,1.484,68,1.425,70,0.924,73,0.926,106,0.007,107,0.009,108,0.69,109,0.798,110,0.798,111,0.798,113,0.798,114,1.111,117,0.797,120,1.244,122,0.797,123,0.944,124,0.767,128,0.859,129,1.325,134,2.147,135,0.553,136,1.194,137,1.194,138,1.194,139,1.589,140,0.798,141,0.798,142,0.798,143,0.665,144,0.798,145,1.374,146,0.798,147,1.033,148,0.798,149,0.69,150,0.798,151,0.69,152,0.769,153,0.798,154,0.665,155,0.798,156,0.69,157,0.798,158,0.69,159,0.798,160,0.69,161,0.798,162,1.033,163,0.798,164,0.716,165,0.798,166,0.69,167,0.798,168,0.69,169,0.798,170,0.69,171,0.798,172,0.642,173,0.798,174,0.665,175,0.798,176,0.665,177,0.798,178,0.69,179,0.798,180,0.69,181,0.798,182,0.96,183,0.798,184,0.665,185,0.798,186,0.665,187,0.798,188,0.69,189,0.798,190,0.665,191,0.716,192,0.798,236,2.72,238,3.604,242,1.528,244,1.819,280,2.515,281,4.33,282,4.33,283,4.061,284,3.604,285,4.35,286,5.762,287,4.33,288,5.762,289,5.762,290,2.081,291,2.705,292,4.048,293,4.066,294,4.514,295,2.893,296,2.893,297,2.893,298,4.33,299,2.893,300,2.893,301,2.893,302,2.893,303,2.893,304,2.893,305,2.893,306,2.893,307,2.893,308,1.932,309,2.515,310,2.515,311,1.932,312,2.515,313,2.266,314,1.703,315,2.266,316,2.893,317,2.515,318,2.515,319,2.266,320,1.809,321,1.454,322,2.893,323,2.893,324,2.893,325,2.893,326,2.893,327,1.809,328,2.707,329,2.893,330,2.893,331,4.33,332,2.893,333,2.893,334,2.893,335,2.893,336,2.893,337,2.893,338,2.893,339,2.893,340,2.893,341,2.893,342,2.893,343,2.893,344,2.893,345,4.33,346,4.33,347,4.33,348,4.33,349,4.33,350,4.33,351,3.765,352,4.33,353,4.33,354,3.765,355,4.33,356,4.33,357,4.33,358,4.33,359,4.33]],["title/modules/AppCoreModule.html",[246,0.601,360,2.485]],["body/modules/AppCoreModule.html",[2,0.225,3,0.225,4,0.202,12,0.014,14,0.303,21,0.225,31,3.441,32,3.441,33,3.441,37,2.356,38,2.356,39,0.202,45,0.135,106,0.012,107,0.012,246,0.884,251,3.189,262,2.398,360,4.353,361,5.083,362,5.846,363,6.054,364,5.007,365,5.846,366,4.58,367,5.846,368,5.083]],["title/modules/AppModule.html",[246,0.601,369,2.859]],["body/modules/AppModule.html",[2,0.134,3,0.134,4,0.121,12,0.015,14,0.315,17,1.155,21,0.134,27,0.831,28,1.989,29,1.595,34,2.426,35,1.67,37,1.404,38,1.404,39,0.246,41,1.1,45,0.081,106,0.008,107,0.008,128,0.926,135,0.666,145,1.829,147,1.734,162,1.734,182,1.281,246,0.75,248,1.595,249,2.645,250,2.768,251,3.477,257,2.492,258,1.751,259,1.751,261,3.885,262,1.708,264,1.939,283,3.214,285,3.399,308,2.326,309,3.028,310,3.028,311,2.326,313,2.729,315,2.729,360,2.178,366,2.729,368,3.028,369,5.697,370,3.028,371,3.028,372,3.028,373,3.028,374,3.028,375,4.616,376,4.321,377,4.971,378,2.729,379,4.959,380,4.312,381,2.729,382,5.415,383,4.959,384,3.483,385,3.483,386,4.959,387,3.028,388,3.028,389,3.028,390,4.959,391,4.959,392,2.326,393,3.483,394,4.312,395,4.312,396,1.595,397,2.645,398,2.178,399,3.483,400,1.939,401,3.483,402,3.483,403,4.959,404,3.1,405,3.483,406,3.028,407,3.483,408,4.783,409,3.028,410,3.483,411,3.028,412,3.483,413,3.028,414,3.483,415,3.028,416,4.959,417,3.028,418,3.483,419,6.65,420,2.729,421,6.65,422,6.912,423,3.651,424,2.729,425,2.729,426,2.729,427,4.959,428,3.028,429,3.483,430,3.483,431,2.729]],["title/modules/AppRoutingModule.html",[246,0.601,375,2.655]],["body/modules/AppRoutingModule.html",[2,0.2,3,0.2,4,0.179,12,0.014,14,0.293,21,0.2,39,0.244,45,0.12,73,1.107,106,0.011,107,0.011,152,1.377,191,1.28,225,3.723,231,5.523,233,5.523,234,5.523,241,2.086,246,0.783,262,2.226,275,2.881,276,3.099,277,3.598,278,4.424,361,4.5,375,4.318,432,5.176,433,5.953,434,5.176,435,5.176,436,5.176,437,5.064,438,5.176,439,4.5,440,3.723,441,7.862,442,5.176,443,5.176,444,5.176,445,2.881,446,5.176,447,5.176,448,5.176,449,4.055,450,5.176,451,5.176]],["title/interceptors/AuthInterceptor.html",[377,2.859,452,3.456]],["body/interceptors/AuthInterceptor.html",[2,0.202,3,0.202,4,0.181,6,0.583,11,0.795,12,0.014,14,0.286,20,1.292,21,0.202,39,0.181,45,0.121,47,1.119,56,0.698,57,1.255,106,0.011,107,0.011,117,1.198,120,1.11,122,1.198,123,1.067,124,1.153,128,1.032,235,3.496,236,3.114,238,3.623,242,2.765,317,5.66,377,4.682,392,3.496,452,4.551,453,5.234,454,6.51,455,5.234,456,6.51,457,7.413,458,4.732,459,7.413,460,5.234,461,5.234,462,3.742,463,6.51,464,5.234,465,2.397,466,3.272,467,5.234,468,6.51,469,5.234,470,3.496,471,5.234,472,5.234]],["title/injectables/AuthenticationService.html",[20,0.789,236,1.67]],["body/injectables/AuthenticationService.html",[0,0.907,2,0.118,3,0.118,4,0.106,6,0.341,7,0.799,11,0.807,12,0.015,13,1.868,14,0.243,20,1.175,21,0.118,24,1.574,27,0.729,39,0.156,45,0.105,50,1.576,56,0.602,57,1.291,59,1.265,60,1.441,62,1.183,67,2.083,70,0.976,73,1.35,88,1.799,91,1.34,102,1.053,106,0.008,107,0.008,117,0.831,120,1.274,122,1.162,123,1.035,124,1.211,128,1.061,129,1.038,213,1.094,236,1.895,241,1.232,243,1.34,244,1.284,392,2.042,404,1.911,445,3.295,462,1.615,470,4.783,473,2.199,474,4.865,475,3.923,476,4.512,477,4.638,478,4.512,479,4.638,480,4.512,481,2.511,482,4.201,483,4.201,484,4.201,485,4.201,486,1.702,487,5.354,488,5.354,489,4.201,490,3.057,491,1.799,492,3.535,493,3.057,494,3.245,495,3.6,496,3.535,497,3.057,498,2.383,499,3.057,500,3.535,501,3.954,502,3.057,503,2.395,504,3.057,505,3.535,506,4.217,507,3.057,508,3.057,509,3.057,510,3.057,511,3.057,512,3.057,513,3.057,514,3.057,515,3.057,516,3.057,517,4.201,518,2.042,519,3.013,520,3.245,521,2.199,522,3.245,523,1.911,524,2.199,525,3.856,526,2.395,527,1.799,528,3.535,529,2.395,530,2.395,531,2.066,532,1.183,533,5.354,534,2.395,535,2.395,536,2.832,537,4.638,538,2.395,539,2.395,540,3.535,541,3.535,542,2.395,543,2.395,544,3.856,545,2.821,546,2.395,547,2.042,548,2.395,549,2.042,550,2.395,551,2.395,552,2.395,553,2.395,554,2.395,555,3.581,556,3.013,557,3.535,558,1.799,559,2.395,560,2.395,561,2.395,562,1.799,563,2.395,564,2.395,565,3.535,566,2.395,567,2.821,568,2.395,569,2.395,570,2.395,571,2.395,572,2.395,573,2.395,574,2.395,575,2.395,576,2.199,577,2.395,578,2.395]],["title/interfaces/CacheTeamsInSeason.html",[0,1.179,579,2.859]],["body/interfaces/CacheTeamsInSeason.html",[0,1.348,2,0.119,3,0.119,4,0.107,6,0.344,7,0.805,11,0.659,12,0.015,13,1.871,14,0.175,20,0.902,21,0.119,23,3.295,24,1.209,27,1.286,28,2.514,39,0.157,45,0.105,50,1.678,51,1.353,56,0.412,57,1.175,59,0.66,60,0.986,67,1.896,70,1.452,73,1.153,81,2.284,86,3.973,102,2.048,106,0.008,107,0.008,125,2.419,127,4.225,128,1.084,243,1.353,244,1.297,382,2.419,495,3.721,498,2.848,527,1.817,531,2.082,536,3.142,555,3.035,556,2.062,558,2.675,562,3.174,579,4.278,580,2.419,581,5.625,582,4.225,583,4.234,584,2.684,585,2.684,586,2.684,587,2.684,588,3.035,589,4.689,590,6.116,591,2.684,592,3.951,593,1.817,594,2.684,595,2.684,596,3.951,597,3.951,598,2.684,599,4.967,600,3.142,601,2.684,602,3.951,603,2.684,604,2.684,605,2.684,606,2.22,607,2.419,608,2.684,609,3.951,610,2.684,611,2.684,612,2.684,613,2.684,614,3.951,615,2.684,616,3.56,617,2.684,618,2.684,619,2.684,620,3.951,621,3.602,622,4.225,623,4.225,624,3.691,625,2.684,626,1.552,627,5.765,628,2.684,629,2.684,630,2.684,631,2.684,632,2.684,633,3.951,634,2.684,635,2.684,636,2.684,637,2.684,638,2.684,639,2.684,640,2.419,641,2.684]],["title/components/ChangepasswordComponent.html",[18,0.169,147,0.948]],["body/components/ChangepasswordComponent.html",[2,0.138,3,0.138,4,0.124,6,0.398,7,0.894,11,0.82,12,0.014,14,0.245,15,3.877,17,1.183,18,0.286,19,1.396,21,0.138,39,0.124,40,1.954,41,1.817,43,1.203,45,0.083,46,0.821,47,1.078,50,1.203,56,0.673,57,1.037,58,3.679,59,0.763,67,1.673,68,1.573,70,1.139,106,0.009,107,0.01,108,0.851,109,0.984,110,0.984,111,0.984,113,0.984,114,1.294,117,0.929,120,1.221,122,0.657,123,0.959,124,0.632,128,0.702,129,0.821,134,2.425,135,0.682,136,1.391,137,1.391,138,1.391,139,1.754,140,0.984,141,0.984,142,0.984,143,0.821,144,0.984,145,0.851,146,0.984,147,1.517,148,0.984,149,0.851,150,0.984,151,0.851,152,0.949,153,0.984,154,0.821,155,0.984,156,0.851,157,0.984,158,0.851,159,0.984,160,0.851,161,0.984,162,0.851,163,0.984,164,0.882,165,0.984,166,0.851,167,0.984,168,0.851,169,0.984,170,0.851,171,0.984,172,0.791,173,0.984,174,0.821,175,0.984,176,0.821,177,0.984,178,0.851,179,0.984,180,0.851,181,0.984,182,0.791,183,0.984,184,0.821,185,0.984,186,0.821,187,0.984,188,0.851,189,0.984,190,0.821,191,0.882,192,0.984,235,2.383,236,2.672,238,2.808,242,1.884,396,1.634,423,1.884,445,3.54,475,6.057,494,4.574,532,2.265,567,2.23,642,3.102,643,5.044,644,5.044,645,6.36,646,5.044,647,3.567,648,3.567,649,3.567,650,4.379,651,3.567,652,3.567,653,2.23,654,3.567,655,3.153,656,3.102,657,3.567,658,3.567,659,3.567,660,5.044,661,3.102,662,3.102,663,5.53,664,5.53,665,4.385,666,4.385]],["title/components/ContactComponent.html",[18,0.169,149,0.948]],["body/components/ContactComponent.html",[2,0.145,3,0.145,4,0.13,6,0.418,7,0.925,11,0.794,12,0.014,13,1.691,14,0.232,15,3.94,16,2.344,17,1.243,18,0.291,19,1.434,20,1.037,21,0.145,23,3.032,24,1.729,27,0.894,39,0.13,40,1.962,41,1.824,43,1.246,45,0.087,46,0.862,47,1.116,50,1.246,51,2.289,56,0.697,57,1.333,58,3.61,59,0.801,60,1.92,61,2.344,68,1.608,73,0.801,106,0.009,107,0.01,108,0.894,109,1.034,110,1.034,111,1.034,113,1.034,114,1.339,117,0.961,120,1.165,122,0.69,123,0.985,124,0.664,128,0.522,129,0.862,132,3.265,134,2.155,135,0.717,136,1.44,137,1.44,138,1.44,139,1.793,140,1.034,141,1.034,142,1.034,143,0.862,144,1.034,145,0.894,146,1.034,147,0.894,148,1.034,149,1.551,150,1.034,151,0.894,152,1.818,153,1.034,154,0.862,155,1.034,156,0.894,157,1.034,158,0.894,159,1.034,160,0.894,161,1.034,162,0.894,163,1.034,164,0.927,165,1.034,166,0.894,167,1.034,168,0.894,169,1.034,170,0.894,171,1.034,172,0.831,173,1.034,174,0.862,175,1.034,176,0.862,177,1.034,178,0.894,179,1.034,180,0.894,181,1.034,182,0.831,183,1.034,184,0.862,185,1.034,186,0.862,187,1.034,188,0.894,189,1.034,190,0.862,191,0.927,192,1.034,196,3.259,205,2.344,212,1.643,213,1.341,498,3.836,640,2.937,667,3.259,668,5.223,669,5.223,670,5.223,671,3.749,672,3.749,673,3.749,674,3.749,675,3.259,676,5.223]],["title/components/ContactPersonComponent.html",[18,0.169,151,0.948]],["body/components/ContactPersonComponent.html",[2,0.16,3,0.16,4,0.144,6,0.462,11,0.507,12,0.014,14,0.216,18,0.301,19,1.511,21,0.16,27,0.99,39,0.144,40,1.977,41,1.838,43,1.335,45,0.096,46,0.954,47,1.197,56,0.846,68,1.678,106,0.01,107,0.011,108,0.99,109,1.144,110,1.144,111,1.144,113,1.144,114,1.436,117,1.031,120,1.08,123,0.918,128,0.578,129,0.954,134,1.856,135,0.793,136,1.544,137,1.544,138,1.544,139,1.871,140,1.144,141,1.144,142,1.144,143,0.954,144,1.144,145,0.99,146,1.144,147,0.99,148,1.144,149,0.99,150,1.144,151,1.618,152,2.067,153,1.144,154,0.954,155,1.144,156,0.99,157,1.144,158,0.99,159,1.144,160,0.99,161,1.144,162,0.99,163,1.144,164,1.026,165,1.144,166,0.99,167,1.144,168,0.99,169,1.144,170,0.99,171,1.144,172,0.92,173,1.144,174,0.954,175,1.144,176,0.954,177,1.144,178,0.99,179,1.144,180,0.99,181,1.144,182,0.92,183,1.144,184,0.954,185,1.144,186,0.954,187,1.144,188,0.99,189,1.144,190,0.954,191,1.026,192,1.144,354,5.898,583,4.232,677,5.898,678,5.315,679,3.607,680,5.599,681,5.599,682,4.241,683,5.599,684,4.149,685,5.599,686,5.599,687,5.599,688,5.599,689,5.599,690,5.599,691,4.386]],["title/components/ContactlistComponent.html",[18,0.169,154,0.914]],["body/components/ContactlistComponent.html",[2,0.174,3,0.174,4,0.156,6,0.502,12,0.014,14,0.174,18,0.31,19,1.574,21,0.174,39,0.156,40,1.988,41,1.848,43,1.41,45,0.104,46,1.036,47,1.264,56,0.881,68,1.734,106,0.01,107,0.011,108,1.074,109,1.242,110,1.242,111,1.242,113,1.242,114,1.516,117,1.088,120,1.008,123,0.969,128,0.627,129,1.036,135,0.861,136,1.63,137,1.63,138,1.63,139,1.933,140,1.242,141,1.242,142,1.242,143,1.036,144,1.242,145,1.074,146,1.242,147,1.074,148,1.242,149,1.074,150,1.242,151,1.074,152,1.197,153,1.242,154,1.612,155,1.242,156,1.074,157,1.242,158,1.074,159,1.242,160,1.074,161,1.242,162,1.074,163,1.242,164,1.114,165,1.242,166,1.074,167,1.242,168,1.074,169,1.242,170,1.074,171,1.242,172,0.998,173,1.242,174,1.036,175,1.242,176,1.036,177,1.242,178,1.074,179,1.242,180,1.074,181,1.242,182,0.998,183,1.242,184,1.036,185,1.242,186,1.036,187,1.242,188,1.074,189,1.242,190,1.036,191,1.114,192,1.242,692,3.914,693,5.14,694,5.912,695,5.912,696,4.502,697,4.502]],["title/modules/ContactlistModule.html",[246,0.601,698,2.859]],["body/modules/ContactlistModule.html",[2,0.201,3,0.201,4,0.181,12,0.014,14,0.307,21,0.201,39,0.225,45,0.121,106,0.011,107,0.011,135,0.997,154,1.786,178,1.852,188,1.852,246,0.982,248,2.389,249,3.24,250,2.5,251,2.389,256,3.722,257,3.264,258,2.621,259,2.621,262,2.236,264,2.903,265,3.069,693,4.534,698,5.915,699,4.534,700,4.534,701,4.534,702,5.186,703,5.215,704,4.534,705,2.754,706,5.215]],["title/modules/ContactlistRoutingModule.html",[246,0.601,702,2.655]],["body/modules/ContactlistRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.26,106,0.012,107,0.012,154,1.609,241,2.376,246,0.892,262,2.41,275,3.281,276,3.577,277,3.281,278,3.281,279,3.47,702,4.674,704,5.126,707,5.896]],["title/classes/Credentials.html",[45,0.092,506,2.655]],["body/classes/Credentials.html",[0,1.052,2,0.137,3,0.137,4,0.123,6,0.395,7,0.89,11,0.713,12,0.015,13,1.884,14,0.258,20,1.157,21,0.137,24,1.335,27,0.846,39,0.174,45,0.135,50,1.658,56,0.67,57,1.294,59,1.356,60,1.132,62,1.372,67,1.814,70,1.132,73,1.431,88,2.086,91,1.554,102,1.221,106,0.009,107,0.009,120,0.856,122,0.653,123,0.581,124,1.033,128,1.017,236,1.489,241,1.429,243,1.554,244,1.489,392,2.368,404,2.216,445,2.795,462,1.872,470,4.961,473,2.549,474,4.471,477,2.777,479,2.777,482,2.777,483,2.777,484,2.777,485,2.777,487,4.568,488,4.568,489,2.777,492,2.777,494,2.549,495,3.494,496,2.777,498,1.872,500,2.777,501,3.354,505,2.777,506,4.236,517,4.568,518,2.368,519,3.354,520,3.611,521,2.549,522,3.611,523,2.216,524,2.549,525,5.141,526,2.777,527,2.086,528,3.934,529,2.777,530,2.777,531,2.3,532,1.372,533,5.6,534,2.777,535,2.777,536,3.08,537,4.969,538,2.777,539,2.777,540,3.934,541,3.934,542,2.777,543,2.777,544,4.194,545,3.139,546,2.777,547,2.368,548,2.777,549,2.368,550,2.777,551,2.777,552,2.777,553,2.777,554,2.777,555,3.894,556,3.354,557,3.934,558,2.086,559,2.777,560,2.777,561,2.777,562,2.086,563,2.777,564,2.777,565,3.934,566,2.777,567,3.139,568,2.777,569,2.777,570,2.777,571,2.777,572,2.777,573,2.777,574,2.777,575,2.777,576,2.549,577,2.777,578,2.777,708,3.545,709,3.545,710,3.545]],["title/injectables/CustomOwlDateTimeIntl.html",[20,0.789,364,2.859]],["body/injectables/CustomOwlDateTimeIntl.html",[2,0.217,3,0.217,4,0.195,11,0.689,12,0.014,14,0.282,20,1.453,21,0.217,31,3.317,32,3.317,33,3.317,36,3.645,37,2.271,38,2.271,39,0.195,45,0.131,56,0.752,106,0.012,107,0.012,120,0.96,122,1.037,123,0.924,124,0.998,363,5.921,364,4.898,466,3.523,711,4.899,712,5.635,713,5.635,714,6.81,715,4.899,716,5.635,717,5.635,718,5.921,719,5.635,720,5.635,721,6.81,722,5.635]],["title/components/EditmatchPitchComponent.html",[18,0.169,156,0.948]],["body/components/EditmatchPitchComponent.html",[2,0.086,3,0.086,4,0.077,6,0.247,7,0.625,11,0.882,12,0.015,13,1.439,14,0.258,15,2.786,16,1.387,17,0.736,18,0.232,19,1.048,20,0.7,21,0.086,24,1.331,39,0.077,40,1.861,41,1.731,43,0.842,45,0.051,46,0.51,47,0.754,50,1.51,56,0.471,57,0.778,58,2.32,59,1.243,60,1.403,61,1.387,62,0.859,67,0.635,68,1.238,73,1.07,91,1.547,100,1.596,101,1.482,102,0.764,106,0.006,107,0.011,108,0.529,109,0.612,110,0.612,111,0.612,113,0.612,114,0.905,117,0.65,120,1.274,122,0.921,123,0.953,124,0.887,128,0.931,129,1.338,134,2.523,135,0.424,136,0.973,137,0.973,138,0.973,139,1.38,140,0.612,141,0.612,142,0.612,143,0.51,144,0.612,145,0.529,146,0.612,147,0.529,148,0.612,149,0.529,150,0.612,151,0.529,152,0.59,153,0.612,154,0.51,155,0.612,156,1.194,157,0.612,158,0.529,159,0.612,160,0.529,161,0.612,162,0.529,163,0.612,164,0.549,165,0.612,166,0.529,167,0.612,168,0.529,169,0.612,170,0.529,171,0.612,172,0.492,173,0.612,174,0.51,175,0.612,176,0.51,177,0.612,178,0.529,179,0.612,180,0.529,181,0.612,182,0.492,183,0.612,184,0.51,185,0.612,186,0.51,187,0.612,188,0.529,189,0.612,190,0.51,191,0.549,192,0.612,205,2.206,212,1.547,213,1.791,285,3.59,396,1.016,397,2.793,398,1.387,423,1.172,462,2.643,465,1.016,491,1.306,532,2.251,624,1.235,650,3.933,653,1.387,655,2.206,705,3.998,723,1.929,724,3.528,725,3.528,726,3.528,727,5.005,728,3.599,729,3.599,730,5.005,731,5.005,732,5.005,733,5.005,734,5.462,735,5.005,736,5.005,737,5.005,738,3.068,739,3.068,740,3.528,741,3.921,742,5.005,743,1.738,744,2.443,745,4.392,746,5.005,747,4.778,748,3.528,749,2.219,750,2.219,751,2.537,752,2.219,753,2.32,754,2.537,755,2.219,756,1.929,757,2.219,758,3.528,759,2.219,760,2.219,761,2.219,762,3.528,763,2.219,764,2.219,765,2.219,766,2.219,767,2.219,768,2.219,769,3.921,770,2.219,771,4.392,772,2.219,773,2.219,774,1.306,775,2.933,776,3.819,777,1.738,778,2.537,779,1.596,780,1.482,781,1.738,782,1.738,783,2.219,784,2.219,785,2.219,786,2.219,787,1.738,788,2.219,789,1.596,790,1.596,791,1.596,792,1.596,793,1.596,794,1.306,795,1.596,796,1.596,797,1.596,798,1.596,799,1.596,800,1.596,801,2.933,802,2.219,803,2.219,804,2.219,805,2.219,806,2.219,807,2.219,808,2.219,809,2.219,810,2.219,811,2.219,812,4.392,813,2.219,814,4.392,815,2.219,816,2.219,817,3.528,818,2.219,819,2.219,820,2.219,821,3.528,822,2.219,823,2.219,824,2.219,825,1.929,826,1.929,827,1.929,828,2.219,829,2.219,830,2.219,831,2.219,832,2.219,833,2.219,834,2.077,835,2.077,836,3.068,837,3.068,838,3.528,839,3.068,840,3.921,841,3.528,842,3.528,843,5.005,844,3.528,845,3.528,846,3.528,847,3.528,848,3.528,849,3.528,850,3.528,851,2.764,852,2.537]],["title/components/EditmatchResultComponent.html",[18,0.169,158,0.948]],["body/components/EditmatchResultComponent.html",[2,0.138,3,0.138,4,0.124,6,0.398,7,0.894,10,3.054,11,0.777,12,0.014,14,0.245,15,3.54,16,2.23,17,1.183,18,0.286,19,1.396,20,1.001,21,0.138,39,0.124,40,1.954,41,1.817,43,1.203,45,0.083,46,0.821,47,1.078,56,0.673,57,1.037,58,3.091,59,1.078,61,2.23,68,1.573,101,2.383,102,1.228,106,0.009,107,0.013,108,0.851,109,0.984,110,0.984,111,0.984,113,0.984,114,1.294,117,0.929,120,1.187,122,0.657,123,0.959,124,0.632,128,0.702,129,1.16,134,2.31,135,0.682,136,1.391,137,1.391,138,1.391,139,1.754,140,0.984,141,0.984,142,0.984,143,0.821,144,0.984,145,0.851,146,0.984,147,0.851,148,0.984,149,0.851,150,0.984,151,0.851,152,0.949,153,0.984,154,0.821,155,0.984,156,0.851,157,0.984,158,1.517,159,0.984,160,0.851,161,0.984,162,0.851,163,0.984,164,0.882,165,0.984,166,0.851,167,0.984,168,0.851,169,0.984,170,0.851,171,0.984,172,0.791,173,0.984,174,0.821,175,0.984,176,0.821,177,0.984,178,0.851,179,0.984,180,0.851,181,0.984,182,0.791,183,0.984,184,0.821,185,0.984,186,0.821,187,0.984,188,0.851,189,0.984,190,0.821,191,0.882,192,0.984,205,2.23,291,2.886,314,2.1,682,2.23,741,4.983,743,2.795,744,2.926,774,2.1,834,2.969,835,2.969,851,3.952,852,3.628,853,3.102,854,5.044,855,5.044,856,5.044,857,5.53,858,5.53,859,5.044,860,3.567,861,3.567,862,3.567,863,3.567,864,5.044,865,3.567,866,5.044,867,3.567,868,3.567,869,3.567,870,3.567,871,2.566,872,3.567,873,3.567,874,3.567,875,5.044]],["title/components/EditmatchTimeComponent.html",[18,0.169,160,0.948]],["body/components/EditmatchTimeComponent.html",[2,0.124,3,0.124,4,0.111,6,0.358,7,0.829,11,0.788,12,0.014,14,0.268,15,3.375,16,2.01,17,1.066,18,0.274,19,1.317,20,0.929,21,0.124,24,1.613,27,0.767,30,5.439,31,1.892,32,1.892,33,1.892,34,3.172,35,1.541,36,3.328,37,1.296,38,1.296,39,0.111,40,1.937,41,1.801,43,1.117,45,0.075,46,0.739,47,1.001,54,3.249,56,0.625,57,1.192,58,2.916,59,1.18,60,1.763,61,2.01,63,2.519,64,2.519,65,2.147,66,2.519,68,1.5,88,1.892,101,2.147,104,1.892,106,0.008,107,0.012,108,0.767,109,0.887,110,0.887,111,0.887,113,0.887,114,1.201,117,0.862,120,1.184,122,0.862,123,0.994,124,0.829,128,0.769,129,1.27,134,2.444,135,0.615,136,1.291,137,1.291,138,1.291,139,1.672,140,0.887,141,0.887,142,0.887,143,0.739,144,0.887,145,0.767,146,0.887,147,0.767,148,0.887,149,0.767,150,0.887,151,0.767,152,0.855,153,0.887,154,0.739,155,0.887,156,0.767,157,0.887,158,0.767,159,0.887,160,1.446,161,0.887,162,0.767,163,0.887,164,0.795,165,0.887,166,0.767,167,0.887,168,0.767,169,0.887,170,0.767,171,0.887,172,0.713,173,0.887,174,0.739,175,0.887,176,0.739,177,0.887,178,0.767,179,0.887,180,0.767,181,0.887,182,0.713,183,0.887,184,0.739,185,0.887,186,0.739,187,0.887,188,0.767,189,0.887,190,0.739,191,0.795,192,0.887,203,1.698,205,2.01,221,3.668,545,2.01,741,4.751,743,2.519,744,2.826,834,2.755,835,2.755,851,3.668,852,3.367,876,2.795,877,4.681,878,4.681,879,4.681,880,6.727,881,4.681,882,4.681,883,4.681,884,3.215,885,3.215,886,3.215,887,3.215,888,3.215,889,2.312,890,2.147,891,4.681,892,3.215,893,2.795,894,4.681,895,3.127,896,4.07,897,4.681,898,4.07]],["title/injectables/I18Service.html",[20,0.789,34,1.67]],["body/injectables/I18Service.html",[2,0.188,3,0.188,4,0.169,6,0.543,7,1.102,11,0.838,12,0.014,13,1.918,14,0.278,20,1.36,21,0.188,34,2.613,36,3.658,37,1.963,38,1.963,39,0.169,45,0.113,56,0.65,57,1.28,65,4.155,106,0.011,107,0.011,117,1.145,120,1.272,122,1.145,123,1.02,124,1.102,128,0.954,129,1.431,212,2.135,213,1.743,243,2.135,244,2.046,466,3.045,481,3.462,899,4.234,900,7.221,901,6.22,902,5.657,903,6.854,904,4.87,905,4.87,906,6.22,907,4.87,908,4.87,909,7.462,910,7.221,911,4.87,912,4.87,913,4.87,914,4.87,915,4.87,916,4.87,917,4.87,918,4.87,919,7.462,920,4.87,921,4.87,922,4.87,923,4.87,924,4.87]],["title/interfaces/IPossibleKickoffs.html",[0,1.179,925,2.655]],["body/interfaces/IPossibleKickoffs.html",[0,1.612,2,0.121,3,0.121,4,0.108,6,0.767,7,0.813,10,3.211,11,0.779,12,0.015,13,1.481,14,0.286,18,0.195,19,1.095,21,0.121,23,2.569,24,1.445,27,0.746,28,1.077,29,1.433,34,2.283,35,1.5,39,0.108,40,0.746,41,0.694,43,0.746,45,0.073,47,0.669,50,1.52,51,1.372,54,3.199,56,0.418,57,0.554,59,0.981,68,0.774,73,1.363,81,1.573,91,1.372,104,1.842,106,0.008,107,0.012,114,0.802,128,0.888,172,0.694,203,1.653,213,1.642,272,2.09,291,1.261,396,1.433,397,2.489,398,1.956,423,1.653,462,2.424,465,1.433,532,1.211,588,3.065,600,1.653,624,3.025,626,2.307,650,3.199,682,3.985,705,4.006,728,2.25,729,2.25,744,1.928,751,2.25,753,2.424,754,2.25,775,2.09,778,3.301,779,2.25,780,2.09,789,2.25,790,2.25,791,2.25,792,2.25,793,2.25,794,1.842,795,2.25,796,2.25,797,2.25,798,2.25,799,2.25,800,2.25,801,2.09,834,1.842,835,1.842,889,2.25,890,2.09,895,3.63,925,4.257,926,2.25,927,2.25,928,4.994,929,4.994,930,4.994,931,3.998,932,3.595,933,3.162,934,2.451,935,2.451,936,2.25,937,3.595,938,2.451,939,2.451,940,2.451,941,2.451,942,2.451,943,2.451,944,2.25,945,4.994,946,2.451,947,2.451,948,2.451,949,3.595,950,3.595,951,2.451,952,2.307,953,2.451,954,2.25,955,2.451,956,2.451,957,3.595,958,2.451,959,2.451,960,2.451,961,2.451,962,3.595,963,2.451,964,2.451,965,2.451,966,2.451,967,2.451,968,3.595,969,2.451,970,2.451,971,2.451,972,2.451,973,1.956,974,2.451,975,2.451,976,2.451,977,2.451,978,3.595,979,3.595,980,3.595,981,2.451,982,2.451,983,2.451,984,2.451,985,3.595,986,2.451,987,2.451,988,2.451,989,2.451,990,2.451,991,2.451,992,2.451,993,2.451,994,2.451,995,2.451,996,2.451,997,2.451,998,3.595,999,2.451,1000,2.451,1001,2.451,1002,2.451,1003,2.451,1004,2.451,1005,2.451,1006,2.451,1007,2.451,1008,2.451,1009,2.451,1010,2.451,1011,2.451,1012,2.451,1013,2.451,1014,2.451,1015,2.451,1016,2.451,1017,2.451,1018,2.451,1019,3.595,1020,3.595]],["title/interfaces/ISnackBarData.html",[0,1.179,1021,2.859]],["body/interfaces/ISnackBarData.html",[0,2.035,2,0.22,3,0.22,4,0.197,6,0.636,7,1.216,11,0.697,12,0.014,13,1.82,14,0.264,17,1.891,18,0.292,19,1.636,20,1.132,21,0.22,39,0.238,40,1.36,41,1.265,43,1.36,45,0.132,47,1.219,56,0.761,57,1.011,62,2.208,68,1.411,106,0.012,107,0.012,114,1.463,182,1.265,284,3.175,321,3.837,1021,5.292,1022,4.468,1023,4.959,1024,4.959,1025,4.959,1026,4.959]],["title/interfaces/ITeamCanPlayAtDate.html",[0,1.179,931,2.655]],["body/interfaces/ITeamCanPlayAtDate.html",[0,1.634,2,0.124,3,0.124,4,0.111,6,0.675,7,0.827,10,2.945,11,0.571,12,0.015,13,1.497,14,0.288,18,0.199,19,1.114,21,0.124,23,2.968,24,1.465,27,0.764,28,1.103,29,1.468,34,2.315,35,1.536,39,0.111,40,0.764,41,0.711,43,0.764,45,0.074,47,0.685,50,1.535,51,1.405,54,1.886,56,0.428,57,0.568,59,0.998,68,0.793,73,1.376,81,1.61,91,1.405,104,1.886,106,0.008,107,0.012,114,0.822,128,0.896,172,0.711,203,1.692,213,1.671,272,2.14,291,1.291,396,1.468,397,2.524,398,2.003,423,1.692,462,2.466,465,1.468,532,2.133,588,3.119,600,1.692,624,3.067,626,2.347,650,3.243,682,4.024,705,3.754,728,2.304,729,2.304,744,1.962,751,2.304,753,2.466,754,2.304,775,2.14,778,3.358,779,2.304,780,2.14,789,2.304,790,2.304,791,2.304,792,2.304,793,2.304,794,1.886,795,2.304,796,2.304,797,2.304,798,2.304,799,2.304,800,2.304,801,2.14,834,1.886,835,1.886,889,2.304,890,2.14,895,3.68,925,4.044,926,2.304,927,2.304,928,3.658,929,3.658,930,3.658,931,3.68,932,3.658,933,3.198,934,2.51,935,2.51,936,2.304,937,5.042,938,2.51,939,2.51,940,2.51,941,2.51,942,2.51,943,2.51,944,2.304,945,5.042,946,2.51,947,2.51,948,2.51,949,3.658,950,3.658,951,2.51,952,2.347,953,2.51,954,2.304,955,2.51,956,2.51,957,3.658,958,2.51,959,2.51,960,2.51,961,2.51,962,3.658,963,2.51,964,2.51,965,2.51,966,2.51,967,2.51,968,3.658,969,2.51,970,2.51,971,2.51,972,2.51,973,2.003,974,2.51,975,2.51,976,2.51,977,2.51,978,3.658,979,3.658,980,3.658,981,2.51,982,2.51,983,2.51,984,2.51,985,3.658,986,2.51,987,2.51,988,2.51,989,2.51,990,2.51,991,2.51,992,2.51,993,2.51,994,2.51,995,2.51,996,2.51,997,2.51,998,3.658,999,2.51,1000,2.51,1001,2.51,1002,2.51,1003,2.51,1004,2.51,1005,2.51,1006,2.51,1007,2.51,1008,2.51,1009,2.51,1010,2.51,1011,2.51,1012,2.51,1013,2.51,1014,2.51,1015,2.51,1016,2.51,1017,2.51,1018,2.51,1019,3.658,1020,3.658]],["title/components/LoginComponent.html",[18,0.169,162,0.948]],["body/components/LoginComponent.html",[2,0.12,3,0.12,4,0.108,6,0.348,7,0.811,11,0.813,12,0.014,13,1.342,14,0.265,15,3.704,17,1.034,18,0.271,19,1.294,21,0.12,24,1.589,27,0.744,36,3.297,37,1.257,38,1.257,39,0.108,40,1.931,41,1.796,43,1.092,45,0.072,46,0.717,47,0.979,50,0.744,56,0.611,57,0.961,58,3.515,59,1.508,60,1.732,62,1.772,67,1.551,68,1.478,70,0.996,73,0.667,91,1.367,102,2.058,106,0.008,107,0.009,108,0.744,109,0.86,110,0.86,111,0.86,113,0.86,114,1.174,117,0.843,120,1.227,122,0.843,123,0.98,124,0.811,128,0.832,129,1.248,134,1.518,135,0.596,136,1.263,137,1.263,138,1.263,139,1.648,140,0.86,141,0.86,142,0.86,143,0.717,144,0.86,145,0.744,146,0.86,147,0.744,148,0.86,149,0.744,150,0.86,151,0.744,152,0.829,153,0.86,154,0.717,155,0.86,156,0.744,157,0.86,158,0.744,159,0.86,160,0.744,161,0.86,162,1.426,163,0.86,164,0.771,165,0.86,166,0.744,167,0.86,168,0.744,169,0.86,170,0.744,171,0.86,172,0.692,173,0.86,174,0.717,175,0.86,176,0.717,177,0.86,178,0.744,179,0.86,180,0.744,181,0.86,182,1.015,183,0.86,184,0.717,185,0.86,186,0.717,187,0.86,188,0.744,189,0.86,190,0.717,191,0.771,192,0.86,236,2.889,242,1.647,284,3.019,292,3.737,320,2.862,321,2.301,327,2.862,328,3.737,351,3.98,396,1.428,423,2.865,445,1.736,522,2.243,523,1.95,532,2.576,567,2.862,606,3.901,653,1.95,655,2.862,662,2.711,664,3.98,665,3.98,747,5.213,769,4.682,787,2.443,1027,2.711,1028,6.655,1029,4.578,1030,4.578,1031,5.977,1032,5.196,1033,5.977,1034,4.578,1035,3.119,1036,4.578,1037,3.119,1038,3.119,1039,3.119,1040,4.578,1041,3.119,1042,3.119,1043,3.119,1044,3.119,1045,3.98,1046,2.243,1047,3.119,1048,2.711,1049,5.424,1050,3.119,1051,3.119,1052,3.119,1053,2.443,1054,3.119,1055,3.119,1056,3.119,1057,2.083,1058,3.119,1059,2.243,1060,3.119,1061,4.578,1062,3.98,1063,4.578]],["title/interfaces/LoginContext.html",[0,1.179,501,2.655]],["body/interfaces/LoginContext.html",[0,1.502,2,0.138,3,0.138,4,0.124,6,0.4,7,0.897,11,0.717,12,0.015,13,1.888,14,0.259,20,1.165,21,0.138,24,1.346,27,0.855,39,0.175,45,0.117,50,1.664,56,0.478,57,1.236,59,1.363,60,1.145,62,1.388,67,1.823,70,1.145,73,1.437,88,2.111,91,1.572,102,1.235,106,0.009,107,0.009,124,0.897,128,1.02,236,1.506,241,1.445,243,1.572,244,1.506,392,2.395,404,2.242,445,2.818,462,1.894,470,4.974,473,2.579,474,4.49,477,2.809,479,2.809,482,2.809,483,2.809,484,2.809,485,2.809,487,4.597,488,4.597,489,2.809,492,2.809,494,2.579,495,3.507,496,2.809,498,1.894,500,2.809,501,3.919,505,2.809,506,3.919,517,4.597,518,2.395,519,3.381,520,3.641,521,2.579,522,4.835,523,3.985,524,2.579,525,4.22,526,2.809,527,2.111,528,3.966,529,2.809,530,2.809,531,2.319,532,1.388,533,5.619,534,2.809,535,2.809,536,3.099,537,4.994,538,2.809,539,2.809,540,3.966,541,3.966,542,2.809,543,2.809,544,4.22,545,3.165,546,2.809,547,2.395,548,2.809,549,2.395,550,2.809,551,2.809,552,2.809,553,2.809,554,2.809,555,3.919,556,3.381,557,3.966,558,2.111,559,2.809,560,2.809,561,2.809,562,2.111,563,2.809,564,2.809,565,3.966,566,2.809,567,3.165,568,2.809,569,2.809,570,2.809,571,2.809,572,2.809,573,2.809,574,2.809,575,2.809,576,2.579,577,2.809,578,2.809]],["title/components/ManagetournamentComponent.html",[18,0.169,166,0.948]],["body/components/ManagetournamentComponent.html",[2,0.115,3,0.115,4,0.103,6,0.589,7,0.784,8,4.204,10,3.052,11,0.869,12,0.014,13,1.306,14,0.241,17,0.988,18,0.266,19,1.26,21,0.115,24,1.555,27,0.711,39,0.103,40,1.923,41,1.788,43,1.056,45,0.069,46,1.018,47,0.946,50,0.711,51,1.306,56,0.591,57,0.936,59,1.335,60,1.414,67,1.51,68,1.446,70,0.952,73,0.637,106,0.009,107,0.011,108,0.711,109,0.822,110,0.822,111,0.822,113,0.822,114,1.135,117,0.815,120,1.293,122,0.815,123,1.111,124,0.784,128,0.911,129,1.437,134,2.17,135,0.57,136,1.221,137,1.221,138,1.221,139,1.612,140,0.822,141,0.822,142,0.822,143,0.685,144,0.822,145,0.711,146,0.822,147,0.711,148,0.822,149,0.711,150,0.822,151,0.711,152,0.792,153,0.822,154,0.685,155,0.822,156,0.711,157,0.822,158,0.711,159,0.822,160,0.711,161,0.822,162,0.711,163,0.822,164,0.737,165,0.822,166,1.394,167,0.822,168,0.711,169,0.822,170,0.711,171,0.822,172,0.661,173,0.822,174,0.685,175,0.822,176,0.685,177,0.822,178,0.711,179,0.822,180,0.711,181,0.822,182,0.661,183,0.822,184,0.685,185,0.822,186,0.685,187,0.822,188,0.711,189,0.822,190,0.685,191,1.859,192,0.822,212,1.306,213,1.066,291,2.732,293,5.128,294,5.128,314,1.754,486,1.658,545,1.863,600,1.574,624,2.94,933,3.088,952,1.497,1064,2.59,1065,6.546,1066,4.426,1067,4.426,1068,5.846,1069,5.846,1070,5.846,1071,4.426,1072,5.846,1073,5.846,1074,5.846,1075,5.846,1076,4.426,1077,4.426,1078,2.979,1079,2.979,1080,2.979,1081,2.979,1082,2.979,1083,2.979,1084,2.979,1085,2.979,1086,2.979,1087,2.979,1088,4.426,1089,2.979,1090,2.979,1091,2.59,1092,2.979,1093,4.426,1094,2.979,1095,2.59,1096,2.979,1097,2.979,1098,2.979,1099,4.426,1100,2.979,1101,4.426,1102,2.979,1103,4.592,1104,2.979,1105,6.546,1106,2.979,1107,2.979,1108,2.59,1109,2.59,1110,2.979,1111,3.848,1112,4.426,1113,4.426,1114,4.426]],["title/components/ManageusersComponent.html",[18,0.169,168,0.948]],["body/components/ManageusersComponent.html",[2,0.114,3,0.114,4,0.102,6,0.328,7,0.778,11,0.867,12,0.014,13,1.298,14,0.26,17,0.977,18,0.265,19,1.252,21,0.114,23,2.344,24,1.547,27,0.703,28,2.326,29,1.35,36,3.237,37,1.188,38,1.188,39,0.102,40,1.921,41,1.786,43,1.047,45,0.068,46,0.678,47,0.939,50,1.611,51,1.925,52,4.556,56,0.586,59,1.243,60,1.403,62,1.7,67,1.501,68,1.438,69,2.309,70,0.941,71,2.12,73,0.63,91,1.292,102,1.015,104,1.735,106,0.008,107,0.009,108,0.703,109,0.813,110,0.813,111,0.813,113,0.813,114,1.126,117,0.808,120,1.265,122,0.808,123,0.953,124,0.778,128,0.731,129,1.01,132,2.745,134,1.928,135,0.564,136,1.211,137,1.211,138,1.211,139,1.604,140,0.813,141,0.813,142,0.813,143,0.678,144,0.813,145,0.703,146,0.813,147,0.703,148,0.813,149,0.703,150,0.813,151,0.703,152,0.784,153,0.813,154,0.678,155,0.813,156,0.703,157,0.813,158,0.703,159,0.813,160,0.703,161,0.813,162,0.703,163,0.813,164,0.729,165,0.813,166,0.703,167,0.813,168,1.387,169,0.813,170,0.703,171,0.813,172,0.654,173,0.813,174,0.678,175,0.813,176,0.678,177,0.813,178,0.703,179,0.813,180,0.703,181,0.813,182,0.974,183,0.813,184,0.678,185,0.813,186,0.678,187,0.813,188,0.703,189,0.813,190,0.678,191,0.729,192,0.813,203,1.557,212,1.925,213,1.571,284,2.921,292,3.636,320,2.745,321,2.207,327,2.745,328,3.636,396,1.35,486,1.641,518,3.884,523,3.636,547,3.884,549,3.884,606,4.182,650,4.552,653,1.843,655,3.636,656,2.563,663,3.818,1046,2.12,1053,2.309,1057,1.969,1059,2.12,1115,2.563,1116,4.392,1117,4.392,1118,4.392,1119,6.278,1120,5.816,1121,5.816,1122,4.392,1123,4.392,1124,2.948,1125,2.948,1126,4.392,1127,5.056,1128,2.948,1129,2.948,1130,2.948,1131,2.948,1132,2.948,1133,2.948,1134,2.948,1135,2.948,1136,3.818,1137,2.948,1138,2.563,1139,2.948,1140,2.948,1141,2.948,1142,4.392,1143,2.948,1144,2.948,1145,2.948,1146,2.948,1147,2.563,1148,2.948,1149,2.563,1150,2.948,1151,2.948,1152,5.248,1153,2.948,1154,2.948,1155,2.948,1156,2.948,1157,4.392,1158,4.392,1159,4.392,1160,4.392,1161,4.392,1162,4.392]],["title/components/MatchComponent.html",[18,0.169,170,0.948]],["body/components/MatchComponent.html",[2,0.087,3,0.087,4,0.078,6,0.251,7,0.632,10,0.986,11,0.885,12,0.015,14,0.276,17,0.746,18,0.234,19,1.057,21,0.087,34,2.926,35,1.078,36,3.339,37,0.907,38,0.907,39,0.078,40,1.865,41,1.734,43,0.851,45,0.052,46,0.517,47,0.762,50,0.851,51,0.986,56,0.476,57,1.318,58,2.341,59,0.481,62,2.461,67,1.442,68,1.247,70,1.611,73,1.078,106,0.011,107,0.012,108,0.537,109,0.62,110,0.62,111,0.62,113,0.62,114,0.915,117,0.657,120,1.268,122,1.012,123,1.005,124,0.974,128,0.886,129,1.346,134,2.225,135,0.43,136,0.984,137,0.984,138,0.984,139,1.391,140,0.62,141,0.62,142,0.62,143,0.517,144,0.62,145,0.537,146,0.62,147,0.537,148,0.62,149,0.851,150,0.62,151,0.537,152,1.179,153,0.62,154,0.517,155,0.62,156,0.851,157,0.62,158,0.851,159,0.62,160,0.851,161,0.62,162,0.537,163,0.62,164,0.556,165,0.62,166,0.537,167,0.62,168,0.537,169,0.62,170,1.203,171,0.62,172,0.499,173,0.62,174,0.517,175,0.62,176,0.517,177,0.62,178,0.537,179,0.62,180,0.537,181,0.62,182,0.791,183,0.62,184,0.517,185,0.62,186,0.517,187,0.62,188,0.537,189,0.62,190,0.517,191,1.247,192,0.62,203,1.188,236,2.458,238,3.256,242,1.188,284,3.256,285,3.609,291,2.807,292,3.658,293,5.131,294,4.583,313,1.762,314,1.324,319,1.762,320,2.771,321,2.227,327,3.833,328,3.658,439,4.385,531,1.03,532,2.128,682,3.658,744,2.926,774,1.324,781,1.762,782,1.762,794,1.324,826,1.956,834,2.099,835,2.099,836,3.101,837,3.101,839,3.101,840,2.794,895,3.368,1057,2.96,1108,3.101,1163,1.956,1164,3.567,1165,3.567,1166,3.567,1167,5.043,1168,3.567,1169,3.567,1170,3.567,1171,5.043,1172,4.432,1173,4.385,1174,4.432,1175,2.249,1176,3.567,1177,2.249,1178,2.249,1179,2.249,1180,4.385,1181,3.567,1182,2.249,1183,2.249,1184,2.249,1185,3.567,1186,2.249,1187,3.567,1188,2.249,1189,3.567,1190,2.249,1191,2.249,1192,2.249,1193,2.249,1194,2.249,1195,2.249,1196,2.249,1197,2.249,1198,2.249,1199,1.502,1200,2.249,1201,2.249,1202,2.249,1203,2.249,1204,1.956,1205,3.567,1206,2.249,1207,4.308,1208,2.249,1209,2.249,1210,5.043,1211,4.432,1212,4.432,1213,2.249,1214,4.432,1215,2.249,1216,2.249,1217,2.249,1218,2.249,1219,2.249,1220,1.956,1221,1.618,1222,1.762,1223,2.249,1224,1.762,1225,2.249,1226,2.249,1227,2.249,1228,2.249,1229,4.385,1230,3.101,1231,3.567,1232,3.567,1233,2.249,1234,1.956,1235,3.567,1236,3.567,1237,3.567,1238,3.567,1239,3.567,1240,3.567,1241,2.249,1242,1.956]],["title/components/MatchSchedulingComponent.html",[18,0.169,172,0.882]],["body/components/MatchSchedulingComponent.html",[0,0.95,2,0.076,3,0.076,4,0.068,6,0.573,7,0.568,10,2.945,11,0.859,12,0.015,13,1.548,14,0.254,18,0.219,19,0.966,21,0.076,23,2.22,24,1.544,27,0.469,28,0.678,29,0.901,34,2.822,35,0.943,39,0.068,40,1.832,41,1.703,43,0.764,45,0.046,46,0.453,47,0.685,50,1.385,51,1.404,54,1.158,56,0.427,57,0.718,59,0.685,68,1.155,73,1.099,81,0.989,91,0.863,104,1.158,106,0.005,107,0.011,108,0.469,109,0.543,110,0.543,111,0.543,113,0.543,114,0.822,117,0.59,120,1.264,122,1.069,123,1.026,124,1.029,128,0.978,129,1.267,134,1.548,135,0.376,136,0.883,137,0.883,138,0.883,139,1.288,140,0.543,141,0.543,142,0.543,143,0.453,144,0.543,145,0.469,146,0.543,147,0.469,148,0.543,149,0.469,150,0.543,151,0.469,152,0.523,153,0.543,154,0.453,155,0.543,156,0.469,157,0.543,158,0.469,159,0.543,160,0.469,161,0.543,162,0.469,163,0.543,164,0.487,165,0.543,166,0.469,167,0.543,168,0.469,169,0.543,170,0.469,171,0.543,172,1.035,173,0.543,174,0.453,175,0.543,176,0.453,177,0.543,178,0.469,179,0.543,180,0.469,181,0.543,182,0.436,183,0.543,184,0.453,185,0.543,186,0.453,187,0.543,188,0.469,189,0.543,190,0.453,191,0.487,192,0.543,203,2.14,212,1.404,213,1.671,221,2.51,272,4.984,291,0.793,396,0.901,397,2.523,398,1.23,423,1.039,462,2.466,465,0.901,481,1.783,491,1.158,532,0.762,588,2.14,600,1.692,624,2.255,626,2.036,650,3.243,682,3.631,705,3.663,718,2.785,728,3.358,729,3.358,738,2.785,739,2.785,744,1.702,751,2.304,753,2.14,754,2.304,756,1.711,775,1.314,778,2.304,779,1.415,780,1.314,789,1.415,790,1.415,791,1.415,792,1.415,793,1.415,794,1.158,795,1.415,796,1.415,797,1.415,798,1.415,799,1.415,800,1.415,801,2.706,834,2.385,835,2.385,889,1.415,890,1.314,895,3.432,896,2.785,898,2.785,925,3.679,926,5.367,927,1.415,928,2.51,929,2.51,930,2.51,931,2.14,932,3.174,933,2.91,934,1.542,935,1.542,936,1.415,937,2.51,938,2.51,939,2.51,940,2.51,941,3.174,942,3.174,943,3.174,944,2.914,945,4.743,946,3.658,947,3.174,948,1.542,949,2.51,950,2.51,951,1.542,952,1.61,953,3.658,954,2.304,955,1.542,956,2.51,957,2.51,958,1.542,959,1.542,960,4.316,961,1.542,962,2.51,963,1.542,964,1.542,965,2.51,966,1.542,967,1.542,968,2.51,969,4.316,970,1.542,971,1.542,972,1.542,973,3.213,974,1.542,975,1.542,976,1.542,977,1.542,978,2.51,979,2.51,980,2.51,981,1.542,982,1.542,983,1.542,984,1.542,985,2.51,986,1.542,987,1.542,988,1.542,989,1.542,990,1.542,991,1.542,992,1.542,993,1.542,994,1.542,995,3.174,996,1.542,997,1.542,998,2.51,999,1.542,1000,1.542,1001,1.542,1002,1.542,1003,3.658,1004,1.542,1005,1.542,1006,1.542,1007,1.542,1008,1.542,1009,1.542,1010,1.542,1011,1.542,1012,1.542,1013,1.542,1014,1.542,1015,2.51,1016,1.542,1017,1.542,1018,1.542,1019,2.51,1020,2.51,1234,1.711,1242,1.711,1243,3.203,1244,2.785,1245,3.203,1246,3.203,1247,1.711,1248,1.968,1249,1.968,1250,1.968,1251,1.968,1252,1.968,1253,1.968,1254,1.968,1255,1.968,1256,1.968,1257,1.968,1258,1.968,1259,1.968,1260,1.968,1261,1.968,1262,1.968,1263,1.968,1264,1.968,1265,1.968,1266,1.968,1267,1.968,1268,1.968,1269,1.968,1270,3.203,1271,3.203,1272,3.203,1273,3.203,1274,3.203,1275,3.203,1276,3.203,1277,2.785,1278,2.785,1279,2.785,1280,2.785,1281,1.968,1282,3.203,1283,1.968]],["title/injectables/MatchService.html",[20,0.789,291,1.602]],["body/injectables/MatchService.html",[0,0.813,2,0.106,3,0.106,4,0.095,6,0.305,7,0.737,9,3.612,10,3.107,11,0.892,12,0.015,13,2.003,14,0.245,20,0.997,21,0.106,24,1.491,27,0.654,28,2.269,39,0.144,45,0.063,50,1.691,56,0.555,57,1.39,59,1.074,60,1.328,67,2.113,73,0.586,102,2.075,106,0.007,107,0.013,117,0.765,120,1.245,122,1.326,123,1.181,124,1.276,128,1.083,212,1.201,213,0.98,243,1.201,244,1.151,291,1.675,397,3.019,458,2.776,465,1.255,486,1.525,491,3.3,495,3.887,498,3.857,532,2.17,536,3.481,558,3.547,562,3.547,581,3.257,621,1.83,744,2.11,753,3.183,774,1.613,794,1.613,933,1.447,952,1.377,973,2.599,1199,1.83,1221,3.612,1222,2.147,1224,2.147,1284,2.147,1285,4.874,1286,4.157,1287,4.157,1288,4.157,1289,4.157,1290,4.157,1291,4.157,1292,4.157,1293,4.157,1294,4.157,1295,4.157,1296,4.157,1297,3.614,1298,2.74,1299,3.614,1300,5.553,1301,2.74,1302,3.614,1303,2.74,1304,3.614,1305,2.74,1306,3.614,1307,2.74,1308,3.614,1309,2.74,1310,4.367,1311,2.74,1312,2.74,1313,2.74,1314,2.74,1315,3.614,1316,4.874,1317,4.874,1318,2.74,1319,3.614,1320,2.74,1321,3.966,1322,3.257,1323,2.382,1324,2.147,1325,3.257,1326,3.257,1327,2.989,1328,3.257,1329,2.382,1330,3.614,1331,3.614,1332,2.382,1333,3.614,1334,2.382,1335,2.382,1336,2.382,1337,2.382,1338,2.382,1339,2.382,1340,2.382,1341,2.382,1342,2.382,1343,2.382,1344,2.382,1345,2.382,1346,2.382,1347,2.382,1348,2.382]],["title/interfaces/MatchUpdateMessage.html",[0,1.179,1199,2.655]],["body/interfaces/MatchUpdateMessage.html",[0,1.48,2,0.135,3,0.135,4,0.122,6,0.392,7,0.884,9,2.527,10,2.769,11,0.709,12,0.015,13,1.985,14,0.267,20,0.991,21,0.135,24,1.327,27,0.838,28,1.998,39,0.173,45,0.081,50,1.768,56,0.469,57,1.291,59,1.24,60,1.122,67,1.908,73,0.751,102,2.298,106,0.009,107,0.012,128,1.047,243,1.54,244,1.476,291,1.416,397,2.658,458,3.333,465,1.609,495,3.892,498,3.848,532,1.931,536,3.766,558,3.927,562,3.927,621,2.347,744,1.476,753,3.524,774,2.068,794,2.068,933,1.856,952,1.766,973,3.12,1199,3.333,1221,4.543,1222,4.949,1224,4.949,1284,2.753,1285,3.055,1297,3.055,1299,3.055,1300,5.431,1302,3.055,1304,3.055,1306,3.055,1308,3.055,1310,4.339,1315,3.055,1316,4.339,1317,4.339,1319,3.055,1321,3.628,1322,3.909,1323,3.055,1324,2.753,1325,3.909,1326,3.909,1327,3.589,1328,3.909,1329,3.055,1330,4.339,1331,4.339,1332,3.055,1333,4.339,1334,3.055,1335,3.055,1336,3.055,1337,3.055,1338,3.055,1339,3.055,1340,3.055,1341,3.055,1342,3.055,1343,3.055,1344,3.055,1345,3.055,1346,3.055,1347,3.055,1348,3.055]],["title/classes/MatchViewModel.html",[45,0.092,744,1.67]],["body/classes/MatchViewModel.html",[2,0.15,3,0.15,4,0.135,6,0.434,7,0.95,10,2.897,11,0.978,12,0.014,13,1.934,14,0.15,23,2.958,27,0.929,39,0.135,45,0.124,54,3.889,57,1.344,62,2.374,106,0.009,107,0.014,117,0.987,120,1.364,122,1.129,123,1.005,124,1.449,128,0.854,129,0.896,491,3.157,600,3.239,705,3.949,715,4.663,744,2.253,753,4.286,857,5.332,858,5.332,893,5.332,902,4.201,1349,3.386,1350,6.608,1351,6.608,1352,6.133,1353,6.133,1354,6.133,1355,6.133,1356,6.133,1357,6.133,1358,5.363,1359,5.363,1360,5.363,1361,3.895,1362,3.895,1363,3.895,1364,7.874,1365,3.895,1366,3.895,1367,3.895,1368,3.895,1369,3.895,1370,3.895,1371,3.895,1372,3.895,1373,3.895,1374,3.895,1375,3.895,1376,3.895,1377,3.895,1378,3.895,1379,3.895,1380,3.895]],["title/components/MatchplanComponent.html",[18,0.169,174,0.914]],["body/components/MatchplanComponent.html",[2,0.096,3,0.096,4,0.086,6,0.644,7,0.686,10,2.078,11,0.874,12,0.014,13,1.512,14,0.246,18,0.246,19,1.131,21,0.096,23,2.153,24,1.42,27,0.596,28,2.196,29,1.144,34,3.003,35,1.197,39,0.086,40,1.888,41,1.755,43,0.924,45,0.058,46,0.575,47,0.828,50,0.596,56,0.517,57,1.359,59,1.307,60,1.514,67,1.528,68,1.321,70,1.514,73,0.534,81,1.256,102,0.86,106,0.007,107,0.012,108,0.596,109,0.689,110,0.689,111,0.689,113,0.689,114,0.993,117,0.713,120,1.292,122,1.126,123,1.08,124,1.083,128,0.996,129,1.091,132,2.421,134,2.027,135,0.478,136,1.068,137,1.068,138,1.068,139,1.473,140,0.689,141,0.689,142,0.689,143,0.575,144,0.689,145,0.596,146,0.689,147,0.596,148,0.689,149,0.596,150,0.689,151,0.596,152,0.664,153,0.689,154,0.575,155,0.689,156,0.596,157,0.689,158,0.596,159,0.689,160,0.596,161,0.689,162,0.596,163,0.689,164,0.618,165,0.689,166,0.596,167,0.689,168,0.596,169,0.689,170,0.596,171,0.689,172,0.554,173,0.689,174,1.229,175,0.689,176,0.575,177,0.689,178,0.596,179,0.689,180,0.596,181,0.689,182,0.554,183,0.689,184,0.575,185,0.689,186,0.575,187,0.689,188,0.596,189,0.689,190,0.575,191,0.618,192,0.689,213,1.697,283,3.403,290,1.797,291,2.881,308,1.668,314,1.47,437,3.034,481,2.155,527,1.47,531,1.144,532,2.469,593,2.279,600,2.045,626,3.539,744,2.244,753,1.319,774,1.47,871,1.797,933,3.909,944,3.841,952,1.946,954,2.785,973,3.823,1207,3.034,1244,3.367,1277,4.644,1278,3.367,1279,3.367,1280,3.367,1381,2.172,1382,3.872,1383,3.872,1384,5.341,1385,5.341,1386,3.872,1387,3.872,1388,4.742,1389,5.78,1390,4.742,1391,3.872,1392,2.498,1393,2.498,1394,3.872,1395,2.498,1396,3.872,1397,5.341,1398,2.498,1399,3.872,1400,2.498,1401,2.498,1402,2.498,1403,2.498,1404,2.498,1405,2.498,1406,2.498,1407,2.498,1408,2.498,1409,2.498,1410,2.498,1411,2.498,1412,2.498,1413,2.498,1414,2.498,1415,2.498,1416,2.498,1417,2.498,1418,2.498,1419,2.498,1420,2.498,1421,2.498,1422,2.498,1423,2.498,1424,1.957,1425,3.367,1426,2.498,1427,2.498,1428,2.498,1429,2.498,1430,2.498,1431,3.872,1432,1.957,1433,2.498,1434,2.498,1435,1.957,1436,2.498,1437,2.498,1438,2.498,1439,3.872,1440,3.872,1441,4.644,1442,4.644,1443,3.872,1444,3.872,1445,5.341,1446,3.872,1447,3.872,1448,4.644]],["title/modules/MatchplanModule.html",[246,0.601,1449,2.859]],["body/modules/MatchplanModule.html",[2,0.206,3,0.206,4,0.185,12,0.014,14,0.305,21,0.206,39,0.228,41,1.183,45,0.124,106,0.011,107,0.011,135,1.02,174,1.796,246,0.996,248,2.443,249,3.273,250,2.557,251,2.443,256,3.743,257,3.31,258,2.681,259,2.681,262,2.268,264,2.969,265,3.14,360,4.881,406,4.638,437,4.179,1449,5.888,1450,4.638,1451,4.638,1452,4.638,1453,5.215,1454,5.334,1455,4.638]],["title/modules/MatchplanRoutingModule.html",[246,0.601,1453,2.655]],["body/modules/MatchplanRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.26,106,0.012,107,0.012,174,1.609,241,2.376,246,0.892,262,2.41,275,3.281,276,3.577,277,3.281,278,3.281,279,3.47,1453,4.674,1455,5.126,1456,5.896]],["title/modules/MaterialModule.html",[246,0.601,376,2.485]],["body/modules/MaterialModule.html",[2,0.196,3,0.196,4,0.176,12,0.014,14,0.308,17,1.688,21,0.196,39,0.222,45,0.118,106,0.011,107,0.011,246,0.77,262,2.203,376,4,458,3.401,1325,3.989,1326,3.989,1327,3.662,1328,3.989,1457,5.092,1458,6.997,1459,5.092,1460,6.997,1461,5.092,1462,6.997,1463,5.092,1464,6.997,1465,5.092,1466,6.997,1467,5.092,1468,6.997,1469,5.092,1470,6.997,1471,6.997,1472,6.997,1473,7.562,1474,6.997,1475,6.997,1476,6.997,1477,6.997,1478,6.997,1479,6.997,1480,6.997,1481,6.997,1482,5.092,1483,6.997,1484,6.997]],["title/components/NewpasswordComponent.html",[18,0.169,176,0.914]],["body/components/NewpasswordComponent.html",[2,0.125,3,0.125,4,0.112,6,0.36,7,0.833,11,0.743,12,0.014,13,1.37,14,0.275,17,1.072,18,0.275,19,1.321,21,0.125,24,1.617,36,3.334,37,1.303,38,1.303,39,0.112,40,1.938,41,1.802,43,1.121,45,0.075,46,0.744,47,1.005,50,0.771,56,0.627,57,0.981,59,1.381,60,1.769,62,1.82,67,0.925,68,1.504,70,1.033,73,1.005,91,1.417,106,0.008,107,0.009,108,0.771,109,0.892,110,0.892,111,0.892,113,0.892,114,1.206,117,0.865,120,1.149,122,0.595,123,0.908,124,0.573,128,0.655,129,1.081,134,1.559,135,0.618,136,1.296,137,1.296,138,1.296,139,1.677,140,0.892,141,0.892,142,0.892,143,0.744,144,0.892,145,0.771,146,0.892,147,0.771,148,0.892,149,0.771,150,0.892,151,0.771,152,0.86,153,0.892,154,0.744,155,0.892,156,0.771,157,0.892,158,0.771,159,0.892,160,0.771,161,0.892,162,0.771,163,0.892,164,0.8,165,0.892,166,0.771,167,0.892,168,0.771,169,0.892,170,0.771,171,0.892,172,0.717,173,0.892,174,0.744,175,0.892,176,1.399,177,0.892,178,0.771,179,0.892,180,0.771,181,0.892,182,1.042,183,0.892,184,0.744,185,0.892,186,0.744,187,0.892,188,0.771,189,0.892,190,0.744,191,0.8,192,0.892,236,2.831,238,3.752,241,1.303,242,1.708,284,3.083,292,3.802,318,2.811,320,2.939,321,2.363,327,2.939,328,3.802,396,1.481,428,4.087,445,2.617,474,3.699,519,3.14,523,2.022,525,4.847,531,1.481,576,2.326,599,2.533,653,2.022,655,2.022,661,2.811,666,4.087,747,5.449,769,4.764,777,2.533,787,2.533,1032,5.287,1046,2.326,1048,2.811,1057,2.16,1059,2.326,1062,4.087,1485,2.811,1486,4.701,1487,4.701,1488,6.081,1489,3.234,1490,6.74,1491,4.701,1492,3.234,1493,3.234,1494,3.234,1495,3.234,1496,3.234,1497,5.539,1498,4.701,1499,3.234,1500,3.234,1501,3.234,1502,3.234,1503,4.701,1504,3.234,1505,4.701,1506,4.701,1507,4.701,1508,4.701]],["title/modules/NewpasswordModule.html",[246,0.601,1509,2.859]],["body/modules/NewpasswordModule.html",[2,0.209,3,0.209,4,0.188,12,0.014,14,0.306,21,0.209,39,0.23,45,0.126,106,0.011,107,0.011,135,1.036,176,1.803,246,1.006,248,2.481,249,3.295,250,2.596,251,2.481,256,3.757,257,3.342,258,2.722,259,2.722,262,2.289,264,3.015,265,3.188,400,3.015,445,3.015,1509,5.845,1510,4.709,1511,4.709,1512,4.709,1513,5.234,1514,5.417,1515,4.157,1516,4.709]],["title/modules/NewpasswordRoutingModule.html",[246,0.601,1513,2.655]],["body/modules/NewpasswordRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.26,106,0.012,107,0.012,176,1.609,241,2.376,246,0.892,262,2.41,275,3.281,276,3.577,277,3.281,278,3.281,279,3.47,1513,4.674,1516,5.126,1517,5.896]],["title/injectables/PitchService.html",[20,0.789,397,1.821]],["body/injectables/PitchService.html",[2,0.169,3,0.169,4,0.151,6,0.488,7,1.028,11,0.847,12,0.014,13,1.61,14,0.251,20,1.292,21,0.169,24,1.843,27,1.044,39,0.151,45,0.101,50,1.653,56,0.584,57,1.278,60,1.853,67,2.12,70,1.398,81,2.199,102,1.507,106,0.01,107,0.01,117,1.068,120,1.289,122,1.198,123,1.067,124,1.153,128,1.069,129,1.006,212,1.918,213,2.076,243,1.918,244,1.838,397,2.657,465,2.004,466,2.736,481,3.229,486,2.435,495,3.271,527,2.575,531,2.004,536,2.311,593,2.575,600,3.064,616,5.43,705,4.145,1321,4.634,1518,3.804,1519,6.931,1520,5.802,1521,6.931,1522,5.802,1523,5.802,1524,4.376,1525,4.376,1526,4.376,1527,4.376,1528,4.376,1529,4.376,1530,4.376,1531,4.376,1532,4.376,1533,4.376,1534,4.376,1535,4.376,1536,5.044,1537,4.376,1538,4.376,1539,4.376,1540,4.376,1541,4.376]],["title/components/PitchesComponent.html",[18,0.169,178,0.948]],["body/components/PitchesComponent.html",[2,0.153,3,0.153,4,0.137,6,0.442,7,0.962,11,0.664,12,0.014,14,0.239,18,0.297,19,1.477,21,0.153,27,0.946,39,0.137,40,1.97,41,1.832,43,1.295,45,0.092,46,0.912,47,1.161,56,0.725,57,1.097,59,0.848,67,1.771,68,1.647,70,1.267,106,0.009,107,0.011,108,0.946,109,1.094,110,1.094,111,1.094,113,1.094,114,1.393,117,1,120,1.055,122,0.73,123,1.015,124,0.703,128,0.552,134,2.388,135,0.758,136,1.498,137,1.498,138,1.498,139,1.836,140,1.094,141,1.094,142,1.094,143,0.912,144,1.094,145,0.946,146,1.094,147,0.946,148,1.094,149,0.946,150,1.094,151,0.946,152,1.055,153,1.094,154,0.912,155,1.094,156,0.946,157,1.094,158,0.946,159,1.094,160,0.946,161,1.094,162,0.946,163,1.094,164,0.981,165,1.094,166,0.946,167,1.094,168,0.946,169,1.094,170,0.946,171,1.094,172,0.88,173,1.094,174,0.912,175,1.094,176,0.912,177,1.094,178,1.588,179,1.094,180,0.946,181,1.094,182,0.88,183,1.094,184,0.912,185,1.094,186,0.912,187,1.094,188,0.946,189,1.094,190,0.912,191,0.981,192,1.094,397,3.299,398,2.48,691,4.254,705,4.07,801,4.447,840,4.254,1247,3.449,1536,3.449,1542,3.449,1543,5.43,1544,5.43,1545,5.43,1546,3.967,1547,3.967,1548,5.43,1549,5.43]],["title/injectables/SeasonService.html",[20,0.789,283,2.213]],["body/injectables/SeasonService.html",[2,0.152,3,0.152,4,0.136,6,0.439,7,0.958,11,0.878,12,0.014,14,0.238,20,1.225,21,0.152,24,1.766,27,0.939,39,0.136,45,0.091,50,1.659,56,0.526,57,1.273,59,1.155,60,1.726,67,2.055,70,1.258,102,1.356,106,0.009,107,0.009,117,0.995,120,1.296,122,1.222,123,1.088,124,1.176,128,1.025,129,0.906,212,2.369,213,1.934,243,1.726,244,1.655,283,3.008,465,1.804,466,2.462,481,3.008,486,2.192,491,2.318,495,3.101,531,3.041,532,1.524,536,2.08,593,2.318,626,4.071,1321,4.493,1550,3.424,1551,6.639,1552,6.639,1553,6.639,1554,6.639,1555,5.404,1556,5.404,1557,6.169,1558,5.404,1559,3.939,1560,5.404,1561,5.772,1562,3.939,1563,4.699,1564,5.404,1565,5.772,1566,3.939,1567,4.699,1568,6.639,1569,5.404,1570,3.939,1571,3.939,1572,3.939,1573,3.939,1574,3.939,1575,3.939,1576,3.939,1577,2.462,1578,3.939,1579,3.939,1580,3.939,1581,3.939,1582,3.939,1583,3.939,1584,3.939,1585,3.939,1586,3.939,1587,3.939,1588,3.939,1589,3.939,1590,3.939,1591,3.939,1592,3.939,1593,3.424,1594,3.424]],["title/components/SeasonchooserComponent.html",[18,0.169,180,0.948]],["body/components/SeasonchooserComponent.html",[2,0.148,3,0.148,4,0.133,6,0.427,7,0.939,11,0.842,12,0.014,14,0.253,17,1.27,18,0.293,19,1.45,21,0.148,27,0.914,39,0.133,40,1.965,41,1.827,43,1.265,45,0.089,46,0.881,47,1.133,50,0.914,56,0.511,57,0.939,68,1.623,106,0.009,107,0.01,108,0.914,109,1.056,110,1.056,111,1.056,113,1.056,114,1.36,117,0.976,120,1.215,122,0.976,123,1.075,124,0.939,128,0.738,129,1.219,135,0.732,136,1.462,137,1.462,138,1.462,139,1.809,140,1.056,141,1.056,142,1.056,143,0.881,144,1.056,145,0.914,146,1.056,147,0.914,148,1.056,149,0.914,150,1.056,151,0.914,152,1.019,153,1.056,154,0.881,155,1.056,156,0.914,157,1.056,158,0.914,159,1.056,160,0.914,161,1.056,162,0.914,163,1.056,164,0.948,165,1.056,166,0.914,167,1.056,168,0.914,169,1.056,170,0.914,171,1.056,172,0.85,173,1.056,174,0.881,175,1.056,176,0.881,177,1.056,178,0.914,179,1.056,180,1.565,181,1.056,182,0.85,183,1.056,184,0.881,185,1.056,186,0.881,187,1.056,188,0.914,189,1.056,190,0.881,191,0.948,192,1.056,203,2.8,283,4.303,290,2.755,308,2.559,524,2.755,626,3.846,1127,5.705,1173,5.705,1180,5.705,1424,3.001,1425,4.61,1595,3.331,1596,5.302,1597,5.302,1598,5.302,1599,5.302,1600,6.08,1601,5.302,1602,5.302,1603,3.831,1604,3.831,1605,3.831,1606,3.831,1607,3.831,1608,3.831,1609,3.831,1610,3.831,1611,5.302]],["title/modules/SharedModule.html",[246,0.601,256,1.906]],["body/modules/SharedModule.html",[2,0.159,3,0.159,4,0.143,12,0.014,14,0.311,20,0.819,21,0.159,31,2.428,32,2.428,33,2.428,37,1.662,38,1.662,39,0.234,45,0.096,106,0.01,107,0.01,135,0.789,149,1.807,151,1.882,156,1.807,158,1.807,160,1.807,170,1.882,180,1.882,182,1.68,246,0.844,248,1.889,249,2.894,250,1.977,251,1.889,256,3.96,257,2.803,258,2.073,259,2.073,261,4.369,262,1.92,315,3.231,366,4.949,376,4.934,389,3.586,394,5.493,395,5.493,396,1.889,400,2.296,678,3.231,1515,3.95,1612,3.586,1613,3.586,1614,4.124,1615,3.586,1616,4.124,1617,4.124,1618,4.124,1619,4.124,1620,4.124,1621,4.124,1622,4.124,1623,6.318,1624,6.318,1625,4.124,1626,4.124]],["title/components/SnackbarComponent.html",[18,0.169,182,0.882]],["body/components/SnackbarComponent.html",[0,1.242,2,0.161,3,0.161,4,0.145,6,0.466,7,0.998,11,0.688,12,0.014,13,1.035,14,0.217,17,1.388,18,0.302,19,1.518,20,1.118,21,0.161,39,0.195,40,1.978,41,1.839,43,1.343,45,0.097,46,0.963,47,1.204,56,0.752,57,1.128,62,2.75,68,1.684,106,0.01,107,0.011,108,0.998,109,1.154,110,1.154,111,1.154,113,1.154,114,1.445,117,1.037,120,1.085,122,0.771,123,1.043,124,0.742,128,0.583,129,0.963,135,0.8,136,1.553,137,1.553,138,1.553,139,1.878,140,1.154,141,1.154,142,1.154,143,0.963,144,1.154,145,0.998,146,1.154,147,0.998,148,1.154,149,0.998,150,1.154,151,0.998,152,1.113,153,1.154,154,0.963,155,1.154,156,0.998,157,1.154,158,0.998,159,1.154,160,0.998,161,1.154,162,0.998,163,1.154,164,1.035,165,1.154,166,0.998,167,1.154,168,0.998,169,1.154,170,0.998,171,1.154,172,0.928,173,1.154,174,0.963,175,1.154,176,0.963,177,1.154,178,0.998,179,1.154,180,0.998,181,1.154,182,1.51,183,1.154,184,0.963,185,1.154,186,0.963,187,1.154,188,0.998,189,1.154,190,0.963,191,1.035,192,1.154,205,2.617,284,3.135,321,2.104,1021,5.263,1022,3.279,1023,3.639,1024,4.897,1025,4.897,1026,3.639,1627,4.186,1628,4.186,1629,4.186,1630,4.186,1631,5.632]],["title/components/TableComponent.html",[18,0.169,184,0.914]],["body/components/TableComponent.html",[2,0.13,3,0.13,4,0.117,6,0.376,7,0.86,11,0.758,12,0.014,14,0.253,18,0.28,19,1.354,21,0.13,24,1.65,27,1.48,28,2.625,29,1.547,39,0.117,40,1.945,41,1.809,43,1.157,45,0.078,46,0.777,47,1.037,56,0.647,57,1.212,59,1.214,68,1.535,84,2.646,102,1.163,106,0.008,107,0.01,108,0.806,109,0.932,110,0.932,111,0.932,113,0.932,114,1.244,117,0.893,120,1.12,122,0.893,123,1.017,124,0.86,128,0.676,129,1.116,135,0.646,136,1.338,137,1.338,138,1.338,139,1.711,140,0.932,141,0.932,142,0.932,143,0.777,144,0.932,145,0.806,146,0.932,147,0.806,148,0.932,149,0.806,150,0.932,151,0.806,152,0.898,153,0.932,154,0.777,155,0.932,156,0.806,157,0.932,158,0.806,159,0.932,160,0.806,161,0.932,162,0.806,163,0.932,164,0.836,165,0.932,166,0.806,167,0.932,168,0.806,169,0.932,170,0.806,171,0.932,172,0.749,173,0.932,174,0.777,175,0.932,176,0.777,177,0.932,178,0.806,179,0.932,180,0.806,181,0.932,182,0.749,183,0.932,184,1.427,185,0.932,186,0.777,187,0.932,188,0.806,189,0.932,190,0.777,191,0.836,192,0.932,283,3.808,290,2.429,291,2.841,308,2.256,314,1.988,319,2.646,440,3.489,531,1.547,626,3.542,1221,2.429,1424,2.646,1632,2.937,1633,4.852,1634,4.852,1635,6.48,1636,4.852,1637,4.852,1638,4.852,1639,3.378,1640,3.378,1641,3.378,1642,3.378,1643,3.378,1644,5.677,1645,3.378,1646,4.852,1647,4.852,1648,4.852,1649,4.852,1650,4.852,1651,4.852,1652,4.852,1653,4.852,1654,4.852,1655,4.852,1656,4.852,1657,4.852,1658,6.205,1659,6.205,1660,4.852]],["title/modules/TableModule.html",[246,0.601,1661,2.859]],["body/modules/TableModule.html",[2,0.209,3,0.209,4,0.188,12,0.014,14,0.306,21,0.209,39,0.23,45,0.126,106,0.011,107,0.011,135,1.036,184,1.803,246,1.006,248,2.481,249,3.295,250,2.596,251,2.481,256,3.757,257,3.342,258,2.722,259,2.722,262,2.289,264,3.015,265,3.188,400,3.015,440,3.896,1515,4.157,1661,5.845,1662,4.709,1663,4.709,1664,4.709,1665,5.234,1666,5.417,1667,4.709]],["title/modules/TableRoutingModule.html",[246,0.601,1665,2.655]],["body/modules/TableRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.26,106,0.012,107,0.012,184,1.609,241,2.376,246,0.892,262,2.41,275,3.281,276,3.577,277,3.281,278,3.281,279,3.47,1665,4.674,1667,5.126,1668,5.896]],["title/injectables/TeamService.html",[20,0.789,28,1.369]],["body/injectables/TeamService.html",[0,0.761,2,0.099,3,0.099,4,0.089,6,0.286,11,0.812,12,0.015,13,1.914,14,0.152,20,0.957,21,0.099,23,3.288,24,1.44,27,1.395,28,2.441,39,0.137,45,0.092,50,1.627,51,1.124,56,0.527,57,1.305,59,0.548,60,1.262,67,2.145,70,1.262,73,1.03,81,1.986,86,3.617,102,1.865,106,0.007,107,0.007,117,0.727,118,3.436,120,1.187,122,1.185,123,1.055,124,1.141,125,3.096,127,4.243,128,1.111,129,0.59,213,0.918,243,1.124,244,1.077,382,3.096,481,2.199,486,1.427,495,3.738,498,3.264,527,1.509,531,1.81,536,2.861,555,2.639,556,1.713,558,2.326,562,2.837,579,3.895,580,2.009,581,5.045,582,3.777,583,4.44,584,3.436,585,3.436,586,3.436,587,3.436,588,3.617,589,5.373,590,5.78,591,2.23,592,4.709,593,1.509,594,2.23,595,2.23,596,4.709,597,4.709,598,3.436,599,4.583,600,3.264,601,3.436,602,3.436,603,2.23,604,2.23,605,2.23,606,1.844,607,2.009,608,3.436,609,4.709,610,3.436,611,2.23,612,2.23,613,2.23,614,3.436,615,3.436,616,4.243,617,4.709,618,4.709,619,2.23,620,3.436,621,3.22,622,3.777,623,3.777,624,3.44,625,2.23,626,1.986,627,5.598,628,3.436,629,3.436,630,2.23,631,2.23,632,2.23,633,3.436,634,2.23,635,2.23,636,2.23,637,2.23,638,2.23,639,3.436,640,2.009,641,2.23,1669,2.565,1670,2.565,1671,3.952,1672,3.952,1673,3.952,1674,3.952,1675,2.565,1676,2.565,1677,2.565,1678,2.565,1679,2.565,1680,2.565,1681,2.565,1682,2.565,1683,2.565,1684,2.565,1685,2.565,1686,2.565]],["title/components/TeamadminComponent.html",[18,0.169,186,0.914]],["body/components/TeamadminComponent.html",[2,0.114,3,0.114,4,0.102,6,0.329,7,0.779,11,0.867,12,0.014,13,1.924,14,0.268,17,0.979,18,0.265,19,1.253,21,0.114,23,2.86,24,1.548,27,0.705,28,2.556,29,1.353,36,3.558,37,1.191,38,1.191,39,0.102,40,1.922,41,1.786,43,1.049,45,0.068,46,0.679,47,0.94,50,1.485,51,1.928,56,0.587,57,1.315,59,0.631,60,1.678,62,1.702,67,0.845,68,1.44,70,0.943,73,0.94,91,1.295,100,2.124,102,1.515,106,0.008,107,0.009,108,0.705,109,0.815,110,0.815,111,0.815,113,0.815,114,1.128,117,0.81,120,1.231,122,0.967,123,1.02,124,0.931,128,0.811,129,1.012,134,1.458,135,0.565,136,1.213,137,1.213,138,1.213,139,1.605,140,0.815,141,0.815,142,0.815,143,0.679,144,0.815,145,0.705,146,0.815,147,0.705,148,0.815,149,0.705,150,0.815,151,0.705,152,0.786,153,0.815,154,0.679,155,0.815,156,0.705,157,0.815,158,0.705,159,0.815,160,0.705,161,0.815,162,0.705,163,0.815,164,0.731,165,0.815,166,0.705,167,0.815,168,0.705,169,0.815,170,0.705,171,0.815,172,0.655,173,0.815,174,0.679,175,0.815,176,0.679,177,0.815,178,0.705,179,0.815,180,0.705,181,0.815,182,0.975,183,0.815,184,0.679,185,0.815,186,1.339,187,0.815,188,0.705,189,0.815,190,0.679,191,0.731,192,0.815,212,1.928,213,1.574,235,1.973,236,2.741,238,3.465,242,1.56,284,3.632,292,4.08,320,2.75,321,2.211,327,2.75,328,3.64,396,1.353,423,1.56,449,3.446,498,2.323,547,3.888,549,3.888,583,2.938,607,4.561,650,3.841,653,1.847,655,2.75,675,2.568,852,3.163,871,2.124,1046,2.124,1053,2.314,1057,1.973,1059,2.124,1138,3.824,1147,2.568,1149,2.568,1432,2.314,1435,3.446,1687,2.568,1688,4.398,1689,4.398,1690,5.822,1691,4.398,1692,4.398,1693,4.398,1694,4.398,1695,2.954,1696,6.525,1697,2.954,1698,4.398,1699,2.954,1700,2.954,1701,2.954,1702,2.954,1703,2.954,1704,2.954,1705,2.954,1706,2.954,1707,2.954,1708,2.954,1709,2.954,1710,2.954,1711,2.954,1712,2.954,1713,2.954,1714,4.398]],["title/guards/TeamadminGuard.html",[230,2.655,433,3.114]],["body/guards/TeamadminGuard.html",[2,0.2,3,0.2,4,0.18,6,0.578,11,0.791,12,0.014,14,0.285,20,1.285,21,0.2,39,0.18,45,0.12,47,1.109,56,0.692,106,0.011,107,0.011,117,1.191,120,1.203,122,1.191,123,1.061,124,1.147,128,1.029,230,3.464,233,5.957,234,6.075,235,3.464,236,3.104,238,3.602,241,2.09,242,2.739,243,2.273,244,2.178,433,5.07,458,4.323,462,3.726,465,2.375,466,3.242,495,3.253,532,2.505,1563,6.134,1715,5.186,1716,5.186,1717,5.186,1718,7.388,1719,7.388,1720,5.186,1721,5.186,1722,6.472]],["title/modules/TeamadminModule.html",[246,0.601,1723,2.859]],["body/modules/TeamadminModule.html",[2,0.21,3,0.21,4,0.188,12,0.014,14,0.306,21,0.21,39,0.231,45,0.126,106,0.011,107,0.011,135,1.04,186,1.804,246,1.008,248,2.491,249,3.301,250,2.606,251,2.491,256,3.76,257,3.35,258,2.733,259,2.733,262,2.295,264,3.027,265,3.201,400,3.027,449,4.26,1515,4.167,1723,5.849,1724,4.728,1725,4.728,1726,4.728,1727,5.239,1728,5.438,1729,4.728]],["title/modules/TeamadminRoutingModule.html",[246,0.601,1727,2.655]],["body/modules/TeamadminRoutingModule.html",[2,0.224,3,0.224,4,0.201,12,0.014,14,0.303,18,0.247,21,0.224,39,0.201,45,0.135,73,1.242,106,0.012,107,0.012,186,1.596,241,2.342,246,0.879,249,2.661,262,2.389,275,3.234,276,3.555,277,3.234,278,3.234,279,3.42,400,3.234,1515,3.632,1727,4.633,1729,5.051,1730,5.81]],["title/components/TeamsComponent.html",[18,0.169,188,0.948]],["body/components/TeamsComponent.html",[2,0.158,3,0.158,4,0.142,6,0.456,7,0.982,11,0.677,12,0.014,14,0.242,18,0.3,19,1.5,21,0.158,23,3.123,28,2.503,39,0.142,40,1.975,41,1.836,43,1.322,45,0.095,46,0.94,47,1.185,56,0.74,59,0.874,67,1.799,68,1.668,70,1.306,71,2.94,86,2.73,106,0.009,107,0.011,108,0.975,109,1.127,110,1.127,111,1.127,113,1.127,114,1.422,117,1.02,119,3.554,120,1.072,122,0.753,123,1.031,124,0.724,128,0.569,132,3.465,134,2.236,135,0.782,136,1.529,137,1.529,138,1.529,139,1.86,140,1.127,141,1.127,142,1.127,143,0.94,144,1.127,145,0.975,146,1.127,147,0.975,148,1.127,149,0.975,150,1.127,151,0.975,152,1.087,153,1.127,154,0.94,155,1.127,156,0.975,157,1.127,158,0.975,159,1.127,160,0.975,161,1.127,162,0.975,163,1.127,164,1.011,165,1.127,166,0.975,167,1.127,168,0.975,169,1.127,170,0.975,171,1.127,172,0.907,173,1.127,174,0.94,175,1.127,176,0.94,177,1.127,178,0.975,179,1.127,180,0.975,181,1.127,182,0.907,183,1.127,184,0.94,185,1.127,186,0.94,187,1.127,188,1.608,189,1.127,190,0.94,191,1.011,192,1.127,691,4.343,777,3.203,1731,3.554,1732,5.543,1733,5.543,1734,5.543,1735,4.088,1736,4.088,1737,5.543]],["title/components/TournamentComponent.html",[18,0.169,190,0.914]],["body/components/TournamentComponent.html",[2,0.097,3,0.097,4,0.088,6,0.282,7,0.692,8,4.179,11,0.83,12,0.015,13,1.181,14,0.224,18,0.247,19,1.139,21,0.097,23,2.166,24,1.429,27,0.603,34,3.012,35,1.211,39,0.088,40,1.89,41,1.758,43,0.932,45,0.059,46,0.581,47,0.835,50,0.932,51,1.713,56,0.521,57,0.846,59,0.835,60,1.248,67,1.366,68,1.329,70,1.248,73,0.54,81,2.401,88,1.488,106,0.007,107,0.012,108,0.603,109,0.697,110,0.697,111,0.697,113,0.697,114,1.002,117,0.719,120,1.252,122,1.07,123,1.05,124,1.03,128,0.966,129,1.236,134,2.377,135,0.483,136,1.078,137,1.078,138,1.078,139,1.482,140,0.697,141,0.697,142,0.697,143,0.581,144,0.697,145,0.603,146,0.697,147,0.603,148,0.697,149,0.603,150,0.697,151,0.603,152,0.672,153,0.697,154,0.581,155,0.697,156,0.603,157,0.697,158,0.603,159,0.697,160,0.603,161,0.697,162,0.603,163,0.697,164,0.625,165,0.697,166,0.603,167,0.697,168,0.603,169,0.697,170,0.603,171,0.697,172,0.56,173,0.697,174,0.581,175,0.697,176,0.581,177,0.697,178,0.603,179,0.697,180,0.603,181,0.697,182,0.56,183,0.697,184,0.581,185,0.697,186,0.581,187,0.697,188,0.603,189,0.697,190,1.236,191,1.935,192,0.697,291,2.582,314,1.488,481,2.175,486,1.407,531,2.662,532,0.978,593,1.488,621,2.61,622,3.061,623,3.061,624,3.234,744,2.691,774,1.488,933,3.245,952,2.921,1095,3.397,1111,3.397,1207,3.742,1229,5.341,1230,5.052,1300,3.061,1441,3.397,1442,3.397,1448,3.397,1565,4.673,1567,3.397,1593,2.197,1594,2.197,1738,2.197,1739,3.907,1740,3.907,1741,5.375,1742,5.375,1743,3.907,1744,5.375,1745,3.907,1746,5.375,1747,3.907,1748,3.907,1749,3.907,1750,2.527,1751,2.527,1752,3.907,1753,2.527,1754,2.527,1755,2.527,1756,3.907,1757,2.527,1758,2.527,1759,2.527,1760,2.527,1761,2.527,1762,2.527,1763,2.527,1764,2.527,1765,2.527,1766,2.527,1767,2.527,1768,2.527,1769,2.527,1770,2.527,1771,2.527,1772,2.527,1773,2.527,1774,2.527,1775,2.527,1776,2.527,1777,2.527,1778,2.527,1779,5.811,1780,2.527,1781,2.527,1782,2.527,1783,2.527,1784,2.527,1785,3.907,1786,3.907,1787,2.527,1788,2.527,1789,2.527,1790,2.527,1791,3.907,1792,3.907,1793,3.907,1794,3.907,1795,3.907,1796,3.907,1797,3.907,1798,3.907,1799,3.907]],["title/modules/TournamentModule.html",[246,0.601,1800,2.859]],["body/modules/TournamentModule.html",[2,0.21,3,0.21,4,0.188,12,0.014,14,0.306,21,0.21,39,0.231,45,0.126,106,0.011,107,0.011,135,1.04,190,1.804,191,1.345,246,1.008,248,2.491,249,3.301,250,2.606,251,2.491,256,3.76,257,3.35,258,2.733,259,2.733,262,2.295,264,3.027,265,3.201,400,3.027,1515,4.167,1800,5.849,1801,4.728,1802,4.728,1803,4.728,1804,5.239,1805,5.438,1806,4.728]],["title/modules/TournamentRoutingModule.html",[246,0.601,1804,2.655]],["body/modules/TournamentRoutingModule.html",[2,0.226,3,0.226,4,0.203,12,0.014,14,0.297,18,0.25,21,0.226,39,0.203,45,0.136,73,1.255,106,0.012,107,0.012,190,1.605,241,2.366,246,0.888,249,2.689,262,2.404,275,3.268,276,3.571,277,3.268,278,3.268,279,3.456,1804,4.662,1806,5.104,1807,5.871]],["title/injectables/WebsocketService.html",[20,0.789,285,2.34]],["body/injectables/WebsocketService.html",[2,0.16,3,0.16,4,0.144,6,0.464,7,0.994,10,2.459,11,0.867,12,0.014,14,0.293,20,1.26,21,0.16,39,0.144,45,0.096,50,1.338,56,0.749,57,1.294,59,1.516,62,1.611,73,1.199,102,2.185,106,0.01,107,0.01,117,1.033,120,1.245,122,1.033,123,0.919,124,0.994,128,0.884,129,1.29,212,2.459,213,2.007,243,1.824,244,1.748,285,3.302,291,2.944,311,2.779,312,3.618,321,2.819,397,3.42,465,1.906,545,2.601,780,2.779,781,3.26,782,3.26,825,3.618,827,3.618,871,2.993,902,5.321,952,2.819,1109,4.877,1204,3.618,1220,3.618,1321,2.601,1324,3.26,1432,3.26,1435,3.26,1808,3.618,1809,7.593,1810,6.792,1811,7.306,1812,5.61,1813,4.161,1814,5.61,1815,4.161,1816,5.61,1817,7.091,1818,4.161,1819,4.161,1820,7.306,1821,4.161,1822,3.618,1823,4.161,1824,5.61,1825,3.618,1826,5.61,1827,4.161,1828,5.61,1829,4.161,1830,4.161,1831,4.161,1832,5.61,1833,4.161,1834,4.161,1835,4.161,1836,4.161,1837,4.161,1838,4.161,1839,5.61,1840,4.161,1841,4.161,1842,4.161,1843,4.161,1844,4.161,1845,4.161,1846,4.161]],["title/coverage.html",[1847,4.261]],["body/coverage.html",[0,2.367,1,1.523,4,0.073,5,2.663,11,0.259,12,0.014,18,0.328,20,1.275,22,1.66,23,0.854,24,0.563,25,1.66,26,1.66,28,0.729,34,0.89,45,0.183,46,0.487,50,0.505,106,0.006,107,0.007,108,0.505,112,1.842,143,0.487,145,0.505,147,0.505,149,0.505,151,0.505,154,0.487,156,0.505,158,0.505,160,0.505,162,0.505,164,0.524,166,0.505,168,0.505,170,0.505,172,0.47,174,0.487,176,0.487,178,0.505,180,0.505,182,0.47,184,0.487,186,0.487,188,0.505,190,0.487,191,0.524,203,1.119,224,1.842,236,0.89,272,2.844,280,1.842,283,1.179,285,1.247,291,0.854,311,3.255,364,1.523,378,4.181,397,0.97,404,1.324,408,4.476,420,1.66,424,1.66,425,1.66,426,1.66,431,1.66,440,1.523,473,3.063,474,1.415,501,1.415,503,1.66,506,1.415,519,1.415,579,1.523,580,2.663,582,1.66,583,1.415,626,1.065,642,1.842,667,1.842,677,1.842,678,1.66,679,1.842,692,1.842,705,1.119,711,1.842,723,1.842,744,0.89,775,1.415,776,1.842,853,1.842,876,1.842,890,1.415,899,1.842,925,1.415,926,3.063,927,3.063,931,1.415,933,1.119,952,4.218,1021,1.523,1022,2.663,1027,1.842,1045,1.842,1064,1.842,1091,1.842,1115,1.842,1136,1.842,1163,1.842,1199,1.415,1284,2.663,1322,1.66,1349,1.842,1381,1.842,1485,1.842,1518,1.842,1542,1.842,1550,1.842,1577,5.152,1595,1.842,1632,1.842,1635,1.842,1687,1.842,1731,1.842,1738,1.842,1808,1.842,1847,1.66,1848,1.842,1849,3.4,1850,2.118,1851,5.926,1852,5.926,1853,2.118,1854,7.224,1855,6.224,1856,2.118,1857,5.337,1858,2.118,1859,2.118,1860,5.337,1861,6.965,1862,3.4,1863,3.4,1864,2.118,1865,2.118,1866,2.118,1867,2.118,1868,2.118,1869,2.118,1870,2.118,1871,2.118,1872,2.118,1873,6.965,1874,2.118,1875,2.118,1876,2.118,1877,2.118,1878,2.118,1879,5.987,1880,2.118,1881,2.118,1882,6.224,1883,2.118,1884,2.118,1885,2.118,1886,2.118,1887,2.118,1888,2.118,1889,6.965,1890,2.118,1891,2.118,1892,2.118,1893,2.118,1894,2.118,1895,2.118,1896,2.118,1897,2.118,1898,2.118,1899,3.4,1900,2.118,1901,2.118,1902,2.118,1903,2.118,1904,2.118,1905,2.118,1906,2.118,1907,2.118,1908,2.118,1909,2.118,1910,2.118,1911,1.842,1912,7.147,1913,1.842,1914,1.842,1915,4.69,1916,2.118,1917,2.118,1918,2.118,1919,3.4,1920,4.259,1921,2.118,1922,2.118,1923,2.118,1924,2.118,1925,2.118,1926,1.842,1927,1.842,1928,1.842,1929,1.842,1930,2.956,1931,1.842,1932,2.118]],["title/dependencies.html",[248,2.192,1933,3.313]],["body/dependencies.html",[12,0.014,17,1.652,21,0.192,31,2.933,32,2.933,33,2.933,37,2.544,38,2.008,106,0.011,107,0.011,241,2.008,248,2.282,250,2.388,380,5.487,381,4.945,387,4.332,388,4.332,396,2.282,400,2.773,465,2.891,520,3.584,521,4.539,593,2.933,936,3.584,1321,3.115,1327,3.584,1822,4.332,1825,4.332,1847,3.904,1934,4.983,1935,8.115,1936,4.983,1937,4.983,1938,4.983,1939,4.983,1940,4.983,1941,4.983,1942,4.983,1943,4.983,1944,6.312,1945,4.983,1946,4.983,1947,4.983,1948,4.983,1949,4.983,1950,4.983,1951,4.983,1952,4.983,1953,4.983,1954,4.983,1955,4.983,1956,4.983,1957,4.983,1958,4.983,1959,4.983,1960,4.983,1961,4.983,1962,4.983,1963,4.983,1964,4.983,1965,4.983,1966,4.983,1967,4.983,1968,4.983,1969,4.983,1970,4.983,1971,4.983,1972,4.983,1973,4.983,1974,4.983,1975,4.983,1976,4.983,1977,4.983,1978,4.983,1979,4.983,1980,4.983,1981,4.983,1982,4.983,1983,4.983,1984,4.983,1985,4.983,1986,4.983,1987,4.983]],["title/miscellaneous/enumerations.html",[1988,2.071,1989,4.16]],["body/miscellaneous/enumerations.html",[6,0.665,12,0.012,106,0.012,107,0.012,225,5.071,518,4.709,1119,6.13,1561,6.13,1577,4.944,1851,4.294,1852,5.687,1988,3.733,1989,5.191,1990,6.072,1991,7.051,1992,7.051,1993,5.971,1994,5.971,1995,5.971,1996,5.971,1997,5.971,1998,5.971,1999,5.971,2000,5.971,2001,5.971,2002,5.971]],["title/miscellaneous/functions.html",[408,3.441,1988,2.071]],["body/miscellaneous/functions.html",[6,0.583,11,0.795,12,0.014,106,0.013,107,0.011,122,1.466,123,1.305,124,1.411,251,3.492,321,2.631,378,4.101,408,3.764,409,4.551,411,4.551,413,4.551,415,4.551,417,4.551,420,5.1,424,5.1,425,5.1,426,5.1,431,5.1,470,4.348,491,3.081,544,4.682,753,4.271,1577,4.634,1851,3.764,1852,5.331,1911,5.66,1913,5.66,1914,5.66,1988,3.272,1990,5.551,2003,7.624,2004,5.234,2005,5.234,2006,5.234,2007,5.234,2008,5.234,2009,6.51]],["title/index.html",[6,0.369,2010,2.881,2011,2.881]],["body/index.html",[12,0.013,106,0.013,107,0.013,1577,4.599,1848,5.584,2012,6.423,2013,7.356,2014,6.423]],["title/modules.html",[246,0.823]],["body/modules.html",[12,0.011,106,0.011,107,0.011,246,0.823,247,3.911,255,3.632,256,2.606,360,3.399,369,3.911,375,3.632,376,3.399,381,6.332,698,3.911,702,3.632,1449,3.911,1453,3.632,1509,3.911,1513,3.632,1661,3.911,1665,3.632,1723,3.911,1727,3.632,1800,3.911,1804,3.632,2015,8.083,2016,8.083,2017,8.35,2018,8.133,2019,8.133]],["title/overview.html",[2020,4.728]],["body/overview.html",[0,1.057,12,0.014,18,0.152,20,0.707,39,0.123,45,0.083,46,1.345,106,0.009,107,0.009,108,1.395,135,0.681,143,1.345,145,1.708,147,1.395,149,1.395,151,1.708,154,1.345,156,1.395,158,1.395,160,1.395,162,1.395,164,1.446,166,1.395,168,1.395,170,1.708,172,1.297,174,1.345,176,1.345,178,1.395,180,1.708,182,1.297,184,1.345,186,1.345,188,1.395,190,1.345,230,2.38,246,0.762,247,5.78,248,1.632,249,1.632,250,1.708,251,1.632,252,3.098,253,3.098,254,3.098,255,3.905,256,3.945,257,2.533,258,1.791,259,1.791,276,1.708,360,3.656,369,5.656,370,3.098,371,3.098,372,3.098,373,3.098,374,3.098,375,3.905,376,4.572,377,4.205,698,5.536,699,3.098,700,3.098,701,3.098,702,3.905,1103,3.098,1449,5.422,1450,3.098,1451,3.098,1452,3.098,1453,3.905,1509,5.259,1510,3.098,1511,3.098,1512,3.098,1513,3.905,1612,3.098,1613,3.098,1615,3.098,1661,5.259,1662,3.098,1663,3.098,1664,3.098,1665,3.905,1723,5.259,1724,3.098,1725,3.098,1726,3.098,1727,3.905,1800,5.259,1801,3.098,1802,3.098,1803,3.098,1804,3.905,2020,3.098,2021,3.563,2022,3.563,2023,3.563,2024,3.563,2025,3.563,2026,3.563]],["title/routes.html",[276,2.607]],["body/routes.html",[12,0.013,106,0.013,107,0.013,276,3.122]],["title/todo.html",[2010,2.881,2011,2.881,2027,3.313]],["body/todo.html",[12,0.013,47,1.654,106,0.013,107,0.013,2028,6.438,2029,6.438,2030,6.438]],["title/miscellaneous/variables.html",[1915,3.748,1988,2.071]],["body/miscellaneous/variables.html",[6,0.566,11,0.924,12,0.014,27,1.524,50,1.212,106,0.011,107,0.011,212,3.382,213,2.76,311,5.434,404,4.37,423,3.874,503,5.477,567,3.177,1577,3.995,1851,3.655,1852,4.596,1915,3.982,1926,4.419,1927,4.419,1928,4.419,1929,4.419,1930,4.419,1931,6.078,1988,3.177,1990,3.982,2031,6.391,2032,5.082,2033,5.082,2034,5.082,2035,5.082,2036,5.082,2037,5.082,2038,5.082,2039,7.92,2040,7.335,2041,7.335,2042,7.335,2043,7.335,2044,5.082,2045,7.335,2046,6.391,2047,5.082,2048,5.082,2049,5.082]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":952,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["0.12.0",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1987,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":624,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["1.1.0",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2021,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1103,"title":{},"body":{"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["2.4.8",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":2026,"title":{},"body":{"overview.html":{}}}],["2500",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["26",{"_index":2022,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["3.30.15",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1503,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["34",{"_index":2024,"title":{},"body":{"overview.html":{}}}],["39",{"_index":2025,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1088,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.1.2",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["45/46",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["45/95",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["6.0.16",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1985,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1984,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["9",{"_index":2023,"title":{},"body":{"overview.html":{}}}],["97",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["_currentseason",{"_index":1557,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1579,"title":{},"body":{"injectables/SeasonService.html":{}}}],["a.length",{"_index":1016,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercas",{"_index":622,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a[i",{"_index":1019,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1020,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1276,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["access_tim",{"_index":1232,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessor",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["achtelfinal",{"_index":1793,"title":{},"body":{"components/TournamentComponent.html":{}}}],["activatedrout",{"_index":1490,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1718,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_compon",{"_index":192,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["add",{"_index":844,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["addkickoffdatetopitch",{"_index":1243,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":956,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addmatch'},{'nam",{"_index":142,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["addnewteam",{"_index":118,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamnam",{"_index":125,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{}}}],["addteam'},{'nam",{"_index":141,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addteam.component.css",{"_index":115,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":116,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.compon",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcompon",{"_index":108,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtournamentround.component.html",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addtournamentround/addtournamentround.compon",{"_index":1092,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcompon",{"_index":46,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":144,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["admin.compon",{"_index":263,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":143,"title":{"components/AdminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":231,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["adminmodul",{"_index":247,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodul",{"_index":255,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplet",{"_index":727,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["alert(`${matchday.id",{"_index":994,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["all_matchday",{"_index":1439,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_team",{"_index":1444,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["angular/anim",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/d",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1463,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divid",{"_index":1467,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1465,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1469,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1461,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1459,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["api.t",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api/liga",{"_index":1576,"title":{},"body":{"injectables/SeasonService.html":{}}}],["api_base_url",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicli",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["app.compon",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["app_rout",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodul",{"_index":360,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["application/json",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["appmodul",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":375,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["array",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1107,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["async",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["auth.interceptor",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationservic",{"_index":236,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":377,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authservic",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_nam",{"_index":1506,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["avail",{"_index":2019,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":900,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["b",{"_index":621,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.name.tolowercas",{"_index":623,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["base64",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercas",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercas",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["baseurl",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["basic",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":472,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":1568,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1569,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.19",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["blob",{"_index":2005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":1911,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":2004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bodi",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["body).subscrib",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/TeamadminComponent.html":{}}}],["body).topromis",{"_index":1009,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["body.date_period",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.from",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.to",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.email",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.first_nam",{"_index":1147,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.label",{"_index":816,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.last_nam",{"_index":1149,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.location_latitud",{"_index":818,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitud",{"_index":819,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.new_password",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["body.password",{"_index":1144,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.phon",{"_index":1709,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["body.pitch_id",{"_index":803,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.rol",{"_index":1151,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.target_path",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["body.team",{"_index":1146,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.team_pair",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body2",{"_index":1010,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["body2).topromis",{"_index":1014,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["boolean",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["boolean(this.accesstoken",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":250,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":1109,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["brows",{"_index":2017,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["button.add",{"_index":1162,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["button.back",{"_index":850,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":851,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":875,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["button.clos",{"_index":676,"title":{},"body":{"components/ContactComponent.html":{}}}],["button.create_pitch",{"_index":843,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_team",{"_index":133,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tourna",{"_index":1112,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1239,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1238,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1113,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_tim",{"_index":1240,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":848,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":666,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.sav",{"_index":852,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.set_tim",{"_index":221,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":223,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["c1",{"_index":1567,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c1.id",{"_index":1593,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2",{"_index":1565,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2.id",{"_index":1594,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["cach",{"_index":627,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.filter(t",{"_index":632,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.find(t",{"_index":637,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.push",{"_index":634,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cacheteamsinseason",{"_index":579,"title":{"interfaces/CacheTeamsInSeason.html":{}},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["call",{"_index":609,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["canactiv",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":1717,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":721,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["cancellation_reason",{"_index":1352,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelled_at",{"_index":1353,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelmatch(matchid",{"_index":1336,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["cancelmatchbodi",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["canload",{"_index":234,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":937,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["case",{"_index":1839,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["catch",{"_index":871,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["cdref",{"_index":745,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":746,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":901,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":906,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'nam",{"_index":148,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["changepassword(oldpassword",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":643,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":644,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordbodi",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["changepasswordcompon",{"_index":147,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charset=utf",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["checknewpitchnam",{"_index":736,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":45,"title":{"classes/Credentials.html":{},"classes/MatchViewModel.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["cluster_adminmodul",{"_index":252,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":253,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":254,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodul",{"_index":699,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declar",{"_index":700,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_import",{"_index":701,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_matchplanmodul",{"_index":1450,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declar",{"_index":1451,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_import",{"_index":1452,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodul",{"_index":1510,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declar",{"_index":1511,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_import",{"_index":1512,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1612,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1613,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1615,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1614,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodul",{"_index":1662,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declar",{"_index":1663,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_import",{"_index":1664,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodul",{"_index":1724,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declar",{"_index":1725,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_import",{"_index":1726,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodul",{"_index":1801,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declar",{"_index":1802,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_import",{"_index":1803,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codaci",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["command",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":1515,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["compon",{"_index":18,"title":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":140,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["components/admin#adminmodul",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.compon",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodul",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.compon",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodul",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodul",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1625,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.compon",{"_index":1618,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.compon",{"_index":1622,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.compon",{"_index":1620,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.compon",{"_index":1621,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.compon",{"_index":1617,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.compon",{"_index":1619,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.compon",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodul",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodul",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodul",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["connect",{"_index":1809,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('error",{"_index":1841,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('iwa",{"_index":1001,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":1435,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":872,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["console.log(match",{"_index":1006,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log(newel",{"_index":963,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log(this.matchesinseason",{"_index":1004,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["const",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["constructor(activatedrout",{"_index":1489,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["constructor(apicli",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["constructor(authservic",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1627,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1175,"title":{},"body":{"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":196,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{}}}],["constructor(formbuild",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(match",{"_index":743,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(matchservic",{"_index":1813,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["constructor(pitchservic",{"_index":1247,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(priv",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(publ",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/SeasonchooserComponent.html":{}}}],["constructor(seasonservic",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(teamservic",{"_index":119,"title":{},"body":{"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(token",{"_index":708,"title":{},"body":{"classes/Credentials.html":{}}}],["constructor(translateservic",{"_index":904,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservic",{"_index":712,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":152,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact'},{'nam",{"_index":150,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact.component.css",{"_index":668,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":669,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":690,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_nam",{"_index":685,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.last_nam",{"_index":686,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phon",{"_index":688,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.compon",{"_index":1198,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":689,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_person",{"_index":583,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactPersonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"coverage.html":{}}}],["contact_phon",{"_index":687,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcompon",{"_index":149,"title":{"components/ContactComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlist",{"_index":693,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'nam",{"_index":155,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contactlist.compon",{"_index":704,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":694,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":695,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcompon",{"_index":154,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodul",{"_index":698,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodul",{"_index":702,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncompon",{"_index":151,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts.push(this.match.guest_team.id",{"_index":1227,"title":{},"body":{"components/MatchComponent.html":{}}}],["contacts.push(this.match.home_team.id",{"_index":1226,"title":{},"body":{"components/MatchComponent.html":{}}}],["context",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.t",{"_index":362,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverag",{"_index":1847,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["creat",{"_index":610,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createform",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematch",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["creatematchdaysbodi",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["createnewpitch",{"_index":737,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtourna",{"_index":1071,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(nam",{"_index":1077,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbodi",{"_index":776,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["createrankingpenaltybodi",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["createroundnr",{"_index":1068,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseasonbodi",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["createteambodi",{"_index":582,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["createteamparam",{"_index":611,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createteamparams.nam",{"_index":612,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createtournamentbodi",{"_index":1091,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["createus",{"_index":1121,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodi",{"_index":1136,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["createuserbodyrol",{"_index":1119,"title":{},"body":{"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createuserbodyrole.admin",{"_index":1161,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodyrole.team_manag",{"_index":1152,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["cred",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credenti",{"_index":506,"title":{"classes/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["credentials(data.token",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["currentlang",{"_index":903,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1551,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchang",{"_index":1599,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(ev",{"_index":1602,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":364,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":2007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d').todat",{"_index":988,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.nam",{"_index":1274,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["data.guestteamnam",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["data.hometeamnam",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["data.messag",{"_index":1631,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":217,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["date",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{}}}],["date(list[0].kickofftime).getutchour",{"_index":990,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminut",{"_index":992,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1233,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":896,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortd",{"_index":1281,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1441,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1234,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1241,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":898,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortd",{"_index":1283,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1448,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1242,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["datetim",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["datetimeadapt",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["daysoffset",{"_index":928,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":909,"title":{},"body":{"injectables/I18Service.html":{}}}],["declar",{"_index":249,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":205,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":212,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":919,"title":{},"body":{"injectables/I18Service.html":{}}}],["defin",{"_index":120,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["delay",{"_index":1827,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["delet",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/TableComponent.html":{}}}],["dep",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":248,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":1669,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1211,"title":{},"body":{"components/MatchComponent.html":{}}}],["direct",{"_index":138,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["displaypitch",{"_index":738,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":751,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":1848,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.body.appendchild(tag",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":110,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["durat",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{}}}],["dynam",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1273,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftim",{"_index":1272,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1271,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":1237,"title":{},"body":{"components/MatchComponent.html":{}}}],["edit_round",{"_index":216,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":1714,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":724,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'nam",{"_index":157,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":725,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":726,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":855,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":856,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.tim",{"_index":877,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'nam",{"_index":161,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.time.component.css",{"_index":878,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":879,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.compon",{"_index":1202,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.compon",{"_index":1200,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.compon",{"_index":1201,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcompon",{"_index":156,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":854,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'nam",{"_index":159,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatchresultcompon",{"_index":158,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecompon",{"_index":160,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":1072,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":137,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["email",{"_index":606,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"injectables/TeamService.html":{}}}],["emailformcontrol",{"_index":1690,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["empti",{"_index":597,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["en",{"_index":910,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":2002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":2030,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycompon",{"_index":261,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":1989,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.serverurl",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.wsserverurl",{"_index":1830,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["environments/environ",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["errors.enter_valid_email",{"_index":1158,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["errors.enter_valid_password",{"_index":663,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["errors.password_token_invalid",{"_index":1508,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pipe(delay(60000",{"_index":1835,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["errors.pitch_exist",{"_index":846,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":665,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":203,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["event.valu",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["eventemitt",{"_index":1180,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventtyp",{"_index":1991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["everyth",{"_index":586,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["exampl",{"_index":1670,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["extend",{"_index":715,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"classes/MatchViewModel.html":{}}}],["fals",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filter_list",{"_index":1445,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteract",{"_index":1390,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitch",{"_index":728,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filterpitch",{"_index":739,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["filterpitches(searchterm",{"_index":754,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["final",{"_index":1796,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["first_nam",{"_index":604,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["first_name_requir",{"_index":1159,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["firstnam",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["flexlayoutmodul",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["forgot_password",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["formatd",{"_index":1913,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdate(d",{"_index":2006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formbuild",{"_index":747,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":650,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":769,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodul",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":598,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["fromj",{"_index":1359,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["fromjs(data",{"_index":1375,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["full",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":408,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["game",{"_index":1114,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1105,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["genround",{"_index":1073,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get",{"_index":2010,"title":{"index.html":{},"todo.html":{}},"body":{}}],["get_currentseason",{"_index":1572,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentlang",{"_index":912,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteract",{"_index":1415,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthent",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmatchday",{"_index":1244,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(id",{"_index":954,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).end_d",{"_index":1280,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).numb",{"_index":1278,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).start_d",{"_index":1279,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchdaylength",{"_index":1268,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getmatchdaysinseason",{"_index":1286,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchdaysinseason(seasonid",{"_index":1297,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesinseason",{"_index":1287,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesinseason(seasonid",{"_index":1299,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesintourna",{"_index":1288,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesintournament(tournamentid",{"_index":1302,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getpitch",{"_index":1527,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid",{"_index":1520,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid(id",{"_index":1523,"title":{},"body":{"injectables/PitchService.html":{}}}],["getround",{"_index":1743,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(matchdayid",{"_index":1749,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).end_d",{"_index":1799,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).numb",{"_index":1797,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_d",{"_index":1798,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getroundsintourna",{"_index":1289,"title":{},"body":{"injectables/MatchService.html":{}}}],["getroundsintournament(tournamentid",{"_index":1304,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getselectedmatchday",{"_index":1407,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1411,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsingleteam",{"_index":1671,"title":{},"body":{"injectables/TeamService.html":{}}}],["getsingleteam(teamid",{"_index":639,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteam",{"_index":1683,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid",{"_index":1672,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(id",{"_index":608,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteamcontactbyid",{"_index":1673,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamcontactbyid(id",{"_index":601,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["gettourna",{"_index":1762,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinn",{"_index":1744,"title":{},"body":{"components/TournamentComponent.html":{}}}],["given",{"_index":596,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["googelmapsscript",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplet",{"_index":771,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeel",{"_index":809,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsj",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":2018,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":230,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_scor",{"_index":857,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["guest_team",{"_index":1350,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guest_team_id",{"_index":1354,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guestscor",{"_index":1317,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["guestteam",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["guestteamid",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["guestteamnam",{"_index":1224,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["halbfinal",{"_index":1795,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerj",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatch",{"_index":1385,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["header",{"_index":470,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["headers.append('author",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('cont",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["hi",{"_index":1505,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_match",{"_index":1446,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplay",{"_index":1172,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplay",{"_index":1384,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home_scor",{"_index":858,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["home_team",{"_index":1351,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["home_team_id",{"_index":1355,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["homescor",{"_index":1316,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hometeam",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["hometeamid",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["hometeamnam",{"_index":1222,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hostlisten",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":136,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["http://192.168.178.23/api",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpclientmodul",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheader",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2014,"title":{},"body":{"index.html":{}}}],["i18n/d",{"_index":914,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":915,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18servic",{"_index":34,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactori",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provid",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icancelmatchbodi",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["ichangepasswordbodi",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["iclient",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["icon",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["icontact_person",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["icreatematchdaysbodi",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["icreatepitchbodi",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["icreaterankingpenaltybodi",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["icreateseasonbodi",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["icreateteambodi",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["icreatetournamentbodi",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["icreateuserbodi",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["id",{"_index":600,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["idate_period",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["identifi",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["iidentifi",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["ilocatematchbodi",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["imatch",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["imatch_day",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"todo.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["inherit",{"_index":1364,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["init",{"_index":902,"title":{},"body":{"injectables/I18Service.html":{},"classes/MatchViewModel.html":{},"injectables/WebsocketService.html":{}}}],["init(data",{"_index":1377,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["initi",{"_index":615,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["initloadteam",{"_index":617,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["inject",{"_index":20,"title":{"injectables/AuthenticationService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"injectables/WebsocketService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(api_base_url",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["inject(mat_dialog_data",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":1026,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectiontoken('api_base_url",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":682,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["inputstream",{"_index":1810,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["intercept",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":452,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchUpdateMessage.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{},"overview.html":{}}}],["ipitch",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["ipossiblekickoff",{"_index":925,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["irank",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["iranking_penalti",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["iranking_posit",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["irenameteambodi",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["isadmin",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthent",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["ischedulematchbodi",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["ischedulematchdaybodi",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["iseason",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["isemailvalidorempti",{"_index":1691,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1694,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isendpasswordresetmailbodi",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["isetroundbodi",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["isload",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplay",{"_index":1290,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1306,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["isnackbardata",{"_index":1021,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnewmatchday",{"_index":1386,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnewmatchday(match",{"_index":1394,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnumb",{"_index":1166,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(v",{"_index":1181,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isubmitmatchresultbodi",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["isvalidresult",{"_index":1291,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(scor",{"_index":1308,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["iteam",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["iteam_pair",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["iteamcanplayatd",{"_index":931,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["itourna",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["iuser",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["j",{"_index":1017,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jqueri",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoff",{"_index":974,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('cache_teams_in_season",{"_index":630,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(localstorage.getitem('pitch",{"_index":1531,"title":{},"body":{"injectables/PitchService.html":{}}}],["json.parse(localstorage.getitem('selected_matchday",{"_index":1419,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1578,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.parse(localstorage.getitem('selected_tourna",{"_index":1766,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.parse(localstorage.getitem('team",{"_index":591,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(messag",{"_index":1836,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(bodi",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(cach",{"_index":636,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.stringify(data",{"_index":1845,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(season",{"_index":1581,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(t",{"_index":1769,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.stringify(valu",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["karma",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["kickoff",{"_index":893,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["kickoffset",{"_index":881,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(ev",{"_index":883,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftim",{"_index":929,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["konnt",{"_index":997,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["lang",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{}}}],["languag",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["last_nam",{"_index":605,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["last_name_requir",{"_index":1160,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["lastnam",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["launcher",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":135,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["length",{"_index":1328,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["libraries=plac",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2012,"title":{},"body":{"index.html":{}}}],["line",{"_index":1327,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1326,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["list",{"_index":588,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{}}}],["list.filter(x",{"_index":982,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0",{"_index":984,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":993,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":986,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["load",{"_index":616,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["load/sav",{"_index":585,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadallteam",{"_index":618,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadalltourna",{"_index":1074,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpitch",{"_index":1521,"title":{},"body":{"injectables/PitchService.html":{}}}],["loadrank",{"_index":1636,"title":{},"body":{"components/TableComponent.html":{}}}],["loadranking(season",{"_index":1638,"title":{},"body":{"components/TableComponent.html":{}}}],["loadseason",{"_index":1555,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasoninprogress",{"_index":1554,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasons(st",{"_index":1560,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadteamsinseason",{"_index":1674,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadteamsinseason(seasonid",{"_index":629,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadus",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localed",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorag",{"_index":589,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.getitem('lang",{"_index":920,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_team",{"_index":1420,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('cache_teams_in_season",{"_index":635,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.setitem('lang",{"_index":923,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('pitch",{"_index":1533,"title":{},"body":{"injectables/PitchService.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1418,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1580,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1422,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tourna",{"_index":1768,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('team",{"_index":595,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["locat",{"_index":1548,"title":{},"body":{"components/PitchesComponent.html":{}}}],["locatematchbodi",{"_index":775,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["locatematchbody({pitch_id",{"_index":1011,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["location_off",{"_index":836,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":840,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":163,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["login.component.css",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincompon",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":501,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["mail",{"_index":1696,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manag",{"_index":1577,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["manageseason",{"_index":941,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'nam",{"_index":165,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageseason.nam",{"_index":1270,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["manageseason/manageseason.compon",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":271,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncompon",{"_index":164,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetourna",{"_index":1065,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'nam",{"_index":167,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["managetournament.component.css",{"_index":1066,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1067,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.compon",{"_index":270,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.compon",{"_index":269,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcompon",{"_index":166,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentround",{"_index":1069,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageus",{"_index":1116,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'nam",{"_index":169,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageusers.component.css",{"_index":1117,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1118,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/manageusers.compon",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscompon",{"_index":168,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":779,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map((pitch",{"_index":796,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(valu",{"_index":793,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["mat_dialog_data",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["mat_snack_bar_data",{"_index":1023,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_opt",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodul",{"_index":1473,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":1462,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["match'},{'nam",{"_index":171,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["match.component.css",{"_index":1164,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1165,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.guest_scor",{"_index":1229,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":1784,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.nam",{"_index":835,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":1787,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team_id).canplay",{"_index":983,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_scor",{"_index":1230,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":1783,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.nam",{"_index":834,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":1789,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team_id).canplay",{"_index":981,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff",{"_index":895,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff.setutchours(new",{"_index":989,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff.setutcminutes(new",{"_index":991,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":985,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.id",{"_index":1012,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":839,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1282,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match.servic",{"_index":1823,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["match:2987",{"_index":1366,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2988",{"_index":1365,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2989",{"_index":1367,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2990",{"_index":1368,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2991",{"_index":1369,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2992",{"_index":1370,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2993",{"_index":1371,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2994",{"_index":1372,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2995",{"_index":1373,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2996",{"_index":1374,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3007",{"_index":1378,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3022",{"_index":1376,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3029",{"_index":1380,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match_day",{"_index":933,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["match_day_id",{"_index":1356,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["matchcancel",{"_index":1996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchcompon",{"_index":170,"title":{"components/MatchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchconvert",{"_index":1292,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverter(match",{"_index":1311,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray",{"_index":1293,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray(match",{"_index":1313,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchday",{"_index":973,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{}}}],["matchday.end_d",{"_index":1443,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.id",{"_index":975,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.numb",{"_index":1277,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_d",{"_index":1440,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompar",{"_index":1387,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompare(md1",{"_index":1396,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdayid",{"_index":1300,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TournamentComponent.html":{}}}],["matchdayid).subscrib",{"_index":1330,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchdaylength",{"_index":947,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdaysinseason",{"_index":943,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matches.foreach",{"_index":976,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matches.foreach((match",{"_index":1337,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchesinseason",{"_index":942,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchid",{"_index":1221,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TableComponent.html":{}}}],["matchkickoff",{"_index":880,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["matchloc",{"_index":1993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchplan",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{}}}],["matchplan'},{'nam",{"_index":175,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["matchplan.compon",{"_index":1455,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1382,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1383,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplancompon",{"_index":174,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplanmodul",{"_index":1449,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodul",{"_index":1453,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":1342,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult).subscrib",{"_index":1346,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.guest_scor",{"_index":1343,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.home_scor",{"_index":1344,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresultsubmit",{"_index":1994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchschedul",{"_index":1995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchschedulingcompon",{"_index":172,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":291,"title":{"injectables/MatchService.html":{}},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["matchupd",{"_index":1285,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchupdatemessag",{"_index":1199,"title":{"interfaces/MatchUpdateMessage.html":{}},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["matchviewmodel",{"_index":744,"title":{"classes/MatchViewModel.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matdatepickermodul",{"_index":1477,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodul",{"_index":1470,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{}}}],["matdividermodul",{"_index":1466,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materi",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["material.modul",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodul",{"_index":376,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1102,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1018,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodul",{"_index":1464,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1472,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1476,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1475,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":1478,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":1481,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1484,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchang",{"_index":1127,"title":{},"body":{"components/ManageusersComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodul",{"_index":1468,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":1460,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":1482,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1483,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodul",{"_index":1480,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":1471,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":1474,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1458,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1479,"title":{},"body":{"modules/MaterialModule.html":{}}}],["md1",{"_index":1399,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md1.id",{"_index":1436,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2",{"_index":1397,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2.id",{"_index":1437,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["mechan",{"_index":628,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["memberof",{"_index":590,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["menu.admin",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contact",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.t",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tourna",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":113,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["method",{"_index":117,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["miscellan",{"_index":1988,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/match.viewmodel",{"_index":774,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["modul",{"_index":246,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":936,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentj",{"_index":935,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":987,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["msg",{"_index":1204,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["msg.matchid",{"_index":1206,"title":{},"body":{"components/MatchComponent.html":{}}}],["msg.type",{"_index":1838,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["multi",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["mvwa",{"_index":1339,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mvwa.push(this.matchconverter(match",{"_index":1338,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["name",{"_index":123,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["nbsp",{"_index":1442,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1231,"title":{},"body":{"components/MatchComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_kickoff_tim",{"_index":897,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_pitch",{"_index":841,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":849,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":845,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newel",{"_index":958,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":729,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.label",{"_index":842,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpassword",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'nam",{"_index":177,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["newpassword.compon",{"_index":1516,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1486,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1487,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcompon",{"_index":176,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodul",{"_index":1509,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodul",{"_index":1513,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":730,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":731,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":732,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplac",{"_index":788,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":733,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newroundplandateto",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newwinn",{"_index":1745,"title":{},"body":{"components/TournamentComponent.html":{}}}],["newwinner(match",{"_index":1752,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":468,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clon",{"_index":469,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":262,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchang",{"_index":953,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":998,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":691,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":837,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1235,"title":{},"body":{"components/MatchComponent.html":{}}}],["nswag",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/WebsocketService.html":{}}}],["numberconnect",{"_index":1811,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["object",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/MatchSchedulingComponent.html":{},"guards/TeamadminGuard.html":{}}}],["offset",{"_index":960,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_tim",{"_index":894,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":838,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":645,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["oncancelresultclick",{"_index":873,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["onchang",{"_index":932,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1122,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["onchangeteamselect(ev",{"_index":1126,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["onlangselect",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":740,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":758,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclick",{"_index":741,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":742,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselect",{"_index":1075,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmod",{"_index":1167,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1168,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog(match",{"_index":1185,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1169,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog(match",{"_index":1187,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1170,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog(match",{"_index":1189,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":124,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":259,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1173,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2020,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":363,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodul",{"_index":1623,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodul",{"_index":1624,"title":{},"body":{"modules/SharedModule.html":{}}}],["p.label",{"_index":829,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["p.label.tolowercase().indexof(searchterm.tolowercas",{"_index":800,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["packag",{"_index":1933,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":599,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/NewpasswordComponent.html":{},"injectables/TeamService.html":{}}}],["paramet",{"_index":122,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params['token",{"_index":1497,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["pars",{"_index":1842,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["passbase64",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["passt",{"_index":1002,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{}}}],["password_forgot_text",{"_index":1507,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_requir",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordforgot",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":278,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perm_contact_calendar",{"_index":1236,"title":{},"body":{"components/MatchComponent.html":{}}}],["person",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'nam",{"_index":153,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["person.compon",{"_index":1626,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":680,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":681,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.t",{"_index":679,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":683,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":684,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":678,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":607,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["pick",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":792,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["pitch",{"_index":705,"title":{},"body":{"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["pitch.label",{"_index":801,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch.servic",{"_index":1324,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/WebsocketService.html":{}}}],["pitch_contact",{"_index":1549,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":1357,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["pitch_requir",{"_index":847,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchad",{"_index":1519,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches'},{'nam",{"_index":179,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["pitches(valu",{"_index":1532,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches.component.css",{"_index":1543,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1544,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescompon",{"_index":178,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchexist",{"_index":831,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid",{"_index":821,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":823,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservic",{"_index":397,"title":{"injectables/PitchService.html":{}},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["pitchservicefactori",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pitchservicefactory(provid",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["place",{"_index":734,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":813,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":815,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":220,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":222,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["popper.j",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_go",{"_index":1659,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draw",{"_index":1656,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.loss",{"_index":1657,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.match",{"_index":1654,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.numb",{"_index":1652,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.point",{"_index":1660,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_go",{"_index":1658,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.win",{"_index":1655,"title":{},"body":{"components/TableComponent.html":{}}}],["possiblekickoff",{"_index":945,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":978,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["prepar",{"_index":2000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["privat",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["product",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":2001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promis",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["provid",{"_index":251,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["providedin",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["provider.init",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.initloadteam",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.load",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.loadseasoninprogress",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["queue",{"_index":1822,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["queueingsubject",{"_index":1820,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rank",{"_index":1635,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["ranking_penalti",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["ranking_posit",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["rankingpenalti",{"_index":2029,"title":{},"body":{"todo.html":{}}}],["rankingpenaltyad",{"_index":1997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rankingpenaltyremov",{"_index":1998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["re",{"_index":1154,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["reactiveformsmodul",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["redirectto",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registerlocaledata",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localed",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["relat",{"_index":587,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["remov",{"_index":1275,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_ey",{"_index":664,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1245,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":965,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removeteam",{"_index":193,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["renameteambodi",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["req",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('author",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":471,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":1931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reschedulematchday",{"_index":2028,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":258,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resolv",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(fals",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(matchday",{"_index":1333,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(nul",{"_index":1592,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(pitch",{"_index":1540,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(st",{"_index":1589,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(team",{"_index":641,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.sort((a",{"_index":620,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.teams.sort((a",{"_index":638,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(this.matchconverter(match",{"_index":1348,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.matchconverterarray(match",{"_index":1331,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.pitch",{"_index":1541,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(this.team",{"_index":625,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(tru",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(us",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["respons",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["response.body['email",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['first_nam",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['last_nam",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.headers.get('x",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resultupd",{"_index":1174,"title":{},"body":{"components/MatchComponent.html":{}}}],["retrywhen",{"_index":1826,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["return",{"_index":128,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["root",{"_index":244,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["round",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["rout",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodul",{"_index":277,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":279,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1719,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routing.modul",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.t",{"_index":275,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxj",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":780,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/WebsocketService.html":{}}}],["s.state",{"_index":1591,"title":{},"body":{"injectables/SeasonService.html":{}}}],["save",{"_index":718,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{}}}],["savecontact",{"_index":1692,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":1698,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematch",{"_index":1003,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedul",{"_index":938,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematch",{"_index":969,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchbodi",{"_index":890,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["schedulematchbody({kickoff",{"_index":1007,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchdaybodi",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["scheduling'},{'nam",{"_index":173,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["scheduling.compon",{"_index":273,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":940,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":939,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.t",{"_index":927,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:128",{"_index":1260,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:141",{"_index":1262,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1249,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1251,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1250,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1252,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1266,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:39",{"_index":1263,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1265,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:41",{"_index":1267,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1269,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1248,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:49",{"_index":1264,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:53",{"_index":1258,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:64",{"_index":1257,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1255,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:71",{"_index":1256,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:75",{"_index":1254,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:79",{"_index":1253,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:93",{"_index":1259,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:97",{"_index":1261,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":272,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1310,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["screen",{"_index":1210,"title":{},"body":{"components/MatchComponent.html":{}}}],["searchterm",{"_index":756,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["season",{"_index":626,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["season.nam",{"_index":1611,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchang",{"_index":1600,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoos",{"_index":1596,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'nam",{"_index":181,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["seasonchooser.component.css",{"_index":1597,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1598,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercompon",{"_index":180,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompar",{"_index":1556,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1564,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncr",{"_index":1552,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonid",{"_index":581,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["seasoninprogress",{"_index":1553,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasons.filter(",{"_index":1590,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonservic",{"_index":283,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonservicefactori",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["seasonservicefactory(provid",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["seasonst",{"_index":1561,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/enumerations.html":{}}}],["selectedmatchday",{"_index":1388,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchday(valu",{"_index":1417,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1389,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(valu",{"_index":1421,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["send",{"_index":1812,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["send(data",{"_index":1816,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmatchupdatedmsg",{"_index":1171,"title":{},"body":{"components/MatchComponent.html":{}}}],["sendpasswordresetmailbodi",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["serverurl",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":584,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["services/authentication.servic",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.servic",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.servic",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/pitch.servic",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.servic",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.servic",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["services/websocket.servic",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchComponent.html":{}}}],["set",{"_index":593,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set_currentseason(season",{"_index":1574,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(valu",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setpitches(valu",{"_index":1529,"title":{},"body":{"injectables/PitchService.html":{}}}],["setplandatefrom",{"_index":194,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(ev",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setplandateto",{"_index":195,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(ev",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setroundbodi",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["setselectedmatchday(valu",{"_index":1409,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(valu",{"_index":1413,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setteams(valu",{"_index":1685,"title":{},"body":{"injectables/TeamService.html":{}}}],["settournament(t",{"_index":1764,"title":{},"body":{"components/TournamentComponent.html":{}}}],["share",{"_index":1828,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["shared.modul",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/models/websocket.model",{"_index":782,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["shared/snackbar/snackbar.compon",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodul",{"_index":256,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":735,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["shuffl",{"_index":1246,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1015,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'nam",{"_index":183,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["snackbar.component.css",{"_index":1025,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1024,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.compon",{"_index":1203,"title":{},"body":{"components/MatchComponent.html":{}}}],["snackbarcompon",{"_index":182,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["spec\\.t",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":996,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":995,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/.../app.module.t",{"_index":2003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.t",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.t",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../liga",{"_index":1990,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api",{"_index":777,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamsComponent.html":{}}}],["src/api/liga",{"_index":1851,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":361,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.t",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.t",{"_index":112,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":130,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":126,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:9",{"_index":121,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/admin",{"_index":274,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":229,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.t",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.t",{"_index":260,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.t",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":926,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.t",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21",{"_index":209,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22",{"_index":208,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24",{"_index":214,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":211,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":210,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":197,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":207,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":215,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":206,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45",{"_index":200,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49",{"_index":198,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60",{"_index":201,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64",{"_index":199,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78",{"_index":202,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82",{"_index":204,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.t",{"_index":1064,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:14",{"_index":1090,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:15",{"_index":1086,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1089,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1084,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1087,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1076,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":1085,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":1082,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1081,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:37",{"_index":1078,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:45",{"_index":1083,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:50",{"_index":1080,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:61",{"_index":1079,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.t",{"_index":1115,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:16",{"_index":1133,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:17",{"_index":1135,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:19",{"_index":1134,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:21",{"_index":1129,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:23",{"_index":1130,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:24",{"_index":1131,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:25",{"_index":1132,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:26",{"_index":1123,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:43",{"_index":1125,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:47",{"_index":1128,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:51",{"_index":1124,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.t",{"_index":642,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":651,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":652,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":646,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":649,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":648,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":647,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":707,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.t",{"_index":692,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":697,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":696,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.t",{"_index":703,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.t",{"_index":1542,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1545,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:18",{"_index":1546,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.t",{"_index":1731,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":1734,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:18",{"_index":1735,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:41",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1456,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.t",{"_index":1381,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:16",{"_index":1404,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1403,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:18",{"_index":1401,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1410,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1408,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1406,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1412,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1414,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:37",{"_index":1416,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1391,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1405,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:48",{"_index":1402,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:51",{"_index":1400,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:64",{"_index":1393,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:76",{"_index":1398,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:80",{"_index":1392,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:84",{"_index":1395,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.t",{"_index":1454,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1517,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.t",{"_index":1485,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1495,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:18",{"_index":1491,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:23",{"_index":1494,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:33",{"_index":1492,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:49",{"_index":1493,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.t",{"_index":1514,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":677,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.t",{"_index":667,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":670,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":672,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":673,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":671,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.t",{"_index":723,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:113",{"_index":749,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":765,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:20",{"_index":763,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":773,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":766,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":767,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:25",{"_index":770,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":768,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:28",{"_index":772,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:29",{"_index":748,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:32",{"_index":764,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":757,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:57",{"_index":755,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:61",{"_index":752,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:65",{"_index":759,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:69",{"_index":760,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":761,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:92",{"_index":750,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.t",{"_index":853,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:13",{"_index":862,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:14",{"_index":859,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:17",{"_index":863,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:24",{"_index":860,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:28",{"_index":861,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.t",{"_index":876,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":882,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":888,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":887,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":885,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":884,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":886,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.t",{"_index":1163,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:111",{"_index":1191,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:124",{"_index":1184,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:134",{"_index":1182,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1178,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1179,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1177,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1176,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1193,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1195,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1192,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1194,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1196,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1197,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:46",{"_index":1183,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:49",{"_index":1188,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:71",{"_index":1186,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:91",{"_index":1190,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.t",{"_index":1595,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:13",{"_index":1605,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1601,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1606,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:18",{"_index":1604,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:29",{"_index":1603,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.t",{"_index":1022,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1628,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1630,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1629,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/t",{"_index":1668,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.t",{"_index":1632,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:14",{"_index":1637,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1641,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1640,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:35",{"_index":1639,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.t",{"_index":1666,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":1730,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.t",{"_index":1687,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":1701,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":1693,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:21",{"_index":1700,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":1703,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":1702,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":1704,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:27",{"_index":1697,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:42",{"_index":1699,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:69",{"_index":1695,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.t",{"_index":1715,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":1721,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":1720,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":1716,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.t",{"_index":1728,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tourna",{"_index":1807,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.t",{"_index":1738,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":1760,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":1761,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:16",{"_index":1759,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":1763,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":1765,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":1748,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":1758,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:33",{"_index":1754,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:44",{"_index":1757,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:48",{"_index":1755,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:60",{"_index":1750,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:64",{"_index":1751,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:77",{"_index":1753,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.t",{"_index":1805,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/material.module.t",{"_index":1457,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/match.viewmodel",{"_index":889,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/models/match.viewmodel.t",{"_index":1349,"title":{},"body":{"classes/MatchViewModel.html":{},"coverage.html":{}}}],["src/app/models/match.viewmodel.ts:4",{"_index":1362,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:5",{"_index":1361,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:6",{"_index":1363,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/services/authentication.service.t",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:103",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:107",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:13",{"_index":709,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":710,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:29",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:46",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:72",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:89",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:95",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:99",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/i18.service.t",{"_index":899,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":911,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":913,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":905,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":908,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":907,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":365,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.t",{"_index":711,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":713,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.servic",{"_index":934,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.t",{"_index":1284,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:104",{"_index":1312,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1314,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:120",{"_index":1307,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:124",{"_index":1309,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:128",{"_index":1318,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:146",{"_index":1320,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1296,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1301,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:48",{"_index":1298,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:64",{"_index":1303,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:85",{"_index":1305,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.t",{"_index":1518,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:10",{"_index":1528,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1530,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:17",{"_index":1522,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:27",{"_index":1524,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:35",{"_index":1525,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:39",{"_index":1526,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.t",{"_index":1550,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:10",{"_index":1571,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1573,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:15",{"_index":1575,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:21",{"_index":1570,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:22",{"_index":1558,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:37",{"_index":1559,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:41",{"_index":1562,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:58",{"_index":1566,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.servic",{"_index":1736,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/services/team.service.t",{"_index":580,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:101",{"_index":1680,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:105",{"_index":1681,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:127",{"_index":1682,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:168",{"_index":1677,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:23",{"_index":1684,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:31",{"_index":1686,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:33",{"_index":1675,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:45",{"_index":1679,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":1678,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:75",{"_index":1676,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/websocket.servic",{"_index":783,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/services/websocket.service.t",{"_index":1808,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts:16",{"_index":1821,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:17",{"_index":1819,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:18",{"_index":1814,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":1815,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:66",{"_index":1818,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/shared.module.t",{"_index":1616,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environ",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebsocketService.html":{}}}],["src/environments/environment.app.local.t",{"_index":1926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.t",{"_index":1927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":2011,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1101,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":946,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startteamcount",{"_index":1070,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":778,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":1563,"title":{},"body":{"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["statement",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1358,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["statu",{"_index":2009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":592,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["str",{"_index":1844,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["styleurl",{"_index":114,"title":{},"body":{"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["subject",{"_index":1321,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["submit",{"_index":1488,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":1294,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitmatchresult(matchid",{"_index":1315,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["submitmatchresultbodi",{"_index":1322,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["subscrib",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["success",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":716,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2015,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2016,"title":{},"body":{"modules.html":{}}}],["swaggerexcept",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["switch",{"_index":1837,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["t",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.id",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["t.seasonid",{"_index":633,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["tab.add_us",{"_index":1157,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["tabl",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":185,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["table.compon",{"_index":1667,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1634,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1633,"title":{},"body":{"components/TableComponent.html":{}}}],["table.gam",{"_index":1648,"title":{},"body":{"components/TableComponent.html":{}}}],["table.plac",{"_index":1646,"title":{},"body":{"components/TableComponent.html":{}}}],["table.point",{"_index":1651,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":1647,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tor",{"_index":1650,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":1649,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecompon",{"_index":184,"title":{"components/TableComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodul",{"_index":1661,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodul",{"_index":1665,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.id",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.typ",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["team",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["team.contact",{"_index":603,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["team.nam",{"_index":132,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamsComponent.html":{}}}],["team.servic",{"_index":1323,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["team_contact",{"_index":1737,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_manag",{"_index":1992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["team_pair",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["teamadmin",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'nam",{"_index":187,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teamadmin.compon",{"_index":1729,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":1688,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":1689,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincompon",{"_index":186,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":433,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["teamadminmodul",{"_index":1723,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodul",{"_index":1727,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamid",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamlist",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["teamnam",{"_index":127,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teampair",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.guest_team_id",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.home_team_id",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teamrenam",{"_index":1999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teams'},{'nam",{"_index":189,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teams(valu",{"_index":594,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teams.component.css",{"_index":1732,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":1733,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.compon",{"_index":706,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":930,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscompon",{"_index":188,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservic",{"_index":28,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamservice.getteambyid(pos.team_id).nam",{"_index":1653,"title":{},"body":{"components/TableComponent.html":{}}}],["teamservice.getteambyid(tupel.guest_team_id).nam",{"_index":219,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservice.getteambyid(tupel.home_team_id).nam",{"_index":218,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservicefactori",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["teamservicefactory(provid",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["teamsinseason",{"_index":944,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["templat",{"_index":109,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["terminiert",{"_index":999,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["text/javascript",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1583,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.activatedroute.queryparams.subscrib",{"_index":1496,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.api.getranking(season.id).subscrib",{"_index":1645,"title":{},"body":{"components/TableComponent.html":{}}}],["this.apiclient.changepassword(body).subscrib",{"_index":1501,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.apiclient.createpitch(body).subscrib",{"_index":820,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.createteam(createteamparams).subscrib",{"_index":613,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.createtourna",{"_index":1096,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.createuser(body).subscrib",{"_index":1153,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.apiclient.getallpitches().subscrib",{"_index":1539,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.apiclient.getallseasons().subscrib",{"_index":1588,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.apiclient.getallteams().subscrib",{"_index":619,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getalltournaments().subscrib",{"_index":1770,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.apiclient.getalltournaments().subscribe((tourna",{"_index":1094,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.getauthenticateduser().subscrib",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.apiclient.getmatch(matchid).subscrib",{"_index":1347,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatchdaysinseason(season.id).topromis",{"_index":1427,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.apiclient.getmatchdaysinseason(seasonid).subscrib",{"_index":1332,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(seasonid",{"_index":1329,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(undefin",{"_index":1334,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getroundsintournament(tournamentid).subscrib",{"_index":1335,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getteam(teamid).subscrib",{"_index":640,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getteamsinseason(seasonid).subscrib",{"_index":631,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.locatematch(this.match.id",{"_index":805,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.schedulematch(this.match.id",{"_index":892,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.apiclient.sendpasswordresetmail(body).subscrib",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiclient.setround(this.data.tournamentid",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.apiclient.submitmatchresult(matchid",{"_index":1345,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.updateteamcontact(teamid",{"_index":1710,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.valu",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.oldpassword.valu",{"_index":658,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":245,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":1722,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loadus",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":661,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1498,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.us",{"_index":1705,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.team",{"_index":1706,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.teams.foreach",{"_index":1707,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":722,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchang",{"_index":807,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":922,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.client.locatematch(match.id",{"_index":1013,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.client.schedulematch(match.id",{"_index":1008,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.connect",{"_index":1829,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.connectionstatus.subscrib",{"_index":1833,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.messages.pip",{"_index":1832,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.createform",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundnr",{"_index":1099,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.currentseason.subscrib",{"_index":1582,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.dialog.open(changepasswordcompon",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcompon",{"_index":1228,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcompon",{"_index":1216,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcompon",{"_index":1209,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecompon",{"_index":1218,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincompon",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialogref.clos",{"_index":662,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.dialogref.close(fals",{"_index":806,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.dialogref.close(tru",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.email",{"_index":1137,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.email.value.tolowercas",{"_index":1143,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1713,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredpitch",{"_index":790,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterpitches(pitch",{"_index":797,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.firstnam",{"_index":1139,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.firstname.valu",{"_index":1148,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.formbuilder.group",{"_index":787,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getround(m.match_day_id).numb",{"_index":1775,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinn",{"_index":1777,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.guest_scor",{"_index":866,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteamid",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.guestteamid.tostr",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.handlegetmatch",{"_index":1428,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplay",{"_index":1423,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_scor",{"_index":864,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeamid",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.hometeamid.tostr",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.httpclient.put('/api/users/me/password",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.i18service.changelang(lang",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.inputstream",{"_index":1831,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.inputstream.next(str",{"_index":1846,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.isload",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_scor",{"_index":1341,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.isvalidresult(match.home_scor",{"_index":1340,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.lastnam",{"_index":1140,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.lastname.valu",{"_index":1150,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.load",{"_index":1535,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadallteam",{"_index":614,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.loadalltourna",{"_index":1093,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1110,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpitch",{"_index":1538,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadranking(season",{"_index":1642,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadranking(this.seasonservice.currentseason.getvalu",{"_index":1643,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadseasoninprogress",{"_index":1585,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadseasons(seasonstate.progress",{"_index":1587,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadus",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.loginform",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors({requir",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1500,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.logout",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.managetournamentround",{"_index":1097,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.length",{"_index":1100,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1207,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["this.match.guest_scor",{"_index":867,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team.nam",{"_index":1225,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_scor",{"_index":865,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team.nam",{"_index":1223,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":1205,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":802,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchday",{"_index":1426,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdays.find(t",{"_index":1438,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdaysinseason.filt",{"_index":970,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchdaysinseason.find(t",{"_index":955,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchdaysinseason[0].id).length",{"_index":951,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matches.revers",{"_index":1776,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":1780,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":1781,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesinseason",{"_index":948,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchesinseason.filter(x",{"_index":949,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchesinseason.foreach",{"_index":1005,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchkickoff",{"_index":891,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservic",{"_index":874,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.getmatchesinseason(this.season.id",{"_index":1433,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchservice.getmatchesintournament(this.tournament.id",{"_index":1772,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.managetournament.id",{"_index":1098,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.tournament.id",{"_index":1774,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.isvalidresult(this.guest_scor",{"_index":869,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_scor",{"_index":868,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.matchupdated.next(msg.data",{"_index":1840,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.matchservice.matchupdated.subscrib",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":870,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.updatesinglematch(match.id",{"_index":1212,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.updatesinglematch(msg.matchid",{"_index":1208,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":824,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valu",{"_index":957,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.value.id",{"_index":804,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valuechang",{"_index":791,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":654,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpassword.valu",{"_index":659,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":822,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":817,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitud",{"_index":812,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitud",{"_index":814,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":785,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterror",{"_index":830,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(nul",{"_index":832,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalid",{"_index":833,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":786,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.newroundplandateto",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.numberconnect",{"_index":1834,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.oldpassword",{"_index":657,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":660,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":1141,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.password.valu",{"_index":1145,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.pitch",{"_index":1536,"title":{},"body":{"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["this.pitchadded.subscrib",{"_index":1534,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitches.find(t",{"_index":1537,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.loadpitch",{"_index":1547,"title":{},"body":{"components/PitchesComponent.html":{}}}],["this.pitchservice.pitch",{"_index":789,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.pitchservice.pitchadded.next(nul",{"_index":825,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["this.pitchservice.pitches.filter(p",{"_index":799,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":828,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.slic",{"_index":798,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.plac",{"_index":808,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_chang",{"_index":810,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplac",{"_index":811,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.possiblekickoff",{"_index":966,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":967,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":959,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newel",{"_index":964,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.rank",{"_index":1644,"title":{},"body":{"components/TableComponent.html":{}}}],["this.resultupdated.emit(this.match",{"_index":1213,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.round",{"_index":1104,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1106,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.router.navigatebyurl",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.season",{"_index":1425,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.valu",{"_index":1610,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasoncreated.subscrib",{"_index":1584,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasoninprogress",{"_index":1586,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasonservice.currentseason.next(event.valu",{"_index":1609,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.next(this.seasonservice.seasoninprogress[0",{"_index":1608,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscrib",{"_index":1424,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.seasoninprogress",{"_index":1607,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchday.id",{"_index":1434,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1431,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.sendmatchupdatedmsg",{"_index":1214,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.setaccesstoken(new",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setaccesstoken(nul",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":719,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shuffle(possiblekickoff",{"_index":977,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcompon",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.startmatchday).foreach",{"_index":972,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.team",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["this.teamid",{"_index":674,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.teamlist",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["this.teamlist.filter(t",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.filter(t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.find(t",{"_index":602,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.teams.push(team",{"_index":675,"title":{},"body":{"components/ContactComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.teams.push(teampair",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teamservice.addnewteam(teamnam",{"_index":131,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.getsingleteam(teamid",{"_index":1708,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.teamservice.loadallteam",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamsComponent.html":{}}}],["this.teamservice.loadteamsinseason(season.id",{"_index":1430,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason",{"_index":1429,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason.map(x",{"_index":961,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.token",{"_index":1499,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tourna",{"_index":1095,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentchang",{"_index":1771,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentround",{"_index":1773,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentrounds.find(t",{"_index":1778,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":916,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":921,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":1156,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":1155,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1504,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1502,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1217,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1215,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_upd",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":1712,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":1711,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1219,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscrib",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.translateservice.settranslation('d",{"_index":917,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":918,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":924,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscrib",{"_index":720,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscrib",{"_index":717,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.us",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.rol",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userteamlist",{"_index":1142,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.websocketservice.send",{"_index":826,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.winnerlastround",{"_index":1779,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":1786,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":1790,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_scor",{"_index":1782,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":1788,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":1785,"title":{},"body":{"components/TournamentComponent.html":{}}}],["throwexcept",{"_index":1914,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(messag",{"_index":2008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":2027,"title":{"todo.html":{}},"body":{}}],["tojson",{"_index":1360,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["tojson(data",{"_index":1379,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["token",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["tournament",{"_index":191,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{}}}],["tournament(t",{"_index":1767,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.compon",{"_index":1806,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":1740,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":1739,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.nam",{"_index":1111,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournamentchang",{"_index":1746,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompar",{"_index":1747,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare(c1",{"_index":1756,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompon",{"_index":190,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentid",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["tournamentmodul",{"_index":1800,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentround",{"_index":1741,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentroutingmodul",{"_index":1804,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["translat",{"_index":134,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/cor",{"_index":38,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1447,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodul",{"_index":366,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":367,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservic",{"_index":714,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["tree",{"_index":111,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["tri",{"_index":1432,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["true",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1325,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["tupel",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":794,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["types/googlemap",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2013,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":753,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"miscellaneous/functions.html":{}}}],["updatesinglematch",{"_index":1295,"title":{},"body":{"injectables/MatchService.html":{}}}],["updatesinglematch(matchid",{"_index":1319,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["useclass",{"_index":368,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["usefactori",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["usernam",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["username_requir",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["userrol",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.team_manag",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["users/m",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":1120,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["usevalu",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["val",{"_index":1108,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["valid",{"_index":653,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":1138,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":656,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["validators.requir",{"_index":655,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["valu",{"_index":213,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":795,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["var",{"_index":139,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["variabl",{"_index":1915,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["viertelfinal",{"_index":1794,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":762,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplet",{"_index":784,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocket",{"_index":1825,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["websocketconnect",{"_index":1824,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessag",{"_index":1817,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessagetyp",{"_index":781,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.match_upd",{"_index":1220,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.pitch_ad",{"_index":827,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketservic",{"_index":285,"title":{"injectables/WebsocketService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["websocketservicefactori",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["websocketservicefactory(provid",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["werden",{"_index":1000,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["winner.nam",{"_index":1792,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":1791,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerlastround",{"_index":1742,"title":{},"body":{"components/TournamentComponent.html":{}}}],["ws",{"_index":1843,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws://192.168.178.23:3001/w",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://${window.location.hostname}/w",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://manager.wildeligabremen.de/w",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsserverurl",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":962,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.index",{"_index":968,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.match_day_id",{"_index":950,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":971,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(i",{"_index":979,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":980,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ye",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"injectables/SeasonService.html":{},"miscellaneous/functions.html":{}}}],["zip",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1986,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":257,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  addNewTeam(teamName: string) {\n    this.teamService.addNewTeam(teamName);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeamId\n                            \n                            \n                                homeTeamId\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                teamList\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                createMatch\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, apiClient: Client, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTeam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMatch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTeam(tupel: Team_pairs)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tupel\n                                                        \n                                                                    Team_pairs\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateFrom(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateTo(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     AddMatchData\n\n                    \n                \n                    \n                        \n                            Type :     AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guestTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        homeTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateFrom:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateTo:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team_pairs[]\n\n                    \n                \n                    \n                        \n                            Type :     Team_pairs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{teamService.getTeamById(tupel.home_team_id).name}}\n      \n      \n        -\n      \n      \n        {{teamService.getTeamById(tupel.guest_team_id).name}}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n          \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n          {{ 'PLAN_DATE_TO'| translate}}:\n          \n          {{ 'BUTTON.SET_TIME' | translate}}\n          \n        \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{teamService.getTeamById(tupel.home_team_id).name}}                    -                    {{teamService.getTeamById(tupel.guest_team_id).name}}                              -                                                                        {{team.name}}                                                                          {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                  {{ \\'BUTTON.SET_TIME\\' | translate}}                              {{ \\'PLAN_DATE_TO\\'| translate}}:                    {{ \\'BUTTON.SET_TIME\\' | translate}}                                    {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddteamComponent\n                            \n                            \n                                AddtournamentroundComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                ManageseasonComponent\n                            \n                            \n                                ManagetournamentComponent\n                            \n                            \n                                ManageusersComponent\n                            \n                            \n                                MatchSchedulingComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddtournamentroundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                websocketService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, authService: AuthenticationService, i18Service: I18Service, websocketService: WebsocketService, matchService: MatchService, snackBar: MatSnackBar, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadGoogleMapsScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadGoogleMapsScript()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLangSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLangSelect(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePasswordDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePasswordDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openLoginDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenLoginDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { SeasonService } from './services/season.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { MatchService } from './services/match.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public seasonService: SeasonService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public websocketService: WebsocketService,\n    private matchService: MatchService,\n    public snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private dialog: MatDialog) {\n  }\n\n  async ngOnInit() {\n    this.loadGoogleMapsScript();\n    if (this.authService.accessToken) {\n      await this.authService.loadUser();\n    }\n    this.matchService.matchUpdated.subscribe(\n      (data) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('RESULT_UPDATED', { homeTeam: data.homeTeamName, guestTeam: data.guestTeamName })\n          },\n          panelClass: ['alert', 'alert-info']\n        });\n      });\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n      \n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                                        {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  AppCoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TeamService } from './services/team.service';\nimport { SeasonService } from './services/season.service';\nimport { PitchService } from './services/pitch.service';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { API_BASE_URL } from '../api';\nimport { environment } from '../environments/environment';\nimport { WebsocketService } from './services/websocket.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { AppCoreModule } from './app-core.module';\nregisterLocaleData(localeDe);\n\nexport function teamServiceFactory(provider: TeamService) {\n  return () => provider.initLoadTeams();\n}\n\nexport function seasonServiceFactory(provider: SeasonService) {\n  return () => provider.loadSeasonInProgress();\n}\n\nexport function pitchServiceFactory(provider: PitchService) {\n  return () => provider.load();\n}\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function websocketServiceFactory(provider: WebsocketService) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: teamServiceFactory,\n      deps: [TeamService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: seasonServiceFactory,\n      deps: [SeasonService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pitchServiceFactory,\n      deps: [PitchService], multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    },\n    {\n      provide: API_BASE_URL,\n      useValue: environment.serverUrl\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: websocketServiceFactory,\n      deps: [WebsocketService], multi: true\n    },\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', redirectTo: 'matchplan', pathMatch: 'full' },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth.interceptor.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, httpClient: HttpClient, router: Router, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword(oldPassword: string, newPassword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oldPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTeamAdminForTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTeamAdminForTeam(teamId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loginAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginAsync(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(value: Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Credentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheTeamsInSeason.html":{"url":"interfaces/CacheTeamsInSeason.html","title":"interface - CacheTeamsInSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheTeamsInSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seasonId\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seasonId\n                                    \n                                \n                                \n                                    \n                                        seasonId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPasswordWrong:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      if (await this.authService.changePassword(this.oldPassword.value, this.newPassword.value)) {\n          this.oldPasswordWrong = false;\n          this.authService.logout();\n          this.dialogRef.close();\n      } else {\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teamIds\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, apiClient: Client, teamIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Client } from '../../../../api';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public teams: Team[] = new Array();\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    @Inject(MAT_DIALOG_DATA) public teamIds: string[]) { }\n\n  ngOnInit() {\n    for (const teamId of this.teamIds) {\n      this.apiClient.getTeam(teamId).subscribe(\n        (team) => {\n          this.teams.push(team);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                    \n                            \n                            Type :    Contact_person\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact_person } from '../../../../api';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact_person;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactlistComponent\n                            \n                            \n                                PitchesComponent\n                            \n                            \n                                TeamsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ContactlistRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Credentials.html":{"url":"classes/Credentials.html","title":"class - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, pitchService: PitchService, apiClient: Client, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNewPitchName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckNewPitchName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPitchSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPitchSelect(pitch: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onShowCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nonShowCreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adressAutoComplete:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                    \n                        \n                            Default value : new Pitch()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchLabelExist:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchPlaceFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        places:     google.maps.places.Autocomplete\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showCreateNewPitch:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Pitch, LocateMatchBody, Client, CreatePitchBody } from 'src/api';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch = new Pitch();\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private pitchService: PitchService,\n    private apiClient: Client,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private websocketService: WebsocketService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch) {\n    this.match.pitch = pitch;\n  }\n\n  onSaveClicked() {\n    const body: LocateMatchBody = new LocateMatchBody();\n    body.pitch_id = this.newMatchPitch.value.id;\n    this.apiClient.locateMatch(this.match.id, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.dialogRef.close(false);\n      }\n    );\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n      const body: CreatePitchBody = new CreatePitchBody();\n      body.label = this.newPitch.label;\n      body.location_latitude = this.newPitch.location_latitude;\n      body.location_longitude = this.newPitch.location_longitude;\n      this.apiClient.createPitch(body).subscribe(\n        async (pitchId) => {\n          this.newPitch.id = pitchId.id;\n          this.newMatchPitch.setValue(this.newPitch);\n          this.pitchService.pitchAdded.next(null);\n          this.websocketService.send(\n            {\n              type: WebSocketMessageTypes.PITCH_ADDED,\n              data: pitchId\n            }\n          );\n        }\n      );\n    }\n  }\n  checkNewPitchName() {\n    const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    if (pitch) {\n      this.newPitchFormControl.setErrors({ pitchexist: true });\n    } else {\n      this.newPitchFormControl.setErrors(null);\n      this.newPitchFormControl.updateValueAndValidity();\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                                        {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, matchService: MatchService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  // onCancelResultClicked() {\n  //   this.matchService.\n  // }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, apiCLient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiCLient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kickoffSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nkickoffSet(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchKickoff:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { Client, ScheduleMatchBody } from '../../../../api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private apiCLient: Client\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.apiCLient.scheduleMatch(this.match.id, { kickoff: this.matchKickoff }).subscribe(\n      (t) => {\n        this.dialogRef.close(true);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLang:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:     ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team, Client, ScheduleMatchBody, LocateMatchBody } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service,\n    private client: Client\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    console.log(this.matchesInSeason);\n    this.matchesInSeason.forEach(\n      (match) => {\n        console.log(match);\n        const body = new ScheduleMatchBody({kickoff: match.kickoff});\n        this.client.scheduleMatch(match.id, body).toPromise();\n        const body2 = new LocateMatchBody({pitch_id: match.pitch.id});\n        this.client.locateMatch(match.id, body2).toPromise();\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team, Client, ScheduleMatchBody, LocateMatchBody } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service,\n    private client: Client\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    console.log(this.matchesInSeason);\n    this.matchesInSeason.forEach(\n      (match) => {\n        console.log(match);\n        const body = new ScheduleMatchBody({kickoff: match.kickoff});\n        this.client.scheduleMatch(match.id, body).toPromise();\n        const body2 = new LocateMatchBody({pitch_id: match.pitch.id});\n        this.client.locateMatch(match.id, body2).toPromise();\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForgot\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordForgot(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { Client, SendPasswordResetMailBody } from '../../../api';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  passwordForgot(email: string) {\n    if (email) {\n      const body = new SendPasswordResetMailBody();\n      body.email = email;\n      body.target_path = 'newpassword';\n      this.apiClient.sendPasswordResetMail(body).subscribe(\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        },\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger']\n          });\n        }\n      );\n    } else {\n      this.loginForm.controls['username'].setErrors({required: true});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournament\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewTournament(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRound\n                            \n                            \n                        \n                    \n                \n                \n                    \neditRound()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenRounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadAllTournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTournaments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            onTournamentSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTournamentSelected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createRoundNr:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournament:     Tournament\n\n                    \n                \n                    \n                        \n                            Type :     Tournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rounds:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTeamCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tournament, Client, CreateTournamentBody, Match_day } from '../../../../api';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  manageTournament: Tournament;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRounds: Match_day[];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.apiClient.getAllTournaments().subscribe((tournaments) => {\n      this.tournaments = tournaments;\n    });\n  }\n\n  createNewTournament(name: string) {\n    this.apiClient.createTournament({ name: name }).subscribe(\n      (id) => {\n        this.loadAllTournaments();\n      }\n    );\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = await this.matchService.getRoundsInTournament(this.manageTournament.id);\n    this.createRoundNr = this.manageTournamentRounds.length;\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT' | translate}}\n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\' | translate}}                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                                        {{ \\'MATCH\\' | translate }} {{ game }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUserBodyRole\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                teamList\n                            \n                            \n                                userRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeTeamSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeTeamSelect(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserBodyRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CreateUserBodyRole:     \n\n                    \n                \n                    \n                        \n                            Default value : CreateUserBodyRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     CreateUserBodyRole\n\n                    \n                \n                    \n                        \n                            Type :     CreateUserBodyRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userTeamList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team, CreateUserBodyRole, CreateUserBody, Client } from '../../../../api';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSelectChange, MatSnackBar } from '@angular/material';\nimport { TeamService } from '../../../services/team.service';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  teamList: Team[];\n  userTeamList: string[] = new Array();\n\n  userRole: CreateUserBodyRole;\n\n  CreateUserBodyRole = CreateUserBodyRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar) {\n\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  createUser() {\n    const body = new CreateUserBody();\n\n    body.email = this.email.value.toLowerCase();\n    body.password = this.password.value;\n    body.teams = this.userTeamList;\n    body.first_name = this.firstName.value;\n    body.last_name = this.lastName.value;\n    body.role = CreateUserBodyRole.Team_manager;\n    this.apiClient.createUser(body).subscribe(\n      (res) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'TAB.ADD_USER' | translate }}\n      \n      \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_EMAIL\n            \n          \n        \n        \n          \n            \n              \n              FIRST_NAME_REQUIRED\n            \n            \n              \n              LAST_NAME_REQUIRED\n            \n          \n        \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_PASSWORD\n            \n          \n        \n        \n          \n            \n              \n                \n                  {{ CreateUserBodyRole.Admin }}\n                \n                \n                  {{ CreateUserBodyRole.Team_manager }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                  {{team.name}}\n                \n              \n            \n          \n        \n        \n          \n            \n              {{ 'BUTTON.ADD' | translate}}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'TAB.ADD_USER\\' | translate }}                                                                      ERRORS.ENTER_VALID_EMAIL                                                                                        FIRST_NAME_REQUIRED                                                    LAST_NAME_REQUIRED                                                                                        ERRORS.ENTER_VALID_PASSWORD                                                                                                            {{ CreateUserBodyRole.Admin }}                                                  {{ CreateUserBodyRole.Team_manager }}                                                                                                                                          {{team.name}}                                                                                                        {{ \\'BUTTON.ADD\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                            \n                                sendMatchUpdatedMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, matchService: MatchService, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                    \n                            \n                            Type :    MatchViewModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultUpdated\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openContactModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenContactModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditPitchDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditPitchDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditResultDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditResultDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditTimeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditTimeDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMatchUpdatedMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMatchUpdatedMsg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { MatchService, MatchUpdateMessage } from '../../../services/match.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WebsocketService } from '../../../services/websocket.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: MatchViewModel;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n  @Output() resultUpdated: EventEmitter = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public matchService: MatchService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private websocketService: WebsocketService) {\n\n    this.matchService.matchUpdated.subscribe(\n      async (msg) => {\n        if (this.match.id === msg.matchId) {\n          this.match = null;\n          this.match = await this.matchService.updateSingleMatch(msg.matchId);\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.resultUpdated.emit(this.match);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditPitchDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditTimeDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  sendMatchUpdatedMsg() {\n    this.websocketService.send(\n      {\n        type: WebSocketMessageTypes.MATCH_UPDATED,\n        data: {\n          matchId: this.match.id,\n          homeTeamName: this.match.home_team.name,\n          guestTeamName: this.match.guest_team.name,\n        }\n      }\n    );\n  }\n\n  openContactModal() {\n    const contacts = new Array();\n    contacts.push(this.match.home_team.id);\n    contacts.push(this.match.guest_team.id);\n    this.dialog.open(ContactComponent, {\n      data: contacts,\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                getMatchDay\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                            \n                                matchDaysInSeason\n                            \n                            \n                                matchesInSeason\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, i18Service: I18Service, client: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                    \n                            \n                            Type :    Season\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        matchDaysInSeason\n                    \n                    \n                            \n                            Type :    Match_day[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        matchesInSeason\n                    \n                    \n                            \n                            Type :    MatchViewModel[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        teamsInSeason\n                    \n                    \n                            \n                            Type :    Team[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addKickoffDateToPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \naddKickoffDateToPitch(offset: number, event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offset\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removePair\n                            \n                            \n                        \n                    \n                \n                \n                    \nremovePair(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shuffle\n                            \n                            \n                        \n                    \n                \n                \n                    \nshuffle(a: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleKickoffs:     IPossibleKickoffs[]\n\n                    \n                \n                    \n                        \n                            Type :     IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startmatchDay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team, Client, ScheduleMatchBody, LocateMatchBody } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service,\n    private client: Client\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    console.log(this.matchesInSeason);\n    this.matchesInSeason.forEach(\n      (match) => {\n        console.log(match);\n        const body = new ScheduleMatchBody({kickoff: match.kickoff});\n        this.client.scheduleMatch(match.id, body).toPromise();\n        const body2 = new LocateMatchBody({pitch_id: match.pitch.id});\n        this.client.locateMatch(match.id, body2).toPromise();\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  {{ manageSeason.name }}\n\n\n\n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  scheduleMatches\n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      {{ 'MATCHDAY' | translate:{ matchDay: getMatchDay(match.match_day_id).number } }}\n    \n    \n      {{ match.home_team.name }}\n    \n    \n      -\n    \n    \n      {{ match.guest_team.name }}\n    \n    \n      ({{ getMatchDay(match.match_day_id).start_date | date:'short':'':i18Service.currentLang}})\n    \n    \n      ({{ getMatchDay(match.match_day_id).end_date | date:'shortDate'}})\n    \n    \n      ({{ match.kickoff | date:'short':'':i18Service.currentLang}})\n    \n    \n      ({{ match.pitch?.label }})\n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ manageSeason.name }}  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                        {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove        scheduleMatches            ab Spieltag:                                {{ matchDay.number }}                                {{ \\'MATCHDAY\\' | translate:{ matchDay: getMatchDay(match.match_day_id).number } }}              {{ match.home_team.name }}              -              {{ match.guest_team.name }}              ({{ getMatchDay(match.match_day_id).start_date | date:\\'short\\':\\'\\':i18Service.currentLang}})              ({{ getMatchDay(match.match_day_id).end_date | date:\\'shortDate\\'}})              ({{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}})              ({{ match.pitch?.label }})                  save      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getMatchDaysInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInTournament\n                            \n                            \n                                    Public\n                                    Async\n                                getRoundsInTournament\n                            \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                matchConverter\n                            \n                            \n                                matchConverterArray\n                            \n                            \n                                submitMatchResult\n                            \n                            \n                                updateSingleMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchDaysInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchDaysInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getRoundsInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoundsInTournament(tournamentId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMatchPlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMatchPlayed(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValidResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidResult(score: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        score\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverter(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverterArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverterArray(matches: Match[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matches\n                                                        \n                                                                    Match[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitMatchResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        homeScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        guestScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSingleMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSingleMatch(matchId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchUpdated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchUpdateMessage.html":{"url":"interfaces/MatchUpdateMessage.html","title":"interface - MatchUpdateMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchUpdateMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeamName\n                                \n                                \n                                        homeTeamName\n                                \n                                \n                                        matchId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeamName\n                                    \n                                \n                                \n                                    \n                                        guestTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamName\n                                    \n                                \n                                \n                                    \n                                        homeTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchViewModel.html":{"url":"classes/MatchViewModel.html","title":"class - MatchViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/match.viewmodel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Match\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                guest_team\n                            \n                            \n                                    Public\n                                home_team\n                            \n                            \n                                    Public\n                                pitch\n                            \n                            \n                                    Optional\n                                cancellation_reason\n                            \n                            \n                                    Optional\n                                cancelled_at\n                            \n                            \n                                    Optional\n                                guest_score\n                            \n                            \n                                    Optional\n                                guest_team_id\n                            \n                            \n                                    Optional\n                                home_score\n                            \n                            \n                                    Optional\n                                home_team_id\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                kickoff\n                            \n                            \n                                    Optional\n                                match_day_id\n                            \n                            \n                                    Optional\n                                pitch_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromJS\n                            \n                            \n                                init\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            guest_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            home_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancellation_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancellation_reason:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2988\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancelled_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelled_at:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2987\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2989\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2990\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2991\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2992\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2993\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            kickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kickoff:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2994\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            match_day_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match_day_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2995\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pitch_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2996\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fromJS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fromJS(data: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3022\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3007\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoJSON(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3029\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Match, Team, Pitch } from '../../api';\n\nexport class MatchViewModel extends Match {\n    public home_team: Team;\n    public guest_team: Team;\n    public pitch: Pitch;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchDays\n                            \n                            \n                                    Public\n                                matches\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Private\n                                season\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMatchDay\n                            \n                            \n                                    Async\n                                handleGetMatches\n                            \n                            \n                                isNewMatchDay\n                            \n                            \n                                matchDayCompare\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedMatchDay\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, matchService: MatchService, teamService: TeamService, apiClient: Client, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleGetMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleGetMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNewMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNewMatchDay(match: Match, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchDayCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchDayCompare(md1: Match_day, md2: Match_day)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        md1\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        md2\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePlayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchDays:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamsInSeason:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedMatchDay\n                    \n                \n\n                \n                    \n                        getselectedMatchDay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n\n                \n                    \n                        setselectedMatchDay(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { MatchService } from '../../services/match.service';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { Season, Team, Match_day, Client, Match } from '../../../api';\nimport { TeamService } from '../../services/team.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matches: MatchViewModel[];\n  public matchDays: Match_day[];\n  public hidePlayed: boolean;\n\n  public set selectedMatchDay(value: Match_day) {\n    localStorage.setItem('SELECTED_MATCHDAY', JSON.stringify(value));\n  }\n\n  public get selectedMatchDay(): Match_day {\n    return JSON.parse(localStorage.getItem('SELECTED_MATCHDAY')) || new Match_day();\n  }\n  private season: Season;\n\n  public get selectedTeamId() {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  teamsInSeason: Team[];\n\n  constructor(\n    private seasonService: SeasonService,\n    public matchService: MatchService,\n    private teamService: TeamService,\n    private apiClient: Client,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      async (season) => {\n        if (season) {\n          this.season = season;\n          this.matchDays = await this.apiClient.getMatchDaysInSeason(season.id).toPromise();\n          this.handleGetMatches();\n          this.teamsInSeason = await this.teamService.loadTeamsInSeason(season.id);\n        }\n      }\n    );\n  }\n\n  async handleGetMatches() {\n    this.matches = null;\n    if (this.season) {\n      const selectedTeamId = this.selectedTeamId === '0' ? undefined : this.selectedTeamId;\n      try {\n        this.matches = await this.matchService.getMatchesInSeason(this.season.id, selectedTeamId, this.selectedMatchDay.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  matchDayCompare(md1: Match_day, md2: Match_day) {\n    return md1 && md2 && md1.id === md2.id;\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDays.find(t => t.id === id);\n  }\n\n  isNewMatchDay(match: Match, index: number): boolean {\n    if (!match || index \n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_MATCHDAYS' | translate }}\n          \n          \n            {{ matchDay.number }}\n            {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang\n              }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_TEAMS' | translate }}\n          \n          \n            {{ team.name }}\n          \n        \n      \n    \n    \n      \n        filter_list\n        filter_list\n      \n      \n        \n          {{ 'HIDE_PLAYED_MATCHES' | translate }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'MATCHDAY' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|\n      date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ getMatchDay(match.match_day_id).end_date| date:'shortDate':'':i18Service.currentLang\n      }})\n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ALL_MATCHDAYS\\' | translate }}                                {{ matchDay.number }}            {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang              }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                {{ team.name }}                                              filter_list        filter_list                              {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                  {{ \\'MATCHDAY\\' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|      date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ getMatchDay(match.match_day_id).end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang      }})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MatchplanComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppCoreModule\n                            \n                            \n                                    MatchplanRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, formBuilder: FormBuilder, authService: AuthenticationService, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User, Client, ChangePasswordBody } from 'src/api';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  submit() {\n    const body = new ChangePasswordBody();\n    body.new_password = this.loginForm.value.password;\n    this.apiClient.changePassword(body).subscribe(\n      () => {\n        this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n      },\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger'],\n          duration: 30000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NewpasswordComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NewpasswordRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pitchAdded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPitchById\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pitches\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPitchById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPitchById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPitches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitchAdded:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pitches\n                    \n                \n\n                \n                    \n                        getpitches()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:10\n                                \n                            \n\n                \n                    \n                        setpitches(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Pitch } from '../../api';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  public get pitches(): Pitch[] {\n    return JSON.parse(localStorage.getItem('PITCHES')) || null;\n  }\n  public set pitches(value: Pitch[]) {\n    localStorage.setItem('PITCHES', JSON.stringify(value));\n  }\n\n  pitchAdded: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.pitchAdded.subscribe(\n      () => {\n        this.load();\n      }\n    );\n  }\n\n  getPitchById(id: string): Pitch {\n    if (this.pitches) {\n      return this.pitches.find(t => t.id === id);\n    } else {\n      return new Pitch();\n    }\n  }\n\n  public async load() {\n    this.pitches = await this.loadPitches();\n  }\n\n  async loadPitches(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllPitches().subscribe(\n          (pitches) => {\n            resolve(pitches);\n          },\n          (error) => {\n            resolve(this.pitches);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitches:     Pitch[]\n\n                    \n                \n                    \n                        \n                            Type :     Pitch[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Pitch } from '../../../../api';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  public pitches: Pitch[];\n\n  constructor(\n    private pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n    this.pitches = await this.pitchService.loadPitches();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                            \n                                seasonCreated\n                            \n                            \n                                seasonInProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadSeasonInProgress\n                            \n                            \n                                    Public\n                                    Async\n                                loadSeasons\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasonInProgress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasons(state?: SeasonState | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    SeasonState | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonCompare(c1: Season, c2: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSeason:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonCreated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonInProgress:     Season[]\n\n                    \n                \n                    \n                        \n                            Type :     Season[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:11\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, SeasonState, Season } from '../../api/liga-manager-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  seasonInProgress: Season[];\n  private get _currentSeason(): Season {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || null;\n  }\n\n  private set _currentSeason(season: Season) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n  seasonCreated: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.currentSeason.subscribe(\n      (season) => {\n        this._currentSeason = season;\n      }\n    );\n    this.seasonCreated.subscribe(\n      () => {\n        this.loadSeasonInProgress();\n      }\n    );\n  }\n\n  public async loadSeasonInProgress() {\n    this.seasonInProgress = await this.loadSeasons(SeasonState.Progress);\n  }\n\n  public async loadSeasons(state?: SeasonState | null): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllSeasons().subscribe(\n          (seasons: Season[]) => {\n            resolve(state ? seasons.filter(s => s.state === state) : seasons);\n          },\n          (error: any) => {\n            resolve(null);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: Season, c2: Season) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeasonChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentSeasonChanged(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Season } from '../../../../api';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  season: Season;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    if (this.seasonService.seasonInProgress && !this.season) {\n      this.seasonService.currentSeason.next(this.seasonService.seasonInProgress[0]);\n    }\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                ContactPersonComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                MatchComponent\n                            \n                            \n                                SeasonchooserComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContactPersonComponent\n                            \n                            \n                                    MatchComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    SeasonchooserComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     ISnackBarData\n\n                    \n                \n                    \n                        \n                            Type :     ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ranking\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, api: Client, teamService: TeamService, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadRanking\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadRanking(season: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        season\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ranking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ranking:     Ranking\n\n                    \n                \n                    \n                        \n                            Type :     Ranking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Ranking, Client, Season } from '../../../api';\nimport { SeasonService } from '../../services/season.service';\nimport { TeamService } from '../../services/team.service';\nimport { MatchService } from '../../services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  public ranking: Ranking;\n\n  constructor(\n    private seasonService: SeasonService,\n    private api: Client,\n    public teamService: TeamService,\n    private matchService: MatchService) {\n  }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.loadRanking(season);\n      }\n    );\n    this.matchService.matchUpdated.subscribe(\n      (matchId) => {\n        this.loadRanking(this.seasonService.currentSeason.getValue());\n      });\n  }\n\n  loadRanking(season: Season) {\n    this.ranking = null;\n    if (season) {\n      this.api.getRanking(season.id).subscribe(\n        (ranking) => {\n          this.ranking = ranking;\n        },\n        (error) => {\n          delete this.ranking;\n        },\n        () => {\n\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n  \n    \n      \n        \n          TABLE.PLACE\n          TABLE.TEAM\n          TABLE.GAMES\n          TABLE.WIN_DRAW_LOST\n          TABLE.TORE:TORE\n          TABLE.POINTS\n        \n      \n      \n        \n          \n            {{ pos.number }}\n            {{ teamService.getTeamById(pos.team_id).name }}\n            {{ pos.matches }}\n            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n            {{ pos.points }}\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  TABLE.PLACE          TABLE.TEAM          TABLE.GAMES          TABLE.WIN_DRAW_LOST          TABLE.TORE:TORE          TABLE.POINTS                                                  {{ pos.number }}            {{ teamService.getTeamById(pos.team_id).name }}            {{ pos.matches }}            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})            {{ pos.points }}                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n  Modules\n  TableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TableRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TableRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Public\n                                    Async\n                                getSingleTeam\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamContactByID\n                            \n                            \n                                    Public\n                                    Async\n                                initLoadTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadAllTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadTeamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    teams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Calls the API to create a new Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getSingleTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSingleTeam(teamId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:168\n                            \n                        \n\n\n                \n                    \n                            Loads an Team from API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns a Team for given teamId or an empty Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Team\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamContactByID\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamContactByID(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Contact_person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            initLoadTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLoadTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Initial load of all Teams (should only be called in APP_INITIALIZER)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadAllTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadTeamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTeamsInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an Team[] for an Season.\nWith a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        teams\n                    \n                \n\n                \n                    \n                        getteams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:23\n                                \n                            \n                    \n                        \n                                Returns a List of Teams from localStorage\n\n\n                                \n                                \n                                \n                                    Returns :     Team[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setteams(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:31\n                                \n                            \n                    \n                        \n                                Stores a List of Teams to localStorage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmailValidOrEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmailValidOrEmpty(mail: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveContact\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        phone\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Contact_person, Client, Team } from '../../../api';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  teams: Team[] = new Array();\n\n  constructor(\n    public authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private apiClient: Client) { }\n\n  ngOnInit() {\n    if (this.authService.user && this.authService.user.teams) {\n      this.authService.user.teams.forEach(\n        async (teamId) => {\n          try {\n            const team = await this.teamService.getSingleTeam(teamId);\n            this.teams.push(team);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n    }\n  }\n\n  saveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string) {\n    const body = new Contact_person();\n    body.email = mail;\n    body.first_name = firstname;\n    body.last_name = lastname;\n    body.phone = phone;\n    this.apiClient.updateTeamContact(teamId, body).subscribe(\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TeamadminComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TeamadminRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team } from 'src/api';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  teams: Team[];\n\n  constructor(\n    private teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n    this.teams = await this.teamService.loadAllTeams();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                matches\n                            \n                            \n                                tournamentRounds\n                            \n                            \n                                tournaments\n                            \n                            \n                                winnerLastRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRound\n                            \n                            \n                                getWinner\n                            \n                            \n                                newWinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                tournamentChanged\n                            \n                            \n                                tournamentCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournament\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRound\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRound(matchDayId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewWinner(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            tournamentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        tournamentChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \ntournamentCompare(c1: Tournament, c2: Tournament)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[][]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winnerLastRound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        winnerLastRound:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n\n                \n                    \n                        gettournament()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                                \n                            \n\n                \n                    \n                        settournament(t: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client, Tournament, Team, Match_day } from '../../../api';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { MatchService } from '../../services/match.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  winnerLastRound: Team[];\n  tournamentRounds: Match_day[];\n\n  get tournament(): Tournament {\n    return JSON.parse(localStorage.getItem('SELECTED_TOURNAMENT'));\n  }\n  set tournament(t: Tournament) {\n    localStorage.setItem('SELECTED_TOURNAMENT', JSON.stringify(t));\n  }\n\n  matches: MatchViewModel[][];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.apiClient.getAllTournaments().subscribe(\n      (tournaments) => {\n        this.tournaments = tournaments;\n        if (this.tournament) {\n          this.tournamentChanged();\n        }\n      }\n    );\n  }\n\n  tournamentCompare(c1: Tournament, c2: Tournament) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n\n  async tournamentChanged() {\n    this.matches = null;\n    const matches = await this.matchService.getMatchesInTournament(this.tournament.id);\n    this.tournamentRounds = await this.matchService.getRoundsInTournament(this.tournament.id);\n    this.matches = new Array();\n    for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    }\n    this.matches = this.matches.reverse();\n    this.getWinner();\n  }\n\n  getRound(matchDayId: string): Match_day {\n    return this.tournamentRounds.find(t => t.id === matchDayId);\n  }\n\n  getWinner() {\n    this.winnerLastRound = new Array();\n    if (this.matches[0]) {\n      this.matches[0].forEach(\n        (match) => {\n          if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n            this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n          }\n        });\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n\n  newWinner(match: MatchViewModel) {\n    if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n      if (match.home_score > match.guest_score) {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n        this.winnerLastRound.push(match.home_team);\n      } else {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n        this.winnerLastRound.push(match.guest_team);\n      }\n\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'WINNER_LAST_ROUND' | translate }}\n    \n    \n      \n        {{ winner.name }}\n      \n    \n  \n  \n    \n      \n        \n          {{ 'ACHTELFINALE' | translate }} -->\n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                  {{ \\'WINNER_LAST_ROUND\\' | translate }}                      {{ winner.name }}                                          {{ \\'ACHTELFINALE\\' | translate }} -->          {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TournamentComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TournamentRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connection\n                            \n                            \n                                    Private\n                                inputStream\n                            \n                            \n                                    Public\n                                numberConnected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend(data: WebSocketMessage)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    WebSocketMessage\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connection:     Connection\n\n                    \n                \n                    \n                        \n                            Type :     Connection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputStream:     QueueingSubject\n\n                    \n                \n                    \n                        \n                            Type :     QueueingSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new QueueingSubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberConnected:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueueingSubject } from 'queueing-subject';\nimport { environment } from 'src/environments/environment';\nimport { MatchService } from './match.service';\nimport websocketConnect, { Connection } from 'rxjs-websockets';\nimport { retryWhen, delay, share } from 'rxjs/operators';\nimport { WebSocketMessage, WebSocketMessageTypes } from '../../../shared/models/websocket.model';\nimport { PitchService } from './pitch.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private inputStream: QueueingSubject = new QueueingSubject();\n  public connection: Connection;\n  public numberConnected = 0;\n\n  constructor(\n    private matchService: MatchService,\n    private pitchService: PitchService\n  ) {\n  }\n\n  init() {\n    this.connection = websocketConnect(\n      environment.wsServerUrl,\n      this.inputStream\n    );\n\n    this.connection.messages.pipe(\n      share()\n    );\n\n    this.connection.connectionStatus.subscribe(\n      (numberConnected) => {\n        this.numberConnected = numberConnected;\n      });\n\n    this.connection.messages.pipe(\n      retryWhen(\n        (errors) => {\n          console.error(errors);\n          return errors.pipe(delay(60000));\n        })\n    ).subscribe(\n      (message) => {\n        try {\n          const msg: WebSocketMessage = JSON.parse(message);\n          switch (msg.type) {\n            case WebSocketMessageTypes.MATCH_UPDATED:\n              this.matchService.matchUpdated.next(msg.data);\n              break;\n            case WebSocketMessageTypes.PITCH_ADDED:\n              this.pitchService.pitchAdded.next(null);\n              break;\n          }\n        } catch (error) {\n          console.error('Error parsing WS Message', error);\n        }\n      }\n    );\n  }\n\n  send(data: WebSocketMessage) {\n    const str = JSON.stringify(data);\n    this.inputStream.next(str);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CancelMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ChangePasswordBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Contact_person\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateMatchDaysBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreatePitchBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateSeasonBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTournamentBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateUserBody\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Date_period\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Event\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Identifier\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                LocateMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match_day\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Pitch\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_penalty\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_position\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                RenameTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchDayBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Season\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SendPasswordResetMailBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SetRoundBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SubmitMatchResultBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SwaggerException\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team_pairs\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Tournament\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                injectable\n            \n            \n                Client\n            \n            \n                47 %\n                (45/95)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICancelMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IChangePasswordBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IClient\n            \n            \n                97 %\n                (45/46)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IContact_person\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateMatchDaysBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreatePitchBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateSeasonBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTournamentBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateUserBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IDate_period\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IIdentifier\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ILocateMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch_day\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IPitch\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_penalty\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_position\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRenameTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchDayBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISeason\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISendPasswordResetMailBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISetRoundBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISubmitMatchResultBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam_pairs\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITournament\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                blobToText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                formatDate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                throwException\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                variable\n            \n            \n                API_BASE_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                i18ServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                pitchServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                seasonServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                teamServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                websocketServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            \n                component\n            \n            \n                AddteamComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            \n                component\n            \n            \n                ManageseasonComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                component\n            \n            \n                MatchSchedulingComponent\n            \n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                interface\n            \n            \n                IPossibleKickoffs\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                interface\n            \n            \n                ITeamCanPlayAtDate\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                component\n            \n            \n                AddtournamentroundComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                interface\n            \n            \n                AddMatchData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            \n                component\n            \n            \n                ManagetournamentComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            \n                component\n            \n            \n                ManageusersComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            \n                component\n            \n            \n                ChangepasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            \n                component\n            \n            \n                ContactlistComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            \n                component\n            \n            \n                PitchesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            \n                component\n            \n            \n                TeamsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            \n                component\n            \n            \n                MatchplanComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            \n                component\n            \n            \n                NewpasswordComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            \n                component\n            \n            \n                ContactPersonComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            \n                component\n            \n            \n                ContactComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            \n                component\n            \n            \n                EditmatchPitchComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            \n                component\n            \n            \n                EditmatchResultComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            \n                component\n            \n            \n                EditmatchTimeComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            \n                component\n            \n            \n                MatchComponent\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            \n                component\n            \n            \n                SeasonchooserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                component\n            \n            \n                SnackbarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                interface\n            \n            \n                ISnackBarData\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            \n                component\n            \n            \n                TeamadminComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            \n                component\n            \n            \n                TournamentComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/match.viewmodel.ts\n            \n            \n                class\n            \n            \n                MatchViewModel\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                class\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                interface\n            \n            \n                LoginContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            \n                injectable\n            \n            \n                I18Service\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            \n                injectable\n            \n            \n                CustomOwlDateTimeIntl\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                injectable\n            \n            \n                MatchService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                interface\n            \n            \n                MatchUpdateMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            \n                injectable\n            \n            \n                PitchService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            \n                injectable\n            \n            \n                SeasonService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                injectable\n            \n            \n                TeamService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                interface\n            \n            \n                CacheTeamsInSeason\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            \n                injectable\n            \n            \n                WebsocketService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/googlemaps : ^3.30.15\n        \n            adm-zip : >=0.4.11\n        \n            bootstrap : ^4.1.2\n        \n            codacy-coverage : ^3.2.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.3\n        \n            core-js : ^2.5.4\n        \n            exec : ^0.2.1\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.4.8\n        \n            jslint : ^0.12.0\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.23.0\n        \n            ng-pick-datetime : ^6.0.16\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.4\n        \n            queueing-subject : ^0.3.0\n        \n            rxjs : ^6.3.3\n        \n            rxjs-websockets : ^6.0.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateUserBodyRole   (src/.../liga-manager-api.ts)\n                        \n                        \n                            EventType   (src/.../liga-manager-api.ts)\n                        \n                        \n                            SeasonState   (src/.../liga-manager-api.ts)\n                        \n                        \n                            UserRole   (src/.../liga-manager-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n        \n            \n                \n                    \n                        \n                        CreateUserBodyRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                        \n                            \n                                 MatchLocated\n                            \n                        \n                        \n                            \n                                 MatchResultSubmitted\n                            \n                        \n                        \n                            \n                                 MatchScheduled\n                            \n                        \n                        \n                            \n                                 MatchCancelled\n                            \n                        \n                        \n                            \n                                 RankingPenaltyAdded\n                            \n                        \n                        \n                            \n                                 RankingPenaltyRemoved\n                            \n                        \n                        \n                            \n                                 TeamRenamed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToText   (src/.../liga-manager-api.ts)\n                        \n                        \n                            formatDate   (src/.../liga-manager-api.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            pitchServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            seasonServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            teamServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            throwException   (src/.../liga-manager-api.ts)\n                        \n                        \n                            websocketServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            blobToText\n                            \n                            \n                        \n                    \n                \n                \n                    \nblobToText(blob: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blob\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDate(d: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            throwException\n                            \n                            \n                        \n                    \n                \n                \n                    \nthrowException(message: undefined, status: undefined, response: undefined, headers: undefined, result?: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        status\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        response\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18ServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ni18ServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \npitchServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nteamServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            websocketServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nwebsocketServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../liga-manager-api.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_BASE_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    wsServerUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: `wss://${window.location.hostname}/ws`,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
