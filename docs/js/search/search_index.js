var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,1.179,1,2.859]],["body/interfaces/AddMatchData.html",[0,1.674,1,4.584,2,0.162,3,0.162,4,0.145,5,3.287,6,0.468,7,1,8,4.902,9,4.902,10,2.794,11,0.689,12,0.014,13,1.759,14,0.288,15,3.14,16,2.623,17,1.391,18,0.24,19,1.346,20,0.833,21,0.162,22,5.571,23,2.569,24,1.674,25,4.42,26,4.42,27,1.001,28,2.195,29,1.922,30,4.993,31,2.47,32,2.47,33,2.47,34,2.677,35,2.011,36,3.055,37,1.691,38,1.691,39,0.195,40,1.001,41,0.931,42,3.648,43,1.001,44,3.648,45,0.097,46,0.965,47,0.897,48,3.648,49,3.648,50,1.626,51,1.839,52,3.287,53,3.648,54,3.321,55,3.648,56,0.56,57,1.129,58,2.216,59,1.362,60,1.34,61,2.623,62,1.624,63,3.287,64,3.287,65,2.803,66,3.287,67,1.2,68,1.038,69,4.993,70,1.34,71,3.018,72,3.287,73,1.206,74,3.648,75,3.648,76,3.648,77,3.648,78,3.648,79,3.648,80,4.905,81,2.835,82,4.905,83,4.905,84,4.42,85,3.648,86,3.768,87,3.648,88,2.47,89,3.648,90,3.648,91,2.109,92,3.648,93,3.648,94,4.905,95,3.648,96,4.905,97,3.648,98,3.648,99,3.648,100,3.018,101,2.803,102,1.445,103,3.648,104,3.321,105,3.648,106,0.01,107,0.01]],["title/components/AddteamComponent.html",[18,0.169,108,0.948]],["body/components/AddteamComponent.html",[2,0.161,3,0.161,4,0.144,6,0.465,7,0.996,11,0.776,12,0.014,13,1.572,14,0.217,18,0.302,19,0.995,21,0.161,28,2.702,29,1.91,39,0.144,40,1.978,41,1.839,43,1.34,45,0.097,46,0.959,56,0.75,57,1.126,72,4.402,106,0.01,107,0.011,108,1.622,109,1.15,110,1.15,111,1.15,112,3.627,113,1.15,114,1.441,115,5.619,116,5.619,117,1.034,118,4.885,119,3.627,120,1.083,121,4.171,122,1.034,123,1.114,124,0.996,125,4.402,126,4.171,127,3.268,128,0.581,129,0.959,130,4.171,131,4.171,132,3.513,133,5.619,134,1.863,135,0.798,136,1.55,137,1.55,138,1.55,139,1.875,140,1.15,141,1.15,142,1.15,143,0.959,144,1.15,145,0.995,146,1.15,147,0.995,148,1.15,149,0.995,150,1.15,151,0.995,152,1.109,153,1.15,154,0.959,155,1.15,156,0.995,157,1.15,158,0.995,159,1.15,160,0.995,161,1.15,162,0.995,163,1.15,164,1.032,165,1.15,166,0.995,167,1.15,168,0.995,169,1.15,170,0.995,171,1.15,172,0.925,173,1.15,174,0.959,175,1.15,176,0.959,177,1.15,178,0.995,179,1.15,180,0.995,181,1.15,182,0.925,183,1.15,184,0.959,185,1.15,186,0.959,187,1.15,188,0.995,189,1.15,190,0.959,191,1.032,192,1.15]],["title/components/AddtournamentroundComponent.html",[18,0.169,46,0.914]],["body/components/AddtournamentroundComponent.html",[0,0.781,1,4.491,2,0.102,3,0.102,4,0.091,5,2.063,6,0.293,7,0.714,8,3.524,9,1.894,10,1.154,11,0.895,12,0.014,13,1.608,14,0.251,15,3.476,16,1.646,17,0.873,18,0.252,19,1.169,20,0.8,21,0.102,22,5.385,23,2.702,24,1.629,25,3.159,26,3.159,27,0.628,28,2.492,29,1.206,30,5.092,31,1.55,32,1.55,33,1.55,34,2.73,35,1.262,36,3.116,37,1.061,38,1.061,39,0.14,40,1.899,41,1.765,42,3.506,43,0.962,44,3.506,45,0.061,46,1.263,47,0.862,48,4.775,49,4.775,50,1.412,51,1.768,52,4.302,53,4.775,54,3.676,55,4.775,56,0.538,57,1.218,58,3.127,59,1.048,60,1.565,61,1.646,62,2.417,63,2.063,64,2.063,65,1.759,66,2.063,67,1.402,68,1.358,69,3.839,70,0.841,71,1.894,72,4.302,73,0.862,74,2.289,75,2.289,76,2.289,77,2.289,78,2.289,79,2.289,80,3.506,81,2.027,82,3.506,83,3.506,84,3.159,85,3.506,86,2.693,87,2.289,88,1.55,89,3.506,90,4.775,91,1.323,92,2.289,93,2.289,94,3.506,95,2.289,96,3.506,97,2.289,98,2.289,99,2.289,100,1.894,101,1.759,102,0.907,103,3.506,104,2.373,105,3.506,106,0.007,107,0.008,108,0.628,109,0.726,110,0.726,111,0.726,113,0.726,117,0.742,120,1.285,122,1.011,123,1.024,124,0.973,128,0.87,129,1.362,132,3.433,134,2.4,135,0.503,136,1.112,137,1.112,138,1.112,139,1.514,140,0.726,141,0.726,142,0.726,143,0.606,144,0.726,145,0.628,146,0.726,147,0.628,148,0.726,149,0.628,150,0.726,151,0.628,152,0.7,153,0.726,154,0.606,155,0.726,156,0.628,157,0.726,158,0.628,159,0.726,160,0.628,161,0.726,162,0.628,163,0.726,164,0.651,165,0.726,166,0.628,167,0.726,168,0.628,169,0.726,170,0.628,171,0.726,172,0.584,173,0.726,174,0.606,175,0.726,176,0.606,177,0.726,178,0.628,179,0.726,180,0.628,181,0.726,182,0.584,183,0.726,184,0.606,185,0.726,186,0.606,187,0.726,188,0.628,189,0.726,190,0.606,191,0.651,192,0.726,193,4.032,194,4.032,195,4.032,196,2.289,197,4.032,198,2.633,199,2.633,200,2.633,201,2.633,202,2.633,203,2.13,204,2.633,205,1.646,206,2.633,207,2.633,208,2.633,209,2.633,210,2.633,211,2.633,212,1.154,213,0.942,214,2.633,215,2.633,216,4.032,217,4.032,218,4.032,219,4.032,220,4.032,221,4.302,222,4.032,223,4.032]],["title/components/AdminComponent.html",[18,0.169,143,0.914]],["body/components/AdminComponent.html",[2,0.172,3,0.172,4,0.154,6,0.496,12,0.014,14,0.226,18,0.309,19,1.566,21,0.172,28,1.533,29,2.039,39,0.154,40,1.987,41,1.847,43,1.4,45,0.103,46,1.024,47,1.254,56,0.876,68,1.726,106,0.01,107,0.011,108,1.062,109,1.227,110,1.227,111,1.227,113,1.227,114,1.505,117,1.08,120,1,123,0.962,128,0.62,129,1.024,135,0.851,136,1.618,137,1.618,138,1.618,139,1.924,140,1.227,141,1.227,142,1.227,143,1.605,144,1.227,145,1.062,146,1.227,147,1.062,148,1.227,149,1.062,150,1.227,151,1.062,152,1.184,153,1.227,154,1.024,155,1.227,156,1.062,157,1.227,158,1.062,159,1.227,160,1.062,161,1.227,162,1.062,163,1.227,164,1.101,165,1.227,166,1.062,167,1.227,168,1.062,169,1.227,170,1.062,171,1.227,172,0.987,173,1.227,174,1.024,175,1.227,176,1.024,177,1.227,178,1.062,179,1.227,180,1.062,181,1.227,182,0.987,183,1.227,184,1.024,185,1.227,186,1.024,187,1.227,188,1.062,189,1.227,190,1.024,191,1.101,192,1.227,224,3.87,225,4.22,226,5.868,227,5.868,228,4.451,229,4.451]],["title/guards/AdminGuard.html",[230,2.655,231,3.114]],["body/guards/AdminGuard.html",[2,0.212,3,0.212,4,0.19,6,0.612,11,0.672,12,0.014,14,0.279,20,1.332,21,0.212,39,0.19,45,0.127,47,1.175,56,0.895,59,1.175,106,0.011,107,0.011,117,1.235,120,1.234,122,1.012,123,0.901,124,0.974,128,1.05,230,3.671,231,5.256,232,5.497,233,6.161,234,6.161,235,3.671,236,3.167,237,5.497,238,3.734,239,5.497,240,5.497,241,2.215,242,2.903,243,2.409,244,2.309,245,6.709]],["title/modules/AdminModule.html",[246,0.601,247,2.859]],["body/modules/AdminModule.html",[2,0.181,3,0.181,4,0.162,12,0.014,14,0.31,21,0.181,39,0.21,45,0.109,46,1.792,106,0.01,107,0.01,108,1.801,135,0.895,143,1.737,164,1.868,166,1.801,168,1.801,172,1.675,225,3.368,246,0.918,247,5.962,248,2.145,249,3.081,250,2.245,251,2.145,252,4.072,253,4.072,254,4.072,255,5.044,256,3.62,257,3.049,258,2.354,259,2.354,260,4.683,261,4.752,262,2.089,263,4.072,264,2.607,265,2.757,266,4.683,267,4.683,268,4.683,269,4.683,270,4.683,271,4.683,272,3.128,273,4.683]],["title/modules/AdminRoutingModule.html",[246,0.601,255,2.655]],["body/modules/AdminRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.259,106,0.012,107,0.012,143,1.609,241,2.375,246,0.891,255,4.672,262,2.409,263,5.123,274,5.892,275,3.279,276,3.576,277,3.279,278,3.279,279,3.468]],["title/components/AppComponent.html",[18,0.169,145,0.948]],["body/components/AppComponent.html",[2,0.167,3,0.111,4,0.1,6,0.321,7,0.765,11,0.819,12,0.014,13,1.281,14,0.285,17,0.956,18,0.262,19,1.236,21,0.111,34,3.102,35,1.382,36,3.214,37,1.162,38,1.162,39,0.1,40,1.917,41,1.782,43,1.03,45,0.067,46,0.663,47,0.924,56,0.576,57,1.347,59,1.107,62,1.672,65,1.926,67,1.482,68,1.423,70,0.921,73,0.924,106,0.007,107,0.009,108,0.688,109,0.795,110,0.795,111,0.795,113,0.795,114,1.108,117,0.795,120,1.243,122,0.795,123,0.943,124,0.765,128,0.858,129,1.323,134,2.144,135,0.551,136,1.191,137,1.191,138,1.191,139,1.586,140,0.795,141,0.795,142,0.795,143,0.663,144,0.795,145,1.372,146,0.795,147,1.03,148,0.795,149,0.688,150,0.795,151,0.688,152,0.767,153,0.795,154,0.663,155,0.795,156,0.688,157,0.795,158,0.688,159,0.795,160,0.688,161,0.795,162,1.03,163,0.795,164,0.713,165,0.795,166,0.688,167,0.795,168,0.688,169,0.795,170,0.688,171,0.795,172,0.64,173,0.795,174,0.663,175,0.795,176,0.663,177,0.795,178,0.688,179,0.795,180,0.688,181,0.795,182,0.958,183,0.795,184,0.663,185,0.795,186,0.663,187,0.795,188,0.688,189,0.795,190,0.663,191,0.713,192,0.795,236,2.717,238,3.6,242,1.523,244,1.815,280,2.507,281,4.32,282,4.32,283,4.058,284,3.6,285,4.347,286,5.753,287,4.32,288,5.753,289,5.753,290,2.074,291,2.703,292,4.043,293,4.058,294,4.507,295,2.884,296,2.884,297,2.884,298,4.32,299,2.884,300,2.884,301,2.884,302,2.884,303,2.884,304,2.884,305,2.884,306,2.884,307,2.884,308,1.926,309,2.507,310,2.507,311,1.926,312,2.507,313,2.259,314,1.697,315,2.259,316,2.884,317,2.507,318,2.507,319,2.259,320,1.803,321,1.449,322,2.884,323,2.884,324,2.884,325,2.884,326,2.884,327,1.803,328,2.701,329,2.884,330,2.884,331,4.32,332,2.884,333,2.884,334,2.884,335,2.884,336,2.884,337,2.884,338,2.884,339,2.884,340,2.884,341,2.884,342,2.884,343,2.884,344,2.884,345,4.32,346,4.32,347,4.32,348,4.32,349,4.32,350,4.32,351,3.756,352,4.32,353,4.32,354,3.756,355,4.32,356,4.32,357,4.32,358,4.32,359,4.32]],["title/modules/AppCoreModule.html",[246,0.601,360,2.485]],["body/modules/AppCoreModule.html",[2,0.225,3,0.225,4,0.202,12,0.014,14,0.303,21,0.225,31,3.439,32,3.439,33,3.439,37,2.355,38,2.355,39,0.202,45,0.135,106,0.012,107,0.012,246,0.884,251,3.188,262,2.397,360,4.351,361,5.08,362,5.843,363,6.051,364,5.006,365,5.843,366,4.577,367,5.843,368,5.08]],["title/modules/AppModule.html",[246,0.601,369,2.859]],["body/modules/AppModule.html",[2,0.134,3,0.134,4,0.12,12,0.015,14,0.315,17,1.152,21,0.134,27,0.829,28,1.986,29,1.591,34,2.422,35,1.665,37,1.4,38,1.4,39,0.246,41,1.098,45,0.081,106,0.008,107,0.008,128,0.925,135,0.664,145,1.828,147,1.733,162,1.733,182,1.279,246,0.749,248,1.591,249,2.641,250,2.764,251,3.475,257,2.488,258,1.746,259,1.746,261,3.878,262,1.704,264,1.934,283,3.21,285,3.394,308,2.32,309,3.02,310,3.02,311,2.32,313,2.722,315,2.722,360,2.172,366,2.722,368,3.02,369,5.695,370,3.02,371,3.02,372,3.02,373,3.02,374,3.02,375,4.612,376,4.317,377,4.967,378,2.722,379,4.95,380,4.304,381,2.722,382,5.41,383,4.95,384,3.474,385,3.474,386,4.95,387,3.02,388,3.02,389,3.02,390,4.95,391,4.95,392,2.32,393,3.474,394,4.304,395,4.304,396,1.591,397,2.641,398,2.172,399,3.474,400,1.934,401,3.474,402,3.474,403,4.95,404,3.095,405,3.474,406,3.02,407,3.474,408,4.778,409,3.02,410,3.474,411,3.02,412,3.474,413,3.02,414,3.474,415,3.02,416,4.95,417,3.02,418,3.474,419,6.643,420,2.722,421,6.643,422,6.906,423,3.647,424,2.722,425,2.722,426,2.722,427,4.95,428,3.02,429,3.474,430,3.474,431,2.722]],["title/modules/AppRoutingModule.html",[246,0.601,375,2.655]],["body/modules/AppRoutingModule.html",[2,0.199,3,0.199,4,0.179,12,0.014,14,0.293,21,0.199,39,0.244,45,0.12,73,1.105,106,0.011,107,0.011,152,1.375,191,1.279,225,3.718,231,5.52,233,5.52,234,5.52,241,2.084,246,0.782,262,2.224,275,2.878,276,3.096,277,3.595,278,4.423,361,4.495,375,4.314,432,5.17,433,5.951,434,5.17,435,5.17,436,5.17,437,5.061,438,5.17,439,4.495,440,3.718,441,7.86,442,5.17,443,5.17,444,5.17,445,2.878,446,5.17,447,5.17,448,5.17,449,4.05,450,5.17,451,5.17]],["title/interceptors/AuthInterceptor.html",[377,2.859,452,3.456]],["body/interceptors/AuthInterceptor.html",[2,0.202,3,0.202,4,0.181,6,0.583,11,0.795,12,0.014,14,0.286,20,1.291,21,0.202,39,0.181,45,0.121,47,1.118,56,0.698,57,1.255,106,0.011,107,0.011,117,1.198,120,1.109,122,1.198,123,1.066,124,1.153,128,1.032,235,3.492,236,3.113,238,3.621,242,2.761,317,5.656,377,4.678,392,3.492,452,4.546,453,5.228,454,6.505,455,5.228,456,6.505,457,7.41,458,4.729,459,7.41,460,5.228,461,5.228,462,3.74,463,6.505,464,5.228,465,2.395,466,3.269,467,5.228,468,6.505,469,5.228,470,3.492,471,5.228,472,5.228]],["title/injectables/AuthenticationService.html",[20,0.789,236,1.67]],["body/injectables/AuthenticationService.html",[0,0.904,2,0.118,3,0.118,4,0.106,6,0.34,7,0.798,11,0.807,12,0.015,13,1.867,14,0.243,20,1.173,21,0.118,24,1.754,27,0.727,39,0.156,45,0.104,50,1.574,56,0.601,57,1.29,59,1.264,60,1.438,62,1.18,67,2.082,70,0.974,73,1.348,88,1.794,91,1.532,102,1.05,106,0.008,107,0.008,117,0.829,120,1.274,122,1.161,123,1.034,124,1.21,128,1.06,129,1.035,213,1.091,236,1.891,241,1.228,243,1.336,244,1.28,392,2.036,404,1.906,445,3.29,462,1.61,470,4.78,473,2.192,474,4.862,475,3.914,476,4.502,477,4.631,478,4.502,479,4.631,480,4.502,481,2.506,482,4.193,483,4.193,484,4.193,485,4.193,486,1.697,487,5.349,488,5.349,489,4.193,490,3.048,491,1.794,492,3.527,493,3.048,494,3.238,495,3.597,496,3.527,497,3.048,498,2.378,499,3.048,500,3.527,501,3.948,502,3.048,503,2.388,504,3.048,505,3.527,506,4.212,507,3.048,508,3.048,509,3.048,510,3.048,511,3.048,512,3.048,513,3.048,514,3.048,515,3.048,516,3.048,517,4.193,518,2.036,519,3.007,520,3.238,521,2.192,522,3.238,523,1.906,524,2.192,525,3.85,526,2.388,527,1.794,528,3.527,529,2.388,530,2.388,531,2.062,532,1.18,533,5.349,534,2.388,535,2.388,536,2.827,537,4.631,538,2.388,539,2.388,540,3.527,541,3.527,542,2.388,543,2.388,544,3.85,545,2.814,546,2.388,547,2.036,548,2.388,549,2.036,550,2.388,551,2.388,552,2.388,553,2.388,554,2.388,555,3.575,556,3.007,557,3.527,558,1.794,559,2.388,560,2.388,561,2.388,562,1.794,563,2.388,564,2.388,565,3.527,566,2.388,567,2.814,568,2.388,569,2.388,570,2.388,571,2.388,572,2.388,573,2.388,574,2.388,575,2.388,576,2.192,577,2.388,578,2.388]],["title/interfaces/CacheTeamsInSeason.html",[0,1.179,579,2.859]],["body/interfaces/CacheTeamsInSeason.html",[0,1.345,2,0.119,3,0.119,4,0.107,6,0.343,7,0.803,11,0.658,12,0.015,13,1.87,14,0.175,20,0.9,21,0.119,23,3.295,24,1.345,27,1.284,28,2.512,39,0.157,45,0.105,50,1.676,51,1.349,56,0.411,57,1.174,59,0.658,60,0.983,67,1.894,70,1.448,73,1.151,81,2.279,86,3.967,102,2.045,106,0.008,107,0.008,125,2.412,127,4.218,128,1.084,243,1.349,244,1.293,382,2.412,495,3.718,498,2.844,527,1.812,531,2.077,536,3.137,555,3.029,556,2.056,558,2.669,562,3.169,579,4.272,580,2.412,581,5.621,582,4.218,583,4.229,584,2.676,585,2.676,586,2.676,587,2.676,588,3.029,589,4.681,590,6.111,591,2.676,592,3.943,593,1.812,594,2.676,595,2.676,596,3.943,597,3.943,598,2.676,599,4.961,600,3.137,601,2.676,602,3.943,603,2.676,604,2.676,605,2.676,606,2.214,607,2.412,608,2.676,609,3.943,610,2.676,611,2.676,612,2.676,613,2.676,614,3.943,615,2.676,616,3.553,617,2.676,618,2.676,619,2.676,620,3.943,621,3.596,622,4.218,623,4.218,624,3.687,625,2.676,626,1.547,627,5.759,628,2.676,629,2.676,630,2.676,631,2.676,632,2.676,633,3.943,634,2.676,635,2.676,636,2.676,637,2.676,638,2.676,639,2.676,640,2.412,641,2.676]],["title/components/ChangepasswordComponent.html",[18,0.169,147,0.948]],["body/components/ChangepasswordComponent.html",[2,0.137,3,0.137,4,0.123,6,0.397,7,0.892,11,0.819,12,0.014,14,0.245,15,3.874,17,1.18,18,0.285,19,1.394,21,0.137,39,0.123,40,1.954,41,1.816,43,1.201,45,0.082,46,0.818,47,1.076,50,1.201,56,0.672,57,1.035,58,3.676,59,0.761,67,1.671,68,1.571,70,1.136,106,0.009,107,0.01,108,0.849,109,0.981,110,0.981,111,0.981,113,0.981,114,1.291,117,0.927,120,1.22,122,0.655,123,0.958,124,0.63,128,0.701,129,0.818,134,2.424,135,0.68,136,1.388,137,1.388,138,1.388,139,1.752,140,0.981,141,0.981,142,0.981,143,0.818,144,0.981,145,0.849,146,0.981,147,1.515,148,0.981,149,0.849,150,0.981,151,0.849,152,0.946,153,0.981,154,0.818,155,0.981,156,0.849,157,0.981,158,0.849,159,0.981,160,0.849,161,0.981,162,0.849,163,0.981,164,0.88,165,0.981,166,0.849,167,0.981,168,0.849,169,0.981,170,0.849,171,0.981,172,0.789,173,0.981,174,0.818,175,0.981,176,0.818,177,0.981,178,0.849,179,0.981,180,0.849,181,0.981,182,0.789,183,0.981,184,0.818,185,0.981,186,0.818,187,0.981,188,0.849,189,0.981,190,0.818,191,0.88,192,0.981,235,2.376,236,2.669,238,2.802,242,1.879,396,1.63,423,1.879,445,3.536,475,6.052,494,4.569,532,2.262,567,2.225,642,3.094,643,5.035,644,5.035,645,6.353,646,5.035,647,3.558,648,3.558,649,3.558,650,4.376,651,3.558,652,3.558,653,2.225,654,3.558,655,3.148,656,3.094,657,3.558,658,3.558,659,3.558,660,5.035,661,3.094,662,3.094,663,5.524,664,5.524,665,4.377,666,4.377]],["title/components/ContactComponent.html",[18,0.169,149,0.948]],["body/components/ContactComponent.html",[2,0.144,3,0.144,4,0.129,6,0.417,7,0.924,11,0.794,12,0.014,13,1.689,14,0.231,15,3.937,16,2.338,17,1.24,18,0.291,19,1.432,20,1.035,21,0.144,23,3.03,24,1.926,27,0.892,39,0.129,40,1.962,41,1.824,43,1.244,45,0.087,46,0.86,47,1.115,50,1.244,51,2.286,56,0.696,57,1.332,58,3.607,59,0.799,60,1.917,61,2.338,68,1.606,73,0.799,106,0.009,107,0.01,108,0.892,109,1.031,110,1.031,111,1.031,113,1.031,114,1.337,117,0.96,120,1.164,122,0.688,123,0.984,124,0.663,128,0.521,129,0.86,132,3.26,134,2.153,135,0.715,136,1.438,137,1.438,138,1.438,139,1.791,140,1.031,141,1.031,142,1.031,143,0.86,144,1.031,145,0.892,146,1.031,147,0.892,148,1.031,149,1.549,150,1.031,151,0.892,152,1.816,153,1.031,154,0.86,155,1.031,156,0.892,157,1.031,158,0.892,159,1.031,160,0.892,161,1.031,162,0.892,163,1.031,164,0.925,165,1.031,166,0.892,167,1.031,168,0.892,169,1.031,170,0.892,171,1.031,172,0.829,173,1.031,174,0.86,175,1.031,176,0.86,177,1.031,178,0.892,179,1.031,180,0.892,181,1.031,182,0.829,183,1.031,184,0.86,185,1.031,186,0.86,187,1.031,188,0.892,189,1.031,190,0.86,191,0.925,192,1.031,196,3.252,205,2.338,212,1.639,213,1.338,498,3.833,640,2.93,667,3.252,668,5.214,669,5.214,670,5.214,671,3.74,672,3.74,673,3.74,674,3.74,675,3.252,676,5.214]],["title/components/ContactPersonComponent.html",[18,0.169,151,0.948]],["body/components/ContactPersonComponent.html",[2,0.16,3,0.16,4,0.143,6,0.461,11,0.506,12,0.014,14,0.216,18,0.301,19,1.51,21,0.16,27,0.988,39,0.143,40,1.977,41,1.838,43,1.334,45,0.096,46,0.952,47,1.195,56,0.845,68,1.677,106,0.01,107,0.011,108,0.988,109,1.142,110,1.142,111,1.142,113,1.142,114,1.434,117,1.029,120,1.079,123,0.916,128,0.576,129,0.952,134,1.854,135,0.792,136,1.542,137,1.542,138,1.542,139,1.869,140,1.142,141,1.142,142,1.142,143,0.952,144,1.142,145,0.988,146,1.142,147,0.988,148,1.142,149,0.988,150,1.142,151,1.617,152,2.066,153,1.142,154,0.952,155,1.142,156,0.988,157,1.142,158,0.988,159,1.142,160,0.988,161,1.142,162,0.988,163,1.142,164,1.024,165,1.142,166,0.988,167,1.142,168,0.988,169,1.142,170,0.988,171,1.142,172,0.918,173,1.142,174,0.952,175,1.142,176,0.952,177,1.142,178,0.988,179,1.142,180,0.988,181,1.142,182,0.918,183,1.142,184,0.952,185,1.142,186,0.952,187,1.142,188,0.988,189,1.142,190,0.952,191,1.024,192,1.142,354,5.893,583,4.228,677,5.893,678,5.31,679,3.6,680,5.591,681,5.591,682,4.238,683,5.591,684,4.14,685,5.591,686,5.591,687,5.591,688,5.591,689,5.591,690,5.591,691,4.38]],["title/components/ContactlistComponent.html",[18,0.169,154,0.914]],["body/components/ContactlistComponent.html",[2,0.173,3,0.173,4,0.156,6,0.501,12,0.014,14,0.173,18,0.31,19,1.573,21,0.173,39,0.156,40,1.988,41,1.848,43,1.408,45,0.104,46,1.034,47,1.262,56,0.88,68,1.732,106,0.01,107,0.011,108,1.072,109,1.239,110,1.239,111,1.239,113,1.239,114,1.514,117,1.087,120,1.007,123,0.968,128,0.626,129,1.034,135,0.859,136,1.628,137,1.628,138,1.628,139,1.932,140,1.239,141,1.239,142,1.239,143,1.034,144,1.239,145,1.072,146,1.239,147,1.072,148,1.239,149,1.072,150,1.239,151,1.072,152,1.195,153,1.239,154,1.611,155,1.239,156,1.072,157,1.239,158,1.072,159,1.239,160,1.072,161,1.239,162,1.072,163,1.239,164,1.112,165,1.239,166,1.072,167,1.239,168,1.072,169,1.239,170,1.072,171,1.239,172,0.997,173,1.239,174,1.034,175,1.239,176,1.034,177,1.239,178,1.072,179,1.239,180,1.072,181,1.239,182,0.997,183,1.239,184,1.034,185,1.239,186,1.034,187,1.239,188,1.072,189,1.239,190,1.034,191,1.112,192,1.239,692,3.907,693,5.134,694,5.905,695,5.905,696,4.494,697,4.494]],["title/modules/ContactlistModule.html",[246,0.601,698,2.859]],["body/modules/ContactlistModule.html",[2,0.201,3,0.201,4,0.18,12,0.014,14,0.307,21,0.201,39,0.225,45,0.121,106,0.011,107,0.011,135,0.996,154,1.785,178,1.852,188,1.852,246,0.982,248,2.386,249,3.238,250,2.497,251,2.386,256,3.721,257,3.262,258,2.618,259,2.618,262,2.235,264,2.899,265,3.066,693,4.529,698,5.914,699,4.529,700,4.529,701,4.529,702,5.184,703,5.209,704,4.529,705,2.751,706,5.209]],["title/modules/ContactlistRoutingModule.html",[246,0.601,702,2.655]],["body/modules/ContactlistRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.259,106,0.012,107,0.012,154,1.609,241,2.375,246,0.891,262,2.409,275,3.279,276,3.576,277,3.279,278,3.279,279,3.468,702,4.672,704,5.123,707,5.892]],["title/classes/Credentials.html",[45,0.092,506,2.655]],["body/classes/Credentials.html",[0,1.049,2,0.136,3,0.136,4,0.122,6,0.394,7,0.888,11,0.712,12,0.015,13,1.883,14,0.258,20,1.156,21,0.136,24,1.487,27,0.843,39,0.174,45,0.135,50,1.657,56,0.669,57,1.293,59,1.354,60,1.129,62,1.368,67,1.812,70,1.129,73,1.43,88,2.081,91,1.777,102,1.217,106,0.009,107,0.009,120,0.854,122,0.651,123,0.58,124,1.032,128,1.016,236,1.485,241,1.425,243,1.55,244,1.485,392,2.361,404,2.21,445,2.79,462,1.867,470,4.958,473,2.543,474,4.467,477,2.77,479,2.77,482,2.77,483,2.77,484,2.77,485,2.77,487,4.562,488,4.562,489,2.77,492,2.77,494,2.543,495,3.491,496,2.77,498,1.867,500,2.77,501,3.348,505,2.77,506,4.231,517,4.562,518,2.361,519,3.348,520,3.605,521,2.543,522,3.605,523,2.21,524,2.543,525,5.137,526,2.77,527,2.081,528,3.927,529,2.77,530,2.77,531,2.296,532,1.368,533,5.596,534,2.77,535,2.77,536,3.075,537,4.963,538,2.77,539,2.77,540,3.927,541,3.927,542,2.77,543,2.77,544,4.188,545,3.134,546,2.77,547,2.361,548,2.77,549,2.361,550,2.77,551,2.77,552,2.77,553,2.77,554,2.77,555,3.889,556,3.348,557,3.927,558,2.081,559,2.77,560,2.77,561,2.77,562,2.081,563,2.77,564,2.77,565,3.927,566,2.77,567,3.134,568,2.77,569,2.77,570,2.77,571,2.77,572,2.77,573,2.77,574,2.77,575,2.77,576,2.543,577,2.77,578,2.77,708,3.536,709,3.536,710,3.536]],["title/injectables/CustomOwlDateTimeIntl.html",[20,0.789,364,2.859]],["body/injectables/CustomOwlDateTimeIntl.html",[2,0.217,3,0.217,4,0.195,11,0.688,12,0.014,14,0.282,20,1.452,21,0.217,31,3.314,32,3.314,33,3.314,36,3.644,37,2.269,38,2.269,39,0.195,45,0.13,56,0.751,106,0.012,107,0.012,120,0.96,122,1.036,123,0.923,124,0.998,363,5.918,364,4.895,466,3.52,711,4.895,712,5.63,713,5.63,714,6.807,715,4.895,716,5.63,717,5.63,718,6.807,719,5.63,720,5.63,721,6.807,722,5.63]],["title/components/EditmatchPitchComponent.html",[18,0.169,156,0.948]],["body/components/EditmatchPitchComponent.html",[2,0.085,3,0.085,4,0.077,6,0.246,7,0.623,11,0.882,12,0.015,13,1.436,14,0.257,15,2.78,16,1.382,17,0.733,18,0.232,19,1.045,20,0.698,21,0.085,24,1.482,39,0.077,40,1.861,41,1.73,43,0.839,45,0.051,46,0.508,47,0.752,50,1.508,56,0.469,57,0.776,58,2.314,59,1.241,60,1.399,61,1.382,62,0.856,67,0.632,68,1.235,73,1.068,91,1.768,100,1.59,101,1.477,102,0.761,106,0.006,107,0.011,108,0.527,109,0.61,110,0.61,111,0.61,113,0.61,114,0.902,117,0.648,120,1.273,122,0.919,123,0.952,124,0.885,128,0.93,129,1.336,134,2.522,135,0.423,136,0.97,137,0.97,138,0.97,139,1.377,140,0.61,141,0.61,142,0.61,143,0.508,144,0.61,145,0.527,146,0.61,147,0.527,148,0.61,149,0.527,150,0.61,151,0.527,152,0.588,153,0.61,154,0.508,155,0.61,156,1.191,157,0.61,158,0.527,159,0.61,160,0.527,161,0.61,162,0.527,163,0.61,164,0.547,165,0.61,166,0.527,167,0.61,168,0.527,169,0.61,170,0.527,171,0.61,172,0.49,173,0.61,174,0.508,175,0.61,176,0.508,177,0.61,178,0.527,179,0.61,180,0.527,181,0.61,182,0.49,183,0.61,184,0.508,185,0.61,186,0.508,187,0.61,188,0.527,189,0.61,190,0.508,191,0.547,192,0.61,205,2.199,212,1.542,213,1.787,285,3.584,396,1.013,397,2.789,398,1.382,423,1.168,462,2.638,465,1.013,491,1.301,532,2.247,624,1.231,650,3.929,653,1.382,655,2.199,705,3.995,723,1.922,724,3.518,725,3.518,726,3.518,727,4.994,728,3.592,729,3.592,730,4.994,731,4.994,732,4.994,733,4.994,734,5.452,735,4.994,736,4.994,737,4.994,738,3.059,739,3.059,740,3.518,741,3.913,742,4.994,743,1.732,744,2.439,745,4.382,746,4.994,747,4.771,748,3.518,749,2.211,750,2.211,751,2.53,752,2.211,753,2.314,754,2.53,755,2.211,756,1.922,757,2.211,758,3.518,759,2.211,760,2.211,761,2.211,762,3.518,763,2.211,764,2.211,765,2.211,766,2.211,767,2.211,768,2.211,769,3.913,770,2.211,771,4.382,772,2.211,773,2.211,774,1.301,775,3.809,776,3.809,777,1.732,778,2.53,779,1.59,780,1.477,781,1.732,782,1.732,783,2.211,784,2.211,785,2.211,786,2.211,787,1.732,788,2.211,789,1.59,790,1.59,791,1.59,792,1.59,793,1.59,794,1.301,795,1.59,796,1.59,797,1.59,798,1.59,799,1.59,800,1.59,801,2.926,802,2.211,803,2.211,804,2.211,805,2.211,806,2.211,807,2.211,808,2.211,809,2.211,810,2.211,811,2.211,812,4.382,813,2.211,814,4.382,815,2.211,816,2.211,817,3.518,818,2.211,819,2.211,820,2.211,821,3.518,822,2.211,823,2.211,824,2.211,825,1.922,826,1.922,827,1.922,828,2.211,829,2.211,830,2.211,831,2.211,832,2.211,833,2.211,834,2.071,835,2.071,836,3.059,837,3.059,838,3.518,839,3.059,840,3.913,841,3.518,842,3.518,843,4.994,844,3.518,845,3.518,846,3.518,847,3.518,848,3.518,849,3.518,850,3.518,851,2.756,852,2.53]],["title/components/EditmatchResultComponent.html",[18,0.169,158,0.948]],["body/components/EditmatchResultComponent.html",[2,0.137,3,0.137,4,0.123,6,0.397,7,0.892,10,3.051,11,0.776,12,0.014,14,0.245,15,3.536,16,2.225,17,1.18,18,0.285,19,1.394,20,0.999,21,0.137,39,0.123,40,1.954,41,1.816,43,1.201,45,0.082,46,0.818,47,1.076,56,0.672,57,1.035,58,3.086,59,1.076,61,2.225,68,1.571,101,2.376,102,1.225,106,0.009,107,0.012,108,0.849,109,0.981,110,0.981,111,0.981,113,0.981,114,1.291,117,0.927,120,1.186,122,0.655,123,0.958,124,0.63,128,0.701,129,1.158,134,2.308,135,0.68,136,1.388,137,1.388,138,1.388,139,1.752,140,0.981,141,0.981,142,0.981,143,0.818,144,0.981,145,0.849,146,0.981,147,0.849,148,0.981,149,0.849,150,0.981,151,0.849,152,0.946,153,0.981,154,0.818,155,0.981,156,0.849,157,0.981,158,1.515,159,0.981,160,0.849,161,0.981,162,0.849,163,0.981,164,0.88,165,0.981,166,0.849,167,0.981,168,0.849,169,0.981,170,0.849,171,0.981,172,0.789,173,0.981,174,0.818,175,0.981,176,0.818,177,0.981,178,0.849,179,0.981,180,0.849,181,0.981,182,0.789,183,0.981,184,0.818,185,0.981,186,0.818,187,0.981,188,0.849,189,0.981,190,0.818,191,0.88,192,0.981,205,2.225,291,2.884,314,2.094,682,2.225,741,4.977,743,2.788,744,2.924,774,2.094,834,2.964,835,2.964,851,3.944,852,3.621,853,3.094,854,5.035,855,5.035,856,5.035,857,5.524,858,5.524,859,5.035,860,3.558,861,3.558,862,3.558,863,3.558,864,5.035,865,3.558,866,5.035,867,3.558,868,3.558,869,3.558,870,3.558,871,2.559,872,3.558,873,3.558,874,3.558,875,5.035]],["title/components/EditmatchTimeComponent.html",[18,0.169,160,0.948]],["body/components/EditmatchTimeComponent.html",[2,0.124,3,0.124,4,0.111,6,0.357,7,0.828,11,0.787,12,0.014,14,0.267,15,3.371,16,2.004,17,1.063,18,0.274,19,1.315,20,0.927,21,0.124,24,1.797,27,0.765,30,5.435,31,1.887,32,1.887,33,1.887,34,3.17,35,1.537,36,3.325,37,1.292,38,1.292,39,0.111,40,1.936,41,1.8,43,1.114,45,0.074,46,0.737,47,0.999,54,3.244,56,0.623,57,1.191,58,2.911,59,1.178,60,1.76,61,2.004,63,2.512,64,2.512,65,2.141,66,2.512,68,1.498,88,1.887,101,2.141,104,1.887,106,0.008,107,0.012,108,0.765,109,0.884,110,0.884,111,0.884,113,0.884,114,1.198,117,0.86,120,1.182,122,0.86,123,0.993,124,0.828,128,0.767,129,1.268,134,2.442,135,0.613,136,1.288,137,1.288,138,1.288,139,1.67,140,0.884,141,0.884,142,0.884,143,0.737,144,0.884,145,0.765,146,0.884,147,0.765,148,0.884,149,0.765,150,0.884,151,0.765,152,0.853,153,0.884,154,0.737,155,0.884,156,0.765,157,0.884,158,0.765,159,0.884,160,1.445,161,0.884,162,0.765,163,0.884,164,0.793,165,0.884,166,0.765,167,0.884,168,0.765,169,0.884,170,0.765,171,0.884,172,0.711,173,0.884,174,0.737,175,0.884,176,0.737,177,0.884,178,0.765,179,0.884,180,0.765,181,0.884,182,0.711,183,0.884,184,0.737,185,0.884,186,0.737,187,0.884,188,0.765,189,0.884,190,0.737,191,0.793,192,0.884,203,1.693,205,2.004,221,3.66,545,2.004,741,4.744,743,2.512,744,2.823,834,2.75,835,2.75,851,3.66,852,3.36,876,2.787,877,4.672,878,4.672,879,4.672,880,6.72,881,4.672,882,4.672,883,4.672,884,3.206,885,3.206,886,3.206,887,3.206,888,3.206,889,2.306,890,2.787,891,4.672,892,3.206,893,2.787,894,4.672,895,3.12,896,4.062,897,4.672,898,4.062]],["title/injectables/I18Service.html",[20,0.789,34,1.67]],["body/injectables/I18Service.html",[2,0.187,3,0.187,4,0.168,6,0.542,7,1.101,11,0.837,12,0.014,13,1.918,14,0.278,20,1.36,21,0.187,34,2.611,36,3.656,37,1.96,38,1.96,39,0.168,45,0.113,56,0.649,57,1.279,65,4.151,106,0.011,107,0.011,117,1.144,120,1.271,122,1.144,123,1.019,124,1.101,128,0.954,129,1.429,212,2.132,213,1.74,243,2.132,244,2.043,466,3.04,481,3.459,899,4.228,900,7.218,901,6.215,902,5.654,903,6.849,904,4.863,905,4.863,906,6.215,907,4.863,908,4.863,909,7.458,910,7.218,911,4.863,912,4.863,913,4.863,914,4.863,915,4.863,916,4.863,917,4.863,918,4.863,919,7.458,920,4.863,921,4.863,922,4.863,923,4.863,924,4.863]],["title/interfaces/IPossibleKickoffs.html",[0,1.179,925,2.655]],["body/interfaces/IPossibleKickoffs.html",[0,1.645,2,0.125,3,0.125,4,0.112,6,0.775,7,0.834,10,3.236,11,0.79,12,0.015,13,1.505,14,0.288,18,0.2,19,1.123,21,0.125,23,2.605,27,0.773,28,1.116,29,1.484,34,2.329,35,1.553,39,0.112,40,0.773,41,0.718,43,0.773,45,0.075,47,0.693,50,1.323,51,1.42,54,3.264,56,0.432,57,0.574,59,0.693,68,0.801,73,1.185,81,1.628,104,1.907,106,0.008,107,0.012,114,0.831,128,0.9,172,0.718,203,1.711,213,1.684,272,2.164,291,1.306,396,1.484,397,2.54,398,2.025,423,1.711,462,2.486,465,1.484,532,1.254,588,3.144,600,1.711,624,3.086,626,2.366,650,3.264,682,4.041,705,4.032,728,2.33,729,2.33,744,1.977,751,2.33,753,2.486,754,2.33,778,3.385,779,2.33,780,2.164,789,2.33,790,2.33,791,2.33,792,2.33,793,2.33,794,1.907,795,2.33,796,2.33,797,2.33,798,2.33,799,2.33,800,2.33,801,2.164,834,1.907,835,1.907,889,2.33,895,3.144,925,4.318,926,2.33,927,2.33,928,5.064,929,5.064,930,5.064,931,4.065,932,3.688,933,3.214,934,2.538,935,2.538,936,2.33,937,3.688,938,2.538,939,2.538,940,2.538,941,2.538,942,2.538,943,2.538,944,2.33,945,5.064,946,2.538,947,2.538,948,2.538,949,3.688,950,3.688,951,2.538,952,2.366,953,2.538,954,2.33,955,2.538,956,2.538,957,3.688,958,2.538,959,2.538,960,2.538,961,2.538,962,3.688,963,2.538,964,2.538,965,2.538,966,2.538,967,2.538,968,3.688,969,2.538,970,2.538,971,2.538,972,2.538,973,2.025,974,2.538,975,2.538,976,2.538,977,2.538,978,3.688,979,3.688,980,3.688,981,2.538,982,2.538,983,2.538,984,2.538,985,3.688,986,2.538,987,2.538,988,2.538,989,2.538,990,2.538,991,2.538,992,2.538,993,2.538,994,2.538,995,2.538,996,2.538,997,2.538,998,3.688,999,2.538,1000,2.538,1001,2.538,1002,2.538,1003,2.538,1004,2.538,1005,2.538,1006,2.538,1007,3.688,1008,3.688]],["title/interfaces/ISnackBarData.html",[0,1.179,1009,2.859]],["body/interfaces/ISnackBarData.html",[0,2.034,2,0.22,3,0.22,4,0.197,6,0.635,7,1.215,11,0.696,12,0.014,13,1.819,14,0.264,17,1.89,18,0.292,19,1.636,20,1.131,21,0.22,39,0.237,40,1.359,41,1.264,43,1.359,45,0.132,47,1.218,56,0.76,57,1.01,62,2.206,68,1.41,106,0.012,107,0.012,114,1.462,182,1.264,284,3.172,321,3.836,1009,5.29,1010,4.465,1011,4.955,1012,4.955,1013,4.955,1014,4.955]],["title/interfaces/ITeamCanPlayAtDate.html",[0,1.179,931,2.655]],["body/interfaces/ITeamCanPlayAtDate.html",[0,1.668,2,0.128,3,0.128,4,0.115,6,0.686,7,0.849,10,2.982,11,0.586,12,0.015,13,1.523,14,0.29,18,0.204,19,1.143,21,0.128,23,2.992,27,0.792,28,1.143,29,1.521,34,2.362,35,1.592,39,0.115,40,0.792,41,0.736,43,0.792,45,0.077,47,0.71,50,1.341,51,1.456,54,1.955,56,0.443,57,0.588,59,0.71,68,0.821,73,1.202,81,1.669,104,1.955,106,0.008,107,0.012,114,0.852,128,0.909,172,0.736,203,1.754,213,1.715,272,2.218,291,1.338,396,1.521,397,2.575,398,2.076,423,1.754,462,2.531,465,1.521,532,2.176,588,3.201,600,1.754,624,3.13,626,2.409,650,3.31,682,4.081,705,3.791,728,2.388,729,2.388,744,2.013,751,2.388,753,2.531,754,2.388,778,3.446,779,2.388,780,2.218,789,2.388,790,2.388,791,2.388,792,2.388,793,2.388,794,1.955,795,2.388,796,2.388,797,2.388,798,2.388,799,2.388,800,2.388,801,2.218,834,1.955,835,1.955,889,2.388,895,3.201,925,4.112,926,2.388,927,2.388,928,3.754,929,3.754,930,3.754,931,3.755,932,3.754,933,3.252,934,2.601,935,2.601,936,2.388,937,5.114,938,2.601,939,2.601,940,2.601,941,2.601,942,2.601,943,2.601,944,2.388,945,5.114,946,2.601,947,2.601,948,2.601,949,3.754,950,3.754,951,2.601,952,2.409,953,2.601,954,2.388,955,2.601,956,2.601,957,3.754,958,2.601,959,2.601,960,2.601,961,2.601,962,3.754,963,2.601,964,2.601,965,2.601,966,2.601,967,2.601,968,3.754,969,2.601,970,2.601,971,2.601,972,2.601,973,2.076,974,2.601,975,2.601,976,2.601,977,2.601,978,3.754,979,3.754,980,3.754,981,2.601,982,2.601,983,2.601,984,2.601,985,3.754,986,2.601,987,2.601,988,2.601,989,2.601,990,2.601,991,2.601,992,2.601,993,2.601,994,2.601,995,2.601,996,2.601,997,2.601,998,3.754,999,2.601,1000,2.601,1001,2.601,1002,2.601,1003,2.601,1004,2.601,1005,2.601,1006,2.601,1007,3.754,1008,3.754]],["title/components/LoginComponent.html",[18,0.169,162,0.948]],["body/components/LoginComponent.html",[2,0.12,3,0.12,4,0.108,6,0.346,7,0.809,11,0.812,12,0.014,13,1.339,14,0.265,15,3.7,17,1.031,18,0.271,19,1.292,21,0.12,24,1.771,27,0.742,36,3.294,37,1.253,38,1.253,39,0.108,40,1.931,41,1.795,43,1.09,45,0.072,46,0.715,47,0.977,50,0.742,56,0.61,57,0.959,58,3.511,59,1.507,60,1.73,62,1.768,67,1.549,68,1.476,70,0.993,73,0.665,91,1.563,102,2.055,106,0.008,107,0.009,108,0.742,109,0.857,110,0.857,111,0.857,113,0.857,114,1.172,117,0.841,120,1.226,122,0.841,123,0.978,124,0.809,128,0.831,129,1.245,134,1.515,135,0.594,136,1.26,137,1.26,138,1.26,139,1.646,140,0.857,141,0.857,142,0.857,143,0.715,144,0.857,145,0.742,146,0.857,147,0.742,148,0.857,149,0.742,150,0.857,151,0.742,152,0.827,153,0.857,154,0.715,155,0.857,156,0.742,157,0.857,158,0.742,159,0.857,160,0.742,161,0.857,162,1.424,163,0.857,164,0.769,165,0.857,166,0.742,167,0.857,168,0.742,169,0.857,170,0.742,171,0.857,172,0.69,173,0.857,174,0.715,175,0.857,176,0.715,177,0.857,178,0.742,179,0.857,180,0.742,181,0.857,182,1.013,183,0.857,184,0.715,185,0.857,186,0.715,187,0.857,188,0.742,189,0.857,190,0.715,191,0.769,192,0.857,236,2.886,242,1.642,284,3.014,292,3.731,320,2.856,321,2.296,327,2.856,328,3.731,351,3.972,396,1.424,423,2.86,445,1.731,522,2.236,523,1.944,532,2.573,567,2.856,606,3.894,653,1.944,655,2.856,662,2.703,664,3.972,665,3.972,747,5.208,769,4.676,787,2.436,1015,2.703,1016,6.648,1017,4.568,1018,4.568,1019,5.969,1020,5.189,1021,5.969,1022,4.568,1023,3.109,1024,4.568,1025,3.109,1026,3.109,1027,3.109,1028,4.568,1029,3.109,1030,3.109,1031,3.109,1032,3.109,1033,3.972,1034,2.236,1035,3.109,1036,2.703,1037,5.415,1038,3.109,1039,3.109,1040,3.109,1041,2.436,1042,3.109,1043,3.109,1044,3.109,1045,2.077,1046,3.109,1047,2.236,1048,3.109,1049,4.568,1050,3.972,1051,4.568]],["title/interfaces/LoginContext.html",[0,1.179,501,2.655]],["body/interfaces/LoginContext.html",[0,1.499,2,0.138,3,0.138,4,0.124,6,0.399,7,0.895,11,0.716,12,0.015,13,1.887,14,0.259,20,1.163,21,0.138,24,1.499,27,0.853,39,0.175,45,0.117,50,1.663,56,0.477,57,1.235,59,1.361,60,1.142,62,1.384,67,1.821,70,1.142,73,1.436,88,2.105,91,1.798,102,1.232,106,0.009,107,0.009,124,0.895,128,1.019,236,1.502,241,1.441,243,1.568,244,1.502,392,2.389,404,2.236,445,2.813,462,1.889,470,4.971,473,2.572,474,4.486,477,2.802,479,2.802,482,2.802,483,2.802,484,2.802,485,2.802,487,4.59,488,4.59,489,2.802,492,2.802,494,2.572,495,3.504,496,2.802,498,1.889,500,2.802,501,3.913,505,2.802,506,3.913,517,4.59,518,2.389,519,3.375,520,3.634,521,2.572,522,4.831,523,3.981,524,2.572,525,4.214,526,2.802,527,2.105,528,3.959,529,2.802,530,2.802,531,2.314,532,1.384,533,5.614,534,2.802,535,2.802,536,3.095,537,4.989,538,2.802,539,2.802,540,3.959,541,3.959,542,2.802,543,2.802,544,4.214,545,3.159,546,2.802,547,2.389,548,2.802,549,2.389,550,2.802,551,2.802,552,2.802,553,2.802,554,2.802,555,3.913,556,3.375,557,3.959,558,2.105,559,2.802,560,2.802,561,2.802,562,2.105,563,2.802,564,2.802,565,3.959,566,2.802,567,3.159,568,2.802,569,2.802,570,2.802,571,2.802,572,2.802,573,2.802,574,2.802,575,2.802,576,2.572,577,2.802,578,2.802]],["title/components/ManagetournamentComponent.html",[18,0.169,166,0.948]],["body/components/ManagetournamentComponent.html",[2,0.115,3,0.115,4,0.103,6,0.587,7,0.782,8,4.198,10,3.049,11,0.869,12,0.014,13,1.304,14,0.241,17,0.985,18,0.265,19,1.257,21,0.115,24,1.732,27,0.708,39,0.103,40,1.923,41,1.787,43,1.053,45,0.069,46,1.016,47,0.944,50,0.708,51,1.302,56,0.589,57,0.934,59,1.334,60,1.41,67,1.508,68,1.444,70,0.949,73,0.635,106,0.009,107,0.011,108,0.708,109,0.819,110,0.819,111,0.819,113,0.819,114,1.133,117,0.813,120,1.292,122,0.813,123,1.11,124,0.782,128,0.91,129,1.435,134,2.168,135,0.568,136,1.218,137,1.218,138,1.218,139,1.61,140,0.819,141,0.819,142,0.819,143,0.683,144,0.819,145,0.708,146,0.819,147,0.708,148,0.819,149,0.708,150,0.819,151,0.708,152,0.79,153,0.819,154,0.683,155,0.819,156,0.708,157,0.819,158,0.708,159,0.819,160,0.708,161,0.819,162,0.708,163,0.819,164,0.735,165,0.819,166,1.392,167,0.819,168,0.708,169,0.819,170,0.708,171,0.819,172,0.659,173,0.819,174,0.683,175,0.819,176,0.683,177,0.819,178,0.708,179,0.819,180,0.708,181,0.819,182,0.659,183,0.819,184,0.683,185,0.819,186,0.683,187,0.819,188,0.708,189,0.819,190,0.683,191,1.858,192,0.819,212,1.302,213,1.063,291,2.729,293,5.122,294,5.122,314,1.748,486,1.653,545,1.857,600,1.569,624,2.934,933,3.083,952,1.493,1052,2.582,1053,6.538,1054,4.416,1055,4.416,1056,5.837,1057,5.837,1058,5.837,1059,4.416,1060,5.837,1061,5.837,1062,5.837,1063,5.837,1064,4.416,1065,4.416,1066,2.97,1067,2.97,1068,2.97,1069,2.97,1070,2.97,1071,2.97,1072,2.97,1073,2.97,1074,2.97,1075,2.97,1076,4.416,1077,2.97,1078,2.97,1079,2.582,1080,2.97,1081,4.416,1082,2.97,1083,2.582,1084,2.97,1085,2.97,1086,2.97,1087,4.416,1088,2.97,1089,4.416,1090,2.97,1091,4.583,1092,2.97,1093,6.538,1094,2.97,1095,2.97,1096,2.582,1097,2.582,1098,2.97,1099,3.84,1100,4.416,1101,4.416,1102,4.416]],["title/components/ManageusersComponent.html",[18,0.169,168,0.948]],["body/components/ManageusersComponent.html",[2,0.113,3,0.113,4,0.102,6,0.327,7,0.776,11,0.866,12,0.014,13,1.296,14,0.26,17,0.974,18,0.264,19,1.25,21,0.113,23,2.34,24,1.723,27,0.701,28,2.323,29,1.346,36,3.234,37,1.184,38,1.184,39,0.102,40,1.921,41,1.786,43,1.045,45,0.068,46,0.676,47,0.937,50,1.609,51,1.921,52,4.549,56,0.585,59,1.241,60,1.399,62,1.696,67,1.498,68,1.436,69,2.302,70,0.939,71,2.113,73,0.628,91,1.477,102,1.012,104,1.73,106,0.007,107,0.009,108,0.701,109,0.81,110,0.81,111,0.81,113,0.81,114,1.124,117,0.807,120,1.264,122,0.807,123,0.952,124,0.776,128,0.729,129,1.008,132,2.739,134,1.925,135,0.562,136,1.208,137,1.208,138,1.208,139,1.601,140,0.81,141,0.81,142,0.81,143,0.676,144,0.81,145,0.701,146,0.81,147,0.701,148,0.81,149,0.701,150,0.81,151,0.701,152,0.782,153,0.81,154,0.676,155,0.81,156,0.701,157,0.81,158,0.701,159,0.81,160,0.701,161,0.81,162,0.701,163,0.81,164,0.727,165,0.81,166,0.701,167,0.81,168,1.385,169,0.81,170,0.701,171,0.81,172,0.652,173,0.81,174,0.676,175,0.81,176,0.676,177,0.81,178,0.701,179,0.81,180,0.701,181,0.81,182,0.972,183,0.81,184,0.676,185,0.81,186,0.676,187,0.81,188,0.701,189,0.81,190,0.676,191,0.727,192,0.81,203,1.552,212,1.921,213,1.568,284,2.916,292,3.63,320,2.739,321,2.202,327,2.739,328,3.63,396,1.346,486,1.636,518,3.878,523,3.63,547,3.878,549,3.878,606,4.176,650,4.55,653,1.837,655,3.63,656,2.555,663,3.809,1034,2.113,1041,2.302,1045,1.963,1047,2.113,1103,2.555,1104,4.381,1105,4.381,1106,4.381,1107,6.273,1108,5.807,1109,5.807,1110,4.381,1111,4.381,1112,2.939,1113,2.939,1114,4.381,1115,5.048,1116,2.939,1117,2.939,1118,2.939,1119,2.939,1120,2.939,1121,2.939,1122,2.939,1123,2.939,1124,3.809,1125,2.939,1126,2.555,1127,2.939,1128,2.939,1129,2.939,1130,4.381,1131,2.939,1132,2.939,1133,2.939,1134,2.939,1135,2.555,1136,2.939,1137,2.555,1138,2.939,1139,2.939,1140,5.239,1141,2.939,1142,2.939,1143,2.939,1144,2.939,1145,4.381,1146,4.381,1147,4.381,1148,4.381,1149,4.381,1150,4.381]],["title/components/MatchComponent.html",[18,0.169,170,0.948]],["body/components/MatchComponent.html",[2,0.086,3,0.086,4,0.078,6,0.25,7,0.63,10,0.982,11,0.884,12,0.015,14,0.276,17,0.743,18,0.234,19,1.054,21,0.086,34,2.923,35,1.074,36,3.336,37,0.903,38,0.903,39,0.078,40,1.864,41,1.733,43,0.848,45,0.052,46,0.515,47,0.76,50,0.848,51,0.982,56,0.475,57,1.317,58,2.335,59,0.479,62,2.458,67,1.439,68,1.245,70,1.607,73,1.076,106,0.011,107,0.012,108,0.535,109,0.618,110,0.618,111,0.618,113,0.618,114,0.912,117,0.655,120,1.267,122,1.01,123,1.003,124,0.972,128,0.884,129,1.343,134,2.222,135,0.428,136,0.981,137,0.981,138,0.981,139,1.388,140,0.618,141,0.618,142,0.618,143,0.515,144,0.618,145,0.535,146,0.618,147,0.535,148,0.618,149,0.848,150,0.618,151,0.535,152,1.176,153,0.618,154,0.515,155,0.618,156,0.848,157,0.618,158,0.848,159,0.618,160,0.848,161,0.618,162,0.535,163,0.618,164,0.554,165,0.618,166,0.535,167,0.618,168,0.535,169,0.618,170,1.2,171,0.618,172,0.497,173,0.618,174,0.515,175,0.618,176,0.515,177,0.618,178,0.535,179,0.618,180,0.535,181,0.618,182,0.789,183,0.618,184,0.515,185,0.618,186,0.515,187,0.618,188,0.535,189,0.618,190,0.515,191,1.245,192,0.618,203,1.184,236,2.454,238,3.251,242,1.184,284,3.251,285,3.604,291,2.805,292,3.652,293,5.125,294,4.576,313,1.756,314,1.319,319,1.756,320,2.764,321,2.222,327,3.827,328,3.652,439,4.376,531,1.026,532,2.124,682,3.652,744,2.923,774,1.319,781,1.756,782,1.756,794,1.319,826,1.948,834,2.093,835,2.093,836,3.092,837,3.092,839,3.092,840,2.786,895,3.361,1045,2.953,1096,3.092,1151,1.948,1152,3.556,1153,3.556,1154,3.556,1155,5.033,1156,3.556,1157,3.556,1158,3.556,1159,5.033,1160,4.421,1161,4.376,1162,4.421,1163,2.241,1164,3.556,1165,2.241,1166,2.241,1167,2.241,1168,4.376,1169,3.556,1170,2.241,1171,2.241,1172,2.241,1173,3.556,1174,2.241,1175,3.556,1176,2.241,1177,3.556,1178,2.241,1179,2.241,1180,2.241,1181,2.241,1182,2.241,1183,2.241,1184,2.241,1185,2.241,1186,2.241,1187,1.497,1188,2.241,1189,2.241,1190,2.241,1191,2.241,1192,1.948,1193,3.556,1194,2.241,1195,4.3,1196,2.241,1197,2.241,1198,5.033,1199,4.421,1200,4.421,1201,2.241,1202,4.421,1203,2.241,1204,2.241,1205,2.241,1206,2.241,1207,2.241,1208,1.948,1209,1.612,1210,1.756,1211,2.241,1212,1.756,1213,2.241,1214,2.241,1215,2.241,1216,2.241,1217,4.376,1218,3.092,1219,3.556,1220,3.556,1221,2.241,1222,1.948,1223,3.556,1224,3.556,1225,3.556,1226,3.556,1227,3.556,1228,3.556,1229,2.241,1230,1.948]],["title/components/MatchSchedulingComponent.html",[18,0.169,172,0.882]],["body/components/MatchSchedulingComponent.html",[0,0.975,2,0.078,3,0.078,4,0.07,6,0.582,7,0.582,10,2.971,11,0.865,12,0.015,13,1.565,14,0.256,18,0.222,19,0.987,21,0.078,23,2.253,27,0.484,28,0.699,29,0.93,34,2.847,35,0.973,39,0.07,40,1.84,41,1.711,43,0.784,45,0.047,46,0.467,47,0.702,50,1.246,51,1.44,54,1.195,56,0.438,57,0.733,59,0.434,68,1.176,73,0.885,81,1.02,104,1.195,106,0.006,107,0.011,108,0.484,109,0.56,110,0.56,111,0.56,113,0.56,114,0.843,117,0.605,120,1.263,122,1.083,123,1.037,124,1.043,128,0.973,129,1.201,134,1.577,135,0.388,136,0.906,137,0.906,138,0.906,139,1.311,140,0.56,141,0.56,142,0.56,143,0.467,144,0.56,145,0.484,146,0.56,147,0.484,148,0.56,149,0.484,150,0.56,151,0.484,152,0.54,153,0.56,154,0.467,155,0.56,156,0.484,157,0.56,158,0.484,159,0.56,160,0.484,161,0.56,162,0.484,163,0.56,164,0.502,165,0.56,166,0.484,167,0.56,168,0.484,169,0.56,170,0.484,171,0.56,172,1.055,173,0.56,174,0.467,175,0.56,176,0.467,177,0.56,178,0.484,179,0.56,180,0.484,181,0.56,182,0.45,183,0.56,184,0.467,185,0.56,186,0.467,187,0.56,188,0.484,189,0.56,190,0.467,191,0.502,192,0.56,203,2.186,212,1.44,213,1.702,221,2.574,272,4.98,291,0.818,396,0.93,397,2.56,398,1.269,423,1.072,462,2.512,465,0.93,481,1.829,491,1.195,532,0.786,588,2.194,600,1.735,624,2.303,626,2.08,650,3.29,682,3.678,705,3.692,728,3.42,729,3.42,738,2.857,739,2.857,744,1.738,751,2.363,753,2.186,754,2.363,756,1.765,778,2.363,779,1.46,780,1.356,789,1.46,790,1.46,791,1.46,792,1.46,793,1.46,794,1.195,795,1.46,796,1.46,797,1.46,798,1.46,799,1.46,800,1.46,801,2.764,834,2.436,835,2.436,889,1.46,895,3.176,896,2.857,898,2.857,925,3.733,926,5.362,927,1.46,928,2.574,929,2.574,930,2.574,931,2.194,932,3.242,933,2.952,934,1.591,935,1.591,936,1.46,937,2.574,938,2.574,939,2.574,940,2.574,941,3.242,942,3.242,943,3.242,944,2.976,945,4.799,946,3.726,947,3.242,948,1.591,949,2.574,950,2.574,951,1.591,952,1.651,953,3.726,954,2.363,955,1.591,956,2.574,957,2.574,958,1.591,959,1.591,960,4.379,961,1.591,962,2.574,963,1.591,964,1.591,965,2.574,966,1.591,967,1.591,968,2.574,969,4.379,970,1.591,971,1.591,972,1.591,973,3.265,974,1.591,975,1.591,976,1.591,977,1.591,978,2.574,979,2.574,980,2.574,981,1.591,982,1.591,983,1.591,984,1.591,985,2.574,986,1.591,987,1.591,988,1.591,989,1.591,990,1.591,991,1.591,992,1.591,993,1.591,994,1.591,995,3.242,996,1.591,997,1.591,998,2.574,999,1.591,1000,1.591,1001,1.591,1002,1.591,1003,2.574,1004,1.591,1005,1.591,1006,1.591,1007,2.574,1008,2.574,1222,1.765,1230,1.765,1231,3.286,1232,2.857,1233,3.286,1234,3.286,1235,1.765,1236,2.03,1237,2.03,1238,2.03,1239,2.03,1240,2.03,1241,2.03,1242,2.03,1243,2.03,1244,2.03,1245,2.03,1246,2.03,1247,2.03,1248,2.03,1249,2.03,1250,2.03,1251,2.03,1252,2.03,1253,2.03,1254,2.03,1255,2.03,1256,2.03,1257,3.286,1258,3.286,1259,3.286,1260,3.286,1261,3.286,1262,3.286,1263,3.286,1264,2.857,1265,2.857,1266,2.857,1267,2.857,1268,2.03,1269,3.286,1270,2.03]],["title/injectables/MatchService.html",[20,0.789,291,1.602]],["body/injectables/MatchService.html",[0,0.81,2,0.105,3,0.105,4,0.095,6,0.304,7,0.735,9,3.605,10,3.105,11,0.892,12,0.015,13,2.002,14,0.244,20,0.995,21,0.105,24,1.66,27,0.651,28,2.267,39,0.144,45,0.063,50,1.689,56,0.553,57,1.389,59,1.071,60,1.324,67,2.112,73,0.584,102,2.072,106,0.007,107,0.013,117,0.763,120,1.244,122,1.325,123,1.18,124,1.275,128,1.082,212,1.197,213,0.977,243,1.197,244,1.147,291,1.671,397,3.015,458,2.769,465,1.251,486,1.52,491,3.294,495,3.886,498,3.855,532,2.166,536,3.477,558,3.542,562,3.542,581,3.248,621,1.824,744,2.106,753,3.178,774,1.608,794,1.608,933,1.443,952,1.373,973,2.592,1187,1.824,1209,3.605,1210,2.14,1212,2.14,1271,2.14,1272,4.866,1273,4.147,1274,4.147,1275,4.147,1276,4.147,1277,4.147,1278,4.147,1279,4.147,1280,4.147,1281,4.147,1282,4.147,1283,4.147,1284,3.605,1285,2.731,1286,3.605,1287,5.549,1288,2.731,1289,3.605,1290,2.731,1291,3.605,1292,2.731,1293,3.605,1294,2.731,1295,3.605,1296,2.731,1297,4.358,1298,2.731,1299,2.731,1300,2.731,1301,2.731,1302,3.605,1303,4.866,1304,4.866,1305,2.731,1306,3.605,1307,2.731,1308,3.961,1309,3.248,1310,2.375,1311,2.14,1312,3.248,1313,3.248,1314,2.982,1315,3.248,1316,2.375,1317,3.605,1318,3.605,1319,2.375,1320,3.605,1321,2.375,1322,2.375,1323,2.375,1324,2.375,1325,2.375,1326,2.375,1327,2.375,1328,2.375,1329,2.375,1330,2.375,1331,2.375,1332,2.375,1333,2.375,1334,2.375,1335,2.375]],["title/interfaces/MatchUpdateMessage.html",[0,1.179,1187,2.655]],["body/interfaces/MatchUpdateMessage.html",[0,1.478,2,0.135,3,0.135,4,0.121,6,0.391,7,0.883,9,2.52,10,2.766,11,0.708,12,0.015,13,1.984,14,0.267,20,0.989,21,0.135,24,1.478,27,0.836,28,1.995,39,0.172,45,0.081,50,1.767,56,0.468,57,1.29,59,1.239,60,1.119,67,1.906,73,0.749,102,2.295,106,0.009,107,0.012,128,1.046,243,1.536,244,1.472,291,1.412,397,2.654,458,3.327,465,1.605,495,3.89,498,3.846,532,1.928,536,3.763,558,3.923,562,3.923,621,2.341,744,1.472,753,3.521,774,2.063,794,2.063,933,1.851,952,1.761,973,3.114,1187,3.327,1209,4.538,1210,4.943,1212,4.943,1271,2.746,1272,3.047,1284,3.047,1286,3.047,1287,5.426,1289,3.047,1291,3.047,1293,3.047,1295,3.047,1297,4.33,1302,3.047,1303,4.33,1304,4.33,1306,3.047,1308,3.623,1309,3.902,1310,3.047,1311,2.746,1312,3.902,1313,3.902,1314,3.582,1315,3.902,1316,3.047,1317,4.33,1318,4.33,1319,3.047,1320,4.33,1321,3.047,1322,3.047,1323,3.047,1324,3.047,1325,3.047,1326,3.047,1327,3.047,1328,3.047,1329,3.047,1330,3.047,1331,3.047,1332,3.047,1333,3.047,1334,3.047,1335,3.047]],["title/classes/MatchViewModel.html",[45,0.092,744,1.67]],["body/classes/MatchViewModel.html",[2,0.15,3,0.15,4,0.135,6,0.433,7,0.949,10,2.894,11,0.977,12,0.014,13,1.933,14,0.15,23,2.956,27,0.927,39,0.135,45,0.124,54,3.886,57,1.344,62,2.371,106,0.009,107,0.014,117,0.986,120,1.364,122,1.128,123,1.004,124,1.448,128,0.853,129,0.894,491,3.152,600,3.236,705,3.946,715,4.655,744,2.249,753,4.285,857,5.326,858,5.326,893,5.326,902,4.195,1336,3.379,1337,6.602,1338,6.602,1339,6.126,1340,6.126,1341,6.126,1342,6.126,1343,6.126,1344,6.126,1345,5.354,1346,5.354,1347,5.354,1348,3.886,1349,3.886,1350,3.886,1351,7.871,1352,3.886,1353,3.886,1354,3.886,1355,3.886,1356,3.886,1357,3.886,1358,3.886,1359,3.886,1360,3.886,1361,3.886,1362,3.886,1363,3.886,1364,3.886,1365,3.886,1366,3.886,1367,3.886]],["title/components/MatchplanComponent.html",[18,0.169,174,0.914]],["body/components/MatchplanComponent.html",[2,0.096,3,0.096,4,0.086,6,0.643,7,0.684,10,2.074,11,0.873,12,0.014,13,1.51,14,0.246,18,0.246,19,1.129,21,0.096,23,2.149,24,1.582,27,0.594,28,2.194,29,1.14,34,3.001,35,1.193,39,0.086,40,1.887,41,1.755,43,0.921,45,0.058,46,0.573,47,0.826,50,0.594,56,0.515,57,1.358,59,1.305,60,1.511,67,1.525,68,1.319,70,1.511,73,0.532,81,1.251,102,0.857,106,0.007,107,0.012,108,0.594,109,0.687,110,0.687,111,0.687,113,0.687,114,0.99,117,0.711,120,1.291,122,1.124,123,1.079,124,1.082,128,0.995,129,1.088,132,2.414,134,2.024,135,0.476,136,1.065,137,1.065,138,1.065,139,1.47,140,0.687,141,0.687,142,0.687,143,0.573,144,0.687,145,0.594,146,0.687,147,0.594,148,0.687,149,0.594,150,0.687,151,0.594,152,0.662,153,0.687,154,0.573,155,0.687,156,0.594,157,0.687,158,0.594,159,0.687,160,0.594,161,0.687,162,0.594,163,0.687,164,0.616,165,0.687,166,0.594,167,0.687,168,0.594,169,0.687,170,0.594,171,0.687,172,0.552,173,0.687,174,1.226,175,0.687,176,0.573,177,0.687,178,0.594,179,0.687,180,0.594,181,0.687,182,0.552,183,0.687,184,0.573,185,0.687,186,0.573,187,0.687,188,0.594,189,0.687,190,0.573,191,0.616,192,0.687,213,1.693,283,3.399,290,1.79,291,2.879,308,1.663,314,1.465,437,3.025,481,2.15,527,1.465,531,1.14,532,2.466,593,2.273,600,2.04,626,3.536,744,2.24,753,1.315,774,1.465,871,1.79,933,3.906,944,3.834,952,1.941,954,2.777,973,3.817,1195,3.025,1232,3.358,1264,4.635,1265,3.358,1266,3.358,1267,3.358,1368,2.164,1369,3.862,1370,3.862,1371,5.331,1372,5.331,1373,3.862,1374,3.862,1375,4.731,1376,5.771,1377,4.731,1378,3.862,1379,2.49,1380,2.49,1381,3.862,1382,2.49,1383,3.862,1384,5.331,1385,2.49,1386,3.862,1387,2.49,1388,2.49,1389,2.49,1390,2.49,1391,2.49,1392,2.49,1393,2.49,1394,2.49,1395,2.49,1396,2.49,1397,2.49,1398,2.49,1399,2.49,1400,2.49,1401,2.49,1402,2.49,1403,2.49,1404,2.49,1405,2.49,1406,2.49,1407,2.49,1408,2.49,1409,2.49,1410,2.49,1411,1.95,1412,3.358,1413,2.49,1414,2.49,1415,2.49,1416,2.49,1417,2.49,1418,3.862,1419,1.95,1420,2.49,1421,2.49,1422,2.164,1423,2.49,1424,2.49,1425,2.49,1426,3.862,1427,3.862,1428,4.635,1429,4.635,1430,3.862,1431,3.862,1432,5.331,1433,3.862,1434,3.862,1435,4.635]],["title/modules/MatchplanModule.html",[246,0.601,1436,2.859]],["body/modules/MatchplanModule.html",[2,0.205,3,0.205,4,0.184,12,0.014,14,0.305,21,0.205,39,0.228,41,1.182,45,0.123,106,0.011,107,0.011,135,1.019,174,1.795,246,0.996,248,2.44,249,3.271,250,2.554,251,2.44,256,3.742,257,3.308,258,2.678,259,2.678,262,2.266,264,2.966,265,3.136,360,4.88,406,4.633,437,4.174,1436,5.888,1437,4.633,1438,4.633,1439,4.633,1440,5.213,1441,5.328,1442,4.633]],["title/modules/MatchplanRoutingModule.html",[246,0.601,1440,2.655]],["body/modules/MatchplanRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.259,106,0.012,107,0.012,174,1.609,241,2.375,246,0.891,262,2.409,275,3.279,276,3.576,277,3.279,278,3.279,279,3.468,1440,4.672,1442,5.123,1443,5.892]],["title/modules/MaterialModule.html",[246,0.601,376,2.485]],["body/modules/MaterialModule.html",[2,0.196,3,0.196,4,0.176,12,0.014,14,0.308,17,1.686,21,0.196,39,0.221,45,0.118,106,0.011,107,0.011,246,0.769,262,2.201,376,3.997,458,3.396,1312,3.984,1313,3.984,1314,3.657,1315,3.984,1444,5.085,1445,6.992,1446,5.085,1447,6.992,1448,5.085,1449,6.992,1450,5.085,1451,6.992,1452,5.085,1453,6.992,1454,5.085,1455,6.992,1456,5.085,1457,6.992,1458,6.992,1459,6.992,1460,7.559,1461,6.992,1462,6.992,1463,6.992,1464,6.992,1465,6.992,1466,6.992,1467,6.992,1468,6.992,1469,5.085,1470,6.992,1471,6.992]],["title/components/NewpasswordComponent.html",[18,0.169,176,0.914]],["body/components/NewpasswordComponent.html",[2,0.124,3,0.124,4,0.112,6,0.359,7,0.831,11,0.742,12,0.014,13,1.368,14,0.275,17,1.069,18,0.275,19,1.319,21,0.124,24,1.801,36,3.331,37,1.3,38,1.3,39,0.112,40,1.937,41,1.801,43,1.119,45,0.075,46,0.742,47,1.003,50,0.769,56,0.626,57,0.98,59,1.379,60,1.766,62,1.816,67,0.922,68,1.502,70,1.03,73,1.003,91,1.621,106,0.008,107,0.009,108,0.769,109,0.889,110,0.889,111,0.889,113,0.889,114,1.203,117,0.864,120,1.148,122,0.594,123,0.906,124,0.571,128,0.653,129,1.079,134,1.555,135,0.617,136,1.294,137,1.294,138,1.294,139,1.675,140,0.889,141,0.889,142,0.889,143,0.742,144,0.889,145,0.769,146,0.889,147,0.769,148,0.889,149,0.769,150,0.889,151,0.769,152,0.858,153,0.889,154,0.742,155,0.889,156,0.769,157,0.889,158,0.769,159,0.889,160,0.769,161,0.889,162,0.769,163,0.889,164,0.798,165,0.889,166,0.769,167,0.889,168,0.769,169,0.889,170,0.769,171,0.889,172,0.715,173,0.889,174,0.742,175,0.889,176,1.397,177,0.889,178,0.769,179,0.889,180,0.769,181,0.889,182,1.04,183,0.889,184,0.742,185,0.889,186,0.742,187,0.889,188,0.769,189,0.889,190,0.742,191,0.798,192,0.889,236,2.829,238,3.748,241,1.3,242,1.703,284,3.078,292,3.796,318,2.804,320,2.933,321,2.358,327,2.933,328,3.796,396,1.477,428,4.079,445,2.611,474,3.693,519,3.133,523,2.016,525,4.842,531,1.477,576,2.319,599,2.526,653,2.016,655,2.016,661,2.804,666,4.079,747,5.444,769,4.757,777,2.526,787,2.526,1020,5.28,1034,2.319,1036,2.804,1045,2.154,1047,2.319,1050,4.079,1472,2.804,1473,4.691,1474,4.691,1475,6.073,1476,3.225,1477,6.733,1478,4.691,1479,3.225,1480,3.225,1481,3.225,1482,3.225,1483,3.225,1484,5.53,1485,4.691,1486,3.225,1487,3.225,1488,3.225,1489,3.225,1490,4.691,1491,3.225,1492,4.691,1493,4.691,1494,4.691,1495,4.691]],["title/modules/NewpasswordModule.html",[246,0.601,1496,2.859]],["body/modules/NewpasswordModule.html",[2,0.209,3,0.209,4,0.187,12,0.014,14,0.306,21,0.209,39,0.23,45,0.125,106,0.011,107,0.011,135,1.035,176,1.802,246,1.005,248,2.478,249,3.294,250,2.594,251,2.478,256,3.756,257,3.339,258,2.72,259,2.72,262,2.288,264,3.012,265,3.185,400,3.012,445,3.012,1496,5.844,1497,4.705,1498,4.705,1499,4.705,1500,5.233,1501,5.411,1502,4.154,1503,4.705]],["title/modules/NewpasswordRoutingModule.html",[246,0.601,1500,2.655]],["body/modules/NewpasswordRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.259,106,0.012,107,0.012,176,1.609,241,2.375,246,0.891,262,2.409,275,3.279,276,3.576,277,3.279,278,3.279,279,3.468,1500,4.672,1503,5.123,1504,5.892]],["title/injectables/PitchService.html",[20,0.789,397,1.821]],["body/injectables/PitchService.html",[2,0.168,3,0.168,4,0.151,6,0.487,7,1.027,11,0.846,12,0.014,13,1.608,14,0.251,20,1.291,21,0.168,24,2.055,27,1.042,39,0.151,45,0.101,50,1.652,56,0.583,57,1.277,60,1.851,67,2.119,70,1.395,81,2.195,102,1.504,106,0.01,107,0.01,117,1.067,120,1.288,122,1.197,123,1.066,124,1.152,128,1.069,129,1.005,212,1.914,213,2.073,243,1.914,244,1.835,397,2.654,465,2,466,2.73,481,3.225,486,2.431,495,3.268,527,2.571,531,2,536,2.307,593,2.571,600,3.06,616,5.426,705,4.143,1308,4.631,1505,3.797,1506,6.926,1507,5.794,1508,6.926,1509,5.794,1510,5.794,1511,4.367,1512,4.367,1513,4.367,1514,4.367,1515,4.367,1516,4.367,1517,4.367,1518,4.367,1519,4.367,1520,4.367,1521,4.367,1522,4.367,1523,5.038,1524,4.367,1525,4.367,1526,4.367,1527,4.367,1528,4.367]],["title/components/PitchesComponent.html",[18,0.169,178,0.948]],["body/components/PitchesComponent.html",[2,0.153,3,0.153,4,0.137,6,0.441,7,0.961,11,0.663,12,0.014,14,0.238,18,0.297,19,1.475,21,0.153,27,0.944,39,0.137,40,1.97,41,1.832,43,1.293,45,0.092,46,0.91,47,1.159,56,0.723,57,1.096,59,0.846,67,1.769,68,1.645,70,1.264,106,0.009,107,0.011,108,0.944,109,1.091,110,1.091,111,1.091,113,1.091,114,1.391,117,0.998,120,1.054,122,0.729,123,1.014,124,0.701,128,0.551,134,2.386,135,0.757,136,1.495,137,1.495,138,1.495,139,1.835,140,1.091,141,1.091,142,1.091,143,0.91,144,1.091,145,0.944,146,1.091,147,0.944,148,1.091,149,0.944,150,1.091,151,0.944,152,1.053,153,1.091,154,0.91,155,1.091,156,0.944,157,1.091,158,0.944,159,1.091,160,0.944,161,1.091,162,0.944,163,1.091,164,0.979,165,1.091,166,0.944,167,1.091,168,0.944,169,1.091,170,0.944,171,1.091,172,0.878,173,1.091,174,0.91,175,1.091,176,0.91,177,1.091,178,1.587,179,1.091,180,0.944,181,1.091,182,0.878,183,1.091,184,0.91,185,1.091,186,0.91,187,1.091,188,0.944,189,1.091,190,0.91,191,0.979,192,1.091,397,3.297,398,2.474,691,4.248,705,4.068,801,4.443,840,4.248,1235,3.441,1523,3.441,1529,3.441,1530,5.422,1531,5.422,1532,5.422,1533,3.958,1534,3.958,1535,5.422,1536,5.422]],["title/injectables/SeasonService.html",[20,0.789,283,2.213]],["body/injectables/SeasonService.html",[2,0.152,3,0.152,4,0.136,6,0.438,7,0.956,11,0.878,12,0.014,14,0.238,20,1.223,21,0.152,24,1.968,27,0.937,39,0.136,45,0.091,50,1.658,56,0.524,57,1.273,59,1.153,60,1.723,67,2.054,70,1.255,102,1.353,106,0.009,107,0.009,117,0.993,120,1.296,122,1.221,123,1.087,124,1.175,128,1.024,129,0.904,212,2.365,213,1.931,243,1.723,244,1.651,283,3.003,465,1.8,466,2.457,481,3.003,486,2.187,491,2.313,495,3.097,531,3.038,532,1.521,536,2.076,593,2.313,626,4.071,1308,4.49,1537,3.417,1538,6.633,1539,6.633,1540,6.633,1541,6.633,1542,5.396,1543,5.396,1544,6.162,1545,5.396,1546,3.93,1547,5.396,1548,5.767,1549,3.93,1550,4.691,1551,5.396,1552,5.767,1553,3.93,1554,4.691,1555,6.633,1556,5.396,1557,3.93,1558,3.93,1559,3.93,1560,3.93,1561,3.93,1562,3.93,1563,3.93,1564,2.457,1565,3.93,1566,3.93,1567,3.93,1568,3.93,1569,3.93,1570,3.93,1571,3.93,1572,3.93,1573,3.93,1574,3.93,1575,3.93,1576,3.93,1577,3.93,1578,3.93,1579,3.93,1580,3.417,1581,3.417]],["title/components/SeasonchooserComponent.html",[18,0.169,180,0.948]],["body/components/SeasonchooserComponent.html",[2,0.147,3,0.147,4,0.132,6,0.426,7,0.938,11,0.841,12,0.014,14,0.253,17,1.267,18,0.293,19,1.448,21,0.147,27,0.912,39,0.132,40,1.965,41,1.827,43,1.263,45,0.089,46,0.879,47,1.132,50,0.912,56,0.51,57,0.938,68,1.621,106,0.009,107,0.01,108,0.912,109,1.054,110,1.054,111,1.054,113,1.054,114,1.358,117,0.974,120,1.214,122,0.974,123,1.074,124,0.938,128,0.737,129,1.217,135,0.731,136,1.46,137,1.46,138,1.46,139,1.808,140,1.054,141,1.054,142,1.054,143,0.879,144,1.054,145,0.912,146,1.054,147,0.912,148,1.054,149,0.912,150,1.054,151,0.912,152,1.016,153,1.054,154,0.879,155,1.054,156,0.912,157,1.054,158,0.912,159,1.054,160,0.912,161,1.054,162,0.912,163,1.054,164,0.945,165,1.054,166,0.912,167,1.054,168,0.912,169,1.054,170,0.912,171,1.054,172,0.848,173,1.054,174,0.879,175,1.054,176,0.879,177,1.054,178,0.912,179,1.054,180,1.564,181,1.054,182,0.848,183,1.054,184,0.879,185,1.054,186,0.879,187,1.054,188,0.912,189,1.054,190,0.879,191,0.945,192,1.054,203,2.796,283,4.301,290,2.749,308,2.553,524,2.749,626,3.844,1115,5.699,1161,5.699,1168,5.699,1411,2.994,1412,4.602,1582,3.323,1583,5.293,1584,5.293,1585,5.293,1586,5.293,1587,6.073,1588,5.293,1589,5.293,1590,3.822,1591,3.822,1592,3.822,1593,3.822,1594,3.822,1595,3.822,1596,3.822,1597,3.822,1598,5.293]],["title/modules/SharedModule.html",[246,0.601,256,1.906]],["body/modules/SharedModule.html",[2,0.159,3,0.159,4,0.142,12,0.014,14,0.311,20,0.817,21,0.159,31,2.422,32,2.422,33,2.422,37,1.659,38,1.659,39,0.234,45,0.095,106,0.01,107,0.01,135,0.787,149,1.806,151,1.882,156,1.806,158,1.806,160,1.806,170,1.882,180,1.882,182,1.679,246,0.842,248,1.885,249,2.891,250,1.973,251,1.885,256,3.959,257,2.799,258,2.068,259,2.068,261,4.362,262,1.917,315,3.224,366,4.944,376,4.932,389,3.578,394,5.487,395,5.487,396,1.885,400,2.291,678,3.224,1502,3.945,1599,3.578,1600,3.578,1601,4.116,1602,3.578,1603,4.116,1604,4.116,1605,4.116,1606,4.116,1607,4.116,1608,4.116,1609,4.116,1610,6.311,1611,6.311,1612,4.116,1613,4.116]],["title/components/SnackbarComponent.html",[18,0.169,182,0.882]],["body/components/SnackbarComponent.html",[0,1.239,2,0.161,3,0.161,4,0.145,6,0.465,7,0.997,11,0.687,12,0.014,13,1.033,14,0.217,17,1.385,18,0.302,19,1.517,20,1.116,21,0.161,39,0.195,40,1.978,41,1.839,43,1.342,45,0.097,46,0.961,47,1.202,56,0.751,57,1.127,62,2.748,68,1.683,106,0.01,107,0.011,108,0.996,109,1.152,110,1.152,111,1.152,113,1.152,114,1.443,117,1.035,120,1.084,122,0.769,123,1.042,124,0.74,128,0.582,129,0.961,135,0.799,136,1.551,137,1.551,138,1.551,139,1.876,140,1.152,141,1.152,142,1.152,143,0.961,144,1.152,145,0.996,146,1.152,147,0.996,148,1.152,149,0.996,150,1.152,151,0.996,152,1.111,153,1.152,154,0.961,155,1.152,156,0.996,157,1.152,158,0.996,159,1.152,160,0.996,161,1.152,162,0.996,163,1.152,164,1.033,165,1.152,166,0.996,167,1.152,168,0.996,169,1.152,170,0.996,171,1.152,172,0.926,173,1.152,174,0.961,175,1.152,176,0.961,177,1.152,178,0.996,179,1.152,180,0.996,181,1.152,182,1.509,183,1.152,184,0.961,185,1.152,186,0.961,187,1.152,188,0.996,189,1.152,190,0.961,191,1.033,192,1.152,205,2.612,284,3.131,321,2.1,1009,5.26,1010,3.273,1011,3.632,1012,4.89,1013,4.89,1014,3.632,1614,4.177,1615,4.177,1616,4.177,1617,4.177,1618,5.625]],["title/components/TableComponent.html",[18,0.169,184,0.914]],["body/components/TableComponent.html",[2,0.13,3,0.13,4,0.117,6,0.375,7,0.858,11,0.757,12,0.014,14,0.253,18,0.279,19,1.352,21,0.13,24,1.839,27,1.478,28,2.624,29,1.543,39,0.117,40,1.945,41,1.808,43,1.155,45,0.078,46,0.775,47,1.035,56,0.646,57,1.211,59,1.212,68,1.533,84,2.639,102,1.16,106,0.008,107,0.01,108,0.804,109,0.929,110,0.929,111,0.929,113,0.929,114,1.242,117,0.891,120,1.119,122,0.891,123,1.016,124,0.858,128,0.674,129,1.114,135,0.644,136,1.335,137,1.335,138,1.335,139,1.709,140,0.929,141,0.929,142,0.929,143,0.775,144,0.929,145,0.804,146,0.929,147,0.804,148,0.929,149,0.804,150,0.929,151,0.804,152,0.896,153,0.929,154,0.775,155,0.929,156,0.804,157,0.929,158,0.804,159,0.929,160,0.804,161,0.929,162,0.804,163,0.929,164,0.833,165,0.929,166,0.804,167,0.929,168,0.804,169,0.929,170,0.804,171,0.929,172,0.747,173,0.929,174,0.775,175,0.929,176,0.775,177,0.929,178,0.804,179,0.929,180,0.804,181,0.929,182,0.747,183,0.929,184,1.425,185,0.929,186,0.775,187,0.929,188,0.804,189,0.929,190,0.775,191,0.833,192,0.929,283,3.805,290,2.423,291,2.838,308,2.25,314,1.983,319,2.639,440,3.482,531,1.543,626,3.539,1209,2.423,1411,2.639,1619,2.929,1620,4.842,1621,4.842,1622,6.476,1623,4.842,1624,4.842,1625,4.842,1626,3.369,1627,3.369,1628,3.369,1629,3.369,1630,3.369,1631,5.669,1632,3.369,1633,4.842,1634,4.842,1635,4.842,1636,4.842,1637,4.842,1638,4.842,1639,4.842,1640,4.842,1641,4.842,1642,4.842,1643,4.842,1644,4.842,1645,6.198,1646,6.198,1647,4.842]],["title/modules/TableModule.html",[246,0.601,1648,2.859]],["body/modules/TableModule.html",[2,0.209,3,0.209,4,0.187,12,0.014,14,0.306,21,0.209,39,0.23,45,0.125,106,0.011,107,0.011,135,1.035,184,1.802,246,1.005,248,2.478,249,3.294,250,2.594,251,2.478,256,3.756,257,3.339,258,2.72,259,2.72,262,2.288,264,3.012,265,3.185,400,3.012,440,3.892,1502,4.154,1648,5.844,1649,4.705,1650,4.705,1651,4.705,1652,5.233,1653,5.411,1654,4.705]],["title/modules/TableRoutingModule.html",[246,0.601,1652,2.655]],["body/modules/TableRoutingModule.html",[2,0.227,3,0.227,4,0.204,12,0.014,14,0.298,18,0.251,21,0.227,39,0.204,45,0.137,73,1.259,106,0.012,107,0.012,184,1.609,241,2.375,246,0.891,262,2.409,275,3.279,276,3.576,277,3.279,278,3.279,279,3.468,1652,4.672,1654,5.123,1655,5.892]],["title/injectables/TeamService.html",[20,0.789,28,1.369]],["body/injectables/TeamService.html",[0,0.758,2,0.099,3,0.099,4,0.088,6,0.285,11,0.812,12,0.015,13,1.913,14,0.152,20,0.955,21,0.099,23,3.288,24,1.604,27,1.393,28,2.439,39,0.136,45,0.091,50,1.625,51,1.12,56,0.526,57,1.304,59,0.546,60,1.259,67,2.144,70,1.259,73,1.028,81,1.981,86,3.611,102,1.862,106,0.007,107,0.007,117,0.726,118,3.427,120,1.186,122,1.184,123,1.054,124,1.14,125,3.088,127,4.236,128,1.111,129,0.588,213,0.914,243,1.12,244,1.074,382,3.088,481,2.194,486,1.423,495,3.736,498,3.26,527,1.504,531,1.805,536,2.856,555,2.632,556,1.707,558,2.32,562,2.831,579,3.888,580,2.002,581,5.038,582,3.768,583,4.435,584,3.427,585,3.427,586,3.427,587,3.427,588,3.611,589,5.366,590,5.774,591,2.222,592,4.701,593,1.504,594,2.222,595,2.222,596,4.701,597,4.701,598,3.427,599,4.576,600,3.26,601,3.427,602,3.427,603,2.222,604,2.222,605,2.222,606,1.838,607,2.002,608,3.427,609,4.701,610,3.427,611,2.222,612,2.222,613,2.222,614,3.427,615,3.427,616,4.236,617,4.701,618,4.701,619,2.222,620,3.427,621,3.213,622,3.768,623,3.768,624,3.435,625,2.222,626,1.981,627,5.592,628,3.427,629,3.427,630,2.222,631,2.222,632,2.222,633,3.427,634,2.222,635,2.222,636,2.222,637,2.222,638,2.222,639,3.427,640,2.002,641,2.222,1656,2.556,1657,2.556,1658,3.941,1659,3.941,1660,3.941,1661,3.941,1662,2.556,1663,2.556,1664,2.556,1665,2.556,1666,2.556,1667,2.556,1668,2.556,1669,2.556,1670,2.556,1671,2.556,1672,2.556,1673,2.556]],["title/components/TeamadminComponent.html",[18,0.169,186,0.914]],["body/components/TeamadminComponent.html",[2,0.114,3,0.114,4,0.102,6,0.328,7,0.778,11,0.867,12,0.014,13,1.923,14,0.268,17,0.976,18,0.264,19,1.251,21,0.114,23,2.858,24,1.724,27,0.702,28,2.554,29,1.349,36,3.556,37,1.187,38,1.187,39,0.102,40,1.921,41,1.786,43,1.047,45,0.068,46,0.677,47,0.938,50,1.483,51,1.924,56,0.586,57,1.314,59,0.63,60,1.675,62,1.698,67,0.842,68,1.438,70,0.941,73,0.938,91,1.48,100,2.118,102,1.511,106,0.008,107,0.009,108,0.702,109,0.812,110,0.812,111,0.812,113,0.812,114,1.125,117,0.808,120,1.23,122,0.966,123,1.019,124,0.929,128,0.809,129,1.009,134,1.455,135,0.563,136,1.21,137,1.21,138,1.21,139,1.603,140,0.812,141,0.812,142,0.812,143,0.677,144,0.812,145,0.702,146,0.812,147,0.702,148,0.812,149,0.702,150,0.812,151,0.702,152,0.783,153,0.812,154,0.677,155,0.812,156,0.702,157,0.812,158,0.702,159,0.812,160,0.702,161,0.812,162,0.702,163,0.812,164,0.728,165,0.812,166,0.702,167,0.812,168,0.702,169,0.812,170,0.702,171,0.812,172,0.653,173,0.812,174,0.677,175,0.812,176,0.677,177,0.812,178,0.702,179,0.812,180,0.702,181,0.812,182,0.973,183,0.812,184,0.677,185,0.812,186,1.337,187,0.812,188,0.702,189,0.812,190,0.677,191,0.728,192,0.812,212,1.924,213,1.57,235,1.967,236,2.738,238,3.46,242,1.555,284,3.628,292,4.075,320,2.743,321,2.205,327,2.743,328,3.634,396,1.349,423,1.555,449,3.438,498,2.318,547,3.882,549,3.882,583,2.931,607,4.554,650,3.836,653,1.841,655,2.743,675,2.56,852,3.156,871,2.118,1034,2.118,1041,2.307,1045,1.967,1047,2.118,1126,3.815,1135,2.56,1137,2.56,1419,2.307,1422,3.815,1674,2.56,1675,4.388,1676,4.388,1677,5.813,1678,4.388,1679,4.388,1680,4.388,1681,4.388,1682,2.945,1683,6.518,1684,2.945,1685,4.388,1686,2.945,1687,2.945,1688,2.945,1689,2.945,1690,2.945,1691,2.945,1692,2.945,1693,2.945,1694,2.945,1695,2.945,1696,2.945,1697,2.945,1698,2.945,1699,2.945,1700,2.945,1701,4.388]],["title/guards/TeamadminGuard.html",[230,2.655,433,3.114]],["body/guards/TeamadminGuard.html",[2,0.2,3,0.2,4,0.179,6,0.577,11,0.79,12,0.014,14,0.285,20,1.284,21,0.2,39,0.179,45,0.12,47,1.107,56,0.691,106,0.011,107,0.011,117,1.191,120,1.202,122,1.191,123,1.06,124,1.146,128,1.028,230,3.459,233,5.955,234,6.073,235,3.459,236,3.102,238,3.6,241,2.088,242,2.736,243,2.27,244,2.176,433,5.066,458,4.319,462,3.724,465,2.372,466,3.238,495,3.25,532,2.503,1550,6.131,1702,5.18,1703,5.18,1704,5.18,1705,7.385,1706,7.385,1707,5.18,1708,5.18,1709,6.467]],["title/modules/TeamadminModule.html",[246,0.601,1710,2.859]],["body/modules/TeamadminModule.html",[2,0.209,3,0.209,4,0.188,12,0.014,14,0.306,21,0.209,39,0.231,45,0.126,106,0.011,107,0.011,135,1.039,186,1.804,246,1.008,248,2.488,249,3.299,250,2.604,251,2.488,256,3.759,257,3.347,258,2.73,259,2.73,262,2.294,264,3.024,265,3.197,400,3.024,449,4.256,1502,4.164,1710,5.848,1711,4.723,1712,4.723,1713,4.723,1714,5.238,1715,5.432,1716,4.723]],["title/modules/TeamadminRoutingModule.html",[246,0.601,1714,2.655]],["body/modules/TeamadminRoutingModule.html",[2,0.224,3,0.224,4,0.201,12,0.014,14,0.303,18,0.247,21,0.224,39,0.201,45,0.135,73,1.241,106,0.012,107,0.012,186,1.595,241,2.34,246,0.878,249,2.659,262,2.388,275,3.232,276,3.554,277,3.232,278,3.232,279,3.417,400,3.232,1502,3.63,1714,4.631,1716,5.048,1717,5.806]],["title/components/TeamsComponent.html",[18,0.169,188,0.948]],["body/components/TeamsComponent.html",[2,0.157,3,0.157,4,0.141,6,0.455,7,0.981,11,0.676,12,0.014,14,0.242,18,0.3,19,1.499,21,0.157,23,3.122,28,2.501,39,0.141,40,1.975,41,1.836,43,1.32,45,0.095,46,0.938,47,1.183,56,0.739,59,0.872,67,1.797,68,1.666,70,1.303,71,2.934,86,2.725,106,0.009,107,0.011,108,0.973,109,1.125,110,1.125,111,1.125,113,1.125,114,1.42,117,1.019,119,3.547,120,1.071,122,0.751,123,1.03,124,0.723,128,0.568,132,3.461,134,2.234,135,0.78,136,1.526,137,1.526,138,1.526,139,1.858,140,1.125,141,1.125,142,1.125,143,0.938,144,1.125,145,0.973,146,1.125,147,0.973,148,1.125,149,0.973,150,1.125,151,0.973,152,1.085,153,1.125,154,0.938,155,1.125,156,0.973,157,1.125,158,0.973,159,1.125,160,0.973,161,1.125,162,0.973,163,1.125,164,1.009,165,1.125,166,0.973,167,1.125,168,0.973,169,1.125,170,0.973,171,1.125,172,0.905,173,1.125,174,0.938,175,1.125,176,0.938,177,1.125,178,0.973,179,1.125,180,0.973,181,1.125,182,0.905,183,1.125,184,0.938,185,1.125,186,0.938,187,1.125,188,1.607,189,1.125,190,0.938,191,1.009,192,1.125,691,4.336,777,3.196,1718,3.547,1719,5.535,1720,5.535,1721,5.535,1722,4.08,1723,4.08,1724,5.535]],["title/components/TournamentComponent.html",[18,0.169,190,0.914]],["body/components/TournamentComponent.html",[2,0.097,3,0.097,4,0.087,6,0.281,7,0.69,8,4.173,11,0.829,12,0.015,13,1.179,14,0.224,18,0.247,19,1.137,21,0.097,23,2.162,24,1.591,27,0.601,34,3.009,35,1.207,39,0.087,40,1.89,41,1.757,43,0.93,45,0.058,46,0.579,47,0.833,50,0.93,51,1.708,56,0.52,57,0.845,59,0.833,60,1.245,67,1.363,68,1.327,70,1.245,73,0.538,81,2.396,88,1.483,106,0.007,107,0.012,108,0.601,109,0.695,110,0.695,111,0.695,113,0.695,114,0.999,117,0.717,120,1.251,122,1.068,123,1.049,124,1.028,128,0.965,129,1.234,134,2.375,135,0.482,136,1.075,137,1.075,138,1.075,139,1.479,140,0.695,141,0.695,142,0.695,143,0.579,144,0.695,145,0.601,146,0.695,147,0.601,148,0.695,149,0.601,150,0.695,151,0.601,152,0.67,153,0.695,154,0.579,155,0.695,156,0.601,157,0.695,158,0.601,159,0.695,160,0.601,161,0.695,162,0.601,163,0.695,164,0.623,165,0.695,166,0.601,167,0.695,168,0.601,169,0.695,170,0.601,171,0.695,172,0.559,173,0.695,174,0.579,175,0.695,176,0.579,177,0.695,178,0.601,179,0.695,180,0.601,181,0.695,182,0.559,183,0.695,184,0.579,185,0.695,186,0.579,187,0.695,188,0.601,189,0.695,190,1.234,191,1.934,192,0.695,291,2.578,314,1.483,481,2.169,486,1.402,531,2.657,532,0.975,593,1.483,621,2.603,622,3.053,623,3.053,624,3.229,744,2.687,774,1.483,933,3.24,952,2.916,1083,3.388,1099,3.388,1195,3.734,1217,5.334,1218,5.044,1287,3.053,1428,3.388,1429,3.388,1435,3.388,1552,4.664,1554,3.388,1580,2.19,1581,2.19,1725,2.19,1726,3.897,1727,3.897,1728,5.365,1729,5.365,1730,3.897,1731,5.365,1732,3.897,1733,5.365,1734,3.897,1735,3.897,1736,3.897,1737,2.519,1738,2.519,1739,3.897,1740,2.519,1741,2.519,1742,2.519,1743,3.897,1744,2.519,1745,2.519,1746,2.519,1747,2.519,1748,2.519,1749,2.519,1750,2.519,1751,2.519,1752,2.519,1753,2.519,1754,2.519,1755,2.519,1756,2.519,1757,2.519,1758,2.519,1759,2.519,1760,2.519,1761,2.519,1762,2.519,1763,2.519,1764,2.519,1765,2.519,1766,5.802,1767,2.519,1768,2.519,1769,2.519,1770,2.519,1771,2.519,1772,3.897,1773,3.897,1774,2.519,1775,2.519,1776,2.519,1777,2.519,1778,3.897,1779,3.897,1780,3.897,1781,3.897,1782,3.897,1783,3.897,1784,3.897,1785,3.897,1786,3.897]],["title/modules/TournamentModule.html",[246,0.601,1787,2.859]],["body/modules/TournamentModule.html",[2,0.209,3,0.209,4,0.188,12,0.014,14,0.306,21,0.209,39,0.231,45,0.126,106,0.011,107,0.011,135,1.039,190,1.804,191,1.344,246,1.008,248,2.488,249,3.299,250,2.604,251,2.488,256,3.759,257,3.347,258,2.73,259,2.73,262,2.294,264,3.024,265,3.197,400,3.024,1502,4.164,1787,5.848,1788,4.723,1789,4.723,1790,4.723,1791,5.238,1792,5.432,1793,4.723]],["title/modules/TournamentRoutingModule.html",[246,0.601,1791,2.655]],["body/modules/TournamentRoutingModule.html",[2,0.226,3,0.226,4,0.203,12,0.014,14,0.297,18,0.25,21,0.226,39,0.203,45,0.136,73,1.254,106,0.012,107,0.012,190,1.605,241,2.365,246,0.888,249,2.687,262,2.403,275,3.266,276,3.57,277,3.266,278,3.266,279,3.453,1791,4.66,1793,5.101,1794,5.867]],["title/injectables/WebsocketService.html",[20,0.789,285,2.34]],["body/injectables/WebsocketService.html",[2,0.161,3,0.161,4,0.145,6,0.466,7,0.998,10,2.468,11,0.868,12,0.014,14,0.293,20,1.263,21,0.161,39,0.145,45,0.097,50,1.343,56,0.751,57,1.296,59,1.519,62,1.619,73,1.204,102,1.939,106,0.01,107,0.01,117,1.037,120,1.247,122,1.037,123,0.923,124,0.998,128,0.784,129,1.295,212,2.468,213,2.015,243,1.834,244,1.757,285,3.314,291,2.949,311,2.794,312,3.637,321,2.83,397,3.425,465,1.916,545,2.616,780,2.794,781,3.278,782,3.278,825,3.637,827,3.637,871,3.009,902,5.333,952,2.83,1097,4.895,1192,3.637,1208,3.637,1308,2.616,1311,3.278,1419,3.278,1795,3.637,1796,7.602,1797,6.807,1798,7.317,1799,5.63,1800,4.184,1801,5.63,1802,4.184,1803,5.63,1804,7.104,1805,4.184,1806,4.184,1807,7.317,1808,4.184,1809,3.637,1810,4.184,1811,5.63,1812,3.637,1813,4.184,1814,4.184,1815,5.63,1816,4.184,1817,4.184,1818,4.184,1819,5.63,1820,4.184,1821,4.184,1822,4.184,1823,4.184,1824,4.184,1825,4.184,1826,4.184,1827,5.63,1828,4.184,1829,4.184,1830,4.184,1831,4.184,1832,4.184,1833,4.184,1834,4.184]],["title/coverage.html",[1835,4.261]],["body/coverage.html",[0,2.366,1,1.518,4,0.073,5,2.655,11,0.258,12,0.014,18,0.327,20,1.273,22,1.653,23,0.851,24,0.626,25,1.653,26,1.653,28,0.727,34,0.887,45,0.183,46,0.485,50,0.503,106,0.006,107,0.007,108,0.503,112,1.835,143,0.485,145,0.503,147,0.503,149,0.503,151,0.503,154,0.485,156,0.503,158,0.503,160,0.503,162,0.503,164,0.522,166,0.503,168,0.503,170,0.503,172,0.468,174,0.485,176,0.485,178,0.503,180,0.503,182,0.468,184,0.485,186,0.485,188,0.503,190,0.485,191,0.522,203,1.115,224,1.835,236,0.887,272,2.837,280,1.835,283,1.175,285,1.242,291,0.851,311,3.248,364,1.518,378,4.173,397,0.967,404,1.319,408,4.47,420,1.653,424,1.653,425,1.653,426,1.653,431,1.653,440,1.518,473,3.055,474,1.409,501,1.409,503,1.653,506,1.409,519,1.409,579,1.518,580,2.655,582,1.653,583,1.409,626,1.061,642,1.835,667,1.835,677,1.835,678,1.653,679,1.835,692,1.835,705,1.115,711,1.835,723,1.835,744,0.887,775,1.835,776,1.835,853,1.835,876,1.835,890,1.835,899,1.835,925,1.409,926,3.055,927,3.055,931,1.409,933,1.115,952,4.217,1009,1.518,1010,2.655,1015,1.835,1033,1.835,1052,1.835,1079,1.835,1103,1.835,1124,1.835,1151,1.835,1187,1.409,1271,2.655,1309,1.653,1336,1.835,1368,1.835,1472,1.835,1505,1.835,1529,1.835,1537,1.835,1564,5.151,1582,1.835,1619,1.835,1622,1.835,1674,1.835,1718,1.835,1725,1.835,1795,1.835,1835,1.653,1836,1.835,1837,3.39,1838,2.11,1839,5.925,1840,5.925,1841,2.11,1842,7.218,1843,6.215,1844,2.11,1845,5.327,1846,2.11,1847,2.11,1848,5.327,1849,6.959,1850,3.39,1851,3.39,1852,2.11,1853,2.11,1854,2.11,1855,2.11,1856,2.11,1857,2.11,1858,2.11,1859,2.11,1860,2.11,1861,6.959,1862,2.11,1863,2.11,1864,2.11,1865,2.11,1866,2.11,1867,5.978,1868,2.11,1869,2.11,1870,6.215,1871,2.11,1872,2.11,1873,2.11,1874,2.11,1875,2.11,1876,2.11,1877,6.959,1878,2.11,1879,2.11,1880,2.11,1881,2.11,1882,2.11,1883,2.11,1884,2.11,1885,2.11,1886,2.11,1887,3.39,1888,2.11,1889,2.11,1890,2.11,1891,2.11,1892,2.11,1893,2.11,1894,2.11,1895,2.11,1896,2.11,1897,2.11,1898,2.11,1899,1.835,1900,7.141,1901,1.835,1902,1.835,1903,4.683,1904,2.11,1905,2.11,1906,3.39,1907,3.39,1908,4.248,1909,2.11,1910,2.11,1911,2.11,1912,2.11,1913,1.835,1914,1.835,1915,1.835,1916,1.835,1917,2.947,1918,1.835,1919,2.11]],["title/dependencies.html",[248,2.192,1920,3.313]],["body/dependencies.html",[12,0.014,17,1.65,21,0.192,31,2.929,32,2.929,33,2.929,37,2.542,38,2.005,106,0.011,107,0.011,241,2.005,248,2.279,250,2.385,380,5.483,381,4.94,387,4.326,388,4.326,396,2.279,400,2.77,465,2.888,520,3.579,521,4.535,593,2.929,936,3.579,1308,3.111,1314,3.579,1809,4.326,1812,4.326,1835,3.898,1921,4.976,1922,8.113,1923,4.976,1924,4.976,1925,4.976,1926,4.976,1927,4.976,1928,4.976,1929,4.976,1930,4.976,1931,6.306,1932,4.976,1933,4.976,1934,4.976,1935,4.976,1936,4.976,1937,4.976,1938,4.976,1939,4.976,1940,4.976,1941,4.976,1942,4.976,1943,4.976,1944,4.976,1945,4.976,1946,4.976,1947,4.976,1948,4.976,1949,4.976,1950,4.976,1951,4.976,1952,4.976,1953,4.976,1954,4.976,1955,4.976,1956,4.976,1957,4.976,1958,4.976,1959,4.976,1960,4.976,1961,4.976,1962,4.976,1963,4.976,1964,4.976,1965,4.976,1966,4.976,1967,4.976,1968,4.976,1969,4.976,1970,4.976,1971,4.976,1972,4.976,1973,4.976,1974,4.976]],["title/miscellaneous/enumerations.html",[1975,2.071,1976,4.16]],["body/miscellaneous/enumerations.html",[6,0.665,12,0.012,106,0.012,107,0.012,225,5.069,518,4.707,1107,6.128,1548,6.128,1564,4.943,1839,4.292,1840,5.687,1975,3.731,1976,5.189,1977,6.071,1978,7.048,1979,7.048,1980,5.968,1981,5.968,1982,5.968,1983,5.968,1984,5.968,1985,5.968,1986,5.968,1987,5.968,1988,5.968,1989,5.968]],["title/miscellaneous/functions.html",[408,3.441,1975,2.071]],["body/miscellaneous/functions.html",[6,0.583,11,0.795,12,0.014,106,0.013,107,0.011,122,1.466,123,1.305,124,1.411,251,3.491,321,2.628,378,4.096,408,3.76,409,4.546,411,4.546,413,4.546,415,4.546,417,4.546,420,5.096,424,5.096,425,5.096,426,5.096,431,5.096,470,4.344,491,3.077,544,4.678,753,4.27,1564,4.632,1839,3.76,1840,5.329,1899,5.656,1901,5.656,1902,5.656,1975,3.269,1977,5.548,1990,7.622,1991,5.228,1992,5.228,1993,5.228,1994,5.228,1995,5.228,1996,6.505]],["title/index.html",[6,0.369,1997,2.881,1998,2.881]],["body/index.html",[12,0.013,106,0.013,107,0.013,1564,4.598,1836,5.583,1999,6.422,2000,7.355,2001,6.422]],["title/modules.html",[246,0.823]],["body/modules.html",[12,0.011,106,0.011,107,0.011,246,0.822,247,3.907,255,3.628,256,2.604,360,3.396,369,3.907,375,3.628,376,3.396,381,6.331,698,3.907,702,3.628,1436,3.907,1440,3.628,1496,3.907,1500,3.628,1648,3.907,1652,3.628,1710,3.907,1714,3.628,1787,3.907,1791,3.628,2002,8.082,2003,8.082,2004,8.35,2005,8.131,2006,8.131]],["title/overview.html",[2007,4.728]],["body/overview.html",[0,1.054,12,0.014,18,0.151,20,0.705,39,0.123,45,0.082,46,1.343,106,0.009,107,0.009,108,1.393,135,0.679,143,1.343,145,1.706,147,1.393,149,1.393,151,1.706,154,1.343,156,1.393,158,1.393,160,1.393,162,1.393,164,1.444,166,1.393,168,1.393,170,1.706,172,1.295,174,1.343,176,1.343,178,1.393,180,1.706,182,1.295,184,1.343,186,1.343,188,1.393,190,1.343,230,2.373,246,0.761,247,5.779,248,1.628,249,1.628,250,1.703,251,1.628,252,3.09,253,3.09,254,3.09,255,3.9,256,3.944,257,2.528,258,1.786,259,1.786,276,1.703,360,3.65,369,5.654,370,3.09,371,3.09,372,3.09,373,3.09,374,3.09,375,3.9,376,4.569,377,4.199,698,5.534,699,3.09,700,3.09,701,3.09,702,3.9,1091,3.09,1436,5.419,1437,3.09,1438,3.09,1439,3.09,1440,3.9,1496,5.255,1497,3.09,1498,3.09,1499,3.09,1500,3.9,1599,3.09,1600,3.09,1602,3.09,1648,5.255,1649,3.09,1650,3.09,1651,3.09,1652,3.9,1710,5.255,1711,3.09,1712,3.09,1713,3.09,1714,3.9,1787,5.255,1788,3.09,1789,3.09,1790,3.09,1791,3.9,2007,3.09,2008,3.554,2009,3.554,2010,3.554,2011,3.554,2012,3.554,2013,3.554]],["title/routes.html",[276,2.607]],["body/routes.html",[12,0.013,106,0.013,107,0.013,276,3.121]],["title/todo.html",[1997,2.881,1998,2.881,2014,3.313]],["body/todo.html",[12,0.013,47,1.654,106,0.013,107,0.013,2015,6.437,2016,6.437,2017,6.437]],["title/miscellaneous/variables.html",[1903,3.748,1975,2.071]],["body/miscellaneous/variables.html",[6,0.566,11,0.923,12,0.014,27,1.523,50,1.211,106,0.011,107,0.011,212,3.381,213,2.759,311,5.433,404,4.368,423,3.872,503,5.473,567,3.173,1564,3.992,1839,3.65,1840,4.592,1903,3.976,1913,4.413,1914,4.413,1915,4.413,1916,4.413,1917,4.413,1918,6.074,1975,3.173,1977,3.976,2018,6.386,2019,5.076,2020,5.076,2021,5.076,2022,5.076,2023,5.076,2024,5.076,2025,5.076,2026,7.918,2027,7.332,2028,7.332,2029,7.332,2030,7.332,2031,5.076,2032,7.332,2033,6.386,2034,5.076,2035,5.076,2036,5.076]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":952,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["0.12.0",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["0.4.11",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":624,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["1.1.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["1.14.4",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2008,"title":{},"body":{"overview.html":{}}}],["2",{"_index":1091,"title":{},"body":{"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["2.4.8",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":2013,"title":{},"body":{"overview.html":{}}}],["2500",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["26",{"_index":2009,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["3.30.15",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":1490,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["34",{"_index":2011,"title":{},"body":{"overview.html":{}}}],["39",{"_index":2012,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1076,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.1.2",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["45/46",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["45/95",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["47",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["5.0.2",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["6.0.16",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["7.0.3",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":575,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["9",{"_index":2010,"title":{},"body":{"overview.html":{}}}],["97",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["_currentseason",{"_index":1544,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_currentseason(season",{"_index":1566,"title":{},"body":{"injectables/SeasonService.html":{}}}],["a.length",{"_index":1004,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercas",{"_index":622,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a[i",{"_index":1007,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1008,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1263,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["access_tim",{"_index":1220,"title":{},"body":{"components/MatchComponent.html":{}}}],["accessor",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["accesstoken",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["achtelfinal",{"_index":1780,"title":{},"body":{"components/TournamentComponent.html":{}}}],["activatedrout",{"_index":1477,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":1705,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_compon",{"_index":192,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["add",{"_index":844,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["addkickoffdatetopitch",{"_index":1231,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":956,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addmatch'},{'nam",{"_index":142,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["addnewteam",{"_index":118,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamnam",{"_index":125,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{}}}],["addteam'},{'nam",{"_index":141,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["addteam.component.css",{"_index":115,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":116,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.compon",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcompon",{"_index":108,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtournamentround.component.html",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["addtournamentround/addtournamentround.compon",{"_index":1080,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcompon",{"_index":46,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AppRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":144,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["admin.compon",{"_index":263,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":143,"title":{"components/AdminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":231,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{}}}],["adminmodul",{"_index":247,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodul",{"_index":255,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplet",{"_index":727,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["alert(`${matchday.id",{"_index":994,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["all_matchday",{"_index":1426,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_team",{"_index":1431,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["angular/anim",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/d",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compil",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1450,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divid",{"_index":1454,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1452,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1456,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1448,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1446,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":241,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["api.t",{"_index":1840,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api/liga",{"_index":1563,"title":{},"body":{"injectables/SeasonService.html":{}}}],["api_base_url",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicli",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["app.compon",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initi",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["app_rout",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodul",{"_index":360,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["application/json",{"_index":573,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["appmodul",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":375,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["array",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1095,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["async",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["auth.interceptor",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticationservic",{"_index":236,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":377,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"overview.html":{}}}],["authservic",{"_index":238,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_nam",{"_index":1493,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["avail",{"_index":2006,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":900,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["b",{"_index":621,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.name.tolowercas",{"_index":623,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["base64",{"_index":520,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercas",{"_index":538,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercas",{"_index":571,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["baseurl",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["basic",{"_index":541,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":472,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["behaviorsubject",{"_index":1555,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1556,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.19",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["blob",{"_index":1992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":1899,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":1991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bodi",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["body).subscrib",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.date_period",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.from",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.date_period.to",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["body.email",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.first_nam",{"_index":1135,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.label",{"_index":816,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.last_nam",{"_index":1137,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["body.location_latitud",{"_index":818,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitud",{"_index":819,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.new_password",{"_index":576,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["body.password",{"_index":1132,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.phon",{"_index":1696,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["body.pitch_id",{"_index":803,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.rol",{"_index":1139,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.target_path",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["body.team",{"_index":1134,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["body.team_pair",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["boolean",{"_index":532,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["boolean(this.accesstoken",{"_index":534,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":250,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":1097,"title":{},"body":{"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["brows",{"_index":2004,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["button.add",{"_index":1150,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["button.back",{"_index":850,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":851,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":875,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["button.clos",{"_index":676,"title":{},"body":{"components/ContactComponent.html":{}}}],["button.create_pitch",{"_index":843,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_team",{"_index":133,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tourna",{"_index":1100,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1227,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1226,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1101,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_tim",{"_index":1228,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":848,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":666,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.sav",{"_index":852,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.set_tim",{"_index":221,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":223,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["c1",{"_index":1554,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c1.id",{"_index":1580,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2",{"_index":1552,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["c2.id",{"_index":1581,"title":{},"body":{"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["cach",{"_index":627,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.filter(t",{"_index":632,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.find(t",{"_index":637,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cache.push",{"_index":634,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["cacheteamsinseason",{"_index":579,"title":{"interfaces/CacheTeamsInSeason.html":{}},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["call",{"_index":609,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["canactiv",{"_index":233,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":1704,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":721,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["cancellation_reason",{"_index":1339,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelled_at",{"_index":1340,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["cancelmatch(matchid",{"_index":1323,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["cancelmatchbodi",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["canload",{"_index":234,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":937,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["case",{"_index":1827,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["catch",{"_index":871,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["cdref",{"_index":745,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":746,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":901,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":906,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'nam",{"_index":148,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["changepassword(oldpassword",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":643,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":644,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordbodi",{"_index":519,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["changepasswordcompon",{"_index":147,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["charset=utf",{"_index":574,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["checknewpitchnam",{"_index":736,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":45,"title":{"classes/Credentials.html":{},"classes/MatchViewModel.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["cluster_adminmodul",{"_index":252,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declar",{"_index":253,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_import",{"_index":254,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodul",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodul",{"_index":699,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declar",{"_index":700,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_import",{"_index":701,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_matchplanmodul",{"_index":1437,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declar",{"_index":1438,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_import",{"_index":1439,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodul",{"_index":1497,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declar",{"_index":1498,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_import",{"_index":1499,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1599,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1600,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1602,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":1601,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodul",{"_index":1649,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declar",{"_index":1650,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_import",{"_index":1651,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodul",{"_index":1711,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declar",{"_index":1712,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_import",{"_index":1713,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodul",{"_index":1788,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declar",{"_index":1789,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_import",{"_index":1790,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codaci",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["command",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":1502,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["compon",{"_index":18,"title":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":140,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["components/admin#adminmodul",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.compon",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodul",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.compon",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodul",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodul",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1612,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.compon",{"_index":1605,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.compon",{"_index":1609,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.compon",{"_index":1607,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.compon",{"_index":1608,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.compon",{"_index":1604,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.compon",{"_index":1606,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.compon",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodul",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodul",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodul",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["connect",{"_index":1796,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('error",{"_index":1829,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.error('iwa",{"_index":1001,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":1422,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{}}}],["console.log(error",{"_index":872,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["console.log(newel",{"_index":963,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["const",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["constructor",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["constructor(activatedrout",{"_index":1476,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["constructor(apicli",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["constructor(authservic",{"_index":235,"title":{},"body":{"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1614,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1163,"title":{},"body":{"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":196,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{}}}],["constructor(formbuild",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(match",{"_index":743,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(matchservic",{"_index":1800,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["constructor(pitchservic",{"_index":1235,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(priv",{"_index":466,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(publ",{"_index":524,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/SeasonchooserComponent.html":{}}}],["constructor(seasonservic",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(teamservic",{"_index":119,"title":{},"body":{"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(token",{"_index":708,"title":{},"body":{"classes/Credentials.html":{}}}],["constructor(translateservic",{"_index":904,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservic",{"_index":712,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":152,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact'},{'nam",{"_index":150,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contact.component.css",{"_index":668,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":669,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":690,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_nam",{"_index":685,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.last_nam",{"_index":686,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phon",{"_index":688,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.compon",{"_index":1186,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":689,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_person",{"_index":583,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactPersonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"coverage.html":{}}}],["contact_phon",{"_index":687,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcompon",{"_index":149,"title":{"components/ContactComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlist",{"_index":693,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'nam",{"_index":155,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["contactlist.compon",{"_index":704,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":694,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":695,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcompon",{"_index":154,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodul",{"_index":698,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodul",{"_index":702,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncompon",{"_index":151,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts.push(this.match.guest_team.id",{"_index":1215,"title":{},"body":{"components/MatchComponent.html":{}}}],["contacts.push(this.match.home_team.id",{"_index":1214,"title":{},"body":{"components/MatchComponent.html":{}}}],["context",{"_index":503,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":539,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["core.modul",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.t",{"_index":362,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverag",{"_index":1835,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["creat",{"_index":610,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createform",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematch",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["creatematchdaysbodi",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["createnewpitch",{"_index":737,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtourna",{"_index":1059,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(nam",{"_index":1065,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbodi",{"_index":776,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["createrankingpenaltybodi",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["createroundnr",{"_index":1056,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseasonbodi",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["createteambodi",{"_index":582,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["createteamparam",{"_index":611,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createteamparams.nam",{"_index":612,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["createtournamentbodi",{"_index":1079,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["createus",{"_index":1109,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodi",{"_index":1124,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["createuserbodyrol",{"_index":1107,"title":{},"body":{"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createuserbodyrole.admin",{"_index":1149,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["createuserbodyrole.team_manag",{"_index":1140,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["cred",{"_index":528,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["cred.token",{"_index":530,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["credenti",{"_index":506,"title":{"classes/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["credentials(data.token",{"_index":553,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["currentlang",{"_index":903,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1538,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchang",{"_index":1586,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(ev",{"_index":1589,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":364,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["d').todat",{"_index":988,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.nam",{"_index":1261,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"classes/MatchViewModel.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["data.guestteamnam",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["data.hometeamnam",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["data.messag",{"_index":1618,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":217,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["date",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{}}}],["date(list[0].kickofftime).getutchour",{"_index":990,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminut",{"_index":992,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1221,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":896,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortd",{"_index":1268,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1428,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1222,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1229,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":898,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortd",{"_index":1270,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1435,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1230,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["datetim",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["datetimeadapt",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["daysoffset",{"_index":928,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":909,"title":{},"body":{"injectables/I18Service.html":{}}}],["declar",{"_index":249,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":205,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/SnackbarComponent.html":{}}}],["default",{"_index":212,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":919,"title":{},"body":{"injectables/I18Service.html":{}}}],["defin",{"_index":120,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["delay",{"_index":1814,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["delet",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/TableComponent.html":{}}}],["dep",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":248,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":1656,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref.afterclosed().subscrib",{"_index":1199,"title":{},"body":{"components/MatchComponent.html":{}}}],["direct",{"_index":138,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["displaypitch",{"_index":738,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":751,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":1836,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.body.appendchild(tag",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["dom",{"_index":110,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["durat",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{}}}],["dynam",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1260,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftim",{"_index":1259,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1258,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":1225,"title":{},"body":{"components/MatchComponent.html":{}}}],["edit_round",{"_index":216,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":1701,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":724,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'nam",{"_index":157,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":725,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":726,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":855,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":856,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.tim",{"_index":877,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'nam",{"_index":161,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatch.time.component.css",{"_index":878,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":879,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.compon",{"_index":1190,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.compon",{"_index":1188,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.compon",{"_index":1189,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcompon",{"_index":156,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":854,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'nam",{"_index":159,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["editmatchresultcompon",{"_index":158,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecompon",{"_index":160,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":1060,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":137,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["email",{"_index":606,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"injectables/TeamService.html":{}}}],["emailformcontrol",{"_index":1677,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["empti",{"_index":597,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["en",{"_index":910,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":1989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":2017,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycompon",{"_index":261,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enumer",{"_index":1976,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.serverurl",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.wsserverurl",{"_index":1817,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["environments/environ",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":557,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["errors.enter_valid_email",{"_index":1146,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["errors.enter_valid_password",{"_index":663,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["errors.password_token_invalid",{"_index":1495,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pipe(delay(60000",{"_index":1823,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["errors.pitch_exist",{"_index":846,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":665,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":203,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["event.valu",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["eventemitt",{"_index":1168,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventtyp",{"_index":1978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["everyth",{"_index":586,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["exampl",{"_index":1657,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["extend",{"_index":715,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"classes/MatchViewModel.html":{}}}],["fals",{"_index":567,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["filter_list",{"_index":1432,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteract",{"_index":1377,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitch",{"_index":728,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filterpitch",{"_index":739,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["filterpitches(searchterm",{"_index":754,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["final",{"_index":1783,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["first_nam",{"_index":604,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["first_name_requir",{"_index":1147,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["firstnam",{"_index":547,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["flexlayoutmodul",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["forgot_password",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["formatd",{"_index":1901,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["formatdate(d",{"_index":1993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formbuild",{"_index":747,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":650,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":769,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodul",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["found",{"_index":598,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["fromj",{"_index":1346,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["fromjs(data",{"_index":1362,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["full",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":408,"title":{"miscellaneous/functions.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["game",{"_index":1102,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1093,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["genround",{"_index":1061,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["get",{"_index":1997,"title":{"index.html":{},"todo.html":{}},"body":{}}],["get_currentseason",{"_index":1559,"title":{},"body":{"injectables/SeasonService.html":{}}}],["getaccesstoken",{"_index":509,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getcurrentlang",{"_index":912,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteract",{"_index":1402,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":513,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthent",{"_index":511,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":515,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmatchday",{"_index":1232,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(id",{"_index":954,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).end_d",{"_index":1267,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).numb",{"_index":1265,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchday(match.match_day_id).start_d",{"_index":1266,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["getmatchdaylength",{"_index":1255,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getmatchdaysinseason",{"_index":1273,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchdaysinseason(seasonid",{"_index":1284,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesinseason",{"_index":1274,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesinseason(seasonid",{"_index":1286,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getmatchesintourna",{"_index":1275,"title":{},"body":{"injectables/MatchService.html":{}}}],["getmatchesintournament(tournamentid",{"_index":1289,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getpitch",{"_index":1514,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid",{"_index":1507,"title":{},"body":{"injectables/PitchService.html":{}}}],["getpitchbyid(id",{"_index":1510,"title":{},"body":{"injectables/PitchService.html":{}}}],["getround",{"_index":1730,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(matchdayid",{"_index":1736,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).end_d",{"_index":1786,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).numb",{"_index":1784,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_d",{"_index":1785,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getroundsintourna",{"_index":1276,"title":{},"body":{"injectables/MatchService.html":{}}}],["getroundsintournament(tournamentid",{"_index":1291,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["getselectedmatchday",{"_index":1394,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getselectedteamid",{"_index":1398,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getsingleteam",{"_index":1658,"title":{},"body":{"injectables/TeamService.html":{}}}],["getsingleteam(teamid",{"_index":639,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteam",{"_index":1670,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid",{"_index":1659,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(id",{"_index":608,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["getteamcontactbyid",{"_index":1660,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamcontactbyid(id",{"_index":601,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["gettourna",{"_index":1749,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getwinn",{"_index":1731,"title":{},"body":{"components/TournamentComponent.html":{}}}],["given",{"_index":596,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["googelmapsscript",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplet",{"_index":771,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeel",{"_index":809,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsj",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":2005,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":230,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_scor",{"_index":857,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["guest_team",{"_index":1337,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guest_team_id",{"_index":1341,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["guestscor",{"_index":1304,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["guestteam",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["guestteamid",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["guestteamnam",{"_index":1212,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["halbfinal",{"_index":1782,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerj",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatch",{"_index":1372,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["header",{"_index":470,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["headers.append('author",{"_index":540,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('cont",{"_index":572,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["hi",{"_index":1492,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played_match",{"_index":1433,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplay",{"_index":1160,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplay",{"_index":1371,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home_scor",{"_index":858,"title":{},"body":{"components/EditmatchResultComponent.html":{},"classes/MatchViewModel.html":{}}}],["home_team",{"_index":1338,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["home_team_id",{"_index":1342,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["homescor",{"_index":1303,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hometeam",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["hometeamid",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["hometeamnam",{"_index":1210,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["hostlisten",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":136,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["http://192.168.178.23/api",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpclientmodul",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":464,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":459,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheader",{"_index":517,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":463,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":457,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2001,"title":{},"body":{"index.html":{}}}],["i18n/d",{"_index":914,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":915,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18servic",{"_index":34,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactori",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provid",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icancelmatchbodi",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["ichangepasswordbodi",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["iclient",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["icon",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["icontact_person",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["icreatematchdaysbodi",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["icreatepitchbodi",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["icreaterankingpenaltybodi",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["icreateseasonbodi",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["icreateteambodi",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["icreatetournamentbodi",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["icreateuserbodi",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["id",{"_index":600,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["idate_period",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["identifi",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["ievent",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["iidentifi",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["ilocatematchbodi",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["imatch",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["imatch_day",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"todo.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["inherit",{"_index":1351,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["init",{"_index":902,"title":{},"body":{"injectables/I18Service.html":{},"classes/MatchViewModel.html":{},"injectables/WebsocketService.html":{}}}],["init(data",{"_index":1364,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["initi",{"_index":615,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["initloadteam",{"_index":617,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["inject",{"_index":20,"title":{"injectables/AuthenticationService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"injectables/WebsocketService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/ISnackBarData.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(api_base_url",{"_index":535,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["inject(mat_dialog_data",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["inject(mat_snack_bar_data",{"_index":1014,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectiontoken('api_base_url",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":682,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["inputstream",{"_index":1797,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["intercept",{"_index":454,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":456,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":452,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchUpdateMessage.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{},"overview.html":{}}}],["ipitch",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["ipossiblekickoff",{"_index":925,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["irank",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["iranking_penalti",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["iranking_posit",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["irenameteambodi",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["isadmin",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthent",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["ischedulematchbodi",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["ischedulematchdaybodi",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["iseason",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["isemailvalidorempti",{"_index":1678,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1681,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isendpasswordresetmailbodi",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["isetroundbodi",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["isload",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplay",{"_index":1277,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1293,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["isnackbardata",{"_index":1009,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnewmatchday",{"_index":1373,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnewmatchday(match",{"_index":1381,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["isnumb",{"_index":1154,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(v",{"_index":1169,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isubmitmatchresultbodi",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["isvalidresult",{"_index":1278,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(scor",{"_index":1295,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["iteam",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["iteam_pair",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["iteamcanplayatd",{"_index":931,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["itourna",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["iuser",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["j",{"_index":1005,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jqueri",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":521,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoff",{"_index":974,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(localstorage.getitem('access_token",{"_index":529,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.parse(localstorage.getitem('cache_teams_in_season",{"_index":630,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(localstorage.getitem('pitch",{"_index":1518,"title":{},"body":{"injectables/PitchService.html":{}}}],["json.parse(localstorage.getitem('selected_matchday",{"_index":1406,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["json.parse(localstorage.getitem('selected_season",{"_index":1565,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.parse(localstorage.getitem('selected_tourna",{"_index":1753,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.parse(localstorage.getitem('team",{"_index":591,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.parse(messag",{"_index":1824,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(bodi",{"_index":578,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(cach",{"_index":636,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["json.stringify(data",{"_index":1833,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["json.stringify(season",{"_index":1568,"title":{},"body":{"injectables/SeasonService.html":{}}}],["json.stringify(t",{"_index":1756,"title":{},"body":{"components/TournamentComponent.html":{}}}],["json.stringify(valu",{"_index":527,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["karma",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["kickoff",{"_index":893,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"classes/MatchViewModel.html":{}}}],["kickoffset",{"_index":881,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(ev",{"_index":883,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftim",{"_index":929,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["konnt",{"_index":997,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["lang",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{}}}],["languag",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["last_nam",{"_index":605,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["last_name_requir",{"_index":1148,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["lastnam",{"_index":549,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["launcher",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["legend",{"_index":135,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["length",{"_index":1315,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["libraries=plac",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":1999,"title":{},"body":{"index.html":{}}}],["line",{"_index":1314,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1313,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["list",{"_index":588,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/TeamService.html":{}}}],["list.filter(x",{"_index":982,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0",{"_index":984,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":993,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":986,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["load",{"_index":616,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["load/sav",{"_index":585,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadallteam",{"_index":618,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadalltourna",{"_index":1062,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpitch",{"_index":1508,"title":{},"body":{"injectables/PitchService.html":{}}}],["loadrank",{"_index":1623,"title":{},"body":{"components/TableComponent.html":{}}}],["loadranking(season",{"_index":1625,"title":{},"body":{"components/TableComponent.html":{}}}],["loadseason",{"_index":1542,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasoninprogress",{"_index":1541,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadseasons(st",{"_index":1547,"title":{},"body":{"injectables/SeasonService.html":{}}}],["loadteamsinseason",{"_index":1661,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadteamsinseason(seasonid",{"_index":629,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["loadus",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localed",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorag",{"_index":589,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.getitem('lang",{"_index":920,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.getitem('selected_team",{"_index":1407,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('access_token",{"_index":526,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.setitem('cache_teams_in_season",{"_index":635,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["localstorage.setitem('lang",{"_index":923,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage.setitem('pitch",{"_index":1520,"title":{},"body":{"injectables/PitchService.html":{}}}],["localstorage.setitem('selected_matchday",{"_index":1405,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_season",{"_index":1567,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage.setitem('selected_team",{"_index":1409,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage.setitem('selected_tourna",{"_index":1755,"title":{},"body":{"components/TournamentComponent.html":{}}}],["localstorage.setitem('team",{"_index":595,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["locat",{"_index":1535,"title":{},"body":{"components/PitchesComponent.html":{}}}],["locatematchbodi",{"_index":775,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["location_off",{"_index":836,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":840,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'nam",{"_index":163,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["login.component.css",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincompon",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":501,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["mail",{"_index":1683,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manag",{"_index":1564,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["manageseason",{"_index":941,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'nam",{"_index":165,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageseason.nam",{"_index":1257,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["manageseason/manageseason.compon",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":271,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncompon",{"_index":164,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetourna",{"_index":1053,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'nam",{"_index":167,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["managetournament.component.css",{"_index":1054,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1055,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.compon",{"_index":270,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.compon",{"_index":269,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcompon",{"_index":166,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentround",{"_index":1057,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageus",{"_index":1104,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'nam",{"_index":169,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["manageusers.component.css",{"_index":1105,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1106,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/manageusers.compon",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscompon",{"_index":168,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":779,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map((pitch",{"_index":796,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(valu",{"_index":793,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["mat_dialog_data",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["mat_snack_bar_data",{"_index":1011,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_opt",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodul",{"_index":1460,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":1449,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["match'},{'nam",{"_index":171,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["match.component.css",{"_index":1152,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1153,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.guest_scor",{"_index":1217,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":1771,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.nam",{"_index":835,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":1774,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team_id).canplay",{"_index":983,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_scor",{"_index":1218,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":1770,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.nam",{"_index":834,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":1776,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team_id).canplay",{"_index":981,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff",{"_index":895,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff.setutchours(new",{"_index":989,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff.setutcminutes(new",{"_index":991,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":985,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":839,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1269,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match.servic",{"_index":1810,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["match:2987",{"_index":1353,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2988",{"_index":1352,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2989",{"_index":1354,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2990",{"_index":1355,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2991",{"_index":1356,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2992",{"_index":1357,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2993",{"_index":1358,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2994",{"_index":1359,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2995",{"_index":1360,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:2996",{"_index":1361,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3007",{"_index":1365,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3022",{"_index":1363,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match:3029",{"_index":1367,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["match_day",{"_index":933,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["match_day_id",{"_index":1343,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["matchcancel",{"_index":1983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchcompon",{"_index":170,"title":{"components/MatchComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchconvert",{"_index":1279,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverter(match",{"_index":1298,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray",{"_index":1280,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchconverterarray(match",{"_index":1300,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchday",{"_index":973,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{}}}],["matchday.end_d",{"_index":1430,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchday.id",{"_index":975,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.numb",{"_index":1264,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_d",{"_index":1427,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompar",{"_index":1374,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdaycompare(md1",{"_index":1383,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchdayid",{"_index":1287,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TournamentComponent.html":{}}}],["matchdayid).subscrib",{"_index":1317,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchdaylength",{"_index":947,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdaysinseason",{"_index":943,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matches.foreach",{"_index":976,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matches.foreach((match",{"_index":1324,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchesinseason",{"_index":942,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchid",{"_index":1209,"title":{},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/TableComponent.html":{}}}],["matchkickoff",{"_index":880,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["matchloc",{"_index":1980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchplan",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{}}}],["matchplan'},{'nam",{"_index":175,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["matchplan.compon",{"_index":1442,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1369,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1370,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplancompon",{"_index":174,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplanmodul",{"_index":1436,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodul",{"_index":1440,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchresult",{"_index":1329,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult).subscrib",{"_index":1333,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.guest_scor",{"_index":1330,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresult.home_scor",{"_index":1331,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchresultsubmit",{"_index":1981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchschedul",{"_index":1982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matchschedulingcompon",{"_index":172,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":291,"title":{"injectables/MatchService.html":{}},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["matchupd",{"_index":1272,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["matchupdatemessag",{"_index":1187,"title":{"interfaces/MatchUpdateMessage.html":{}},"body":{"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["matchviewmodel",{"_index":744,"title":{"classes/MatchViewModel.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matdatepickermodul",{"_index":1464,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodul",{"_index":1457,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{}}}],["matdividermodul",{"_index":1453,"title":{},"body":{"modules/MaterialModule.html":{}}}],["materi",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["material.modul",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodul",{"_index":376,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1090,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1006,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodul",{"_index":1451,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":1459,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":1463,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":1462,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":1465,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":1468,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":1471,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchang",{"_index":1115,"title":{},"body":{"components/ManageusersComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodul",{"_index":1455,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":1447,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":1469,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":1470,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodul",{"_index":1467,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":1458,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":1461,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":1445,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":1466,"title":{},"body":{"modules/MaterialModule.html":{}}}],["md1",{"_index":1386,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md1.id",{"_index":1423,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2",{"_index":1384,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["md2.id",{"_index":1424,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["mechan",{"_index":628,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["memberof",{"_index":590,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["menu.admin",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contact",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.t",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tourna",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["messag",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":113,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["method",{"_index":117,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["miscellan",{"_index":1975,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/match.viewmodel",{"_index":774,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["modul",{"_index":246,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":936,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentj",{"_index":935,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":987,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["msg",{"_index":1192,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["msg.matchid",{"_index":1194,"title":{},"body":{"components/MatchComponent.html":{}}}],["msg.type",{"_index":1826,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["multi",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["mvwa",{"_index":1326,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["mvwa.push(this.matchconverter(match",{"_index":1325,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["name",{"_index":123,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["nbsp",{"_index":1429,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1219,"title":{},"body":{"components/MatchComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new_kickoff_tim",{"_index":897,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_pitch",{"_index":841,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":849,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":845,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newel",{"_index":958,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":729,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.label",{"_index":842,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpassword",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'nam",{"_index":177,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["newpassword.compon",{"_index":1503,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1473,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1474,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcompon",{"_index":176,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodul",{"_index":1496,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodul",{"_index":1500,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":730,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":731,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":732,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplac",{"_index":788,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":733,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newroundplandateto",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["newwinn",{"_index":1732,"title":{},"body":{"components/TournamentComponent.html":{}}}],["newwinner(match",{"_index":1739,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":458,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":468,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clon",{"_index":469,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodul",{"_index":262,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchang",{"_index":953,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":998,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":691,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":837,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1223,"title":{},"body":{"components/MatchComponent.html":{}}}],["nswag",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":531,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["number",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/WebsocketService.html":{}}}],["numberconnect",{"_index":1798,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["object",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":462,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/MatchSchedulingComponent.html":{},"guards/TeamadminGuard.html":{}}}],["offset",{"_index":960,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_tim",{"_index":894,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":838,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":645,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["oncancelresultclick",{"_index":873,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["onchang",{"_index":932,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1110,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["onchangeteamselect(ev",{"_index":1114,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["oninit",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["onlangselect",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["onpitchselect",{"_index":740,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":758,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclick",{"_index":741,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":742,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselect",{"_index":1063,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmod",{"_index":1155,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1156,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog(match",{"_index":1173,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1157,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog(match",{"_index":1175,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1158,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog(match",{"_index":1177,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":124,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":259,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1161,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2007,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":363,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodul",{"_index":1610,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodul",{"_index":1611,"title":{},"body":{"modules/SharedModule.html":{}}}],["p.label",{"_index":829,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["p.label.tolowercase().indexof(searchterm.tolowercas",{"_index":800,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["packag",{"_index":1920,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":599,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/NewpasswordComponent.html":{},"injectables/TeamService.html":{}}}],["paramet",{"_index":122,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params['token",{"_index":1484,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["pars",{"_index":1830,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["passbase64",{"_index":537,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["passt",{"_index":1002,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":523,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{}}}],["password_forgot_text",{"_index":1494,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_requir",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordforgot",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":278,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["perm_contact_calendar",{"_index":1224,"title":{},"body":{"components/MatchComponent.html":{}}}],["person",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'nam",{"_index":153,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["person.compon",{"_index":1613,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":680,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":681,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.t",{"_index":679,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":683,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":684,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":678,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":607,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["pick",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pipe",{"_index":792,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["pitch",{"_index":705,"title":{},"body":{"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["pitch.label",{"_index":801,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch.servic",{"_index":1311,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/WebsocketService.html":{}}}],["pitch_contact",{"_index":1536,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":1344,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["pitch_requir",{"_index":847,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchad",{"_index":1506,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches'},{'nam",{"_index":179,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["pitches(valu",{"_index":1519,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitches.component.css",{"_index":1530,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1531,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescompon",{"_index":178,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchexist",{"_index":831,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid",{"_index":821,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":823,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservic",{"_index":397,"title":{"injectables/PitchService.html":{}},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["pitchservicefactori",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pitchservicefactory(provid",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["place",{"_index":734,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":813,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":815,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":220,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":222,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["popper.j",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_go",{"_index":1646,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draw",{"_index":1643,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.loss",{"_index":1644,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.match",{"_index":1641,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.numb",{"_index":1639,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.point",{"_index":1647,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_go",{"_index":1645,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.win",{"_index":1642,"title":{},"body":{"components/TableComponent.html":{}}}],["possiblekickoff",{"_index":945,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":978,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["prepar",{"_index":1987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["privat",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["product",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":1988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["promis",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["provid",{"_index":251,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["providedin",{"_index":243,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["provider.init",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.initloadteam",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.load",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.loadseasoninprogress",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["queue",{"_index":1809,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["queueingsubject",{"_index":1807,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rank",{"_index":1622,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["ranking_penalti",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["ranking_posit",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["rankingpenalti",{"_index":2016,"title":{},"body":{"todo.html":{}}}],["rankingpenaltyad",{"_index":1984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rankingpenaltyremov",{"_index":1985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["re",{"_index":1142,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["reactiveformsmodul",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["redirectto",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registerlocaledata",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localed",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":558,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":562,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{}}}],["relat",{"_index":587,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["remov",{"_index":1262,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_ey",{"_index":664,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1233,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":965,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removeteam",{"_index":193,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["renameteambodi",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["req",{"_index":461,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('author",{"_index":467,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('author",{"_index":471,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requir",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reschedulematchday",{"_index":2015,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":258,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resolv",{"_index":536,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(fals",{"_index":555,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(matchday",{"_index":1320,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(nul",{"_index":1579,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(pitch",{"_index":1527,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(st",{"_index":1576,"title":{},"body":{"injectables/SeasonService.html":{}}}],["resolve(team",{"_index":641,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.sort((a",{"_index":620,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(teams.teams.sort((a",{"_index":638,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(this.matchconverter(match",{"_index":1335,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.matchconverterarray(match",{"_index":1318,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["resolve(this.pitch",{"_index":1528,"title":{},"body":{"injectables/PitchService.html":{}}}],["resolve(this.team",{"_index":625,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["resolve(tru",{"_index":556,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{}}}],["resolve(us",{"_index":560,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["respons",{"_index":544,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"miscellaneous/functions.html":{}}}],["response.body['email",{"_index":546,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['first_nam",{"_index":548,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.body['last_nam",{"_index":550,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["response.headers.get('x",{"_index":551,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resultupd",{"_index":1162,"title":{},"body":{"components/MatchComponent.html":{}}}],["retrywhen",{"_index":1813,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["retrywhen(error",{"_index":1822,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["return",{"_index":128,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["root",{"_index":244,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"classes/Credentials.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'nam",{"_index":146,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["round",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["rout",{"_index":276,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["routermodul",{"_index":277,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":279,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_rout",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":1706,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routing.modul",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.t",{"_index":275,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxj",{"_index":465,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":780,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/WebsocketService.html":{}}}],["s.state",{"_index":1578,"title":{},"body":{"injectables/SeasonService.html":{}}}],["save",{"_index":718,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["savecontact",{"_index":1679,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":1685,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["schedul",{"_index":938,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematch",{"_index":969,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchbodi",{"_index":890,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["schedulematchdaybodi",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["scheduling'},{'nam",{"_index":173,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["scheduling.compon",{"_index":273,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":940,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":939,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.t",{"_index":927,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:127",{"_index":1249,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1237,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1239,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1238,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1240,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1253,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:39",{"_index":1250,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1252,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:41",{"_index":1254,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1256,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1236,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:49",{"_index":1251,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:52",{"_index":1246,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1245,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:66",{"_index":1243,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:70",{"_index":1244,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:74",{"_index":1242,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:78",{"_index":1241,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:92",{"_index":1247,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:96",{"_index":1248,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":272,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1297,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["screen",{"_index":1198,"title":{},"body":{"components/MatchComponent.html":{}}}],["searchterm",{"_index":756,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["season",{"_index":626,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["season.nam",{"_index":1598,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchang",{"_index":1587,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoos",{"_index":1583,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'nam",{"_index":181,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["seasonchooser.component.css",{"_index":1584,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1585,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercompon",{"_index":180,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompar",{"_index":1543,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1551,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncr",{"_index":1539,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonid",{"_index":581,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["seasoninprogress",{"_index":1540,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasons.filter(",{"_index":1577,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonservic",{"_index":283,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonservicefactori",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["seasonservicefactory(provid",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["seasonst",{"_index":1548,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/enumerations.html":{}}}],["selectedmatchday",{"_index":1375,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedmatchday(valu",{"_index":1404,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1376,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid(valu",{"_index":1408,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["send",{"_index":1799,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["send(data",{"_index":1803,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmatchupdatedmsg",{"_index":1159,"title":{},"body":{"components/MatchComponent.html":{}}}],["sendpasswordresetmailbodi",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["serverurl",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servic",{"_index":584,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["services/authentication.servic",{"_index":242,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.servic",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.servic",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/pitch.servic",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.servic",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.servic",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["services/websocket.servic",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatchComponent.html":{}}}],["set",{"_index":593,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["set_currentseason(season",{"_index":1561,"title":{},"body":{"injectables/SeasonService.html":{}}}],["setaccesstoken",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setaccesstoken(valu",{"_index":505,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setpitches(valu",{"_index":1516,"title":{},"body":{"injectables/PitchService.html":{}}}],["setplandatefrom",{"_index":194,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(ev",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setplandateto",{"_index":195,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(ev",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["setroundbodi",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["setselectedmatchday(valu",{"_index":1396,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setselectedteamid(valu",{"_index":1400,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["setteams(valu",{"_index":1672,"title":{},"body":{"injectables/TeamService.html":{}}}],["settournament(t",{"_index":1751,"title":{},"body":{"components/TournamentComponent.html":{}}}],["share",{"_index":1815,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["shared.modul",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/models/websocket.model",{"_index":782,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["shared/snackbar/snackbar.compon",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodul",{"_index":256,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":735,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["shuffl",{"_index":1234,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1003,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'nam",{"_index":183,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["snackbar.component.css",{"_index":1013,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1012,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.compon",{"_index":1191,"title":{},"body":{"components/MatchComponent.html":{}}}],["snackbarcompon",{"_index":182,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/WebsocketService.html":{}}}],["spec\\.t",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":996,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":995,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/.../app.module.t",{"_index":1990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.app.local.t",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.t",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../liga",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api",{"_index":777,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamsComponent.html":{}}}],["src/api/liga",{"_index":1839,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":361,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.t",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":460,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":455,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.t",{"_index":112,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":130,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":126,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:9",{"_index":121,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/admin",{"_index":274,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":229,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.t",{"_index":232,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":239,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":240,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":237,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.t",{"_index":260,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.t",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":926,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.t",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21",{"_index":209,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22",{"_index":208,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24",{"_index":214,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":211,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":210,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":197,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":207,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":215,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":206,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45",{"_index":200,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49",{"_index":198,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60",{"_index":201,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64",{"_index":199,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78",{"_index":202,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82",{"_index":204,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.t",{"_index":1052,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:14",{"_index":1078,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:15",{"_index":1074,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1077,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1072,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1075,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1064,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":1073,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":1070,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1069,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:37",{"_index":1066,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:45",{"_index":1071,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:50",{"_index":1068,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:61",{"_index":1067,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.t",{"_index":1103,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:16",{"_index":1121,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:17",{"_index":1123,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:19",{"_index":1122,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:21",{"_index":1117,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:23",{"_index":1118,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:24",{"_index":1119,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:25",{"_index":1120,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:26",{"_index":1111,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:43",{"_index":1113,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:47",{"_index":1116,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:51",{"_index":1112,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.t",{"_index":642,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":651,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":652,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":646,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":649,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":648,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":647,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":707,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.t",{"_index":692,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":697,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":696,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.t",{"_index":703,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.t",{"_index":1529,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1532,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:18",{"_index":1533,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.t",{"_index":1718,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":1721,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:18",{"_index":1722,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:41",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:53",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1443,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.t",{"_index":1368,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:16",{"_index":1391,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:17",{"_index":1390,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:18",{"_index":1388,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1397,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1395,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":1393,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":1399,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1401,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:37",{"_index":1403,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1378,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:45",{"_index":1392,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:48",{"_index":1389,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:51",{"_index":1387,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:64",{"_index":1380,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:76",{"_index":1385,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:80",{"_index":1379,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:84",{"_index":1382,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.t",{"_index":1441,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1504,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.t",{"_index":1472,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1482,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:18",{"_index":1478,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:23",{"_index":1481,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:33",{"_index":1479,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:49",{"_index":1480,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.t",{"_index":1501,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":677,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.t",{"_index":667,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":670,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":672,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":673,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":671,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.t",{"_index":723,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:113",{"_index":749,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":765,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:20",{"_index":763,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":773,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":766,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":767,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:25",{"_index":770,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":768,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:28",{"_index":772,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:29",{"_index":748,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:32",{"_index":764,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":757,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:57",{"_index":755,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:61",{"_index":752,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:65",{"_index":759,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:69",{"_index":760,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":761,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:92",{"_index":750,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.t",{"_index":853,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:13",{"_index":862,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:14",{"_index":859,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:17",{"_index":863,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:24",{"_index":860,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:28",{"_index":861,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.t",{"_index":876,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":882,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":888,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":887,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":885,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":884,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":886,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.t",{"_index":1151,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:111",{"_index":1179,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:124",{"_index":1172,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:134",{"_index":1170,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1166,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1167,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1165,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:26",{"_index":1164,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1181,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1183,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1180,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1182,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1184,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1185,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:46",{"_index":1171,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:49",{"_index":1176,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:71",{"_index":1174,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:91",{"_index":1178,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.t",{"_index":1582,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:13",{"_index":1592,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1588,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1593,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:18",{"_index":1591,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:29",{"_index":1590,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.t",{"_index":1010,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1615,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1617,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1616,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/t",{"_index":1655,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.t",{"_index":1619,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:14",{"_index":1624,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1628,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1627,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:35",{"_index":1626,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.t",{"_index":1653,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":1717,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.t",{"_index":1674,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":1688,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":1680,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:21",{"_index":1687,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":1690,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":1689,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":1691,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:27",{"_index":1684,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:42",{"_index":1686,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:69",{"_index":1682,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.t",{"_index":1702,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":1708,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":1707,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":1703,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.t",{"_index":1715,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tourna",{"_index":1794,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.t",{"_index":1725,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/tournament/tournament.component.ts:14",{"_index":1747,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:15",{"_index":1748,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:16",{"_index":1746,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":1750,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":1752,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:25",{"_index":1735,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:30",{"_index":1745,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:33",{"_index":1741,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:44",{"_index":1744,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:48",{"_index":1742,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:60",{"_index":1737,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:64",{"_index":1738,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:77",{"_index":1740,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.t",{"_index":1792,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/material.module.t",{"_index":1444,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/match.viewmodel",{"_index":889,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/models/match.viewmodel.t",{"_index":1336,"title":{},"body":{"classes/MatchViewModel.html":{},"coverage.html":{}}}],["src/app/models/match.viewmodel.ts:4",{"_index":1349,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:5",{"_index":1348,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/models/match.viewmodel.ts:6",{"_index":1350,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["src/app/services/authentication.service.t",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:103",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:107",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:13",{"_index":709,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":710,"title":{},"body":{"classes/Credentials.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":508,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":507,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:29",{"_index":510,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:34",{"_index":512,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:36",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:46",{"_index":502,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:72",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:89",{"_index":504,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:95",{"_index":514,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:99",{"_index":516,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/i18.service.t",{"_index":899,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{}}}],["src/app/services/i18.service.ts:11",{"_index":911,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:13",{"_index":913,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:15",{"_index":905,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":908,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:33",{"_index":907,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":365,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.t",{"_index":711,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":713,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.servic",{"_index":934,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.t",{"_index":1271,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:104",{"_index":1299,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1301,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:120",{"_index":1294,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:124",{"_index":1296,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:128",{"_index":1305,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:146",{"_index":1307,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1283,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1288,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:48",{"_index":1285,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:64",{"_index":1290,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:85",{"_index":1292,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.t",{"_index":1505,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:10",{"_index":1515,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1517,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:17",{"_index":1509,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:27",{"_index":1511,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:35",{"_index":1512,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:39",{"_index":1513,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service.t",{"_index":1537,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{}}}],["src/app/services/season.service.ts:10",{"_index":1558,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:11",{"_index":1560,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:15",{"_index":1562,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:21",{"_index":1557,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:22",{"_index":1545,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:37",{"_index":1546,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:41",{"_index":1549,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:58",{"_index":1553,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.servic",{"_index":1723,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/services/team.service.t",{"_index":580,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:101",{"_index":1667,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:105",{"_index":1668,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:127",{"_index":1669,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:168",{"_index":1664,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:23",{"_index":1671,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:31",{"_index":1673,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:33",{"_index":1662,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:45",{"_index":1666,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":1665,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:75",{"_index":1663,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/websocket.servic",{"_index":783,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/services/websocket.service.t",{"_index":1795,"title":{},"body":{"injectables/WebsocketService.html":{},"coverage.html":{}}}],["src/app/services/websocket.service.ts:16",{"_index":1808,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:17",{"_index":1806,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:18",{"_index":1801,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":1802,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:62",{"_index":1805,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/shared.module.t",{"_index":1603,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environ",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebsocketService.html":{}}}],["src/environments/environment.app.local.t",{"_index":1913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.t",{"_index":1914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":1915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1998,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1089,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":946,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startteamcount",{"_index":1058,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":778,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":1550,"title":{},"body":{"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{}}}],["statement",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1345,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["statu",{"_index":1996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["store",{"_index":592,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["str",{"_index":1832,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/SnackbarComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{}}}],["styleurl",{"_index":114,"title":{},"body":{"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["subject",{"_index":1308,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["submit",{"_index":1475,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":1281,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitmatchresult(matchid",{"_index":1302,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["submitmatchresultbodi",{"_index":1309,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"coverage.html":{}}}],["subscrib",{"_index":545,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["success",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":716,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2002,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2003,"title":{},"body":{"modules.html":{}}}],["swaggerexcept",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["switch",{"_index":1825,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["t",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["t.id",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["t.seasonid",{"_index":633,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["tab.add_us",{"_index":1145,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["tabl",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'nam",{"_index":185,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["table.compon",{"_index":1654,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1621,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1620,"title":{},"body":{"components/TableComponent.html":{}}}],["table.gam",{"_index":1635,"title":{},"body":{"components/TableComponent.html":{}}}],["table.plac",{"_index":1633,"title":{},"body":{"components/TableComponent.html":{}}}],["table.point",{"_index":1638,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":1634,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tor",{"_index":1637,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":1636,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecompon",{"_index":184,"title":{"components/TableComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodul",{"_index":1648,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodul",{"_index":1652,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.id",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.typ",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["team",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["team.contact",{"_index":603,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["team.nam",{"_index":132,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchplanComponent.html":{},"components/TeamsComponent.html":{}}}],["team.servic",{"_index":1310,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["team_contact",{"_index":1724,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_manag",{"_index":1979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["team_pair",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"coverage.html":{}}}],["teamadmin",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'nam",{"_index":187,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teamadmin.compon",{"_index":1716,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":1675,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":1676,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincompon",{"_index":186,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":433,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["teamadminmodul",{"_index":1710,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodul",{"_index":1714,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamid",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamlist",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["teamnam",{"_index":127,"title":{},"body":{"components/AddteamComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teampair",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.guest_team_id",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teampair.home_team_id",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["teamrenam",{"_index":1986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teams'},{'nam",{"_index":189,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["teams(valu",{"_index":594,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["teams.component.css",{"_index":1719,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":1720,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.compon",{"_index":706,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":930,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscompon",{"_index":188,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservic",{"_index":28,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/CacheTeamsInSeason.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamservice.getteambyid(pos.team_id).nam",{"_index":1640,"title":{},"body":{"components/TableComponent.html":{}}}],["teamservice.getteambyid(tupel.guest_team_id).nam",{"_index":219,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservice.getteambyid(tupel.home_team_id).nam",{"_index":218,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["teamservicefactori",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["teamservicefactory(provid",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["teamsinseason",{"_index":944,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["templat",{"_index":109,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["templateurl",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["terminiert",{"_index":999,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["text/javascript",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1570,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.activatedroute.queryparams.subscrib",{"_index":1483,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.api.getranking(season.id).subscrib",{"_index":1632,"title":{},"body":{"components/TableComponent.html":{}}}],["this.apiclient.changepassword(body).subscrib",{"_index":1488,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.apiclient.createpitch(body).subscrib",{"_index":820,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.createteam(createteamparams).subscrib",{"_index":613,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.createtourna",{"_index":1084,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.createuser(body).subscrib",{"_index":1141,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.apiclient.getallpitches().subscrib",{"_index":1526,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.apiclient.getallseasons().subscrib",{"_index":1575,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.apiclient.getallteams().subscrib",{"_index":619,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getalltournaments().subscrib",{"_index":1757,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.apiclient.getalltournaments().subscribe((tourna",{"_index":1082,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.apiclient.getauthenticateduser().subscrib",{"_index":559,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.apiclient.getmatch(matchid).subscrib",{"_index":1334,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatchdaysinseason(season.id).topromis",{"_index":1414,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.apiclient.getmatchdaysinseason(seasonid).subscrib",{"_index":1319,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(seasonid",{"_index":1316,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getmatches(undefin",{"_index":1321,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getroundsintournament(tournamentid).subscrib",{"_index":1322,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.getteam(teamid).subscrib",{"_index":640,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"components/ContactComponent.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.getteamsinseason(seasonid).subscrib",{"_index":631,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.apiclient.locatematch(this.match.id",{"_index":805,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.apiclient.schedulematch(this.match.id",{"_index":892,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.apiclient.sendpasswordresetmail(body).subscrib",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiclient.setround(this.data.tournamentid",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.apiclient.submitmatchresult(matchid",{"_index":1332,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.apiclient.updateteamcontact(teamid",{"_index":1697,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.valu",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.changepassword(this.oldpassword.valu",{"_index":658,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":245,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":1709,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loadus",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":661,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.setaccesstoken",{"_index":1485,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.us",{"_index":1692,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.team",{"_index":1693,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.authservice.user.teams.foreach",{"_index":1694,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":722,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchang",{"_index":807,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(defaultlang",{"_index":922,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.connect",{"_index":1816,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.connectionstatus.subscrib",{"_index":1820,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connection.messages.pip",{"_index":1819,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.createform",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundnr",{"_index":1087,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.currentseason.subscrib",{"_index":1569,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.dialog.open(changepasswordcompon",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcompon",{"_index":1216,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcompon",{"_index":1204,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcompon",{"_index":1197,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecompon",{"_index":1206,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincompon",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialogref.clos",{"_index":662,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.dialogref.close(fals",{"_index":806,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.dialogref.close(tru",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.email",{"_index":1125,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.email.value.tolowercas",{"_index":1131,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1700,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filteredpitch",{"_index":790,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterpitches(pitch",{"_index":797,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.firstnam",{"_index":1127,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.firstname.valu",{"_index":1136,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.formbuilder.group",{"_index":787,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getround(m.match_day_id).numb",{"_index":1762,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinn",{"_index":1764,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.guest_scor",{"_index":866,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteamid",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.guestteamid.tostr",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.handlegetmatch",{"_index":1415,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplay",{"_index":1410,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_scor",{"_index":864,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeamid",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.hometeamid.tostr",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":542,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.httpclient.put('/api/users/me/password",{"_index":577,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.i18service.changelang(lang",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.inputstream",{"_index":1818,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.inputstream.next(str",{"_index":1834,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.isload",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":569,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_scor",{"_index":1328,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.isvalidresult(match.home_scor",{"_index":1327,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["this.lastnam",{"_index":1128,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.lastname.valu",{"_index":1138,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.load",{"_index":1522,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadallteam",{"_index":614,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.loadalltourna",{"_index":1081,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1098,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpitch",{"_index":1525,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.loadranking(season",{"_index":1629,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadranking(this.seasonservice.currentseason.getvalu",{"_index":1630,"title":{},"body":{"components/TableComponent.html":{}}}],["this.loadseasoninprogress",{"_index":1572,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadseasons(seasonstate.progress",{"_index":1574,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.loadus",{"_index":554,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.loginform",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors({requir",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1487,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.logout",{"_index":561,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.managetournamentround",{"_index":1085,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.length",{"_index":1088,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1195,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["this.match.guest_scor",{"_index":867,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team.nam",{"_index":1213,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_scor",{"_index":865,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team.nam",{"_index":1211,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":1193,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":802,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchday",{"_index":1413,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdays.find(t",{"_index":1425,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchdaysinseason.filt",{"_index":970,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchdaysinseason.find(t",{"_index":955,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchdaysinseason[0].id).length",{"_index":951,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matches.revers",{"_index":1763,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":1767,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":1768,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesinseason",{"_index":948,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchesinseason.filter(x",{"_index":949,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchkickoff",{"_index":891,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservic",{"_index":874,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.getmatchesinseason(this.season.id",{"_index":1420,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchservice.getmatchesintournament(this.tournament.id",{"_index":1759,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.managetournament.id",{"_index":1086,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.matchservice.getroundsintournament(this.tournament.id",{"_index":1761,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchservice.isvalidresult(this.guest_scor",{"_index":869,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_scor",{"_index":868,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.matchupdated.next(msg.data",{"_index":1828,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.matchservice.matchupdated.subscrib",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":870,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.updatesinglematch(match.id",{"_index":1200,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.updatesinglematch(msg.matchid",{"_index":1196,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":824,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valu",{"_index":957,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.value.id",{"_index":804,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.valuechang",{"_index":791,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":654,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpassword.valu",{"_index":659,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":822,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":817,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitud",{"_index":812,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitud",{"_index":814,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":785,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterror",{"_index":830,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(nul",{"_index":832,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalid",{"_index":833,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":786,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.newroundplandateto",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.numberconnect",{"_index":1821,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.oldpassword",{"_index":657,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":660,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":1129,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.password.valu",{"_index":1133,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.pitch",{"_index":1523,"title":{},"body":{"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["this.pitchadded.subscrib",{"_index":1521,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitches.find(t",{"_index":1524,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.loadpitch",{"_index":1534,"title":{},"body":{"components/PitchesComponent.html":{}}}],["this.pitchservice.pitch",{"_index":789,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.pitchservice.pitchadded.next(nul",{"_index":825,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["this.pitchservice.pitches.filter(p",{"_index":799,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":828,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.slic",{"_index":798,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.plac",{"_index":808,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_chang",{"_index":810,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplac",{"_index":811,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.possiblekickoff",{"_index":966,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":967,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":959,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newel",{"_index":964,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.rank",{"_index":1631,"title":{},"body":{"components/TableComponent.html":{}}}],["this.resultupdated.emit(this.match",{"_index":1201,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.round",{"_index":1092,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1094,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.router.navigatebyurl",{"_index":564,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.season",{"_index":1412,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.valu",{"_index":1597,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasoncreated.subscrib",{"_index":1571,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasoninprogress",{"_index":1573,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.seasonservice.currentseason.next(event.valu",{"_index":1596,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.next(this.seasonservice.seasoninprogress[0",{"_index":1595,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscrib",{"_index":1411,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.seasoninprogress",{"_index":1594,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchday.id",{"_index":1421,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1418,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.sendmatchupdatedmsg",{"_index":1202,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.setaccesstoken(new",{"_index":552,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setaccesstoken(nul",{"_index":563,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setbtnlabel",{"_index":719,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shuffle(possiblekickoff",{"_index":977,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcompon",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.startmatchday).foreach",{"_index":972,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.team",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["this.teamid",{"_index":674,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.teamlist",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{}}}],["this.teamlist.filter(t",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.filter(t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teams.find(t",{"_index":602,"title":{},"body":{"interfaces/CacheTeamsInSeason.html":{},"injectables/TeamService.html":{}}}],["this.teams.push(team",{"_index":675,"title":{},"body":{"components/ContactComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.teams.push(teampair",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["this.teamservice.addnewteam(teamnam",{"_index":131,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.getsingleteam(teamid",{"_index":1695,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.teamservice.loadallteam",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageusersComponent.html":{},"components/TeamsComponent.html":{}}}],["this.teamservice.loadteamsinseason(season.id",{"_index":1417,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason",{"_index":1416,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.teamsinseason.map(x",{"_index":961,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.token",{"_index":1486,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tourna",{"_index":1083,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentchang",{"_index":1758,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentround",{"_index":1760,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentrounds.find(t",{"_index":1765,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":916,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":921,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":1144,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":1143,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1491,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1489,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1205,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1203,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_upd",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":1699,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":1698,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1207,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscrib",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["this.translateservice.settranslation('d",{"_index":917,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":918,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":924,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscrib",{"_index":720,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscrib",{"_index":717,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.us",{"_index":533,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.rol",{"_index":565,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":570,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.userteamlist",{"_index":1130,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["this.websocketservice.send",{"_index":826,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.winnerlastround",{"_index":1766,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":1773,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":1777,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_scor",{"_index":1769,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":1775,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":1772,"title":{},"body":{"components/TournamentComponent.html":{}}}],["throwexcept",{"_index":1902,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(messag",{"_index":1995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["todo",{"_index":2014,"title":{"todo.html":{}},"body":{}}],["tojson",{"_index":1347,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["tojson(data",{"_index":1366,"title":{},"body":{"classes/MatchViewModel.html":{}}}],["token",{"_index":525,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{}}}],["tournament",{"_index":191,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"coverage.html":{}}}],["tournament(t",{"_index":1754,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.compon",{"_index":1793,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":1727,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":1726,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.nam",{"_index":1099,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournamentchang",{"_index":1733,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompar",{"_index":1734,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare(c1",{"_index":1743,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompon",{"_index":190,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentid",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["tournamentmodul",{"_index":1787,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentround",{"_index":1728,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentroutingmodul",{"_index":1791,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["translat",{"_index":134,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/cor",{"_index":38,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1434,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodul",{"_index":366,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":367,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservic",{"_index":714,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["tree",{"_index":111,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["tri",{"_index":1419,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{}}}],["true",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":1312,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"modules/MaterialModule.html":{}}}],["tupel",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"interfaces/CacheTeamsInSeason.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"classes/Credentials.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":794,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["types/googlemap",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2000,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":753,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"miscellaneous/functions.html":{}}}],["updatesinglematch",{"_index":1282,"title":{},"body":{"injectables/MatchService.html":{}}}],["updatesinglematch(matchid",{"_index":1306,"title":{},"body":{"injectables/MatchService.html":{},"interfaces/MatchUpdateMessage.html":{}}}],["useclass",{"_index":368,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["usefactori",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["usernam",{"_index":522,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["username_requir",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["userrol",{"_index":518,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{},"components/ManageusersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":566,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userrole.team_manag",{"_index":568,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["users/m",{"_index":543,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":1108,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["usevalu",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["val",{"_index":1096,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["valid",{"_index":653,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":1126,"title":{},"body":{"components/ManageusersComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":656,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageusersComponent.html":{}}}],["validators.requir",{"_index":655,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/ManageusersComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["valu",{"_index":213,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/WebsocketService.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":795,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["var",{"_index":139,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["variabl",{"_index":1903,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["viertelfinal",{"_index":1781,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":762,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplet",{"_index":784,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"classes/MatchViewModel.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocket",{"_index":1812,"title":{},"body":{"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["websocketconnect",{"_index":1811,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessag",{"_index":1804,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketmessagetyp",{"_index":781,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.match_upd",{"_index":1208,"title":{},"body":{"components/MatchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketmessagetypes.pitch_ad",{"_index":827,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketservic",{"_index":285,"title":{"injectables/WebsocketService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"injectables/WebsocketService.html":{},"coverage.html":{}}}],["websocketservicefactori",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["websocketservicefactory(provid",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["werden",{"_index":1000,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["winner.nam",{"_index":1779,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":1778,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerlastround",{"_index":1729,"title":{},"body":{"components/TournamentComponent.html":{}}}],["ws",{"_index":1831,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws://192.168.178.23:3001/w",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://${window.location.hostname}/w",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wss://manager.wildeligabremen.de/w",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsserverurl",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":962,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.index",{"_index":968,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.match_day_id",{"_index":950,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":971,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(i",{"_index":979,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":980,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ye",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"classes/MatchViewModel.html":{},"injectables/SeasonService.html":{},"miscellaneous/functions.html":{}}}],["zip",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["zone.j",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":257,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  addNewTeam(teamName: string) {\n    this.teamService.addNewTeam(teamName);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeamId\n                            \n                            \n                                homeTeamId\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                teamList\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                createMatch\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, apiClient: Client, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \naddTeam()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMatch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveTeam(tupel: Team_pairs)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tupel\n                                                        \n                                                                    Team_pairs\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateFrom(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlanDateTo(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     AddMatchData\n\n                    \n                \n                    \n                        \n                            Type :     AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guestTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeamId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        homeTeamId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateFrom:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newRoundPlanDateTo:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team_pairs[]\n\n                    \n                \n                    \n                        \n                            Type :     Team_pairs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { Team_pairs, Team, Client, SetRoundBody, Date_period } from '../../../../../api';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\n\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeamId: string;\n  guestTeamId: string;\n\n  teams: Team_pairs[] = new Array();\n  teamList: Team[];\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    private apiClient: Client,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n      dateTimeAdapter.setLocale(this.i18Service.currentLang);\n      this.translateService.onLangChange.subscribe(\n        (lang) => {\n          dateTimeAdapter.setLocale(lang);\n        }\n      );\n    }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  addTeam() {\n    const teamPair: Team_pairs = new Team_pairs();\n    teamPair.guest_team_id = this.guestTeamId.toString();\n    teamPair.home_team_id = this.homeTeamId.toString();\n    this.teams.push(teamPair);\n    this.teamList = this.teamList.filter(t => t.id !== this.homeTeamId);\n    this.teamList = this.teamList.filter(t => t.id !== this.guestTeamId);\n    delete this.homeTeamId;\n    delete this.guestTeamId;\n  }\n\n  removeTeam(tupel: Team_pairs) {\n    this.teams = this.teams.filter(t => t !== tupel);\n  }\n\n  createMatch() {\n    const body = new SetRoundBody();\n    body.date_period = new Date_period();\n    body.date_period.from = this.newRoundPlanDateFrom;\n    body.date_period.to = this.newRoundPlanDateTo;\n    body.team_pairs = this.teams;\n    this.apiClient.setRound(this.data.tournamentId, this.data.round, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      }, (error) => {\n      }\n    );\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{teamService.getTeamById(tupel.home_team_id).name}}\n      \n      \n        -\n      \n      \n        {{teamService.getTeamById(tupel.guest_team_id).name}}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n          \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n          {{ 'PLAN_DATE_TO'| translate}}:\n          \n          {{ 'BUTTON.SET_TIME' | translate}}\n          \n        \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{teamService.getTeamById(tupel.home_team_id).name}}                    -                    {{teamService.getTeamById(tupel.guest_team_id).name}}                              -                                                                        {{team.name}}                                                                          {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                  {{ \\'BUTTON.SET_TIME\\' | translate}}                              {{ \\'PLAN_DATE_TO\\'| translate}}:                    {{ \\'BUTTON.SET_TIME\\' | translate}}                                    {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddteamComponent\n                            \n                            \n                                AddtournamentroundComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                ManageseasonComponent\n                            \n                            \n                                ManagetournamentComponent\n                            \n                            \n                                ManageusersComponent\n                            \n                            \n                                MatchSchedulingComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AddtournamentroundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AdminRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AdminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                websocketService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, authService: AuthenticationService, i18Service: I18Service, websocketService: WebsocketService, matchService: MatchService, snackBar: MatSnackBar, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadGoogleMapsScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadGoogleMapsScript()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLangSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLangSelect(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openChangePasswordDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenChangePasswordDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openLoginDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenLoginDialog()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            websocketService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        websocketService:     WebsocketService\n\n                    \n                \n                    \n                        \n                            Type :     WebsocketService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener } from '@angular/core';\nimport { SeasonService } from './services/season.service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { WebsocketService } from './services/websocket.service';\nimport { MatchService } from './services/match.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    public seasonService: SeasonService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public websocketService: WebsocketService,\n    private matchService: MatchService,\n    public snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private dialog: MatDialog) {\n  }\n\n  async ngOnInit() {\n    this.loadGoogleMapsScript();\n    if (this.authService.accessToken) {\n      await this.authService.loadUser();\n    }\n    this.matchService.matchUpdated.subscribe(\n      (data) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('RESULT_UPDATED', { homeTeam: data.homeTeamName, guestTeam: data.guestTeamName })\n          },\n          panelClass: ['alert', 'alert-info']\n        });\n      });\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n        \n      \n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                                        {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                          Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  AppCoreModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ChangepasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthInterceptor\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TeamService } from './services/team.service';\nimport { SeasonService } from './services/season.service';\nimport { PitchService } from './services/pitch.service';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { API_BASE_URL } from '../api';\nimport { environment } from '../environments/environment';\nimport { WebsocketService } from './services/websocket.service';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { AppCoreModule } from './app-core.module';\nregisterLocaleData(localeDe);\n\nexport function teamServiceFactory(provider: TeamService) {\n  return () => provider.initLoadTeams();\n}\n\nexport function seasonServiceFactory(provider: SeasonService) {\n  return () => provider.loadSeasonInProgress();\n}\n\nexport function pitchServiceFactory(provider: PitchService) {\n  return () => provider.load();\n}\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function websocketServiceFactory(provider: WebsocketService) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: teamServiceFactory,\n      deps: [TeamService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: seasonServiceFactory,\n      deps: [SeasonService], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pitchServiceFactory,\n      deps: [PitchService], multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    },\n    {\n      provide: API_BASE_URL,\n      useValue: environment.serverUrl\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: websocketServiceFactory,\n      deps: [WebsocketService], multi: true\n    },\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  { path: '', redirectTo: 'matchplan', pathMatch: 'full' },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        intercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth.interceptor.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                setAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    accessToken\n                                \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, httpClient: HttpClient, router: Router, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword(oldPassword: string, newPassword: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oldPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        newPassword\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTeamAdminForTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isTeamAdminForTeam(teamId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loginAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginAsync(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setAccessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setAccessToken(value: Credentials)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Credentials\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        accessToken\n                    \n                \n\n                \n                    \n                        getaccessToken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheTeamsInSeason.html":{"url":"interfaces/CacheTeamsInSeason.html","title":"interface - CacheTeamsInSeason","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheTeamsInSeason\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seasonId\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seasonId\n                                    \n                                \n                                \n                                    \n                                        seasonId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            changePassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        changePassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPassword:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oldPasswordWrong:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      if (await this.authService.changePassword(this.oldPassword.value, this.newPassword.value)) {\n          this.oldPasswordWrong = false;\n          this.authService.logout();\n          this.dialogRef.close();\n      } else {\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teamIds\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, apiClient: Client, teamIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Client } from '../../../../api';\n\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  public teams: Team[] = new Array();\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    @Inject(MAT_DIALOG_DATA) public teamIds: string[]) { }\n\n  ngOnInit() {\n    for (const teamId of this.teamIds) {\n      this.apiClient.getTeam(teamId).subscribe(\n        (team) => {\n          this.teams.push(team);\n        });\n    }\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                    \n                            \n                            Type :    Contact_person\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact_person } from '../../../../api';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact_person;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactlistComponent\n                            \n                            \n                                PitchesComponent\n                            \n                            \n                                TeamsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ContactlistRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ContactlistRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Credentials.html":{"url":"classes/Credentials.html","title":"class - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, pitchService: PitchService, apiClient: Client, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkNewPitchName\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckNewPitchName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPitchSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPitchSelect(pitch: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onShowCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \nonShowCreateNewPitch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        adressAutoComplete:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                    \n                        \n                            Default value : new Pitch()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchLabelExist:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newPitchPlaceFormGroup:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        places:     google.maps.places.Autocomplete\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showCreateNewPitch:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Pitch, LocateMatchBody, Client, CreatePitchBody } from 'src/api';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch = new Pitch();\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private pitchService: PitchService,\n    private apiClient: Client,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private websocketService: WebsocketService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch) {\n    this.match.pitch = pitch;\n  }\n\n  onSaveClicked() {\n    const body: LocateMatchBody = new LocateMatchBody();\n    body.pitch_id = this.newMatchPitch.value.id;\n    this.apiClient.locateMatch(this.match.id, body).subscribe(\n      () => {\n        this.dialogRef.close(true);\n      },\n      (error) => {\n        this.dialogRef.close(false);\n      }\n    );\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n      const body: CreatePitchBody = new CreatePitchBody();\n      body.label = this.newPitch.label;\n      body.location_latitude = this.newPitch.location_latitude;\n      body.location_longitude = this.newPitch.location_longitude;\n      this.apiClient.createPitch(body).subscribe(\n        async (pitchId) => {\n          this.newPitch.id = pitchId.id;\n          this.newMatchPitch.setValue(this.newPitch);\n          this.pitchService.pitchAdded.next(null);\n          this.websocketService.send(\n            {\n              type: WebSocketMessageTypes.PITCH_ADDED,\n              data: pitchId\n            }\n          );\n        }\n      );\n    }\n  }\n  checkNewPitchName() {\n    const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    if (pitch) {\n      this.newPitchFormControl.setErrors({ pitchexist: true });\n    } else {\n      this.newPitchFormControl.setErrors(null);\n      this.newPitchFormControl.updateValueAndValidity();\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                                        {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, matchService: MatchService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  // onCancelResultClicked() {\n  //   this.matchService.\n  // }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: MatchViewModel, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, apiCLient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiCLient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kickoffSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nkickoffSet(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSaveClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSaveClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match:     MatchViewModel\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchKickoff:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { Client, ScheduleMatchBody } from '../../../../api';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: MatchViewModel,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private apiCLient: Client\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.apiCLient.scheduleMatch(this.match.id, { kickoff: this.matchKickoff }).subscribe(\n      (t) => {\n        this.dialogRef.close(true);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLang\n                            \n                            \n                        \n                    \n                \n                \n                    \nchangeLang(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLang:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    let defaultLang = localStorage.getItem('LANG');\n    if (!defaultLang) {\n      defaultLang = this.translateService.getBrowserLang();\n    }\n    if (!defaultLang) {\n      defaultLang = 'de';\n    }\n    this.changeLang(defaultLang);\n  }\n\n  changeLang(lang: string) {\n    localStorage.setItem('LANG', lang);\n    this.translateService.use(lang);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:     ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForgot\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordForgot(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { Client, SendPasswordResetMailBody } from '../../../api';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  passwordForgot(email: string) {\n    if (email) {\n      const body = new SendPasswordResetMailBody();\n      body.email = email;\n      body.target_path = 'newpassword';\n      this.apiClient.sendPasswordResetMail(body).subscribe(\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        },\n        () => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger']\n          });\n        }\n      );\n    } else {\n      this.loginForm.controls['username'].setErrors({required: true});\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User, Client, UserRole, ChangePasswordBody, API_BASE_URL } from '../../api';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\n\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nclass Credentials {\n  constructor(public token: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  user: User;\n\n  public setAccessToken(value: Credentials) {\n    localStorage.setItem('ACCESS_TOKEN', JSON.stringify(value));\n  }\n\n  public get accessToken(): string {\n    const cred: Credentials = JSON.parse(localStorage.getItem('ACCESS_TOKEN'));\n    return cred ? cred.token : null;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private apiClient: Client,\n    private httpClient: HttpClient,\n    private router: Router,\n    @Optional() @Inject(API_BASE_URL) private baseUrl?: string\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(context.username.toLowerCase() + ':' + context.password);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        this.httpClient.get(this.baseUrl + '/users/me', { headers: headers, observe: 'response' }).subscribe(\n          async (response) => {\n            const data = {\n              username: response.body['email'],\n              firstName: response.body['first_name'],\n              lastName: response.body['last_name'],\n              token: response.headers.get('x-token')\n            };\n            this.setAccessToken(new Credentials(data.token));\n            this.user = await this.loadUser();\n            if (!this.user) {\n              resolve(false);\n            }\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getAuthenticatedUser().subscribe(\n          (user) => {\n            this.user = user;\n            resolve(user);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          },\n          () => {\n          });\n      });\n  }\n\n  logout() {\n    this.setAccessToken(null);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.Team_manager : false;\n  }\n\n  public isTeamAdminForTeam(teamId) {\n    return this.isTeamAdmin && this.user.teams.find(t => t === teamId);\n  }\n\n  async changePassword(oldPassword: string, newPassword: string): Promise {\n    return new Promise(\n      (resolve) => {\n        let headers = new HttpHeaders();\n        const passBase64 = Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword);\n        headers = headers.append('Authorization', 'Basic ' + passBase64);\n        headers = headers.append('Content-Type', 'application/json; charset=utf-8');\n        const body = new ChangePasswordBody();\n        body.new_password = newPassword;\n        this.httpClient.put('/api/users/me/password', JSON.stringify(body), {headers: headers }).subscribe(\n          (response) => {\n            resolve(true);\n          }, err => {\n            resolve(false);\n          });\n      }\n    );\n}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournament\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createNewTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateNewTournament(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editRound\n                            \n                            \n                        \n                    \n                \n                \n                    \neditRound()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenRounds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadAllTournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTournaments()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            onTournamentSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onTournamentSelected()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createRoundNr:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournament:     Tournament\n\n                    \n                \n                    \n                        \n                            Type :     Tournament\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        manageTournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rounds:     number[][]\n\n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTeamCount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tournament, Client, CreateTournamentBody, Match_day } from '../../../../api';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  manageTournament: Tournament;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRounds: Match_day[];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.apiClient.getAllTournaments().subscribe((tournaments) => {\n      this.tournaments = tournaments;\n    });\n  }\n\n  createNewTournament(name: string) {\n    this.apiClient.createTournament({ name: name }).subscribe(\n      (id) => {\n        this.loadAllTournaments();\n      }\n    );\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = await this.matchService.getRoundsInTournament(this.manageTournament.id);\n    this.createRoundNr = this.manageTournamentRounds.length;\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT' | translate}}\n    \n  \n  \n    \n      \n        \n      \n    \n    \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\' | translate}}                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                                        {{ \\'MATCH\\' | translate }} {{ game }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreateUserBodyRole\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                teamList\n                            \n                            \n                                userRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChangeTeamSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChangeTeamSelect(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CreateUserBodyRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CreateUserBodyRole:     \n\n                    \n                \n                    \n                        \n                            Default value : CreateUserBodyRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamList:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userRole:     CreateUserBodyRole\n\n                    \n                \n                    \n                        \n                            Type :     CreateUserBodyRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userTeamList:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team, CreateUserBodyRole, CreateUserBody, Client } from '../../../../api';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSelectChange, MatSnackBar } from '@angular/material';\nimport { TeamService } from '../../../services/team.service';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  teamList: Team[];\n  userTeamList: string[] = new Array();\n\n  userRole: CreateUserBodyRole;\n\n  CreateUserBodyRole = CreateUserBodyRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar) {\n\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  async ngOnInit() {\n    this.teamList = await this.teamService.loadAllTeams();\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  createUser() {\n    const body = new CreateUserBody();\n\n    body.email = this.email.value.toLowerCase();\n    body.password = this.password.value;\n    body.teams = this.userTeamList;\n    body.first_name = this.firstName.value;\n    body.last_name = this.lastName.value;\n    body.role = CreateUserBodyRole.Team_manager;\n    this.apiClient.createUser(body).subscribe(\n      (res) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_USER_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'TAB.ADD_USER' | translate }}\n      \n      \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_EMAIL\n            \n          \n        \n        \n          \n            \n              \n              FIRST_NAME_REQUIRED\n            \n            \n              \n              LAST_NAME_REQUIRED\n            \n          \n        \n        \n          \n            \n              \n              ERRORS.ENTER_VALID_PASSWORD\n            \n          \n        \n        \n          \n            \n              \n                \n                  {{ CreateUserBodyRole.Admin }}\n                \n                \n                  {{ CreateUserBodyRole.Team_manager }}\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n                  {{team.name}}\n                \n              \n            \n          \n        \n        \n          \n            \n              {{ 'BUTTON.ADD' | translate}}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'TAB.ADD_USER\\' | translate }}                                                                      ERRORS.ENTER_VALID_EMAIL                                                                                        FIRST_NAME_REQUIRED                                                    LAST_NAME_REQUIRED                                                                                        ERRORS.ENTER_VALID_PASSWORD                                                                                                            {{ CreateUserBodyRole.Admin }}                                                  {{ CreateUserBodyRole.Team_manager }}                                                                                                                                          {{team.name}}                                                                                                        {{ \\'BUTTON.ADD\\' | translate}}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                            \n                                sendMatchUpdatedMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                resultUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, matchService: MatchService, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, websocketService: WebsocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        websocketService\n                                                  \n                                                        \n                                                                    WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                    \n                            \n                            Type :    MatchViewModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        resultUpdated\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(val: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openContactModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenContactModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditPitchDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditPitchDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditResultDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditResultDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openEditTimeDialog\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenEditTimeDialog(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendMatchUpdatedMsg\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendMatchUpdatedMsg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatchViewModel } from '../../../models/match.viewmodel';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { MatchService, MatchUpdateMessage } from '../../../services/match.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { WebsocketService } from '../../../services/websocket.service';\nimport { WebSocketMessageTypes } from 'shared/models/websocket.model';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: MatchViewModel;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n  @Output() resultUpdated: EventEmitter = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public matchService: MatchService,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private websocketService: WebsocketService) {\n\n    this.matchService.matchUpdated.subscribe(\n      async (msg) => {\n        if (this.match.id === msg.matchId) {\n          this.match = null;\n          this.match = await this.matchService.updateSingleMatch(msg.matchId);\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.resultUpdated.emit(this.match);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditPitchDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  openEditTimeDialog(match: MatchViewModel) {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.match = await this.matchService.updateSingleMatch(match.id);\n          this.sendMatchUpdatedMsg();\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n        }\n      });\n  }\n\n  sendMatchUpdatedMsg() {\n    this.websocketService.send(\n      {\n        type: WebSocketMessageTypes.MATCH_UPDATED,\n        data: {\n          matchId: this.match.id,\n          homeTeamName: this.match.home_team.name,\n          guestTeamName: this.match.guest_team.name,\n        }\n      }\n    );\n  }\n\n  openContactModal() {\n    const contacts = new Array();\n    contacts.push(this.match.home_team.id);\n    contacts.push(this.match.guest_team.id);\n    this.dialog.open(ContactComponent, {\n      data: contacts,\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                filterPitches\n                            \n                            \n                                getMatchDay\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                            \n                                matchDaysInSeason\n                            \n                            \n                                matchesInSeason\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                    \n                            \n                            Type :    Season\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        matchDaysInSeason\n                    \n                    \n                            \n                            Type :    Match_day[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        matchesInSeason\n                    \n                    \n                            \n                            Type :    MatchViewModel[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        teamsInSeason\n                    \n                    \n                            \n                            Type :    Team[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addKickoffDateToPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \naddKickoffDateToPitch(offset: number, event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offset\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayPitch(pitch?: Pitch)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                        \n                                                                    Pitch\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterPitches(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removePair\n                            \n                            \n                        \n                    \n                \n                \n                    \nremovePair(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scheduleMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \nscheduleMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shuffle\n                            \n                            \n                        \n                    \n                \n                \n                    \nshuffle(a: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:127\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredPitches:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        newMatchPitch:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        possibleKickoffs:     IPossibleKickoffs[]\n\n                    \n                \n                    \n                        \n                            Type :     IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startmatchDay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Season, Match_day, Pitch, Team } from '../../../../../api';\nimport { MatchViewModel } from 'src/app/models/match.viewmodel';\nimport { MatchService } from 'src/app/services/match.service';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { TeamService } from '../../../../services/team.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: Season;\n  @Input() matchesInSeason: MatchViewModel[];\n  @Input() matchDaysInSeason: Match_day[];\n  @Input() teamsInSeason: Team[];\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay: number;\n\n  get matchDayLength(): number {\n    return this.matchesInSeason ? this.matchesInSeason.filter(x => x.match_day_id === this.matchDaysInSeason[0].id).length : 0;\n  }\n\n  constructor(\n    private pitchService: PitchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    if (this.pitchService.pitches) {\n      this.filteredPitches = this.newMatchPitch.valueChanges\n        .pipe(\n          startWith(''),\n          map(value => typeof value === 'string' ? value : value.label),\n          map((pitch) => pitch ? this.filterPitches(pitch) : this.pitchService.pitches.slice())\n        );\n    }\n  }\n\n  ngOnChanges() {\n  }\n\n  filterPitches(searchTerm: string): Pitch[] {\n    return this.pitchService.pitches.filter(p => p.label.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDaysInSeason.find(t => t.id === id) || new Match_day();\n  }\n\n  displayPitch(pitch?: Pitch): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.teamsInSeason.map(x => { team: x, canPlay: true })\n      };\n      console.log(newElement);\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.matchDaysInSeason.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        const matches = this.matchesInSeason.filter(x => x.match_day_id === matchDay.id);\n        matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team_id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team_id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  match.kickoff = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  match.kickoff.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  match.kickoff.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  {{ manageSeason.name }}\n\n\n\n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  scheduleMatches\n  \n    \n      ab Spieltag:\n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n\n\n  \n    {{ 'MATCHDAY' | translate:{ matchDay: getMatchDay(match.match_day_id).number } }}\n  \n  \n    {{ match.home_team.name }}\n  \n  \n    -\n  \n  \n    {{ match.guest_team.name }}\n  \n  \n    ({{ getMatchDay(match.match_day_id).start_date | date:'short':'':i18Service.currentLang}})\n  \n  \n    ({{ getMatchDay(match.match_day_id).end_date | date:'shortDate'}})\n  \n  \n    ({{ match.kickoff | date:'short':'':i18Service.currentLang}})\n  \n  \n    ({{ match.pitch?.label }})\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ manageSeason.name }}  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                        {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove        scheduleMatches            ab Spieltag:                        {{ matchDay.number }}                          {{ \\'MATCHDAY\\' | translate:{ matchDay: getMatchDay(match.match_day_id).number } }}        {{ match.home_team.name }}        -        {{ match.guest_team.name }}        ({{ getMatchDay(match.match_day_id).start_date | date:\\'short\\':\\'\\':i18Service.currentLang}})        ({{ getMatchDay(match.match_day_id).end_date | date:\\'shortDate\\'}})        ({{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}})        ({{ match.pitch?.label }})  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getMatchDaysInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInSeason\n                            \n                            \n                                    Public\n                                    Async\n                                getMatchesInTournament\n                            \n                            \n                                    Public\n                                    Async\n                                getRoundsInTournament\n                            \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                matchConverter\n                            \n                            \n                                matchConverterArray\n                            \n                            \n                                submitMatchResult\n                            \n                            \n                                updateSingleMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, teamService: TeamService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchDaysInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchDaysInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getMatchesInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getRoundsInTournament\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoundsInTournament(tournamentId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tournamentId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isMatchPlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isMatchPlayed(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValidResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isValidResult(score: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:124\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        score\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverter\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverter(match: Match)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchConverterArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchConverterArray(matches: Match[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matches\n                                                        \n                                                                    Match[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatchViewModel[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitMatchResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        homeScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        guestScore\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSingleMatch\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSingleMatch(matchId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/match.service.ts:146\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchUpdated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchUpdateMessage.html":{"url":"interfaces/MatchUpdateMessage.html","title":"interface - MatchUpdateMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchUpdateMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeamName\n                                \n                                \n                                        homeTeamName\n                                \n                                \n                                        matchId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeamName\n                                    \n                                \n                                \n                                    \n                                        guestTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamName\n                                    \n                                \n                                \n                                    \n                                        homeTeamName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Match, SubmitMatchResultBody, Match_day } from '../../api';\nimport { MatchViewModel } from '../models/match.viewmodel';\nimport { TeamService } from './team.service';\nimport { PitchService } from './pitch.service';\nimport { Subject } from 'rxjs';\n\nexport interface MatchUpdateMessage {\n  matchId: string;\n  homeTeamName: string;\n  guestTeamName: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  public matchUpdated: Subject = new Subject();\n\n  constructor(\n    private apiClient: Client,\n    private teamService: TeamService,\n    private pitchService: PitchService) { }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInSeason(seasonId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(seasonId, undefined, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getMatchDaysInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getMatchDaysInSeason(seasonId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  public async getMatchesInTournament(tournamentId: string, teamId?: string, matchDayId?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamId) {\n          teamId = undefined;\n        }\n        if (!matchDayId) {\n          matchDayId = undefined;\n        }\n        this.apiClient.getMatches(undefined, tournamentId, teamId, matchDayId).subscribe(\n          (matches) => {\n            resolve(this.matchConverterArray(matches));\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  public async getRoundsInTournament(tournamentId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getRoundsInTournament(tournamentId).subscribe(\n          (matchDays) => {\n            resolve(matchDays);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  // public async cancelMatch(matchId: string) {\n  //   return new Promise();\n    matches.forEach((match) => {\n      mvwa.push(this.matchConverter(match));\n    });\n    return mvwa;\n  }\n\n  public isMatchPlayed(match: Match): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const matchResult = new SubmitMatchResultBody();\n        matchResult.guest_score = guestScore;\n        matchResult.home_score = homeScore;\n        this.apiClient.submitMatchResult(matchId, matchResult).subscribe(\n          (b) => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  updateSingleMatch(matchId: string): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getMatch(matchId).subscribe(\n          (match) => {\n            resolve(this.matchConverter(match));\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchViewModel.html":{"url":"classes/MatchViewModel.html","title":"class - MatchViewModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchViewModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/match.viewmodel.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Match\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                guest_team\n                            \n                            \n                                    Public\n                                home_team\n                            \n                            \n                                    Public\n                                pitch\n                            \n                            \n                                    Optional\n                                cancellation_reason\n                            \n                            \n                                    Optional\n                                cancelled_at\n                            \n                            \n                                    Optional\n                                guest_score\n                            \n                            \n                                    Optional\n                                guest_team_id\n                            \n                            \n                                    Optional\n                                home_score\n                            \n                            \n                                    Optional\n                                home_team_id\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                kickoff\n                            \n                            \n                                    Optional\n                                match_day_id\n                            \n                            \n                                    Optional\n                                pitch_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromJS\n                            \n                            \n                                init\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            guest_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            home_team\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team:     Team\n\n                    \n                \n                    \n                        \n                            Type :     Team\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch:     Pitch\n\n                    \n                \n                    \n                        \n                            Type :     Pitch\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/match.viewmodel.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancellation_reason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancellation_reason:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2988\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cancelled_at\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelled_at:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2987\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2989\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            guest_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guest_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2990\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_score\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_score:     number | undefined\n\n                    \n                \n                    \n                        \n                            Type :     number | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2991\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            home_team_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        home_team_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2992\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2993\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            kickoff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        kickoff:     Date | undefined\n\n                    \n                \n                    \n                        \n                            Type :     Date | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2994\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            match_day_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        match_day_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2995\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pitch_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitch_id:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:2996\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fromJS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fromJS(data: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3022\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3007\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toJSON\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoJSON(data?: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Match\n\n                                \n                            \n                        \n                            \n                                    Defined in Match:3029\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Match, Team, Pitch } from '../../api';\n\nexport class MatchViewModel extends Match {\n    public home_team: Team;\n    public guest_team: Team;\n    public pitch: Pitch;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchDays\n                            \n                            \n                                    Public\n                                matches\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Private\n                                season\n                            \n                            \n                                teamsInSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMatchDay\n                            \n                            \n                                    Async\n                                handleGetMatches\n                            \n                            \n                                isNewMatchDay\n                            \n                            \n                                matchDayCompare\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedMatchDay\n                                \n                                \n                                    selectedTeamId\n                                \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, matchService: MatchService, teamService: TeamService, apiClient: Client, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchDay(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            handleGetMatches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleGetMatches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNewMatchDay\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNewMatchDay(match: Match, index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    Match\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchDayCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchDayCompare(md1: Match_day, md2: Match_day)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        md1\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        md2\n                                                        \n                                                                    Match_day\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hidePlayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePlayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchDays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchDays:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matchService:     MatchService\n\n                    \n                \n                    \n                        \n                            Type :     MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamsInSeason:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedMatchDay\n                    \n                \n\n                \n                    \n                        getselectedMatchDay()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                                \n                            \n\n                \n                    \n                        setselectedMatchDay(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeamId\n                    \n                \n\n                \n                    \n                        getselectedTeamId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n                \n                    \n                        setselectedTeamId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { MatchService } from '../../services/match.service';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { Season, Team, Match_day, Client, Match } from '../../../api';\nimport { TeamService } from '../../services/team.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matches: MatchViewModel[];\n  public matchDays: Match_day[];\n  public hidePlayed: boolean;\n\n  public set selectedMatchDay(value: Match_day) {\n    localStorage.setItem('SELECTED_MATCHDAY', JSON.stringify(value));\n  }\n\n  public get selectedMatchDay(): Match_day {\n    return JSON.parse(localStorage.getItem('SELECTED_MATCHDAY')) || new Match_day();\n  }\n  private season: Season;\n\n  public get selectedTeamId() {\n    return localStorage.getItem('SELECTED_TEAM') || '0';\n  }\n\n  public set selectedTeamId(value: string) {\n    localStorage.setItem('SELECTED_TEAM', value);\n  }\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  teamsInSeason: Team[];\n\n  constructor(\n    private seasonService: SeasonService,\n    public matchService: MatchService,\n    private teamService: TeamService,\n    private apiClient: Client,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      async (season) => {\n        if (season) {\n          this.season = season;\n          this.matchDays = await this.apiClient.getMatchDaysInSeason(season.id).toPromise();\n          this.handleGetMatches();\n          this.teamsInSeason = await this.teamService.loadTeamsInSeason(season.id);\n        }\n      }\n    );\n  }\n\n  async handleGetMatches() {\n    this.matches = null;\n    if (this.season) {\n      const selectedTeamId = this.selectedTeamId === '0' ? undefined : this.selectedTeamId;\n      try {\n        this.matches = await this.matchService.getMatchesInSeason(this.season.id, selectedTeamId, this.selectedMatchDay.id);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  matchDayCompare(md1: Match_day, md2: Match_day) {\n    return md1 && md2 && md1.id === md2.id;\n  }\n\n  getMatchDay(id: string): Match_day {\n    return this.matchDays.find(t => t.id === id);\n  }\n\n  isNewMatchDay(match: Match, index: number): boolean {\n    if (!match || index \n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_MATCHDAYS' | translate }}\n          \n          \n            {{ matchDay.number }}\n            {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang\n              }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n          \n        \n      \n    \n    \n      \n        \n          \n            {{ 'ALL_TEAMS' | translate }}\n          \n          \n            {{ team.name }}\n          \n        \n      \n    \n    \n      \n        filter_list\n        filter_list\n      \n      \n        \n          {{ 'HIDE_PLAYED_MATCHES' | translate }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'MATCHDAY' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|\n      date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ getMatchDay(match.match_day_id).end_date| date:'shortDate':'':i18Service.currentLang\n      }})\n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ALL_MATCHDAYS\\' | translate }}                                {{ matchDay.number }}            {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang              }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                {{ team.name }}                                              filter_list        filter_list                              {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                  {{ \\'MATCHDAY\\' | translate:{matchDay: getMatchDay(match.match_day_id).number} }} ({{ getMatchDay(match.match_day_id).start_date|      date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ getMatchDay(match.match_day_id).end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang      }})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MatchplanComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppCoreModule\n                            \n                            \n                                    MatchplanRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  MatchplanRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, formBuilder: FormBuilder, authService: AuthenticationService, apiClient: Client, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User, Client, ChangePasswordBody } from 'src/api';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private apiClient: Client,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.setAccessToken({ token: params['token'] });\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.setAccessToken({ token: null });\n          }\n        }\n      }\n    );\n  }\n\n  submit() {\n    const body = new ChangePasswordBody();\n    body.new_password = this.loginForm.value.password;\n    this.apiClient.changePassword(body).subscribe(\n      () => {\n        this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n      },\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger'],\n          duration: 30000\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NewpasswordComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    NewpasswordRoutingModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  NewpasswordRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pitchAdded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPitchById\n                            \n                            \n                                    Public\n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pitches\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPitchById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPitchById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Pitch\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadPitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPitches()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchAdded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitchAdded:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pitches\n                    \n                \n\n                \n                    \n                        getpitches()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:10\n                                \n                            \n\n                \n                    \n                        setpitches(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/pitch.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, Pitch } from '../../api';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  public get pitches(): Pitch[] {\n    return JSON.parse(localStorage.getItem('PITCHES')) || null;\n  }\n  public set pitches(value: Pitch[]) {\n    localStorage.setItem('PITCHES', JSON.stringify(value));\n  }\n\n  pitchAdded: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.pitchAdded.subscribe(\n      () => {\n        this.load();\n      }\n    );\n  }\n\n  getPitchById(id: string): Pitch {\n    if (this.pitches) {\n      return this.pitches.find(t => t.id === id);\n    } else {\n      return new Pitch();\n    }\n  }\n\n  public async load() {\n    this.pitches = await this.loadPitches();\n  }\n\n  async loadPitches(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllPitches().subscribe(\n          (pitches) => {\n            resolve(pitches);\n          },\n          (error) => {\n            resolve(this.pitches);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pitches:     Pitch[]\n\n                    \n                \n                    \n                        \n                            Type :     Pitch[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Pitch } from '../../../../api';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  public pitches: Pitch[];\n\n  constructor(\n    private pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n    this.pitches = await this.pitchService.loadPitches();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeason\n                            \n                            \n                                seasonCreated\n                            \n                            \n                                seasonInProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                loadSeasonInProgress\n                            \n                            \n                                    Public\n                                    Async\n                                loadSeasons\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _currentSeason\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasonInProgress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadSeasons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSeasons(state?: SeasonState | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    SeasonState | null\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonCompare(c1: Season, c2: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/season.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSeason:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonCreated:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonInProgress:     Season[]\n\n                    \n                \n                    \n                        \n                            Type :     Season[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _currentSeason\n                    \n                \n\n                \n                    \n                        get_currentSeason()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:11\n                                \n                            \n\n                \n                    \n                        set_currentSeason(season: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/season.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            season\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Client, SeasonState, Season } from '../../api/liga-manager-api';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  seasonInProgress: Season[];\n  private get _currentSeason(): Season {\n    return JSON.parse(localStorage.getItem('SELECTED_SEASON')) || null;\n  }\n\n  private set _currentSeason(season: Season) {\n    if (season) {\n      localStorage.setItem('SELECTED_SEASON', JSON.stringify(season));\n    }\n  }\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n  seasonCreated: Subject = new Subject();\n\n  constructor(private apiClient: Client) {\n    this.currentSeason.subscribe(\n      (season) => {\n        this._currentSeason = season;\n      }\n    );\n    this.seasonCreated.subscribe(\n      () => {\n        this.loadSeasonInProgress();\n      }\n    );\n  }\n\n  public async loadSeasonInProgress() {\n    this.seasonInProgress = await this.loadSeasons(SeasonState.Progress);\n  }\n\n  public async loadSeasons(state?: SeasonState | null): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllSeasons().subscribe(\n          (seasons: Season[]) => {\n            resolve(state ? seasons.filter(s => s.state === state) : seasons);\n          },\n          (error: any) => {\n            resolve(null);\n          },\n          () => {\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: Season, c2: Season) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeasonChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \ncurrentSeasonChanged(event: MatSelectChange)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MatSelectChange\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        season:     Season\n\n                    \n                \n                    \n                        \n                            Type :     Season\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seasonService:     SeasonService\n\n                    \n                \n                    \n                        \n                            Type :     SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Season } from '../../../../api';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  season: Season;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(public seasonService: SeasonService) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    if (this.seasonService.seasonInProgress && !this.season) {\n      this.seasonService.currentSeason.next(this.seasonService.seasonInProgress[0]);\n    }\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                ContactPersonComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                MatchComponent\n                            \n                            \n                                SeasonchooserComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ContactComponent\n                            \n                            \n                                EditmatchPitchComponent\n                            \n                            \n                                EditmatchResultComponent\n                            \n                            \n                                EditmatchTimeComponent\n                            \n                            \n                                SnackbarComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ContactPersonComponent\n                            \n                            \n                                    MatchComponent\n                            \n                            \n                                    MaterialModule\n                            \n                            \n                                    SeasonchooserComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     ISnackBarData\n\n                    \n                \n                    \n                        \n                            Type :     ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ranking\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadRanking\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, api: Client, teamService: TeamService, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                    SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadRanking\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadRanking(season: Season)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        season\n                                                        \n                                                                    Season\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ranking\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ranking:     Ranking\n\n                    \n                \n                    \n                        \n                            Type :     Ranking\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Ranking, Client, Season } from '../../../api';\nimport { SeasonService } from '../../services/season.service';\nimport { TeamService } from '../../services/team.service';\nimport { MatchService } from '../../services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  public ranking: Ranking;\n\n  constructor(\n    private seasonService: SeasonService,\n    private api: Client,\n    public teamService: TeamService,\n    private matchService: MatchService) {\n  }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.loadRanking(season);\n      }\n    );\n    this.matchService.matchUpdated.subscribe(\n      (matchId) => {\n        this.loadRanking(this.seasonService.currentSeason.getValue());\n      });\n  }\n\n  loadRanking(season: Season) {\n    this.ranking = null;\n    if (season) {\n      this.api.getRanking(season.id).subscribe(\n        (ranking) => {\n          this.ranking = ranking;\n        },\n        (error) => {\n          delete this.ranking;\n        },\n        () => {\n\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n  \n    \n      \n        \n          TABLE.PLACE\n          TABLE.TEAM\n          TABLE.GAMES\n          TABLE.WIN_DRAW_LOST\n          TABLE.TORE:TORE\n          TABLE.POINTS\n        \n      \n      \n        \n          \n            {{ pos.number }}\n            {{ teamService.getTeamById(pos.team_id).name }}\n            {{ pos.matches }}\n            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n            {{ pos.points }}\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  TABLE.PLACE          TABLE.TEAM          TABLE.GAMES          TABLE.WIN_DRAW_LOST          TABLE.TORE:TORE          TABLE.POINTS                                                  {{ pos.number }}            {{ teamService.getTeamById(pos.team_id).name }}            {{ pos.matches }}            {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}            {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})            {{ pos.points }}                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n  Modules\n  TableModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TableComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TableRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TableRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Public\n                                    Async\n                                getSingleTeam\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamContactByID\n                            \n                            \n                                    Public\n                                    Async\n                                initLoadTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadAllTeams\n                            \n                            \n                                    Public\n                                    Async\n                                loadTeamsInSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    teams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            addNewTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addNewTeam(teamName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Calls the API to create a new Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getSingleTeam\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSingleTeam(teamId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:168\n                            \n                        \n\n\n                \n                    \n                            Loads an Team from API\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamById(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns a Team for given teamId or an empty Team\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Team\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTeamContactByID\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTeamContactByID(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Contact_person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            initLoadTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLoadTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Initial load of all Teams (should only be called in APP_INITIALIZER)\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadAllTeams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadAllTeams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            loadTeamsInSeason\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTeamsInSeason(seasonId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/team.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Returns an Team[] for an Season.\nWith a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        teams\n                    \n                \n\n                \n                    \n                        getteams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:23\n                                \n                            \n                    \n                        \n                                Returns a List of Teams from localStorage\n\n\n                                \n                                \n                                \n                                    Returns :     Team[]\n\n                                \n                        \n                    \n\n                \n                    \n                        setteams(value: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/team.service.ts:31\n                                \n                            \n                    \n                        \n                                Stores a List of Teams to localStorage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Team, Client, CreateTeamBody, Contact_person } from '../../api';\n\ninterface CacheTeamsInSeason {\n  seasonId: string;\n  teams: Team[];\n}\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  /**\n   * Returns a List of Teams from localStorage\n   * @type {Team[]}\n   * @memberof TeamService\n   */\n  public get teams(): Team[] {\n    return JSON.parse(localStorage.getItem('TEAMS')) || null;\n  }\n\n  /**\n   * Stores a List of Teams to localStorage\n   * @memberof TeamService\n   */\n  public set teams(value: Team[]) {\n    localStorage.setItem('TEAMS', JSON.stringify(value));\n  }\n\n  constructor(\n    private apiClient: Client) {\n  }\n\n  /**\n   * Returns a Contact_person for given teamID or an empty Contact_person if no Team was found\n   * @param {string} id\n   * @returns {Contact_person}\n   * @memberof TeamService\n   */\n  getTeamContactByID(id: string): Contact_person {\n    const team: Team = this.teams.find(t => t.id === id);\n    return team.contact || {\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  /**\n   * Returns a Team for given teamId or an empty Team\n   * @param {string} id\n   * @returns {Team}\n   * @memberof TeamService\n   */\n  getTeamById(id: string): Team {\n    if (this.teams) {\n      return this.teams.find(t => t.id === id);\n    } else {\n      return new Team();\n    }\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve) => {\n        if (!teamName) {\n          resolve(false);\n        }\n        this.teams = null;\n        const createTeamParams: CreateTeamBody = new CreateTeamBody();\n        createTeamParams.name = teamName;\n        this.apiClient.createTeam(createTeamParams).subscribe(\n          async () => {\n            this.teams = await this.loadAllTeams();\n            resolve(true);\n          },\n          (error) => {\n            resolve(false);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Initial load of all Teams (should only be called in APP_INITIALIZER)\n   * @memberof TeamService\n   */\n  public async initLoadTeams() {\n    this.teams = await this.loadAllTeams();\n  }\n\n  public async loadAllTeams(): Promise {\n    return new Promise(\n      (resolve) => {\n        this.apiClient.getAllTeams().subscribe(\n          (teams) => {\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            resolve(this.teams);\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Returns an Team[] for an Season.\n   * With a Cache Mechanism, it Stores an CacheTeamsInSeason[] in localStorage\n   * @param {string} seasonId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async loadTeamsInSeason(seasonId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        let cache: CacheTeamsInSeason[] = JSON.parse(localStorage.getItem('CACHE_TEAMS_IN_SEASON'));\n        this.apiClient.getTeamsInSeason(seasonId).subscribe(\n          (teams) => {\n            if (!cache) {\n              cache = new Array();\n            } else {\n              cache = cache.filter(t => t.seasonId !== seasonId);\n            }\n            cache.push({\n              seasonId: seasonId,\n              teams: teams\n            });\n            localStorage.setItem('CACHE_TEAMS_IN_SEASON', JSON.stringify(cache));\n            resolve(teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n          },\n          (error) => {\n            if (cache) {\n              const teams = cache.find(t => t.seasonId === seasonId);\n              if (teams) {\n                resolve(teams.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1));\n              } else {\n                reject(error);\n              }\n            } else {\n              reject(error);\n            }\n          }\n        );\n      }\n    );\n  }\n\n  /**\n   * Loads an Team from API\n   * @param {string} teamId\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  public async getSingleTeam(teamId: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.apiClient.getTeam(teamId).subscribe(\n          (team) => {\n            resolve(team);\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                teams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, apiClient: Client)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmailValidOrEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmailValidOrEmpty(mail: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveContact\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        firstname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastname\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        mail\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        phone\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailFormControl:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        snackBar:     MatSnackBar\n\n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teamService:     TeamService\n\n                    \n                \n                    \n                        \n                            Type :     TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translateService:     TranslateService\n\n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Contact_person, Client, Team } from '../../../api';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  teams: Team[] = new Array();\n\n  constructor(\n    public authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private apiClient: Client) { }\n\n  ngOnInit() {\n    if (this.authService.user && this.authService.user.teams) {\n      this.authService.user.teams.forEach(\n        async (teamId) => {\n          try {\n            const team = await this.teamService.getSingleTeam(teamId);\n            this.teams.push(team);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      );\n    }\n  }\n\n  saveContact(teamId: string, firstname: string, lastname: string, mail: string, phone: string) {\n    const body = new Contact_person();\n    body.email = mail;\n    body.first_name = firstname;\n    body.last_name = lastname;\n    body.phone = phone;\n    this.apiClient.updateTeamContact(teamId, body).subscribe(\n      () => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TeamadminComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TeamadminRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TeamadminRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                    TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teams:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Team } from 'src/api';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  teams: Team[];\n\n  constructor(\n    private teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n    this.teams = await this.teamService.loadAllTeams();\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                matches\n                            \n                            \n                                tournamentRounds\n                            \n                            \n                                tournaments\n                            \n                            \n                                winnerLastRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRound\n                            \n                            \n                                getWinner\n                            \n                            \n                                newWinner\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                tournamentChanged\n                            \n                            \n                                tournamentCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tournament\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: Client, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                    I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRound\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRound(matchDayId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchDayId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Match_day\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWinner()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newWinner\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewWinner(match: MatchViewModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                        \n                                                                    MatchViewModel\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            tournamentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        tournamentChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentCompare\n                            \n                            \n                        \n                    \n                \n                \n                    \ntournamentCompare(c1: Tournament, c2: Tournament)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        c1\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        c2\n                                                        \n                                                                    Tournament\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i18Service:     I18Service\n\n                    \n                \n                    \n                        \n                            Type :     I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        matches:     MatchViewModel[][]\n\n                    \n                \n                    \n                        \n                            Type :     MatchViewModel[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentRounds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournamentRounds:     Match_day[]\n\n                    \n                \n                    \n                        \n                            Type :     Match_day[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tournaments:     Tournament[]\n\n                    \n                \n                    \n                        \n                            Type :     Tournament[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            winnerLastRound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        winnerLastRound:     Team[]\n\n                    \n                \n                    \n                        \n                            Type :     Team[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n\n                \n                    \n                        gettournament()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                                \n                            \n\n                \n                    \n                        settournament(t: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Client, Tournament, Team, Match_day } from '../../../api';\nimport { MatchViewModel } from '../../models/match.viewmodel';\nimport { MatchService } from '../../services/match.service';\nimport { I18Service } from '../../services/i18.service';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Tournament[];\n  winnerLastRound: Team[];\n  tournamentRounds: Match_day[];\n\n  get tournament(): Tournament {\n    return JSON.parse(localStorage.getItem('SELECTED_TOURNAMENT'));\n  }\n  set tournament(t: Tournament) {\n    localStorage.setItem('SELECTED_TOURNAMENT', JSON.stringify(t));\n  }\n\n  matches: MatchViewModel[][];\n\n  constructor(\n    private apiClient: Client,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.apiClient.getAllTournaments().subscribe(\n      (tournaments) => {\n        this.tournaments = tournaments;\n        if (this.tournament) {\n          this.tournamentChanged();\n        }\n      }\n    );\n  }\n\n  tournamentCompare(c1: Tournament, c2: Tournament) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n\n  async tournamentChanged() {\n    this.matches = null;\n    const matches = await this.matchService.getMatchesInTournament(this.tournament.id);\n    this.tournamentRounds = await this.matchService.getRoundsInTournament(this.tournament.id);\n    this.matches = new Array();\n    for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    }\n    this.matches = this.matches.reverse();\n    this.getWinner();\n  }\n\n  getRound(matchDayId: string): Match_day {\n    return this.tournamentRounds.find(t => t.id === matchDayId);\n  }\n\n  getWinner() {\n    this.winnerLastRound = new Array();\n    if (this.matches[0]) {\n      this.matches[0].forEach(\n        (match) => {\n          if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n            this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n          }\n        });\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n\n  newWinner(match: MatchViewModel) {\n    if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n      if (match.home_score > match.guest_score) {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n        this.winnerLastRound.push(match.home_team);\n      } else {\n        this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n        this.winnerLastRound.push(match.guest_team);\n      }\n\n      this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n  \n    \n      {{ 'WINNER_LAST_ROUND' | translate }}\n    \n    \n      \n        {{ winner.name }}\n      \n    \n  \n  \n    \n      \n        \n          {{ 'ACHTELFINALE' | translate }} -->\n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                  {{ \\'WINNER_LAST_ROUND\\' | translate }}                      {{ winner.name }}                                          {{ \\'ACHTELFINALE\\' | translate }} -->          {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TournamentComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    TournamentRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  TournamentRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                connection\n                            \n                            \n                                    Private\n                                inputStream\n                            \n                            \n                                    Public\n                                numberConnected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchService, pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                    PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            send\n                            \n                            \n                        \n                    \n                \n                \n                    \nsend(data: WebSocketMessage)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    WebSocketMessage\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connection:     Connection\n\n                    \n                \n                    \n                        \n                            Type :     Connection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inputStream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        inputStream:     QueueingSubject\n\n                    \n                \n                    \n                        \n                            Type :     QueueingSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new QueueingSubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberConnected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numberConnected:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/websocket.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { QueueingSubject } from 'queueing-subject';\nimport { environment } from 'src/environments/environment';\nimport { MatchService } from './match.service';\nimport websocketConnect, { Connection } from 'rxjs-websockets';\nimport { retryWhen, delay, share } from 'rxjs/operators';\nimport { WebSocketMessage, WebSocketMessageTypes } from '../../../shared/models/websocket.model';\nimport { PitchService } from './pitch.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private inputStream: QueueingSubject = new QueueingSubject();\n  public connection: Connection;\n  public numberConnected = 0;\n\n  constructor(\n    private matchService: MatchService,\n    private pitchService: PitchService\n  ) {\n  }\n\n  init() {\n    this.connection = websocketConnect(\n      environment.wsServerUrl,\n      this.inputStream\n    );\n\n    this.connection.messages.pipe(\n      share()\n    );\n\n    this.connection.connectionStatus.subscribe(\n      (numberConnected) => {\n        this.numberConnected = numberConnected;\n      });\n\n    this.connection.messages.pipe(\n      retryWhen(errors => errors.pipe(delay(60000)))\n    ).subscribe(\n      (message) => {\n        try {\n          const msg: WebSocketMessage = JSON.parse(message);\n          switch (msg.type) {\n            case WebSocketMessageTypes.MATCH_UPDATED:\n              this.matchService.matchUpdated.next(msg.data);\n              break;\n            case WebSocketMessageTypes.PITCH_ADDED:\n              this.pitchService.pitchAdded.next(null);\n              break;\n          }\n        } catch (error) {\n          console.error('Error parsing WS Message', error);\n        }\n      }\n    );\n  }\n\n  send(data: WebSocketMessage) {\n    const str = JSON.stringify(data);\n    this.inputStream.next(str);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CancelMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ChangePasswordBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Contact_person\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateMatchDaysBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreatePitchBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateSeasonBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateTournamentBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                CreateUserBody\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Date_period\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Event\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Identifier\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                LocateMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Match_day\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Pitch\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_penalty\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Ranking_position\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                RenameTeamBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                ScheduleMatchDayBody\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Season\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SendPasswordResetMailBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SetRoundBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SubmitMatchResultBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                SwaggerException\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Team_pairs\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                Tournament\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                injectable\n            \n            \n                Client\n            \n            \n                47 %\n                (45/95)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICancelMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IChangePasswordBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IClient\n            \n            \n                97 %\n                (45/46)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IContact_person\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateMatchDaysBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreatePitchBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateRankingPenaltyBody\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateSeasonBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateTournamentBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ICreateUserBody\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IDate_period\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IIdentifier\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ILocateMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IMatch_day\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IPitch\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_penalty\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRanking_position\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IRenameTeamBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IScheduleMatchDayBody\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISeason\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISendPasswordResetMailBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISetRoundBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ISubmitMatchResultBody\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITeam_pairs\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                ITournament\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                interface\n            \n            \n                IUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                blobToText\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                formatDate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                function\n            \n            \n                throwException\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/liga-manager-api.ts\n            \n            \n                variable\n            \n            \n                API_BASE_URL\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                i18ServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                pitchServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                seasonServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                teamServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                function\n            \n            \n                websocketServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            \n                component\n            \n            \n                AddteamComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            \n                component\n            \n            \n                ManageseasonComponent\n            \n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                component\n            \n            \n                MatchSchedulingComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                interface\n            \n            \n                IPossibleKickoffs\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            \n                interface\n            \n            \n                ITeamCanPlayAtDate\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                component\n            \n            \n                AddtournamentroundComponent\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            \n                interface\n            \n            \n                AddMatchData\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            \n                component\n            \n            \n                ManagetournamentComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            \n                component\n            \n            \n                ManageusersComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            \n                component\n            \n            \n                ChangepasswordComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            \n                component\n            \n            \n                ContactlistComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            \n                component\n            \n            \n                PitchesComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            \n                component\n            \n            \n                TeamsComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            \n                component\n            \n            \n                MatchplanComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            \n                component\n            \n            \n                NewpasswordComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            \n                component\n            \n            \n                ContactPersonComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            \n                component\n            \n            \n                ContactComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            \n                component\n            \n            \n                EditmatchPitchComponent\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            \n                component\n            \n            \n                EditmatchResultComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            \n                component\n            \n            \n                EditmatchTimeComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            \n                component\n            \n            \n                MatchComponent\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            \n                component\n            \n            \n                SeasonchooserComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                component\n            \n            \n                SnackbarComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            \n                interface\n            \n            \n                ISnackBarData\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            \n                component\n            \n            \n                TableComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            \n                component\n            \n            \n                TeamadminComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            \n                component\n            \n            \n                TournamentComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/match.viewmodel.ts\n            \n            \n                class\n            \n            \n                MatchViewModel\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                class\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            \n                interface\n            \n            \n                LoginContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            \n                injectable\n            \n            \n                I18Service\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            \n                injectable\n            \n            \n                CustomOwlDateTimeIntl\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                injectable\n            \n            \n                MatchService\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            \n                interface\n            \n            \n                MatchUpdateMessage\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            \n                injectable\n            \n            \n                PitchService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            \n                injectable\n            \n            \n                SeasonService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                injectable\n            \n            \n                TeamService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            \n                interface\n            \n            \n                CacheTeamsInSeason\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/websocket.service.ts\n            \n            \n                injectable\n            \n            \n                WebsocketService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.0\n        \n            @angular/cdk : ^7.0.0\n        \n            @angular/common : ^7.0.0\n        \n            @angular/compiler : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            @angular/flex-layout : ^7.0.0-beta.19\n        \n            @angular/forms : ^7.0.0\n        \n            @angular/http : ^7.0.0\n        \n            @angular/material : ^7.0.0\n        \n            @angular/platform-browser : ^7.0.0\n        \n            @angular/platform-browser-dynamic : ^7.0.0\n        \n            @angular/router : ^7.0.0\n        \n            @ngx-translate/core : ^10.0.2\n        \n            @ngx-translate/http-loader : ^3.0.1\n        \n            @types/googlemaps : ^3.30.15\n        \n            adm-zip : >=0.4.11\n        \n            bootstrap : ^4.1.2\n        \n            codacy-coverage : ^3.2.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.3\n        \n            core-js : ^2.5.4\n        \n            exec : ^0.2.1\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.4.8\n        \n            jslint : ^0.12.0\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.23.0\n        \n            ng-pick-datetime : ^6.0.16\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.4\n        \n            queueing-subject : ^0.3.0\n        \n            rxjs : ^6.3.3\n        \n            rxjs-websockets : ^6.0.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CreateUserBodyRole   (src/.../liga-manager-api.ts)\n                        \n                        \n                            EventType   (src/.../liga-manager-api.ts)\n                        \n                        \n                            SeasonState   (src/.../liga-manager-api.ts)\n                        \n                        \n                            UserRole   (src/.../liga-manager-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n        \n            \n                \n                    \n                        \n                        CreateUserBodyRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        EventType\n                    \n                \n                        \n                            \n                                 MatchLocated\n                            \n                        \n                        \n                            \n                                 MatchResultSubmitted\n                            \n                        \n                        \n                            \n                                 MatchScheduled\n                            \n                        \n                        \n                            \n                                 MatchCancelled\n                            \n                        \n                        \n                            \n                                 RankingPenaltyAdded\n                            \n                        \n                        \n                            \n                                 RankingPenaltyRemoved\n                            \n                        \n                        \n                            \n                                 TeamRenamed\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                 Team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToText   (src/.../liga-manager-api.ts)\n                        \n                        \n                            formatDate   (src/.../liga-manager-api.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            pitchServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            seasonServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            teamServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            throwException   (src/.../liga-manager-api.ts)\n                        \n                        \n                            websocketServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            blobToText\n                            \n                            \n                        \n                    \n                \n                \n                    \nblobToText(blob: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        blob\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDate\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDate(d: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        d\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            throwException\n                            \n                            \n                        \n                    \n                \n                \n                    \nthrowException(message: undefined, status: undefined, response: undefined, headers: undefined, result?: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        status\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        response\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        result\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18ServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ni18ServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pitchServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \npitchServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nseasonServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nteamServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            websocketServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nwebsocketServiceFactory(provider: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    39 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../liga-manager-api.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/liga-manager-api.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        API_BASE_URL:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    wsServerUrl: 'wss://manager.wildeligabremen.de/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: `wss://${window.location.hostname}/ws`,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  wsServerUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
