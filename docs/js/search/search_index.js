var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.703,1,3.083]],["body/interfaces/AddMatchData.html",[0,1.179,1,5.593,2,3.075,3,0.146,4,0.146,5,0.133,6,4.491,7,0.411,8,0.784,9,2.314,10,5.832,11,1.706,12,0.565,13,0.01,14,1.122,15,0.238,16,4.07,17,3.609,18,2.087,19,0.738,20,1.999,21,3.317,22,0.146,23,3.941,24,3.609,25,5.962,26,3.609,27,3.609,28,3.19,29,3.361,30,2.968,31,3.809,32,2.142,33,2.532,34,3.017,35,2.323,36,1.379,37,1.999,38,1.999,39,1.905,40,1.861,41,2.2,42,2.609,43,2.609,44,0.179,45,5.169,46,2.215,47,2.002,48,2.215,49,1.629,50,1.553,51,4.839,52,1.629,53,4.839,54,0.159,55,1.59,56,1.516,57,1.629,58,4.839,59,2.26,60,3.317,61,4.839,62,1.774,63,4.839,64,1.196,65,2.428,66,4.491,67,2.013,68,3.19,69,4.839,70,4.212,71,3.609,72,2.26,73,4.491,74,4.491,75,3.783,76,4.491,77,1.629,78,4.839,79,4.491,80,6.424,81,6.424,82,4.839,83,5.169,84,4.839,85,4.839,86,4.839,87,1.553,88,4.839,89,1.982,90,4.839,91,2.69,92,2.389,93,4.839,94,1.709,95,5.938,96,1.709,97,5.938,98,5.938,99,4.839,100,1.709,101,4.839,102,1.709,103,4.839,104,1.709,105,4.839,106,3.609,107,1.774,108,4.491,109,4.839,110,1.481,111,1.196,112,3.19,113,3.981,114,2.532,115,2.087,116,4.491,117,4.839,118,4.429,119,4.839,120,0.006,121,0.007,122,0.006]],["title/injectables/AddTeamToSeasonGQL.html",[123,0.313,124,1.251]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,1.128,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,1.214,133,2.328,134,1.214,135,2.108,136,0.282,137,2.505,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729]],["title/components/AddUserComponent.html",[19,0.44,335,1.221]],["body/components/AddUserComponent.html",[3,0.117,4,0.117,5,0.106,7,0.329,8,0.681,12,0.659,13,0.009,14,0.9,15,0.228,18,1.672,19,0.72,20,1.948,22,0.117,23,4.25,24,2.892,31,3.996,32,1.717,33,2.029,41,1.763,44,0.117,49,2.509,50,2.392,52,1.735,54,0.128,55,1.274,56,1.615,59,3.085,60,3.532,64,1.274,65,2.179,67,1.814,72,2.882,77,2.076,89,2.705,91,2.865,92,2.545,111,0.959,112,2.557,114,2.697,115,2.223,118,2.892,120,0.005,121,0.006,122,0.005,128,1.368,129,1.274,136,1.001,146,2.432,163,2.027,170,0.72,179,1.337,180,1.337,187,2.288,188,2.076,189,1.403,190,1.438,191,1.132,197,0.575,215,0.959,228,0.677,254,0.677,311,2.38,335,2.127,336,1.911,337,1.511,338,1.474,339,1.474,340,7.871,341,7.18,342,4.251,343,1.474,344,2.538,345,1.865,346,7.194,347,6.404,348,6.347,349,6.347,350,7.194,351,1.577,352,6.404,353,7.666,354,3.877,355,3.817,356,4.405,357,3.968,358,3.326,359,6.404,360,1.615,361,1.54,362,4.818,363,1.888,364,4.818,365,1.959,366,6.404,367,6.169,368,4.818,369,4.818,370,5.584,371,4.818,372,4.818,373,4.818,374,4.818,375,4.818,376,4.818,377,4.818,378,3.19,379,2.464,380,2.464,381,1.694,382,3.376,383,4.783,384,3.598,385,4.818,386,5.076,387,4.251,388,4.818,389,4.818,390,4.818,391,4.251,392,6.404,393,4.818,394,4.818,395,4.818,396,4.818,397,4.818,398,4.818,399,4.602,400,3.92,401,4.818,402,4.602,403,5.105,404,4.24,405,3.056,406,4.818,407,4.029,408,4.818,409,4.251,410,4.251,411,6.404,412,6.404,413,6.404,414,5.65,415,5.154,416,5.154,417,3.68,418,6.404,419,2.805,420,6.404,421,1.105,422,1.959,423,1.959,424,1.474,425,2.345,426,1.474,427,1.337,428,1.474,429,1.474,430,1.474,431,1.305,432,1.474,433,1.337,434,1.474,435,1.337,436,1.474,437,1.337,438,1.474,439,1.305,440,1.474,441,1.337,442,1.474,443,1.337,444,1.474,445,1.337,446,1.474,447,1.337,448,1.474,449,1.305,450,1.474,451,1.337,452,1.474,453,1.337,454,1.474,455,1.337,456,1.474,457,1.337,458,1.474,459,1.337,460,1.474,461,1.305,462,1.474,463,1.274,464,1.474,465,1.305,466,1.474,467,1.337,468,1.474,469,1.337,470,1.474,471,1.474,472,1.337,473,1.474,474,1.474,475,1.305,476,1.474,477,1.305,478,1.474,479,1.337,480,1.474,481,1.305,482,1.474,483,1.337,484,1.403,485,1.474,486,1.474]],["title/components/AddteamComponent.html",[19,0.44,427,1.221]],["body/components/AddteamComponent.html",[3,0.137,4,0.137,5,0.124,7,0.385,8,0.754,12,0.642,13,0.009,14,1.09,15,0.222,18,1.958,19,0.776,20,2.101,22,0.137,23,4.376,24,3.386,36,1.779,41,2.064,44,0.137,47,1.865,49,2.531,50,2.413,52,1.921,54,0.15,55,1.492,56,1.788,64,1.411,67,2.158,72,2.121,77,2.204,79,5.296,89,2.822,91,2.524,92,2.242,114,2.375,115,1.958,120,0.006,121,0.007,122,0.006,136,0.965,170,0.788,197,0.673,215,0.752,228,0.793,254,0.793,335,1.565,336,2.116,337,1.768,338,1.725,339,1.725,343,1.725,344,1.683,345,2.065,351,1.746,354,4.539,360,1.956,361,1.865,363,1.91,365,1.725,381,1.492,405,2.692,417,4.075,419,2.595,421,1.294,422,2.169,423,2.169,424,1.725,425,2.489,426,1.725,427,2.258,428,1.725,429,1.725,430,1.725,431,1.528,432,1.725,433,1.565,434,1.725,435,1.565,436,1.725,437,1.565,438,1.725,439,1.528,440,1.725,441,1.565,442,1.725,443,1.565,444,1.725,445,1.565,446,1.725,447,1.565,448,1.725,449,1.528,450,1.725,451,1.565,452,1.725,453,1.565,454,1.725,455,1.565,456,1.725,457,1.565,458,1.725,459,1.565,460,1.725,461,1.528,462,1.725,463,1.492,464,1.725,465,1.528,466,1.725,467,1.565,468,1.725,469,1.967,470,2.169,471,1.725,472,1.565,473,1.725,474,1.725,475,1.528,476,1.725,477,1.528,478,1.725,479,1.565,480,1.725,481,1.528,482,1.725,483,1.565,484,1.643,485,1.725,486,1.725,487,4.977,488,7.756,489,7.091,490,6.263,491,6.257,492,7.091,493,6.263,494,5.641,495,6.257,496,5.641,497,4.977,498,5.641,499,7.091,500,5.641,501,5.641,502,5.641,503,4.213,504,4.977,505,5.641,506,5.641,507,5.641,508,5.641,509,5.296,510,7.091]],["title/components/AddtournamentroundComponent.html",[19,0.44,55,1.164]],["body/components/AddtournamentroundComponent.html",[0,1.003,1,5.536,3,0.114,4,0.114,5,0.103,6,3.493,7,0.32,8,0.668,9,2.052,10,3.277,11,0.999,12,0.677,13,0.01,14,0.657,15,0.227,16,4.358,17,2.808,18,1.624,19,0.709,20,1.92,21,2.58,22,0.114,23,4.269,24,2.808,25,6.207,26,2.808,27,2.808,28,2.482,29,3.499,30,2.309,31,3.966,32,1.667,33,1.97,34,2.898,35,1.808,36,1.073,37,2.052,38,2.052,39,1.956,40,1.91,41,1.712,42,2.029,43,2.029,44,0.152,45,4.966,46,2.192,47,1.957,48,2.192,49,2.504,50,2.388,51,5.053,52,1.701,53,5.053,54,0.124,55,2.003,56,1.583,57,1.92,58,5.704,59,2.361,60,3.463,61,5.704,62,1.822,63,5.704,64,1.249,65,2.246,66,4.689,67,2.158,68,4.193,69,5.704,70,4.966,71,3.769,72,2.971,73,3.493,74,3.493,75,2.943,76,3.493,77,2.052,78,3.764,79,5.658,80,5.704,81,5.704,82,3.764,83,4.399,84,5.053,85,3.764,86,3.764,87,1.208,88,5.053,89,2.337,90,6.096,91,2.093,92,1.859,93,3.764,94,1.33,95,5.053,96,1.33,97,5.053,98,5.053,99,3.764,100,1.33,101,3.764,102,1.33,103,3.764,104,1.33,105,3.764,106,2.808,107,1.51,108,3.493,109,3.764,110,1.152,111,0.931,112,2.482,113,3.097,114,1.97,115,1.624,116,3.493,117,5.053,118,3.769,119,5.053,120,0.005,121,0.006,122,0.005,128,0.999,129,0.931,136,1.011,170,0.764,191,1.475,197,0.558,215,0.623,228,0.657,254,0.657,335,1.298,336,1.874,338,1.431,339,1.431,343,1.431,344,1.396,351,1.546,360,1.91,361,1.822,363,2.003,365,2.417,381,1.237,417,4.353,419,3.215,421,1.073,422,1.92,423,1.92,424,1.431,425,2.317,426,1.431,427,1.298,428,1.431,429,1.431,430,1.431,431,1.267,432,1.431,433,1.298,434,1.431,435,1.298,436,1.431,437,1.298,438,1.431,439,1.267,440,1.431,441,1.298,442,1.431,443,1.298,444,1.431,445,1.298,446,1.431,447,1.298,448,1.431,449,1.267,450,1.431,451,1.298,452,1.431,453,1.298,454,1.431,455,1.298,456,1.431,457,1.298,458,1.431,459,1.298,460,1.431,461,1.267,462,1.431,463,1.237,464,1.431,465,1.267,466,1.431,467,1.298,468,1.431,469,1.298,470,1.431,471,1.431,472,1.298,473,1.431,474,1.431,475,1.267,476,1.431,477,1.267,478,1.431,479,1.298,480,1.431,481,1.267,482,1.431,483,1.298,484,1.362,485,1.431,486,1.431,511,6.279,512,6.279,513,6.279,514,4.678,515,6.279,516,4.678,517,4.678,518,4.678,519,4.678,520,4.678,521,4.678,522,4.678,523,2.309,524,4.678,525,4.678,526,4.678,527,4.678,528,4.678,529,4.678,530,4.678,531,6.279,532,6.279,533,6.279,534,6.279,535,6.279,536,5.658,537,6.279,538,6.279]],["title/components/AdminComponent.html",[19,0.44,431,1.192]],["body/components/AdminComponent.html",[3,0.15,4,0.15,5,0.136,7,0.421,13,0.009,15,0.199,19,0.807,20,2.186,22,0.15,23,3.042,24,3.699,44,0.15,49,2.542,50,2.424,52,2.029,54,0.163,55,1.63,56,1.889,64,1.606,77,2.274,120,0.006,121,0.008,122,0.006,136,0.845,147,2.078,170,0.704,197,0.736,215,0.821,228,0.866,254,0.866,335,1.71,336,2.235,337,1.932,338,1.885,339,1.885,343,1.885,344,1.839,345,2.181,351,1.845,363,1.518,365,1.885,381,1.63,421,1.414,422,2.291,423,2.291,424,1.885,425,2.567,426,1.885,427,1.71,428,1.885,429,1.885,430,1.885,431,2.274,432,1.885,433,1.71,434,1.885,435,1.71,436,1.885,437,1.71,438,1.885,439,1.669,440,1.885,441,1.71,442,1.885,443,1.71,444,1.885,445,1.71,446,1.885,447,1.71,448,1.885,449,1.669,450,1.885,451,1.71,452,1.885,453,1.71,454,1.885,455,1.71,456,1.885,457,1.71,458,1.885,459,1.71,460,1.885,461,1.669,462,1.885,463,1.63,464,1.885,465,1.669,466,1.885,467,1.71,468,1.885,469,1.71,470,1.885,471,1.885,472,1.71,473,1.885,474,1.885,475,1.669,476,1.885,477,1.669,478,1.885,479,1.71,480,1.885,481,1.669,482,1.885,483,1.71,484,1.795,485,1.885,486,1.885,539,5.437,540,8.07,541,7.49,542,6.163,543,6.163]],["title/guards/AdminGuard.html",[544,3.541,545,3.083]],["body/guards/AdminGuard.html",[3,0.166,4,0.166,5,0.151,7,0.468,12,0.524,13,0.009,15,0.224,22,0.166,44,0.166,54,0.181,56,1.726,64,1.586,65,1.945,120,0.007,121,0.008,122,0.007,123,0.566,136,0.951,170,0.643,272,1.533,273,1.498,351,1.963,357,4.398,358,3.77,360,1.726,361,1.646,363,1.963,380,3.5,545,5.586,546,5.508,547,6.039,548,7.208,549,7.208,550,4.306,551,6.844,552,6.844,553,6.844,554,3.161,555,2.918,556,7.973]],["title/modules/AdminModule.html",[557,1.221,558,3.286]],["body/modules/AdminModule.html",[3,0.149,4,0.149,5,0.135,13,0.009,15,0.243,22,0.149,44,0.149,54,0.162,55,2.36,120,0.006,121,0.007,122,0.006,147,1.7,335,2.423,341,4.931,421,1.406,427,2.423,431,2.366,453,2.423,455,2.423,457,2.423,463,2.31,469,2.476,483,2.423,503,4.576,504,5.406,557,1.7,558,7,559,2.127,560,2.924,561,3.841,562,3.025,563,3.025,564,2.924,565,5.406,566,5.406,567,5.406,568,6.119,569,6.119,570,4.467,571,3.817,572,3.134,573,3.134,574,6.128,575,6.007,576,2.884,577,2.806,578,5.406,579,3.521,580,3.855,581,6.128,582,6.128,583,6.128,584,6.128,585,6.128,586,6.128,587,4.293,588,6.128,589,6.128,590,6.128,591,6.128,592,4.931,593,6.128,594,6.128,595,4.931]],["title/modules/AdminRoutingModule.html",[557,1.221,568,3.083]],["body/modules/AdminRoutingModule.html",[3,0.17,4,0.17,5,0.155,13,0.009,15,0.232,19,0.701,22,0.17,44,0.17,54,0.186,120,0.007,121,0.008,122,0.007,258,0.984,431,2.189,545,4.908,554,3.235,559,2.431,568,5.661,576,2.707,577,3.038,578,6.18,596,7.005,597,4.025,598,4.355,599,4.025,600,7.005,601,4.025,602,4.205]],["title/injectables/AllSeasonsListGQL.html",[123,0.313,328,1.192]],["body/injectables/AllSeasonsListGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.656,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.101,203,1.436,204,1.05,205,1.96,206,0.748,207,1.401,208,2.008,209,0.748,210,1.156,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.471,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.804,261,1.436,262,1.401,263,1.436,264,1.156,265,1.436,266,1.156,267,1.156,268,1.436,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,1.075,329,0.712,330,0.766,331,0.766,332,0.679,333,0.712,334,0.73,603,2.506]],["title/injectables/AllTeamsGQL.html",[123,0.313,329,1.251]],["body/injectables/AllTeamsGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.879,37,0.679,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.845,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.101,203,1.436,204,1.05,205,1.96,206,0.748,207,1.128,208,1.848,209,0.748,210,1.156,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.471,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.89,261,1.436,262,1.401,263,1.436,264,1.156,265,1.156,266,1.156,267,1.156,268,1.436,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.679,329,1.128,330,0.766,331,0.766,332,0.679,333,0.712,334,0.73,604,2.506]],["title/injectables/AllTournamentListGQL.html",[39,1.136,123,0.313]],["body/injectables/AllTournamentListGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.075,39,1.025,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.656,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.101,203,1.436,204,1.05,205,1.96,206,0.748,207,1.128,208,1.848,209,0.748,210,1.436,211,2.058,212,0.748,213,1.971,214,0.748,215,0.942,216,1.471,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.804,261,1.436,262,1.401,263,1.436,264,1.156,265,1.156,266,1.436,267,1.156,268,1.436,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.679,329,0.712,330,0.766,331,0.766,332,0.679,333,0.712,334,0.73,605,2.506]],["title/injectables/AllUsersGQL.html",[123,0.313,333,1.251]],["body/injectables/AllUsersGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.656,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.101,203,1.436,204,1.05,205,1.96,206,0.748,207,1.128,208,1.848,209,0.748,210,1.156,211,1.894,212,0.748,213,1.971,214,0.748,215,0.97,216,1.471,217,1.185,218,1.984,219,2.315,220,1.185,221,1.185,222,1.835,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.804,261,1.436,262,1.401,263,1.436,264,1.156,265,1.156,266,1.156,267,1.156,268,1.633,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.679,329,0.712,330,0.766,331,0.766,332,0.679,333,1.128,334,0.73,606,2.506]],["title/components/AppComponent.html",[19,0.44,433,1.221]],["body/components/AppComponent.html",[3,0.112,4,0.112,5,0.102,7,0.316,8,0.662,10,4.936,12,0.645,13,0.009,14,1.106,15,0.233,18,1.605,19,0.705,20,1.908,22,0.112,29,3.633,30,2.282,32,1.647,40,2.089,41,1.692,44,0.112,49,2.503,50,2.386,52,1.687,54,0.123,55,1.223,56,1.571,64,1.239,65,2.143,67,2.248,75,2.908,77,2.042,89,2.673,92,2.8,111,1.402,112,3.738,120,0.005,121,0.006,122,0.005,136,0.995,170,0.708,197,0.552,205,1.955,215,0.616,228,0.65,254,0.65,256,1.314,258,0.875,273,1.363,322,2.089,326,1.901,335,1.283,336,1.859,337,1.449,338,1.414,339,1.414,343,1.414,344,1.379,345,1.814,351,1.534,355,4.176,356,4.523,357,4.158,358,3.415,360,1.571,361,1.498,363,1.997,365,2.306,380,2.364,381,1.223,419,2.967,421,1.06,422,1.905,423,1.905,424,1.414,425,2.306,426,1.414,427,1.283,428,1.414,429,1.414,430,1.414,431,1.252,432,1.414,433,2.092,434,1.414,435,1.728,436,1.414,437,1.283,438,1.414,439,1.252,440,1.414,441,1.283,442,1.414,443,1.283,444,1.414,445,1.283,446,1.414,447,1.283,448,1.414,449,1.252,450,1.414,451,1.728,452,1.414,453,1.283,454,1.414,455,1.283,456,1.414,457,1.283,458,1.414,459,1.283,460,1.414,461,1.252,462,1.414,463,1.223,464,1.414,465,1.252,466,1.414,467,1.283,468,1.414,469,1.283,470,1.414,471,1.414,472,1.283,473,1.414,474,1.414,475,1.252,476,1.414,477,1.252,478,1.414,479,1.283,480,1.414,481,1.252,482,1.414,483,1.283,484,1.346,485,1.414,486,1.414,490,5.262,493,5.631,523,2.282,550,2.908,607,4.079,608,7.045,609,6.229,610,7.87,611,4.578,612,7.539,613,6.229,614,7.539,615,7.539,616,8.108,617,4.951,618,6.229,619,4.623,620,4.623,621,6.229,622,4.623,623,4.623,624,4.623,625,4.623,626,4.623,627,4.623,628,4.623,629,4.623,630,4.623,631,5.496,632,4.079,633,4.079,634,3.452,635,4.623,636,3.239,637,4.079,638,4.623,639,2.908,640,2.453,641,3.452,642,4.623,643,4.623,644,3.72,645,4.079,646,4.623,647,4.623,648,4.623,649,6.229,650,4.623,651,4.623,652,4.623,653,4.623,654,4.623,655,4.623,656,4.623,657,4.623,658,4.623,659,4.623,660,4.623,661,4.623,662,5.013,663,4.623,664,4.364,665,4.936,666,4.936,667,4.623,668,5.496,669,4.623,670,6.229,671,6.229,672,6.229,673,6.229,674,6.229,675,6.229,676,5.496,677,6.229,678,6.229,679,5.496,680,6.229,681,6.229,682,6.229,683,6.229,684,6.229,685,7.045,686,7.045,687,6.216,688,4.623,689,6.216,690,4.623,691,7.045,692,4.623,693,4.917,694,4.623,695,4.623,696,4.623,697,5.496,698,7.539,699,6.229,700,6.229,701,4.623,702,6.229,703,6.229,704,6.229,705,6.229,706,6.229,707,6.229,708,8.108,709,6.229,710,6.229,711,4.623,712,6.229,713,4.623,714,6.229,715,6.229,716,4.623,717,4.623,718,4.623,719,4.623,720,4.623]],["title/modules/AppCoreModule.html",[557,1.221,721,2.914]],["body/modules/AppCoreModule.html",[3,0.17,4,0.17,5,0.155,13,0.009,15,0.232,22,0.17,26,4.208,27,4.208,28,3.72,32,2.498,33,2.952,44,0.17,54,0.186,120,0.007,121,0.008,122,0.007,559,2.433,563,3.461,576,2.709,577,3.039,721,5.353,722,5.642,723,7.011,724,7.133,725,6.038,726,7.011,727,5.642,728,7.011,729,5.642,730,6.185]],["title/modules/AppModule.html",[557,1.221,731,3.286]],["body/modules/AppModule.html",[3,0.143,4,0.143,5,0.13,13,0.01,15,0.246,18,2.043,22,0.143,29,3.33,30,2.906,32,2.595,33,2.478,44,0.177,50,1.52,54,0.156,120,0.006,121,0.007,122,0.006,358,3.753,379,3.01,380,3.01,381,2.091,421,1.35,433,2.518,435,2.458,451,2.458,555,2.154,557,1.633,559,2.043,560,2.809,561,3.773,562,3.904,563,3.904,564,2.809,571,3.724,572,3.01,573,3.01,575,5.86,576,2.814,577,2.738,579,3.382,632,5.193,633,5.193,640,3.123,727,4.737,729,6.364,730,5.193,731,6.925,732,5.193,733,5.193,734,5.193,735,5.193,736,5.193,737,6.06,738,6.06,739,5.727,740,6.06,741,4.737,742,7.282,743,6.425,744,4.737,745,7.282,746,7.282,747,5.886,748,5.886,749,7.282,750,5.193,751,5.193,752,5.193,753,7.282,754,7.282,755,4.124,756,5.886,757,6.425,758,6.425,759,5.886,760,3.533,761,5.886,762,5.886,763,7.282,764,5.193,765,5.886,766,7.282,767,5.886,768,5.193,769,5.193,770,5.886,771,5.886,772,5.193,773,4.737,774,5.193,775,7.282,776,3.595,777,5.886,778,4.737,779,5.886]],["title/modules/AppRoutingModule.html",[557,1.221,737,3.083]],["body/modules/AppRoutingModule.html",[3,0.162,4,0.162,5,0.147,13,0.009,15,0.229,22,0.162,44,0.191,54,0.177,120,0.007,121,0.008,122,0.007,147,1.852,199,2.029,213,1.765,258,0.938,545,5.85,548,6.719,549,6.719,554,3.083,559,2.317,564,3.186,576,2.58,577,2.954,597,3.836,598,4.018,599,4.515,601,5.206,722,5.372,737,5.505,780,6.676,781,6.565,782,6.676,783,6.676,784,6.676,785,6.676,786,5.89,787,4.986,788,8.994,789,6.676,790,6.676,791,6.676,792,4.42,793,6.676,794,5.89,795,6.676,796,6.676,797,5.372,798,6.676,799,6.676]],["title/interceptors/AuthInterceptor.html",[740,3.083,800,3.882]],["body/interceptors/AuthInterceptor.html",[3,0.163,4,0.163,5,0.148,7,0.458,12,0.603,13,0.009,15,0.229,22,0.163,34,3.421,35,2.592,44,0.163,54,0.178,56,1.691,64,1.334,67,2.11,120,0.007,121,0.008,122,0.007,123,0.56,136,0.888,170,0.74,351,1.94,357,4.346,358,3.745,360,1.987,361,1.895,363,1.652,380,3.43,550,4.219,555,3.061,644,6.34,740,5.52,755,4.699,801,6.707,802,5.917,803,7.879,804,6.707,805,7.879,806,8.633,807,6.732,808,8.633,809,6.707,810,6.707,811,7.879,812,6.707,813,5.009,814,6.707,815,7.879,816,6.707,817,5.009,818,6.707,819,5.917]],["title/injectables/AuthenticationService.html",[123,0.313,358,1.909]],["body/injectables/AuthenticationService.html",[0,0.842,3,0.128,4,0.128,5,0.116,7,0.36,8,0.722,12,0.655,13,0.01,14,1.277,15,0.223,22,0.128,32,1.878,44,0.165,54,0.14,59,3.161,64,1.351,65,2.256,67,2.121,89,2.773,115,2.608,120,0.008,121,0.007,122,0.005,123,0.482,125,1.329,136,1.008,139,1.954,146,1.462,163,1.987,164,1.535,167,1.535,170,0.772,188,1.427,215,1.058,258,0.741,272,1.181,273,1.153,284,2.15,287,2.202,332,2.15,351,1.672,358,3.26,360,2.071,361,1.975,363,2.071,365,1.612,415,4.241,416,4.241,523,2.602,554,2.434,555,3.172,639,3.315,640,2.796,665,3.692,666,3.692,755,3.692,792,4.975,817,5.072,820,3.936,821,6.63,822,5.992,823,6.791,824,7.002,825,6.791,826,7.002,827,6.791,828,4.758,829,6.63,830,6.63,831,6.63,832,5.27,833,7.419,834,6.047,835,6.63,836,6.63,837,5.27,838,5.992,839,6.61,840,5.27,841,3.936,842,5.92,843,5.992,844,5.27,845,4.758,846,5.27,847,5.992,848,5.927,849,5.27,850,4.975,851,5.27,852,5.992,853,5.27,854,5.992,855,5.27,856,5.992,857,5.27,858,5.27,859,5.27,860,5.27,861,5.27,862,5.27,863,5.27,864,5.465,865,5.465,866,4.241,867,2.695,868,3.936,869,3.936,870,4.241,871,3.936,872,2.358,873,7.419,874,4.65,875,5.891,876,5.754,877,4.65,878,4.65,879,5.992,880,4.65,881,4.65,882,4.975,883,4.65,884,5.992,885,4.65,886,5.992,887,5.264,888,4.65,889,4.65,890,4.65,891,4.65,892,5.992,893,4.076,894,4.65,895,4.65,896,4.241,897,4.65,898,4.65,899,4.65,900,4.241,901,4.65,902,4.65]],["title/components/ChangepasswordComponent.html",[19,0.44,435,1.221]],["body/components/ChangepasswordComponent.html",[3,0.135,4,0.135,5,0.123,7,0.38,8,0.747,12,0.639,13,0.009,15,0.215,16,4.605,18,1.929,19,0.771,20,2.087,22,0.135,44,0.135,49,2.529,50,2.411,52,1.903,54,0.147,55,1.47,56,1.772,59,2.641,64,1.398,65,1.58,67,1.943,68,4.43,77,2.192,89,2.54,91,2.486,92,2.209,114,2.34,115,1.929,120,0.006,121,0.007,122,0.006,136,0.976,170,0.724,197,0.664,215,0.741,228,0.781,254,0.781,335,1.542,336,2.096,337,1.742,338,1.7,339,1.7,343,1.7,344,1.658,345,2.046,351,1.73,357,3.875,358,3.512,360,1.401,361,1.337,363,1.73,365,1.7,370,5.447,378,3.679,379,2.842,380,2.842,381,1.47,386,4.651,391,4.903,405,2.652,414,7.141,419,3.206,421,1.275,422,2.149,423,2.149,424,1.7,425,2.476,426,1.7,427,1.542,428,1.7,429,1.7,430,1.7,431,1.505,432,1.7,433,1.542,434,1.7,435,2.246,436,1.7,437,1.542,438,1.7,439,1.505,440,1.7,441,1.542,442,1.7,443,1.542,444,1.7,445,1.542,446,1.7,447,1.542,448,1.7,449,1.505,450,1.7,451,1.542,452,1.7,453,1.542,454,1.7,455,1.542,456,1.7,457,1.542,458,1.7,459,1.542,460,1.7,461,1.505,462,1.7,463,1.47,464,1.7,465,1.505,466,1.7,467,1.542,468,1.7,469,1.542,470,1.7,471,1.7,472,1.542,473,1.7,474,1.7,475,1.505,476,1.7,477,1.505,478,1.7,479,1.542,480,1.7,481,1.505,482,1.7,483,1.542,484,1.618,485,1.7,486,1.7,550,3.496,776,2.743,792,5.1,822,7.523,839,6.199,872,3.143,893,3.336,903,4.903,904,7.703,905,7.025,906,7.703,907,7.025,908,5.557,909,5.557,910,5.557,911,5.557,912,5.557,913,5.557,914,5.557,915,5.557,916,5.557,917,7.025,918,4.903,919,4.472,920,7.141,921,6.198,922,5.654]],["title/components/ContactComponent.html",[19,0.44,437,1.221]],["body/components/ContactComponent.html",[3,0.142,4,0.142,5,0.129,7,0.4,8,0.772,12,0.604,13,0.009,15,0.209,16,4.676,17,3.514,18,2.032,19,0.789,20,2.137,21,3.229,22,0.142,36,1.343,41,2.142,44,0.142,47,1.983,49,2.536,50,2.418,52,1.966,54,0.155,55,1.548,56,1.83,64,1.444,67,2.178,68,4.376,71,4.357,77,2.234,120,0.006,121,0.007,122,0.006,136,0.93,170,0.741,176,2.242,197,0.699,215,0.78,228,1.191,254,0.823,335,1.624,336,2.166,337,1.835,338,1.79,339,1.79,343,1.79,344,1.747,345,2.114,351,1.787,360,1.476,361,1.408,363,1.442,365,1.79,381,1.548,417,4.171,419,3.018,421,1.343,422,2.22,423,2.22,424,1.79,425,2.522,426,1.79,427,1.624,428,1.79,429,1.79,430,1.79,431,1.586,432,1.79,433,1.624,434,1.79,435,1.624,436,1.79,437,2.288,438,1.79,439,1.586,440,1.79,441,1.624,442,1.79,443,1.624,444,1.79,445,1.624,446,1.79,447,1.624,448,1.79,449,1.586,450,1.79,451,1.624,452,1.79,453,1.624,454,1.79,455,1.624,456,1.79,457,1.624,458,1.79,459,1.624,460,1.79,461,1.586,462,1.79,463,1.548,464,1.79,465,1.586,466,1.79,467,1.624,468,1.79,469,1.624,470,1.79,471,1.79,472,1.624,473,1.79,474,1.79,475,1.586,476,1.79,477,1.586,478,1.79,479,1.624,480,1.79,481,1.586,482,1.79,483,1.624,484,1.705,485,1.79,486,1.79,523,2.89,923,5.165,924,7.888,925,7.258,926,5.165,927,5.854,928,5.854,929,5.854,930,5.854,931,6.403]],["title/components/ContactPersonComponent.html",[19,0.44,441,1.221]],["body/components/ContactPersonComponent.html",[3,0.145,4,0.145,5,0.131,7,0.407,12,0.456,13,0.009,15,0.195,19,0.795,20,2.154,22,0.145,41,2.181,44,0.145,49,2.538,50,2.42,52,1.988,54,0.158,55,1.576,56,1.85,64,1.582,77,2.248,120,0.006,121,0.007,122,0.006,136,0.897,170,0.689,197,0.711,215,0.794,228,1.277,229,2.137,254,0.837,335,1.653,336,2.19,337,1.868,338,1.823,339,1.823,343,1.823,344,1.778,345,2.137,351,1.807,363,1.467,365,1.823,381,1.576,419,2.685,421,1.367,422,2.244,423,2.244,424,1.823,425,2.538,426,1.823,427,1.653,428,1.823,429,1.823,430,1.823,431,1.614,432,1.823,433,1.653,434,1.823,435,1.653,436,1.823,437,1.653,438,1.823,439,1.614,440,1.823,441,2.302,442,1.823,443,1.653,444,1.823,445,1.653,446,1.823,447,1.653,448,1.823,449,1.614,450,1.823,451,1.653,452,1.823,453,1.653,454,1.823,455,1.653,456,1.823,457,1.653,458,1.823,459,1.653,460,1.823,461,1.614,462,1.823,463,1.576,464,1.823,465,1.614,466,1.823,467,1.653,468,1.823,469,1.653,470,1.823,471,1.823,472,1.653,473,1.823,474,1.823,475,1.614,476,1.823,477,1.614,478,1.823,479,1.653,480,1.823,481,1.614,482,1.823,483,1.653,484,1.735,485,1.823,486,1.823,679,7.321,932,7.321,933,6.678,934,5.257,935,7.951,936,7.338,937,5.48,938,7.338,939,5.959,940,4.858,941,7.338,942,7.338,943,7.338,944,7.338,945,7.338,946,7.338,947,5.905]],["title/components/ContactlistComponent.html",[19,0.44,439,1.192]],["body/components/ContactlistComponent.html",[3,0.15,4,0.15,5,0.137,7,0.423,13,0.009,15,0.164,19,0.809,20,2.19,22,0.15,44,0.15,49,2.543,50,2.424,52,2.034,54,0.164,55,1.637,56,1.894,64,1.609,77,2.277,120,0.006,121,0.008,122,0.006,136,0.847,170,0.705,197,0.739,215,0.825,228,0.87,254,0.87,335,1.717,336,2.241,337,1.94,338,1.893,339,1.893,343,1.893,344,1.847,345,2.187,351,1.849,363,1.524,365,1.893,381,1.637,421,1.42,422,2.297,423,2.297,424,1.893,425,2.571,426,1.893,427,1.717,428,1.893,429,1.893,430,1.893,431,1.676,432,1.893,433,1.717,434,1.893,435,1.717,436,1.893,437,1.717,438,1.893,439,2.277,440,1.893,441,1.717,442,1.893,443,1.717,444,1.893,445,1.717,446,1.893,447,1.717,448,1.893,449,1.676,450,1.893,451,1.717,452,1.893,453,1.717,454,1.893,455,1.717,456,1.893,457,1.717,458,1.893,459,1.717,460,1.893,461,1.676,462,1.893,463,1.637,464,1.893,465,1.676,466,1.893,467,1.717,468,1.893,469,1.717,470,1.893,471,1.893,472,1.717,473,1.893,474,1.893,475,1.676,476,1.893,477,1.676,478,1.893,479,1.717,480,1.893,481,1.676,482,1.893,483,1.717,484,1.802,485,1.893,486,1.893,948,5.46,949,6.626,950,8.085,951,7.51,952,6.189,953,6.189]],["title/modules/ContactlistModule.html",[557,1.221,954,3.286]],["body/modules/ContactlistModule.html",[3,0.163,4,0.163,5,0.148,13,0.009,15,0.236,22,0.163,44,0.163,54,0.178,120,0.007,121,0.008,122,0.007,202,1.858,421,1.536,439,2.415,467,2.473,479,2.473,557,1.858,559,2.324,560,3.195,561,3.99,562,3.306,563,3.306,564,3.195,570,4.559,571,4.025,572,3.424,573,3.424,576,3.042,577,2.959,579,3.848,580,4.213,949,5.908,954,6.919,955,5.908,956,5.908,957,5.908,958,6.245,959,6.696,960,5.908,961,6.696]],["title/modules/ContactlistRoutingModule.html",[557,1.221,958,3.083]],["body/modules/ContactlistRoutingModule.html",[3,0.171,4,0.171,5,0.155,13,0.009,15,0.226,19,0.704,22,0.171,44,0.171,54,0.187,120,0.007,121,0.008,122,0.007,258,0.988,439,2.194,554,3.248,559,2.441,576,2.718,577,3.045,597,4.042,598,4.363,599,4.042,601,4.042,602,4.222,958,5.675,960,6.206,962,7.034]],["title/injectables/CreateMatchesForSeasonGQL.html",[123,0.313,296,1.251]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.518,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.862,37,0.678,38,1.074,39,0.646,40,0.631,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.646,94,1.593,96,1.593,100,1.593,102,0.711,104,0.711,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.711,125,0.631,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.259,134,0.766,135,2.17,136,0.282,138,2.644,139,0.616,140,1.736,141,1.213,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.1,148,0.747,149,0.747,150,0.729,151,2.597,152,1.213,153,2.108,154,1.847,155,1.847,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.672,162,0.766,163,2.102,164,1.632,165,0.766,166,0.766,167,1.155,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.714,174,2.032,175,1.184,176,1.801,177,0.766,178,1.672,179,2.146,180,2.146,181,1.893,182,1.155,183,1.672,184,1.184,185,1.213,186,1.213,187,1.672,188,1.518,189,1.893,190,1.672,191,1.708,192,1.184,193,0.766,194,1.672,195,1.939,196,1.155,197,0.868,198,1,199,0.646,200,2.027,201,0.747,202,1.1,203,1.435,204,1.049,205,1.96,206,0.747,207,1.127,208,1.847,209,0.747,210,1.155,211,1.893,212,0.747,213,1.97,214,0.747,215,0.941,216,1.47,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.678,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.155,230,1.672,231,1.184,232,0.729,233,1.155,234,1.155,235,1.4,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.672,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.334,254,0.557,255,1.1,256,0.711,257,0.766,258,1.087,259,1.435,260,1.803,261,1.435,262,1.4,263,1.435,264,1.155,265,1.155,266,1.155,267,1.155,268,1.435,269,1.435,270,1.155,271,0.729,272,1.943,273,1.898,274,0.711,275,2.466,276,2.483,277,1.507,278,0.711,279,0.766,280,0.766,281,0.711,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.711,291,0.766,292,0.766,293,0.711,294,0.766,295,0.766,296,1.127,297,1.213,298,0.711,299,0.766,300,0.766,301,0.711,302,0.766,303,0.766,304,0.711,305,0.695,306,0.766,307,0.766,308,0.711,309,0.766,310,0.766,311,0.711,312,0.729,313,2.365,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.631,323,0.766,324,1.213,325,0.711,326,0.631,327,0.766,328,0.678,329,0.711,330,0.766,331,0.766,332,0.678,333,0.711,334,0.729,963,2.503]],["title/injectables/CreateSeasonGQL.html",[123,0.313,290,1.251]],["body/injectables/CreateSeasonGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.806,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,1.128,291,1.214,292,1.214,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,964,2.505]],["title/injectables/CreateTournamentGQL.html",[123,0.313,308,1.251]],["body/injectables/CreateTournamentGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.806,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,1.128,309,1.214,310,1.214,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,965,2.505]],["title/injectables/CreateTournamentRoundGQL.html",[37,1.192,123,0.313]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.632,3,0.061,4,0.061,5,0.055,7,0.17,8,0.421,9,1.842,11,1.453,12,0.711,13,0.01,14,1.295,15,0.13,22,0.061,36,1.861,37,1.072,38,1.332,39,0.645,40,0.629,44,0.228,46,0.693,47,1.636,48,0.693,54,0.23,57,1.652,62,1.183,87,0.645,94,1.933,96,1.933,100,1.933,102,0.709,104,0.709,107,2.129,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.709,125,0.629,126,0.693,127,2.541,128,0.533,129,0.497,130,2.542,131,2.694,132,0.763,133,2.258,134,0.763,135,2.03,136,0.281,138,2.644,139,0.615,140,1.734,141,1.21,142,0.727,143,1.181,144,1.181,145,1.181,146,0.693,147,1.098,148,0.745,149,0.745,150,0.727,151,2.597,152,1.21,153,2.105,154,1.845,155,1.845,156,2.426,157,1.181,158,1.181,159,1.89,160,1.181,161,1.67,162,0.763,163,2.101,164,1.629,165,0.763,166,0.763,167,1.152,168,0.763,169,1.181,170,0.795,171,1.181,172,1.181,173,1.504,174,1.67,175,1.181,176,1.799,177,0.763,178,1.67,179,2.144,180,2.144,181,1.89,182,1.152,183,1.67,184,1.181,185,1.504,186,1.504,187,1.67,188,1.516,189,1.89,190,1.67,191,1.707,192,1.181,193,0.763,194,1.67,195,1.937,196,1.152,197,0.868,198,0.998,199,0.645,200,2.025,201,0.745,202,1.098,203,1.432,204,1.047,205,1.958,206,0.745,207,1.125,208,1.845,209,0.745,210,1.152,211,1.89,212,0.745,213,1.969,214,0.745,215,0.94,216,1.467,217,1.181,218,1.776,219,2.314,220,1.181,221,1.181,222,1.832,223,1.676,224,1.613,225,1.181,226,1.181,227,1.181,228,1.086,229,1.152,230,1.67,231,1.181,232,0.727,233,1.152,234,1.152,235,1.398,236,1.181,237,1.181,238,1.432,239,1.432,240,0.763,241,1.181,242,1.181,243,1.181,244,1.181,245,1.181,246,1.181,247,1.67,248,0.745,249,1.181,250,0.745,251,0.727,252,1.652,253,1.332,254,0.556,255,1.098,256,0.709,257,0.763,258,1.086,259,1.432,260,1.801,261,1.432,262,1.398,263,1.432,264,1.152,265,1.152,266,1.152,267,1.152,268,1.432,269,1.432,270,1.152,271,0.727,272,1.943,273,1.897,274,0.709,275,2.465,276,2.482,277,1.711,278,0.709,279,0.763,280,0.763,281,0.709,282,0.763,283,0.763,284,0.676,285,0.763,286,0.763,287,0.693,288,0.763,289,0.763,290,0.709,291,0.763,292,0.763,293,0.709,294,0.763,295,0.763,296,0.709,297,0.763,298,0.709,299,0.763,300,0.763,301,0.709,302,0.763,303,0.763,304,0.709,305,0.693,306,0.763,307,0.763,308,0.709,309,0.763,310,0.763,311,0.709,312,0.727,313,2.363,314,0.763,315,0.763,316,0.676,317,0.763,318,0.763,319,0.676,320,0.763,321,0.763,322,0.629,323,0.763,324,1.21,325,0.709,326,0.629,327,0.763,328,0.676,329,0.709,330,0.763,331,0.763,332,0.676,333,0.709,334,0.727,966,2.496]],["title/injectables/CreateUserGQL.html",[123,0.313,311,1.251]],["body/injectables/CreateUserGQL.html",[0,0.63,3,0.06,4,0.06,5,0.055,7,0.17,8,0.42,9,1.513,11,1.451,12,0.711,13,0.01,14,1.298,15,0.13,22,0.06,36,1.86,37,0.674,38,1.069,39,0.642,40,0.627,44,0.228,46,0.69,47,1.634,48,0.69,54,0.23,57,1.65,62,1.18,87,0.642,94,1.587,96,1.587,100,1.587,102,0.707,104,0.707,107,2.128,110,2.135,111,1.791,120,0.002,121,0.004,122,0.002,123,0.618,124,0.707,125,0.627,126,0.69,127,2.54,128,0.531,129,0.495,130,2.542,131,2.693,132,0.761,133,2.256,134,0.761,135,2.027,136,0.28,138,2.643,139,0.613,140,1.587,141,1.207,142,0.724,143,1.178,144,1.178,145,1.178,146,0.69,147,1.095,148,0.742,149,0.742,150,0.724,151,2.596,152,1.207,153,2.103,154,1.842,155,1.842,156,2.426,157,1.178,158,1.178,159,1.887,160,1.178,161,1.666,162,0.761,163,2.164,164,1.626,165,0.761,166,0.761,167,1.149,168,0.761,169,1.178,170,0.794,171,1.178,172,1.178,173,1.5,174,1.666,175,1.178,176,1.796,177,0.761,178,1.666,179,2.227,180,2.227,181,1.887,182,1.149,183,1.666,184,1.178,185,1.207,186,1.207,187,1.934,188,1.84,189,2.114,190,2.027,191,1.705,192,1.178,193,0.761,194,1.666,195,1.934,196,1.149,197,0.867,198,0.995,199,0.642,200,2.024,201,0.742,202,1.095,203,1.429,204,1.044,205,1.955,206,0.742,207,1.122,208,1.842,209,0.742,210,1.149,211,1.887,212,0.742,213,1.967,214,0.742,215,0.939,216,1.464,217,1.178,218,1.773,219,2.312,220,1.178,221,1.178,222,1.83,223,1.674,224,1.611,225,1.178,226,1.178,227,1.178,228,1.085,229,1.149,230,1.666,231,1.178,232,0.724,233,1.149,234,1.149,235,1.394,236,1.178,237,1.178,238,1.429,239,1.429,240,0.761,241,1.178,242,1.178,243,1.178,244,1.178,245,1.178,246,1.178,247,1.666,248,0.742,249,1.178,250,0.742,251,0.724,252,1.65,253,1.329,254,0.555,255,1.095,256,0.707,257,0.761,258,1.085,259,1.429,260,1.798,261,1.429,262,1.394,263,1.429,264,1.149,265,1.149,266,1.149,267,1.149,268,1.429,269,1.429,270,1.149,271,0.724,272,1.942,273,1.897,274,0.707,275,2.464,276,2.48,277,1.5,278,0.707,279,0.761,280,0.761,281,0.707,282,0.761,283,0.761,284,0.674,285,0.761,286,0.761,287,0.69,288,0.761,289,0.761,290,0.707,291,0.761,292,0.761,293,0.707,294,0.761,295,0.761,296,0.707,297,0.761,298,0.707,299,0.761,300,0.761,301,0.707,302,0.761,303,0.761,304,0.707,305,0.69,306,0.761,307,0.761,308,0.707,309,0.761,310,0.761,311,1.122,312,0.724,313,2.361,314,0.761,315,0.761,316,0.674,317,0.761,318,0.761,319,0.674,320,0.761,321,0.761,322,0.627,323,0.761,324,1.207,325,0.707,326,0.627,327,0.761,328,0.674,329,0.707,330,0.761,331,0.761,332,0.674,333,0.707,334,0.724,967,2.487]],["title/injectables/CustomOwlDateTimeIntl.html",[123,0.313,725,3.286]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.168,4,0.168,5,0.152,12,0.528,13,0.009,15,0.224,22,0.168,26,4.141,27,4.141,28,3.661,31,4.157,32,2.458,33,2.905,44,0.168,54,0.183,64,1.373,120,0.007,121,0.008,122,0.007,123,0.569,125,1.74,136,0.778,170,0.648,275,2.277,360,1.74,361,1.659,724,7.468,725,5.982,813,5.152,968,6.087,969,6.899,970,6.899,971,8.01,972,6.899,973,6.899,974,6.446,975,6.899,976,6.899,977,7.067,978,6.899]],["title/interfaces/DatePeriod.html",[0,0.703,140,1.251]],["body/interfaces/DatePeriod.html",[0,0.635,2,1.285,3,0.061,4,0.061,5,0.055,7,0.172,8,0.423,9,1.521,11,1.457,12,0.712,13,0.01,14,1.294,15,0.131,22,0.061,36,1.864,37,0.68,38,1.077,39,0.649,40,0.633,44,0.228,46,0.697,47,1.64,48,0.697,54,0.23,57,1.657,62,1.187,87,0.649,94,1.596,96,1.596,100,1.596,102,0.714,104,0.714,107,2.13,110,2.137,111,1.786,120,0.003,121,0.004,122,0.003,123,0.618,124,0.714,126,0.697,127,2.527,130,2.54,131,2.692,132,0.768,133,2.261,134,0.768,135,2.035,138,2.647,139,0.619,140,1.739,141,1.216,142,0.731,143,1.187,144,1.187,145,1.187,146,0.697,147,1.104,148,0.75,149,0.75,150,0.731,151,2.598,152,1.216,153,2.11,154,1.85,155,1.85,156,2.428,157,1.187,158,1.187,159,1.895,160,1.187,161,1.676,162,0.768,163,2.104,164,1.635,165,0.768,166,0.768,167,1.158,168,0.768,169,1.187,170,0.796,171,1.187,172,1.187,173,1.51,174,1.676,175,1.187,176,1.803,177,0.768,178,1.676,179,2.148,180,2.148,181,1.895,182,1.158,183,1.676,184,1.187,185,1.216,186,1.216,187,1.676,188,1.521,189,1.895,190,1.676,191,1.71,192,1.187,193,0.768,194,1.676,195,1.942,196,1.158,197,0.869,198,1.003,199,0.649,200,2.028,201,0.75,202,1.104,203,1.438,204,1.052,205,1.962,206,0.75,207,1.13,208,1.85,209,0.75,210,1.158,211,1.895,212,0.75,213,1.972,214,0.75,215,0.942,216,1.473,217,1.187,218,1.782,219,2.316,220,1.187,221,1.187,222,1.836,223,1.681,224,1.618,225,1.187,226,1.187,227,1.187,228,1.088,229,1.158,230,1.676,231,1.187,232,0.731,233,1.158,234,1.158,235,1.403,236,1.187,237,1.187,238,1.438,239,1.438,240,0.768,241,1.187,242,1.187,243,1.187,244,1.187,245,1.187,246,1.187,247,1.676,248,0.75,249,1.187,250,0.75,251,0.731,252,1.657,253,1.337,254,0.559,255,1.104,256,0.714,257,0.768,258,1.088,259,1.438,260,1.806,261,1.438,262,1.403,263,1.438,264,1.158,265,1.158,266,1.158,267,1.158,268,1.438,269,1.438,270,1.158,271,0.731,272,1.944,273,1.899,274,0.714,275,2.467,276,2.485,277,1.51,278,0.714,279,0.768,280,0.768,281,0.714,282,0.768,283,0.768,284,0.68,285,0.768,286,0.768,287,0.697,288,0.768,289,0.768,290,0.714,291,0.768,292,0.768,293,0.714,294,0.768,295,0.768,296,0.714,297,0.768,298,0.714,299,0.768,300,0.768,301,0.714,302,0.768,303,0.768,304,0.714,305,0.697,306,0.768,307,0.768,308,0.714,309,0.768,310,0.768,311,0.714,312,0.731,313,2.367,314,0.768,315,0.768,316,0.68,317,0.768,318,0.768,319,0.68,320,0.768,321,0.768,322,0.633,323,0.768,324,1.216,325,0.714,326,0.633,327,0.768,328,0.68,329,0.714,330,0.768,331,0.768,332,0.68,333,0.714,334,0.731,361,1.35]],["title/components/EditmatchPitchComponent.html",[19,0.44,443,1.221]],["body/components/EditmatchPitchComponent.html",[3,0.106,4,0.106,5,0.096,7,0.299,8,0.638,12,0.67,13,0.01,14,1.035,15,0.221,16,4.064,17,2.625,18,1.518,19,0.685,20,1.854,21,2.412,22,0.106,34,2.8,35,1.69,41,1.6,42,1.897,43,1.897,44,0.106,49,2.494,50,2.377,52,1.625,54,0.116,55,1.156,56,1.513,59,2.902,64,1.193,65,2.194,67,1.727,68,3.633,71,3.601,77,1.996,89,2.429,91,1.957,92,1.738,113,2.895,114,1.841,115,1.518,120,0.004,121,0.006,122,0.004,128,0.934,129,1.362,136,1.01,170,0.725,197,0.952,198,1.858,204,2.199,215,0.583,222,2.059,228,0.614,254,0.614,258,0.962,335,1.213,336,1.79,337,1.371,338,1.337,339,1.337,343,1.337,344,2.043,345,1.747,351,1.477,360,1.727,361,1.647,363,2.011,365,2.361,370,5.232,378,2.895,379,2.236,381,1.156,386,3.971,405,2.087,419,3.315,421,1.003,422,1.835,423,1.835,424,1.337,425,2.253,426,1.337,427,1.213,428,1.337,429,1.337,430,1.337,431,1.184,432,1.337,433,1.213,434,1.337,435,1.213,436,1.337,437,1.213,438,1.337,439,1.184,440,1.337,441,1.213,442,1.337,443,2.044,444,1.337,445,1.213,446,1.337,447,1.213,448,1.337,449,1.184,450,1.337,451,1.213,452,1.337,453,1.213,454,1.337,455,1.213,456,1.337,457,1.213,458,1.337,459,1.213,460,1.337,461,1.184,462,1.337,463,1.156,464,1.337,465,1.184,466,1.337,467,1.213,468,1.337,469,1.213,470,1.337,471,1.337,472,1.213,473,1.337,474,1.337,475,1.184,476,1.337,477,1.184,478,1.337,479,1.213,480,1.337,481,1.184,482,1.337,483,1.213,484,1.273,485,1.337,486,1.337,523,2.961,555,2.195,776,2.159,841,3.266,872,3.296,979,3.858,980,5.998,981,6.847,982,5.998,983,6.847,984,5.113,985,5.113,986,6.847,987,6.847,988,6.847,989,6.847,990,6.847,991,6.847,992,7.368,993,7.368,994,5.292,995,5.998,996,5.929,997,7.368,998,3.519,999,4.902,1000,4.504,1001,6.847,1002,7.368,1003,6.572,1004,5.998,1005,4.373,1006,4.373,1007,4.48,1008,4.373,1009,5.113,1010,4.373,1011,5.998,1012,4.373,1013,4.373,1014,4.373,1015,5.998,1016,4.373,1017,4.373,1018,4.373,1019,4.373,1020,4.373,1021,4.373,1022,5.51,1023,4.373,1024,5.998,1025,4.373,1026,4.373,1027,4.373,1028,4.48,1029,3.266,1030,3.064,1031,3.266,1032,4.373,1033,4.373,1034,3.519,1035,4.373,1036,3.266,1037,3.266,1038,3.266,1039,3.971,1040,3.266,1041,3.266,1042,3.266,1043,5.113,1044,3.266,1045,3.266,1046,3.266,1047,4.797,1048,4.373,1049,4.373,1050,4.373,1051,4.373,1052,4.373,1053,4.373,1054,4.373,1055,4.373,1056,6.847,1057,4.373,1058,6.847,1059,4.373,1060,4.373,1061,5.998,1062,4.373,1063,5.998,1064,4.373,1065,4.373,1066,4.373,1067,4.373,1068,4.373,1069,4.373,1070,4.373,1071,4.373,1072,4.373,1073,4.373,1074,4.373,1075,4.373,1076,4.373,1077,4.373,1078,3.447,1079,3.447,1080,5.292,1081,5.292,1082,5.998,1083,5.292,1084,5.929,1085,5.998,1086,5.998,1087,7.368,1088,5.998,1089,5.998,1090,5.998,1091,5.998,1092,5.998,1093,5.998,1094,4.827,1095,4.48]],["title/components/EditmatchResultComponent.html",[19,0.44,445,1.221]],["body/components/EditmatchResultComponent.html",[3,0.131,4,0.131,5,0.119,7,0.368,8,0.732,11,1.709,12,0.647,13,0.009,15,0.224,16,4.412,17,3.23,18,1.868,19,0.759,20,2.055,21,2.968,22,0.131,31,4.228,32,1.917,33,2.266,41,1.969,44,0.131,49,2.525,50,2.407,52,1.864,54,0.143,55,1.423,56,1.736,64,1.369,65,1.956,67,2.217,68,4.027,71,4.132,72,2.023,77,2.167,113,3.563,114,2.266,115,1.868,120,0.005,121,0.007,122,0.005,136,0.982,154,2.157,155,2.157,170,0.713,197,1.01,198,2.017,215,0.717,228,0.756,254,0.756,335,1.493,336,2.054,337,1.687,338,1.646,339,1.646,343,1.646,344,1.606,345,2.004,351,1.695,355,4.387,356,4.751,360,1.357,361,1.294,363,1.695,365,2.105,381,1.82,399,3.23,400,2.752,402,3.23,403,4.132,407,3.385,419,3.094,421,1.234,422,2.105,423,2.105,424,1.646,425,2.446,426,1.646,427,1.493,428,1.646,429,1.646,430,1.646,431,1.458,432,1.646,433,1.493,434,1.646,435,1.493,436,1.646,437,1.493,438,1.646,439,1.458,440,1.646,441,1.493,442,1.646,443,1.493,444,1.646,445,2.219,446,1.646,447,1.493,448,1.646,449,1.458,450,1.646,451,1.493,452,1.646,453,1.493,454,1.646,455,1.493,456,1.646,457,1.493,458,1.646,459,1.493,460,1.646,461,1.458,462,1.646,463,1.423,464,1.646,465,1.458,466,1.646,467,1.493,468,1.646,469,1.493,470,1.646,471,1.646,472,1.493,473,1.646,474,1.646,475,1.458,476,1.646,477,1.458,478,1.646,479,1.493,480,1.646,481,1.458,482,1.646,483,1.493,484,1.567,485,1.646,486,1.646,523,2.657,689,4.748,996,6.437,998,4.331,1000,4.741,1031,4.019,1078,3.955,1079,3.955,1094,5.539,1095,5.14,1096,4.748,1097,6.883,1098,7.589,1099,6.883,1100,6.883,1101,5.381,1102,5.381,1103,5.381,1104,5.381,1105,5.381,1106,5.381,1107,4.748,1108,6.883,1109,5.381,1110,6.883,1111,5.381,1112,5.381,1113,5.381,1114,5.381,1115,5.381,1116,6.883,1117,5.381,1118,5.381]],["title/components/EditmatchTimeComponent.html",[19,0.44,447,1.221]],["body/components/EditmatchTimeComponent.html",[3,0.128,4,0.128,5,0.116,7,0.36,8,0.721,12,0.628,13,0.01,15,0.227,16,4.376,17,3.16,18,1.827,19,0.751,20,2.034,21,2.903,22,0.128,25,6.387,26,3.16,27,3.16,28,2.793,29,3.717,30,2.598,31,4.081,32,1.876,33,2.216,41,1.926,44,0.128,49,2.522,50,2.404,52,1.838,54,0.14,55,1.392,56,1.711,62,1.632,64,1.35,65,2.134,67,2.12,68,3.985,71,4.073,73,3.931,74,3.931,75,3.311,76,3.931,77,2.149,113,3.485,114,2.216,115,1.827,118,3.16,120,0.005,121,0.007,122,0.005,136,0.964,170,0.745,191,1.236,197,1.004,198,2,215,0.701,228,0.74,254,0.74,335,1.46,336,2.025,337,1.65,338,1.61,339,1.61,343,1.61,344,1.571,345,1.976,351,1.671,360,1.711,361,1.632,363,1.849,365,2.297,381,1.392,405,2.512,419,3.231,421,1.207,422,2.075,423,2.075,424,1.61,425,2.426,426,1.61,427,1.46,428,1.61,429,1.61,430,1.61,431,1.426,432,1.61,433,1.46,434,1.61,435,1.46,436,1.61,437,1.46,438,1.61,439,1.426,440,1.61,441,1.46,442,1.61,443,1.46,444,1.61,445,1.46,446,1.61,447,2.201,448,1.61,449,1.426,450,1.61,451,1.46,452,1.61,453,1.46,454,1.61,455,1.46,456,1.61,457,1.46,458,1.61,459,1.46,460,1.61,461,1.426,462,1.61,463,1.392,464,1.61,465,1.426,466,1.61,467,1.46,468,1.61,469,1.46,470,1.61,471,1.61,472,1.46,473,1.61,474,1.61,475,1.426,476,1.61,477,1.426,478,1.61,479,1.46,480,1.61,481,1.426,482,1.61,483,1.46,484,1.533,485,1.61,486,1.61,523,2.598,536,5.068,996,6.384,998,4.236,1000,4.717,1031,3.931,1078,3.899,1079,3.899,1094,5.461,1095,5.068,1119,4.644,1120,6.786,1121,7.51,1122,6.786,1123,7.244,1124,6.786,1125,6.786,1126,6.786,1127,5.263,1128,5.263,1129,5.263,1130,5.263,1131,5.263,1132,6.786,1133,5.263,1134,6.786,1135,4.754,1136,5.068,1137,6.786,1138,5.068]],["title/injectables/EventGQL.html",[123,0.313,312,1.281]],["body/injectables/EventGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.134,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.75,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.633,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,1.156,313,2.366,314,1.214,315,1.214,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1139,2.505]],["title/components/EventsComponent.html",[19,0.44,449,1.192]],["body/components/EventsComponent.html",[3,0.142,4,0.142,5,0.129,7,0.399,8,0.771,12,0.603,13,0.009,15,0.225,19,0.788,20,2.135,22,0.142,29,3.78,34,3.223,35,2.258,41,2.138,42,3.145,43,2.535,44,0.142,49,2.536,50,2.417,52,1.963,54,0.155,55,1.545,56,1.828,64,1.442,65,1.661,67,1.987,72,2.196,77,2.232,120,0.006,121,0.007,122,0.006,136,0.929,170,0.74,191,1.372,196,2.295,197,0.698,215,0.779,228,0.821,254,0.821,316,2.232,335,1.621,336,2.163,337,1.832,338,1.787,339,1.787,343,1.787,344,1.743,345,2.111,351,1.785,360,1.473,361,1.405,363,1.439,365,1.787,381,1.545,421,1.34,422,2.217,423,2.217,424,1.787,425,2.52,426,1.787,427,1.621,428,1.787,429,1.787,430,1.787,431,1.582,432,1.787,433,1.621,434,1.787,435,1.621,436,1.787,437,1.621,438,1.787,439,1.582,440,1.787,441,1.621,442,1.787,443,1.621,444,1.787,445,1.621,446,1.787,447,1.621,448,1.787,449,2.232,450,1.787,451,1.621,452,1.787,453,1.621,454,1.787,455,1.621,456,1.787,457,1.621,458,1.787,459,1.621,460,1.787,461,1.582,462,1.787,463,1.545,464,1.787,465,1.582,466,1.787,467,1.621,468,1.787,469,1.621,470,1.787,471,1.787,472,1.621,473,1.787,474,1.787,475,1.582,476,1.787,477,1.582,478,1.787,479,1.621,480,1.787,481,1.582,482,1.787,483,1.621,484,1.701,485,1.787,486,1.787,595,5.833,1136,4.363,1138,4.363,1140,5.155,1141,7.881,1142,7.249,1143,5.842,1144,7.249,1145,7.249,1146,5.842,1147,5.842,1148,5.155,1149,5.842,1150,5.842,1151,5.842,1152,3.868,1153,5.842,1154,7.249,1155,7.249]],["title/modules/EventsModule.html",[557,1.221,569,3.083]],["body/modules/EventsModule.html",[3,0.162,4,0.162,5,0.148,13,0.009,15,0.233,22,0.162,44,0.162,54,0.177,120,0.007,121,0.008,122,0.007,421,1.535,449,2.497,557,1.856,559,2.323,560,3.193,561,3.988,562,3.303,563,3.303,564,3.988,569,6.476,570,4.558,571,4.024,572,3.422,573,3.422,576,3.04,577,2.958,579,3.845,595,5.385,721,5.901,722,5.385,1156,5.903,1157,5.903,1158,5.903,1159,5.903,1160,6.244,1161,6.691,1162,6.691,1163,5.903,1164,5.903]],["title/modules/EventsRoutingModule.html",[557,1.221,1160,3.083]],["body/modules/EventsRoutingModule.html",[3,0.171,4,0.171,5,0.155,13,0.009,15,0.226,19,0.704,22,0.171,44,0.171,54,0.187,120,0.007,121,0.008,122,0.007,258,0.988,449,2.194,554,3.248,559,2.441,576,2.718,577,3.045,597,4.042,598,4.363,599,4.042,601,4.042,602,4.222,1160,5.675,1163,6.206,1165,7.034]],["title/modules/GraphQLModule.html",[557,1.221,738,3.083]],["body/modules/GraphQLModule.html",[3,0.139,4,0.139,5,0.126,12,0.437,13,0.01,15,0.242,22,0.139,44,0.139,54,0.151,59,3.073,87,1.475,107,1.719,120,0.006,121,0.007,122,0.006,139,1.406,156,1.547,200,1.475,208,1.623,252,2.386,253,1.936,255,1.585,258,1.248,358,3.101,380,2.921,421,1.31,555,3.188,557,1.585,559,1.982,560,2.725,561,2.725,562,2.819,563,3.851,564,3.411,571,3.655,572,2.921,573,2.921,577,2.687,617,5.48,634,4.265,636,4.001,637,5.039,729,4.596,738,6.015,755,4.001,772,5.039,774,5.039,776,3.851,817,6.412,819,5.039,850,3.781,864,5.752,900,5.752,1166,5.039,1167,5.039,1168,4.265,1169,7.147,1170,7.147,1171,7.147,1172,6.306,1173,7.686,1174,5.039,1175,5.711,1176,5.711,1177,5.711,1178,5.711,1179,5.338,1180,7.801,1181,5.711,1182,5.711,1183,5.752,1184,4.265,1185,4.265,1186,7.147,1187,7.686,1188,5.039,1189,6.306,1190,5.039,1191,4.596,1192,5.039,1193,5.711,1194,5.711,1195,5.711,1196,5.711,1197,5.711,1198,5.711,1199,7.686,1200,5.711,1201,7.147,1202,5.711,1203,5.711,1204,5.711,1205,5.711,1206,5.711,1207,5.711,1208,5.711,1209,5.711,1210,5.711,1211,4.265,1212,7.147,1213,5.711,1214,5.711,1215,7.801,1216,5.338,1217,5.711,1218,5.711,1219,4.265,1220,5.711,1221,5.711,1222,5.711,1223,5.039,1224,7.147,1225,5.711,1226,5.711,1227,5.711,1228,5.711,1229,5.711,1230,5.711,1231,4.596]],["title/injectables/GraphqlSubscriptionService.html",[123,0.313,617,2.768]],["body/injectables/GraphqlSubscriptionService.html",[0,0.924,3,0.141,4,0.141,5,0.128,7,0.395,8,0.766,11,1.54,12,0.601,13,0.01,14,1.103,15,0.224,22,0.141,44,0.175,54,0.153,64,1.434,65,2.531,67,2.131,89,1.908,92,3.264,111,1.152,112,3.824,115,2.501,120,0.006,121,0.007,122,0.006,123,0.512,125,1.459,129,1.561,136,0.971,170,0.677,197,0.691,258,1.013,272,1.297,273,1.266,316,2.225,319,2.225,322,2.203,326,2.071,351,1.775,360,1.817,361,1.733,363,1.775,365,2.204,400,2.96,405,2.762,555,2.118,611,4.636,617,4.937,636,6.121,664,5.049,665,5.498,666,5.498,776,3.558,828,5.049,867,2.96,871,4.322,872,3.224,893,5.171,1179,4.322,1183,7.106,1184,4.322,1185,4.322,1232,4.658,1233,6.924,1234,6.924,1235,7.246,1236,5.788,1237,5.438,1238,5.861,1239,6.924,1240,6.924,1241,5.788,1242,6.358,1243,5.788,1244,5.788,1245,5.788,1246,5.788,1247,5.788,1248,5.788,1249,5.788,1250,5.106,1251,4.658,1252,5.382,1253,4.055,1254,4.658,1255,4.658,1256,5.106,1257,6.358,1258,4.658,1259,5.106,1260,5.106,1261,7.455,1262,7.455,1263,5.106,1264,5.106,1265,5.106,1266,5.106,1267,5.106,1268,5.106,1269,5.106,1270,5.106,1271,5.106,1272,5.106,1273,4.322,1274,5.106,1275,5.106,1276,5.106,1277,5.106,1278,5.106,1279,6.358,1280,5.106]],["title/injectables/I18Service.html",[29,1.853,123,0.313]],["body/injectables/I18Service.html",[3,0.156,4,0.156,5,0.142,7,0.438,8,0.816,12,0.651,13,0.009,14,1.264,15,0.231,22,0.156,29,3.231,31,4.213,32,2.734,33,2.7,44,0.156,54,0.17,64,1.276,67,2.145,75,5.165,120,0.006,121,0.008,122,0.006,123,0.545,125,1.617,128,1.37,129,1.276,136,0.995,170,0.721,258,0.901,272,1.437,273,1.403,351,1.889,360,1.935,361,1.845,363,1.889,365,2.347,523,3.166,555,2.347,639,4.035,640,3.403,813,4.79,828,5.375,1281,5.161,1282,8.21,1283,8.21,1284,7.673,1285,8.508,1286,8.21,1287,6.414,1288,6.414,1289,7.673,1290,6.414,1291,6.414,1292,8.697,1293,8.508,1294,6.414,1295,7.673,1296,6.414,1297,6.414,1298,6.414,1299,6.414,1300,6.414,1301,5.161,1302,6.414,1303,6.414,1304,6.414,1305,8.697,1306,6.414,1307,6.414,1308,6.414]],["title/interfaces/IPossibleKickoffs.html",[0,0.703,1309,3.083]],["body/interfaces/IPossibleKickoffs.html",[0,1.1,2,2.754,3,0.131,4,0.131,5,0.119,7,0.587,8,0.732,11,1.879,12,0.633,13,0.01,14,1.067,15,0.233,19,0.689,20,1.865,22,0.131,29,3.196,30,2.658,34,2.816,35,2.081,36,1.741,41,1.97,42,2.336,43,2.336,44,0.131,47,1.295,49,1.458,50,1.39,52,1.458,54,0.143,56,1.358,59,2.589,60,2.97,62,1.924,64,1.071,65,1.53,67,1.736,77,1.458,89,1.775,91,2.409,92,2.736,114,2.267,115,1.869,118,3.232,120,0.005,121,0.007,122,0.005,129,1.37,191,1.265,197,0.987,199,1.39,204,2.116,222,2.168,223,1.39,224,1.424,258,1.124,345,1.568,370,4.776,379,2.754,405,2.57,463,1.424,484,2.005,555,2.928,587,3.772,693,3.798,776,2.658,872,2.409,940,4.559,984,4.021,985,4.021,999,4.557,1000,4.187,1007,4.021,1009,5.142,1028,5.142,1029,4.021,1030,3.772,1036,4.021,1037,4.021,1038,4.021,1039,4.559,1040,4.021,1041,4.021,1042,4.021,1043,5.975,1044,4.021,1045,4.021,1046,5.669,1047,3.772,1078,3.094,1079,3.094,1135,5.318,1309,5.793,1310,4.021,1311,4.021,1312,6.654,1313,6.654,1314,6.654,1315,5.605,1316,5.541,1317,4.333,1318,4.021,1319,4.333,1320,5.541,1321,4.333,1322,4.333,1323,4.333,1324,4.021,1325,4.021,1326,6.654,1327,4.333,1328,4.333,1329,4.333,1330,4.333,1331,4.333,1332,4.333,1333,4.333,1334,4.333,1335,4.333,1336,4.333,1337,4.333,1338,4.333,1339,4.333,1340,5.541,1341,4.333,1342,4.333,1343,4.333,1344,4.333,1345,4.333,1346,4.333,1347,4.333,1348,4.333,1349,5.541,1350,5.541,1351,5.541,1352,4.333,1353,4.333,1354,4.333,1355,4.333,1356,6.109,1357,4.333,1358,4.333,1359,4.333,1360,4.333,1361,4.333,1362,4.333,1363,4.333,1364,4.333,1365,4.333,1366,4.333,1367,4.021,1368,4.333,1369,4.333,1370,5.541,1371,4.333,1372,4.333,1373,4.333,1374,4.333,1375,4.333,1376,4.333,1377,4.333,1378,3.772,1379,4.333,1380,4.333,1381,4.333,1382,4.333,1383,4.333,1384,4.333,1385,4.333,1386,3.798,1387,4.333,1388,4.333,1389,5.541,1390,5.541]],["title/interfaces/ISnackBarData.html",[0,0.703,1391,3.286]],["body/interfaces/ISnackBarData.html",[0,1.109,2,3.551,3,0.169,4,0.169,5,0.153,7,0.474,8,0.855,12,0.531,13,0.009,14,1.192,15,0.213,18,2.41,19,0.804,20,2.178,21,3.83,22,0.169,44,0.195,49,1.881,50,1.793,52,1.881,54,0.184,56,1.751,64,1.381,67,1.751,72,2.61,77,1.881,120,0.007,121,0.008,122,0.007,345,2.022,355,3.684,381,1.836,400,4.464,1391,6.338,1392,5.588,1393,6.126,1394,6.126,1395,6.126,1396,6.126]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.703,1315,3.083]],["body/interfaces/ITeamCanPlayAtDate.html",[0,1.109,2,2.79,3,0.132,4,0.132,5,0.12,7,0.549,8,0.738,11,1.774,12,0.531,13,0.01,14,1.073,15,0.234,19,0.695,20,1.881,22,0.132,29,3.216,30,2.693,34,2.839,35,2.108,36,1.947,41,1.996,42,2.367,43,2.367,44,0.132,47,1.837,49,1.478,50,1.409,52,1.478,54,0.145,56,1.376,59,2.61,60,3.009,62,1.67,64,1.085,65,1.551,67,1.751,77,1.478,89,1.799,91,2.441,92,2.759,114,2.297,115,1.894,118,3.275,120,0.005,121,0.007,122,0.005,129,1.381,191,1.281,197,0.991,199,1.409,204,1.836,222,2.027,223,1.409,224,1.443,258,1.13,345,1.589,370,4.805,379,2.79,405,2.604,463,1.443,484,2.022,555,2.942,587,3.822,693,3.83,776,2.693,872,3.417,940,4.597,984,4.075,985,4.075,999,4.585,1000,4.213,1007,4.075,1009,5.186,1028,5.186,1029,4.075,1030,3.822,1036,4.075,1037,4.075,1038,4.075,1039,4.597,1040,4.075,1041,4.075,1042,4.075,1043,6.004,1044,4.075,1045,4.075,1046,5.704,1047,3.822,1078,3.135,1079,3.135,1135,5.351,1309,5.633,1310,4.075,1311,4.075,1312,5.588,1313,5.588,1314,5.588,1315,5.351,1316,5.588,1317,4.391,1318,4.075,1319,4.391,1320,6.681,1321,4.391,1322,4.391,1323,4.391,1324,4.075,1325,4.075,1326,6.681,1327,4.391,1328,4.391,1329,4.391,1330,4.391,1331,4.391,1332,4.391,1333,4.391,1334,4.391,1335,4.391,1336,4.391,1337,4.391,1338,4.391,1339,4.391,1340,5.588,1341,4.391,1342,4.391,1343,4.391,1344,4.391,1345,4.391,1346,4.391,1347,4.391,1348,4.391,1349,5.588,1350,5.588,1351,5.588,1352,4.391,1353,4.391,1354,4.391,1355,4.391,1356,6.146,1357,4.391,1358,4.391,1359,4.391,1360,4.391,1361,4.391,1362,4.391,1363,4.391,1364,4.391,1365,4.391,1366,4.391,1367,4.075,1368,4.391,1369,4.391,1370,5.588,1371,4.391,1372,4.391,1373,4.391,1374,4.391,1375,4.391,1376,4.391,1377,4.391,1378,3.822,1379,4.391,1380,4.391,1381,4.391,1382,4.391,1383,4.391,1384,4.391,1385,4.391,1386,3.83,1387,4.391,1388,4.391,1389,5.588,1390,5.588]],["title/interfaces/IntrospectionResultData.html",[0,0.703,1397,2.768]],["body/interfaces/IntrospectionResultData.html",[0,1.021,2,3.268,3,0.155,4,0.155,5,0.141,7,0.436,8,0.814,12,0.696,13,0.01,14,1.194,15,0.217,22,0.155,28,4.062,44,0.22,54,0.169,87,1.65,110,1.574,111,1.523,120,0.008,121,0.008,122,0.006,123,0.544,127,1.861,128,1.365,130,2.176,138,2.415,139,1.574,150,1.861,151,1.861,156,2.074,170,0.719,251,1.861,252,2.353,253,2.22,254,1.076,255,1.773,256,1.816,258,0.898,271,1.861,272,1.432,273,1.398,275,1.816,334,1.861,1216,4.772,1219,6.122,1237,4.231,1273,5.718,1397,5.157,1398,4.477,1399,6.489,1400,6.161,1401,7.098,1402,6.754,1403,5.638,1404,5.718,1405,5.142]],["title/interfaces/IntrospectionResultData-1.html",[0,0.586,1386,2.022,1397,2.306]],["body/interfaces/IntrospectionResultData-1.html",[0,1.117,2,3.577,3,0.17,4,0.17,5,0.154,7,0.478,8,0.858,12,0.651,13,0.009,14,1.196,44,0.196,120,0.009,121,0.008,122,0.007,128,1.494,170,0.758,258,0.983,1216,5.223,1397,5.355,1399,6.645,1400,6.497,1404,6.029,1405,5.628,1406,5.628,1407,5.628]],["title/injectables/LatestEventGQL.html",[123,0.313,316,1.192]],["body/injectables/LatestEventGQL.html",[0,0.633,3,0.061,4,0.061,5,0.055,7,0.171,8,0.421,9,1.517,11,1.454,12,0.712,13,0.01,14,1.295,15,0.13,22,0.061,36,1.862,37,0.677,38,1.073,39,0.645,40,0.63,44,0.228,46,0.693,47,1.637,48,0.693,54,0.23,57,1.653,62,1.468,87,0.645,94,1.591,96,1.591,100,1.591,102,0.71,104,0.71,107,2.133,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.71,125,0.63,126,0.693,127,2.541,128,0.534,129,0.497,130,2.543,131,2.691,132,0.764,133,2.258,134,0.764,135,2.031,136,0.282,138,2.644,139,0.615,140,1.591,141,1.211,142,0.728,143,1.182,144,1.182,145,1.182,146,0.693,147,1.099,148,0.746,149,0.746,150,0.728,151,2.597,152,1.211,153,2.106,154,1.846,155,1.846,156,2.427,157,1.182,158,1.182,159,1.891,160,1.182,161,1.671,162,0.764,163,2.101,164,1.63,165,0.764,166,0.764,167,1.153,168,0.764,169,1.182,170,0.795,171,1.182,172,1.182,173,1.505,174,1.671,175,1.182,176,1.8,177,0.764,178,1.671,179,2.145,180,2.145,181,1.891,182,1.153,183,1.671,184,1.182,185,1.211,186,1.211,187,1.671,188,1.517,189,1.891,190,1.671,191,1.749,192,1.182,193,0.764,194,1.821,195,2.169,196,1.153,197,0.868,198,0.999,199,0.645,200,2.026,201,0.746,202,1.099,203,1.433,204,1.048,205,1.958,206,0.746,207,1.126,208,1.846,209,0.746,210,1.153,211,1.891,212,0.746,213,1.969,214,0.746,215,0.941,216,1.468,217,1.182,218,1.777,219,2.314,220,1.182,221,1.182,222,1.833,223,1.677,224,1.614,225,1.182,226,1.182,227,1.182,228,1.086,229,1.153,230,1.671,231,1.182,232,0.728,233,1.153,234,1.153,235,1.399,236,1.182,237,1.182,238,1.433,239,1.433,240,0.764,241,1.182,242,1.182,243,1.182,244,1.182,245,1.182,246,1.182,247,1.671,248,0.746,249,1.182,250,0.746,251,0.728,252,1.653,253,1.333,254,0.557,255,1.099,256,0.71,257,0.764,258,1.086,259,1.433,260,1.802,261,1.433,262,1.399,263,1.433,264,1.153,265,1.153,266,1.153,267,1.153,268,1.433,269,1.63,270,1.153,271,0.728,272,1.943,273,1.898,274,0.71,275,2.465,276,2.482,277,1.505,278,0.71,279,0.764,280,0.764,281,0.71,282,0.764,283,0.764,284,0.677,285,0.764,286,0.764,287,0.693,288,0.764,289,0.764,290,0.71,291,0.764,292,0.764,293,0.71,294,0.764,295,0.764,296,0.71,297,0.764,298,0.71,299,0.764,300,0.764,301,0.71,302,0.764,303,0.764,304,0.71,305,0.693,306,0.764,307,0.764,308,0.71,309,0.764,310,0.764,311,0.71,312,0.728,313,2.364,314,0.764,315,0.764,316,1.073,317,1.211,318,1.211,319,0.677,320,0.764,321,0.764,322,0.63,323,0.764,324,1.211,325,0.71,326,0.63,327,0.764,328,0.677,329,0.71,330,0.764,331,0.764,332,0.677,333,0.71,334,0.728,1408,2.499]],["title/injectables/LocateMatchGQL.html",[123,0.313,281,1.251]],["body/injectables/LocateMatchGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.171,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,2.033,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,1.128,282,1.214,283,1.214,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1409,2.505]],["title/components/LoginComponent.html",[19,0.44,451,1.221]],["body/components/LoginComponent.html",[3,0.127,4,0.127,5,0.116,7,0.358,8,0.719,12,0.643,13,0.009,14,1.053,15,0.227,16,4.523,18,1.819,19,0.75,20,2.03,22,0.127,31,4.077,32,1.868,33,2.207,44,0.127,49,2.521,50,2.404,52,1.833,54,0.139,55,1.386,56,1.706,64,1.346,65,2.428,67,1.89,68,4.351,72,2.544,77,2.145,89,2.769,91,2.345,92,2.689,114,2.207,115,2.749,120,0.005,121,0.007,122,0.005,136,0.986,163,1.79,170,0.744,188,1.42,197,0.626,215,0.698,228,0.736,254,0.736,284,1.42,335,1.454,336,2.019,337,1.643,338,1.603,339,1.603,343,1.603,344,1.564,345,1.971,351,1.666,355,3.977,356,4.551,358,3.707,360,1.706,361,1.627,363,1.95,365,2.07,378,3.47,379,2.68,380,2.68,381,1.79,382,3.672,386,4.481,399,4.062,400,3.461,402,4.062,403,4.754,404,3.47,405,2.501,407,3.297,409,4.624,410,4.624,419,2.476,421,1.202,422,2.07,423,2.07,424,1.603,425,2.422,426,1.603,427,1.454,428,1.603,429,1.603,430,1.603,431,1.42,432,1.603,433,1.454,434,1.603,435,1.454,436,1.603,437,1.454,438,1.603,439,1.42,440,1.603,441,1.454,442,1.603,443,1.454,444,1.603,445,1.454,446,1.603,447,1.454,448,1.603,449,1.42,450,1.603,451,2.197,452,1.603,453,1.454,454,1.603,455,1.454,456,1.603,457,1.454,458,1.603,459,1.454,460,1.603,461,1.42,462,1.603,463,1.386,464,1.603,465,1.42,466,1.603,467,1.454,468,1.603,469,1.454,470,1.603,471,1.603,472,1.454,473,1.603,474,1.603,475,1.42,476,1.603,477,1.42,478,1.603,479,1.454,480,1.603,481,1.42,482,1.603,483,1.454,484,1.526,485,1.603,486,1.603,676,5.971,776,3.7,867,2.68,868,3.914,872,3.544,893,4.062,919,4.218,920,5.971,921,5.971,1003,6.758,1022,6.031,1034,4.218,1410,4.624,1411,8.397,1412,7.495,1413,6.767,1414,7.495,1415,6.612,1416,7.92,1417,6.767,1418,5.241,1419,6.767,1420,5.241,1421,5.241,1422,5.241,1423,6.767,1424,5.241,1425,5.241,1426,5.241,1427,5.241,1428,5.241,1429,4.624,1430,7.495,1431,5.241,1432,5.241,1433,4.624,1434,5.241,1435,5.241,1436,5.241,1437,6.767,1438,5.971,1439,6.767]],["title/interfaces/LoginContext.html",[0,0.703,848,3.286]],["body/interfaces/LoginContext.html",[0,0.918,2,2.938,3,0.139,4,0.139,5,0.127,7,0.392,8,0.763,12,0.549,13,0.01,14,1.265,15,0.228,22,0.139,32,2.047,44,0.174,54,0.152,59,3.233,64,1.143,65,2.328,67,2.066,89,2.365,115,2.715,120,0.008,121,0.007,122,0.006,123,0.509,139,2.017,146,1.594,163,1.897,164,1.673,167,1.673,188,2.219,215,0.956,258,0.807,272,1.287,273,1.257,284,1.943,287,1.99,332,1.943,358,3.112,415,4.624,416,4.624,554,2.653,555,3.227,639,3.615,640,3.049,665,4.025,666,4.025,755,4.025,792,4.75,817,5.358,820,4.291,821,5.069,824,5.069,826,5.069,829,5.069,830,5.069,831,5.069,833,6.901,834,4.624,835,5.069,836,5.069,838,5.069,839,6.295,842,5.838,843,5.069,845,4.025,847,5.069,848,5.842,850,4.75,852,5.069,854,5.069,856,5.069,864,5.773,865,5.773,866,4.624,867,2.938,868,6.118,869,4.291,870,4.624,871,4.291,872,2.571,873,7.586,874,5.069,875,6.024,876,5.907,877,5.069,878,5.069,879,6.329,880,5.069,881,5.069,882,5.179,883,5.069,884,6.329,885,5.069,886,6.329,887,5.48,888,5.069,889,5.069,890,5.069,891,5.069,892,6.329,893,4.306,894,5.069,895,5.069,896,4.624,897,5.069,898,5.069,899,5.069,900,4.624,901,5.069,902,5.069]],["title/components/ManageseasonComponent.html",[19,0.44,453,1.221]],["body/components/ManageseasonComponent.html",[3,0.091,4,0.091,5,0.083,7,0.431,8,0.574,11,1.79,12,0.676,13,0.01,14,1.163,15,0.219,18,1.306,19,0.632,20,1.71,22,0.091,23,4.085,29,3.484,31,3.735,32,1.341,33,1.584,34,2.986,35,1.454,42,2.342,43,1.633,44,0.091,49,2.467,50,2.352,52,1.462,54,0.1,55,0.995,56,1.361,59,2.373,60,2.076,62,1.99,64,1.074,65,2.276,67,2.056,72,2.745,77,1.71,83,2.636,89,2.762,91,2.824,92,2.509,106,4.14,107,1.659,110,1.698,111,1.453,112,3.35,114,2.658,115,2.394,116,4.032,120,0.004,121,0.005,122,0.004,124,1.96,128,1.153,129,1.074,133,1.534,135,1.884,136,1.006,140,1.794,170,0.787,171,1.611,172,1.611,174,1.123,175,2.058,191,1.268,197,0.644,198,1.361,199,0.972,200,1.63,207,1.07,215,0.501,223,1.781,228,0.529,254,0.529,258,0.759,293,1.96,296,1.96,298,2.225,322,1.974,328,2.12,335,1.044,336,1.611,337,1.18,338,1.151,339,1.151,343,1.151,344,1.123,345,1.572,351,1.329,355,3.35,356,3.963,360,2.056,361,1.961,363,2.063,365,2.394,367,5.08,381,1.428,382,2.636,399,4.14,400,3.527,402,4.14,403,4.807,404,3.574,407,3.396,417,3.963,419,3.187,421,0.863,422,1.651,423,1.651,424,1.151,425,2.109,426,1.151,427,1.044,428,1.151,429,1.151,430,1.151,431,1.019,432,1.151,433,1.044,434,1.151,435,1.044,436,1.151,437,1.044,438,1.151,439,1.019,440,1.151,441,1.044,442,1.151,443,1.044,444,1.151,445,1.044,446,1.151,447,1.044,448,1.151,449,1.019,450,1.151,451,1.044,452,1.151,453,1.913,454,1.151,455,1.044,456,1.151,457,1.044,458,1.151,459,1.044,460,1.151,461,1.019,462,1.151,463,0.995,464,1.151,465,1.019,466,1.151,467,1.044,468,1.151,469,1.044,470,1.151,471,1.151,472,1.044,473,1.151,474,1.151,475,1.019,476,1.151,477,1.019,478,1.151,479,1.044,480,1.151,481,1.019,482,1.151,483,1.044,484,1.096,485,1.151,486,1.151,536,5.151,555,2.524,611,4.327,693,2.978,845,4.832,867,1.924,882,2.491,922,4.344,1078,3.102,1079,3.102,1136,4.032,1138,4.032,1148,3.32,1152,3.574,1211,4.714,1324,5.453,1325,4.714,1367,4.032,1386,4.417,1440,3.32,1441,6.313,1442,5.398,1443,6.313,1444,6.313,1445,6.313,1446,6.313,1447,6.313,1448,5.569,1449,5.398,1450,5.398,1451,5.398,1452,5.398,1453,6.897,1454,5.398,1455,5.398,1456,2.81,1457,6.313,1458,6.313,1459,6.313,1460,5.398,1461,3.763,1462,3.763,1463,3.32,1464,5.398,1465,3.763,1466,5.398,1467,6.443,1468,6.313,1469,3.763,1470,3.763,1471,3.763,1472,3.763,1473,3.763,1474,5.398,1475,3.763,1476,5.398,1477,6.897,1478,3.763,1479,3.763,1480,5.398,1481,3.763,1482,5.398,1483,3.763,1484,3.763,1485,5.398,1486,3.763,1487,3.763,1488,3.763,1489,3.763,1490,3.763,1491,3.763,1492,3.763,1493,3.763,1494,3.763,1495,2.81,1496,3.32,1497,3.32,1498,3.32,1499,3.763,1500,6.313,1501,3.763,1502,5.398,1503,3.763,1504,3.763,1505,3.763,1506,4.763,1507,3.32,1508,2.81,1509,2.81,1510,3.32,1511,6.897,1512,5.398,1513,3.763,1514,8.008,1515,6.897,1516,3.763,1517,3.763,1518,3.763,1519,3.763,1520,3.763,1521,3.763,1522,5.08,1523,5.08,1524,3.32,1525,3.763,1526,3.763,1527,3.763,1528,3.763,1529,3.763,1530,3.763,1531,3.763,1532,3.763,1533,3.763,1534,3.763,1535,3.763,1536,3.763,1537,3.763,1538,3.763,1539,3.763,1540,3.763,1541,6.897,1542,3.763,1543,5.398,1544,3.763,1545,4.763,1546,5.398,1547,5.398,1548,5.398,1549,4.763,1550,5.398,1551,5.398,1552,5.398,1553,5.398,1554,4.344,1555,5.398]],["title/components/ManagetournamentComponent.html",[19,0.44,455,1.221]],["body/components/ManagetournamentComponent.html",[3,0.118,4,0.118,5,0.107,7,0.492,8,0.683,9,1.74,11,1.791,12,0.666,13,0.01,14,1.123,15,0.222,18,1.68,19,0.721,20,1.953,22,0.118,34,3.268,35,1.87,39,1.983,40,1.937,42,3.128,43,2.1,44,0.118,49,2.51,50,2.393,52,1.74,54,0.128,55,1.699,56,1.62,59,1.82,60,2.67,64,1.278,65,2.335,66,5.384,67,1.818,70,5.051,72,1.82,77,2.08,89,2.709,92,1.923,106,2.905,107,1.164,108,3.615,111,1.278,112,2.568,120,0.007,121,0.006,122,0.005,128,1.034,129,0.963,136,1.011,170,0.787,184,2.151,197,0.861,210,1.409,215,0.645,223,1.25,228,0.68,235,2.049,254,0.68,258,0.68,308,2.183,335,1.343,336,1.917,337,1.517,338,1.48,339,1.48,343,1.48,344,1.444,345,1.871,351,1.582,360,1.62,361,1.545,363,2.023,365,2.349,381,1.28,384,3.615,419,3.115,421,1.11,422,1.965,423,1.965,424,1.48,425,2.349,426,1.48,427,1.343,428,1.48,429,1.48,430,1.48,431,1.311,432,1.48,433,1.343,434,1.48,435,1.343,436,1.48,437,1.343,438,1.48,439,1.311,440,1.48,441,1.343,442,1.48,443,1.343,444,1.48,445,1.343,446,1.48,447,1.343,448,1.48,449,1.311,450,1.48,451,1.343,452,1.48,453,1.343,454,1.48,455,2.131,456,1.48,457,1.343,458,1.48,459,1.343,460,1.48,461,1.311,462,1.48,463,1.28,464,1.48,465,1.311,466,1.48,467,1.343,468,1.48,469,1.343,470,1.48,471,1.48,472,1.343,473,1.48,474,1.48,475,1.311,476,1.48,477,1.311,478,1.48,479,1.343,480,1.48,481,1.311,482,1.48,483,1.343,484,1.409,485,1.48,486,1.48,490,5.735,493,5.969,555,1.771,693,3.543,867,2.475,1078,3.691,1079,3.691,1211,5.384,1378,3.391,1386,3.977,1524,4.27,1556,4.27,1557,6.423,1558,7.21,1559,6.423,1560,7.21,1561,7.21,1562,7.21,1563,7.21,1564,7.21,1565,6.361,1566,6.423,1567,7.68,1568,7.68,1569,7.68,1570,7.68,1571,4.27,1572,6.423,1573,6.423,1574,4.84,1575,4.84,1576,4.84,1577,4.84,1578,4.84,1579,4.84,1580,4.84,1581,4.84,1582,4.84,1583,4.84,1584,4.84,1585,6.423,1586,4.84,1587,4.84,1588,4.84,1589,6.423,1590,4.84,1591,4.27,1592,4.84,1593,4.27,1594,4.84,1595,4.84,1596,4.27,1597,4.84,1598,3.615,1599,6.423,1600,7.21,1601,4.84,1602,6.423,1603,6.423,1604,4.84,1605,4.84,1606,8.215,1607,4.84,1608,4.84,1609,4.84,1610,5.667,1611,6.423,1612,6.423,1613,6.423,1614,6.423]],["title/components/ManageusersComponent.html",[19,0.44,457,1.221]],["body/components/ManageusersComponent.html",[3,0.15,4,0.15,5,0.136,7,0.422,13,0.009,15,0.164,19,0.808,20,2.188,22,0.15,44,0.15,49,2.543,50,2.424,52,2.031,54,0.164,55,1.633,56,1.891,64,1.607,77,2.275,89,2.663,120,0.006,121,0.008,122,0.006,136,0.846,170,0.705,197,0.737,215,0.823,228,0.868,254,0.868,335,1.713,336,2.238,337,1.936,338,1.889,339,1.889,343,1.889,344,1.843,345,2.184,351,1.847,363,1.521,381,1.633,421,1.417,422,2.294,423,2.294,424,1.889,425,2.569,426,1.889,427,1.713,428,1.889,429,1.889,430,1.889,431,1.673,432,1.889,433,1.713,434,1.889,435,1.713,436,1.889,437,1.713,438,1.889,439,1.673,440,1.889,441,1.713,442,1.889,443,1.713,444,1.889,445,1.713,446,1.889,447,1.713,448,1.889,449,1.673,450,1.889,451,1.713,452,1.889,453,1.713,454,1.889,455,1.713,456,1.889,457,2.331,458,1.889,459,1.713,460,1.889,461,1.673,462,1.889,463,1.633,464,1.889,465,1.673,466,1.889,467,1.713,468,1.889,469,1.713,470,1.889,471,1.889,472,1.713,473,1.889,474,1.889,475,1.673,476,1.889,477,1.673,478,1.889,479,1.713,480,1.889,481,1.673,482,1.889,483,1.713,484,1.798,485,1.889,486,1.889,1615,5.449,1616,7.5,1617,8.077,1618,7.5,1619,6.176,1620,6.176]],["title/components/MatchComponent.html",[19,0.44,459,1.221]],["body/components/MatchComponent.html",[3,0.11,4,0.11,5,0.1,7,0.31,8,0.654,11,0.97,12,0.664,13,0.01,15,0.232,18,1.576,19,0.698,20,1.891,22,0.11,29,3.621,30,2.241,31,4.103,32,1.618,33,1.912,41,1.661,44,0.11,49,2.5,50,2.383,52,1.667,54,0.12,55,1.201,56,1.552,59,1.707,64,1.224,67,2.268,68,3.704,72,3.101,77,2.027,89,2.029,120,0.008,121,0.006,122,0.005,136,1.011,170,0.703,197,0.985,198,1.552,213,1.846,215,0.605,228,0.638,254,0.638,258,0.981,335,1.26,336,1.836,337,1.424,338,1.389,339,1.389,343,1.389,344,1.355,345,1.792,351,1.515,355,4.15,356,4.495,357,4.314,358,3.394,360,1.552,361,1.48,363,1.986,365,2.392,380,2.322,381,1.627,399,4.19,400,3.57,402,4.951,403,4.841,404,4.622,419,3.146,421,1.042,422,1.882,423,1.882,424,1.389,425,2.289,426,1.389,427,1.26,428,1.389,429,1.389,430,1.389,431,1.23,432,1.389,433,1.26,434,1.389,435,1.26,436,1.389,437,1.707,438,1.389,439,1.23,440,1.389,441,1.26,442,1.389,443,1.707,444,1.389,445,1.707,446,1.389,447,1.707,448,1.389,449,1.23,450,1.389,451,1.26,452,1.389,453,1.26,454,1.389,455,1.26,456,1.389,457,1.26,458,1.389,459,2.076,460,1.389,461,1.23,462,1.389,463,1.201,464,1.389,465,1.23,466,1.389,467,1.26,468,1.389,469,1.26,470,1.389,471,1.389,472,1.26,473,1.389,474,1.389,475,1.23,476,1.389,477,1.23,478,1.389,479,1.26,480,1.389,481,1.23,482,1.389,483,1.26,484,1.322,485,1.389,486,1.389,490,6.266,493,5.842,509,4.596,555,1.661,687,4.006,786,6.603,872,3.5,937,4.596,940,4.955,1000,4.743,1031,3.391,1039,3.006,1078,3.536,1079,3.536,1080,5.43,1081,5.43,1083,5.43,1084,4.952,1107,4.006,1135,5.243,1378,4.311,1571,4.006,1621,4.006,1622,6.981,1623,6.154,1624,6.154,1625,7.484,1626,7.484,1627,7.484,1628,7.484,1629,6.981,1630,5.43,1631,5.618,1632,6.154,1633,4.54,1634,4.54,1635,4.54,1636,6.159,1637,6.154,1638,4.54,1639,4.54,1640,4.54,1641,4.54,1642,4.54,1643,4.54,1644,4.54,1645,4.54,1646,4.54,1647,4.54,1648,4.54,1649,4.54,1650,5.43,1651,4.54,1652,4.54,1653,4.54,1654,4.54,1655,4.54,1656,6.981,1657,7.484,1658,6.981,1659,4.54,1660,6.981,1661,4.54,1662,4.54,1663,4.54,1664,4.54,1665,4.54,1666,4.54,1667,4.54,1668,6.603,1669,5.43,1670,6.154,1671,6.154,1672,4.54,1673,4.006,1674,6.154,1675,6.154,1676,6.154,1677,6.154,1678,6.154,1679,4.54,1680,4.54,1681,4.54,1682,4.54,1683,4.006]],["title/interfaces/MatchEventPayload.html",[0,0.703,1252,3.286]],["body/interfaces/MatchEventPayload.html",[0,0.96,2,3.075,3,0.146,4,0.146,5,0.133,7,0.411,8,0.784,11,1.858,12,0.637,13,0.01,14,1.238,15,0.227,22,0.146,44,0.179,54,0.159,64,1.196,65,2.503,67,2.013,89,1.982,92,3.308,111,1.196,112,3.915,115,2.561,120,0.006,121,0.007,122,0.006,123,0.524,129,1.468,197,0.718,258,1.037,272,1.347,273,1.316,316,1.999,319,1.999,322,2.013,326,1.861,400,3.075,405,2.869,555,2.2,611,4.236,617,4.642,636,4.212,664,5.169,665,5.593,666,5.593,776,3.642,867,3.075,871,4.491,872,2.69,893,5.219,1179,4.491,1183,6.875,1184,4.491,1185,4.491,1232,4.839,1233,5.305,1234,5.305,1235,5.305,1237,4.885,1238,4.491,1239,5.305,1240,5.305,1242,5.305,1250,5.305,1251,4.839,1252,5.962,1253,5.832,1254,6.698,1255,6.698,1256,7.344,1257,6.51,1258,4.839,1259,5.305,1260,5.305,1261,7.537,1262,7.537,1263,5.305,1264,5.305,1265,5.305,1266,5.305,1267,5.305,1268,5.305,1269,5.305,1270,5.305,1271,5.305,1272,5.305,1273,4.491,1274,5.305,1275,5.305,1276,5.305,1277,5.305,1278,5.305,1279,6.51,1280,5.305]],["title/injectables/MatchGQL.html",[123,0.313,319,1.192]],["body/injectables/MatchGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.134,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.89,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.593,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,1.075,320,1.214,321,1.214,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1684,2.505]],["title/injectables/MatchPlanGQL.html",[123,0.313,322,1.11]],["body/injectables/MatchPlanGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.134,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.053,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.435,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,1.001,323,1.214,324,1.507,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1685,2.505]],["title/components/MatchSchedulingComponent.html",[19,0.44,463,1.164]],["body/components/MatchSchedulingComponent.html",[0,0.922,3,0.1,4,0.1,5,0.091,7,0.517,8,0.614,11,1.804,12,0.653,13,0.01,14,1.011,15,0.221,19,0.665,20,1.801,22,0.1,29,3.555,30,2.042,34,2.719,35,1.599,36,1.525,41,1.514,42,1.795,43,1.795,44,0.1,47,0.995,49,2.484,50,2.369,52,1.564,54,0.11,55,1.094,56,1.456,59,2.705,60,3.184,62,1.388,64,1.148,65,1.176,67,1.977,77,1.949,89,1.364,91,1.851,92,2.294,114,1.742,115,1.436,118,2.483,120,0.004,121,0.006,122,0.004,128,1.421,129,1.506,136,1,170,0.756,191,1.562,197,1.008,199,1.068,202,1.602,204,1.903,215,0.551,222,1.908,223,1.954,224,1.094,228,0.581,254,0.581,258,1.011,335,1.148,336,1.723,337,1.297,338,1.265,339,1.265,343,1.265,344,1.234,345,1.681,351,1.422,360,1.908,361,1.82,363,2.021,365,2.397,370,4.761,379,2.116,381,1.094,405,1.974,419,2.633,421,0.949,422,1.765,423,1.765,424,1.265,425,2.2,426,1.265,427,1.148,428,1.265,429,1.265,430,1.265,431,1.121,432,1.265,433,1.148,434,1.265,435,1.148,436,1.265,437,1.148,438,1.265,439,1.121,440,1.265,441,1.148,442,1.265,443,1.148,444,1.265,445,1.148,446,1.265,447,1.148,448,1.265,449,1.121,450,1.265,451,1.148,452,1.265,453,1.148,454,1.265,455,1.148,456,1.265,457,1.148,458,1.265,459,1.148,460,1.265,461,1.121,462,1.265,463,1.903,464,1.265,465,1.121,466,1.265,467,1.148,468,1.265,469,1.148,470,1.265,471,1.265,472,1.148,473,1.265,474,1.265,475,1.121,476,1.265,477,1.121,478,1.265,479,1.148,480,1.265,481,1.121,482,1.265,483,1.148,484,1.936,485,1.265,486,1.265,536,4.311,555,2.633,587,6.235,693,3.667,776,2.042,828,4.044,841,3.09,872,1.851,937,4.311,940,3.822,974,4.645,984,4.965,985,4.965,994,5.093,999,5.004,1000,4.437,1007,4.311,1009,4.965,1028,4.311,1029,3.09,1030,2.898,1036,3.09,1037,3.09,1038,3.09,1039,3.822,1040,3.09,1041,3.09,1042,3.09,1043,5.373,1044,3.09,1045,3.09,1046,4.965,1047,4.658,1078,3.821,1079,3.821,1135,5.302,1136,4.311,1138,4.311,1309,5.302,1310,6.647,1311,3.09,1312,4.645,1313,4.645,1314,4.645,1315,4.044,1316,5.35,1317,3.329,1318,3.09,1319,3.329,1320,4.645,1321,4.645,1322,4.645,1323,5.35,1324,4.965,1325,4.311,1326,6.473,1327,5.35,1328,5.35,1329,3.329,1330,5.79,1331,4.645,1332,3.329,1333,3.329,1334,6.308,1335,3.329,1336,3.329,1337,4.645,1338,3.329,1339,3.329,1340,4.645,1341,6.308,1342,3.329,1343,3.329,1344,3.329,1345,3.329,1346,3.329,1347,3.329,1348,3.329,1349,4.645,1350,4.645,1351,4.645,1352,3.329,1353,3.329,1354,3.329,1355,3.329,1356,5.35,1357,3.329,1358,3.329,1359,3.329,1360,3.329,1361,3.329,1362,3.329,1363,3.329,1364,3.329,1365,3.329,1366,3.329,1367,4.965,1368,3.329,1369,3.329,1370,4.645,1371,3.329,1372,3.329,1373,3.329,1374,3.329,1375,5.79,1376,3.329,1377,3.329,1378,2.898,1379,3.329,1380,3.329,1381,3.329,1382,3.329,1383,3.329,1384,4.645,1385,3.329,1386,3.184,1387,3.329,1388,3.329,1389,4.645,1390,4.645,1522,4.645,1523,4.645,1554,5.79,1673,3.65,1683,3.65,1686,5.772,1687,5.772,1688,5.772,1689,3.65,1690,4.137,1691,4.137,1692,4.137,1693,4.137,1694,4.137,1695,4.137,1696,4.137,1697,4.137,1698,4.137,1699,4.137,1700,4.137,1701,4.137,1702,4.137,1703,4.137,1704,4.137,1705,4.137,1706,4.137,1707,4.137,1708,5.772,1709,5.772,1710,5.772,1711,5.772,1712,5.772,1713,5.772,1714,4.137,1715,5.772,1716,4.137]],["title/injectables/MatchService.html",[123,0.313,1000,2.427]],["body/injectables/MatchService.html",[3,0.125,4,0.125,5,0.113,7,0.351,11,1.878,12,0.639,13,0.01,14,1.258,15,0.208,22,0.125,44,0.125,54,0.136,59,2.789,62,1.784,64,1.328,65,2.373,67,2.106,72,3.139,111,1.621,115,2.575,120,0.008,121,0.007,122,0.005,123,0.474,125,1.294,136,0.942,153,2.214,154,1.459,155,1.459,156,2.01,157,1.992,158,1.992,159,2.288,160,1.992,161,1.532,170,0.784,197,1.082,198,1.871,204,1.962,219,2.335,222,2.106,252,1.808,253,1.39,258,1.173,262,2.373,272,1.15,273,1.123,274,2.373,278,2.417,281,2.233,322,2.144,326,1.981,351,1.644,360,2.106,361,2.008,363,2.006,555,2.981,611,4.511,640,3.937,693,2.831,842,5.77,867,2.625,872,3.516,875,5.85,876,5.198,882,4.912,887,5.198,1000,3.682,1039,4.42,1123,7.367,1238,5.541,1251,4.13,1253,5.85,1254,6.323,1255,6.323,1717,4.528,1718,6.676,1719,6.676,1720,5.132,1721,7.42,1722,5.132,1723,6.676,1724,5.132,1725,6.676,1726,5.132,1727,7.42,1728,6.676,1729,5.132,1730,6.676,1731,5.132,1732,6.676,1733,5.132,1734,5.132,1735,5.132,1736,5.132,1737,6.546,1738,7.187,1739,8.146,1740,6.546,1741,6.546,1742,5.132,1743,5.132,1744,5.132,1745,5.132]],["title/components/MatchplanComponent.html",[19,0.44,461,1.192]],["body/components/MatchplanComponent.html",[3,0.114,4,0.114,5,0.103,7,0.32,8,0.668,12,0.668,13,0.01,14,1.111,15,0.22,19,0.71,20,1.921,22,0.114,29,3.642,30,2.313,32,1.669,34,2.901,35,1.811,42,2.727,43,2.033,44,0.114,49,2.505,50,2.388,52,1.703,54,0.124,55,1.239,56,1.585,64,1.251,65,1.787,67,2.229,72,1.761,77,2.053,111,1.411,120,0.005,121,0.006,122,0.005,128,1.343,129,1.251,136,1.002,170,0.765,197,0.75,198,1.994,199,1.832,215,0.624,223,1.832,224,1.662,228,0.658,232,1.83,233,2.302,254,0.658,258,0.997,319,2.252,322,2.181,326,2.097,335,1.3,336,1.876,337,1.469,338,1.433,339,1.433,343,1.433,344,1.398,345,1.83,351,1.548,360,1.912,361,1.823,363,1.947,365,2.169,381,1.239,417,3.612,419,2.978,421,1.075,422,1.922,423,1.922,424,1.433,425,2.318,426,1.433,427,1.3,428,1.433,429,1.433,430,1.433,431,1.269,432,1.433,433,1.3,434,1.433,435,1.3,436,1.433,437,1.3,438,1.433,439,1.269,440,1.433,441,1.3,442,1.433,443,1.3,444,1.433,445,1.3,446,1.433,447,1.3,448,1.433,449,1.269,450,1.433,451,1.3,452,1.433,453,1.3,454,1.433,455,1.3,456,1.433,457,1.3,458,1.433,459,1.3,460,1.433,461,2.053,462,1.433,463,1.239,464,1.433,465,1.269,466,1.433,467,1.3,468,1.433,469,1.3,470,1.433,471,1.433,472,1.3,473,1.433,474,1.433,475,1.269,476,1.433,477,1.269,478,1.433,479,1.3,480,1.433,481,1.269,482,1.433,483,1.3,484,1.364,485,1.433,486,1.433,523,3.502,555,2.774,611,4.542,639,2.948,640,2.486,662,3.77,664,4.97,693,4.661,697,4.134,828,4.404,867,2.396,872,3.174,1152,3.102,1253,3.282,1386,4.181,1456,3.499,1495,3.499,1506,4.134,1507,4.134,1508,3.499,1509,3.499,1510,4.134,1522,5.058,1523,5.058,1549,5.546,1554,6.55,1598,3.499,1631,5.058,1746,3.77,1747,7.093,1748,6.286,1749,7.093,1750,7.093,1751,7.093,1752,7.093,1753,6.286,1754,6.286,1755,7.58,1756,7.093,1757,4.685,1758,6.286,1759,4.685,1760,6.286,1761,4.685,1762,4.685,1763,5.546,1764,4.685,1765,4.685,1766,6.286,1767,4.685,1768,4.685,1769,4.685,1770,4.685,1771,4.685,1772,6.286,1773,4.685,1774,6.286,1775,4.685,1776,4.685,1777,4.685,1778,3.77,1779,4.134,1780,3.77,1781,4.134,1782,3.77,1783,4.134,1784,4.685,1785,4.685,1786,7.906,1787,4.685,1788,7.093,1789,8.139,1790,4.685,1791,4.685,1792,4.685,1793,4.685,1794,6.286,1795,4.685,1796,4.685,1797,5.546,1798,4.685,1799,6.286,1800,5.546,1801,5.546,1802,7.58,1803,6.286,1804,6.286,1805,4.685,1806,4.685,1807,5.546]],["title/modules/MatchplanModule.html",[557,1.221,1808,3.286]],["body/modules/MatchplanModule.html",[3,0.164,4,0.164,5,0.149,13,0.009,15,0.234,22,0.164,44,0.164,50,1.745,54,0.179,120,0.007,121,0.008,122,0.007,199,1.745,421,1.55,461,2.42,557,1.875,559,2.346,560,3.225,561,4.005,562,3.337,563,3.337,564,3.225,570,4.568,571,4.048,572,3.457,573,3.457,576,3.058,577,2.975,579,3.884,580,4.252,721,5.914,1164,5.963,1808,6.893,1809,5.963,1810,5.963,1811,5.963,1812,6.258,1813,6.759,1814,5.963]],["title/modules/MatchplanRoutingModule.html",[557,1.221,1812,3.083]],["body/modules/MatchplanRoutingModule.html",[3,0.171,4,0.171,5,0.155,13,0.009,15,0.226,19,0.704,22,0.171,44,0.171,54,0.187,120,0.007,121,0.008,122,0.007,258,0.988,461,2.194,554,3.248,559,2.441,576,2.718,577,3.045,597,4.042,598,4.363,599,4.042,601,4.042,602,4.222,1812,5.675,1814,6.206,1815,7.034]],["title/modules/MaterialModule.html",[557,1.221,739,2.914]],["body/modules/MaterialModule.html",[3,0.161,4,0.161,5,0.146,13,0.009,15,0.24,18,2.301,22,0.161,44,0.161,54,0.176,120,0.007,121,0.008,122,0.007,559,2.301,564,3.164,576,2.562,577,2.942,739,5.181,807,5.335,1467,5.849,1816,6.63,1817,8.326,1818,6.63,1819,8.326,1820,6.63,1821,8.326,1822,6.63,1823,8.326,1824,6.63,1825,8.326,1826,6.63,1827,8.326,1828,6.63,1829,6.63,1830,6.63,1831,5.849,1832,8.326,1833,8.326,1834,8.326,1835,8.775,1836,8.326,1837,8.326,1838,8.326,1839,8.326,1840,8.326,1841,8.326,1842,8.326,1843,8.326,1844,6.63,1845,8.326,1846,8.326]],["title/components/NewpasswordComponent.html",[19,0.44,465,1.192]],["body/components/NewpasswordComponent.html",[3,0.13,4,0.13,5,0.118,7,0.366,8,0.73,12,0.612,13,0.009,14,0.965,15,0.228,18,1.862,19,0.758,20,2.052,22,0.13,31,4.099,32,1.912,33,2.259,44,0.13,49,2.524,50,2.407,52,1.861,54,0.142,55,1.419,56,1.732,64,1.367,65,2.271,67,1.911,72,2.582,77,2.164,89,2.634,91,2.4,92,2.73,114,2.259,115,1.862,120,0.005,121,0.007,122,0.005,136,0.953,139,1.321,170,0.712,188,1.453,197,0.64,215,1.01,228,0.754,254,0.754,258,0.754,335,1.488,336,2.05,337,1.682,338,1.641,339,1.641,343,1.641,344,1.601,345,2,351,1.692,355,4.021,356,4.591,357,4.407,358,3.583,360,1.353,361,1.29,363,1.692,365,1.641,378,3.552,379,2.743,380,2.743,381,1.817,382,3.758,386,3.552,399,4.123,400,3.513,402,4.123,403,4.796,404,3.552,407,3.375,419,2.514,421,1.231,422,2.101,423,2.101,424,1.641,425,2.444,426,1.641,427,1.488,428,1.641,429,1.641,430,1.641,431,1.453,432,1.641,433,1.488,434,1.641,435,1.488,436,1.641,437,1.488,438,1.641,439,1.453,440,1.641,441,1.488,442,1.641,443,1.488,444,1.641,445,1.488,446,1.641,447,1.488,448,1.641,449,1.453,450,1.641,451,1.488,452,1.641,453,1.488,454,1.641,455,1.488,456,1.641,457,1.488,458,1.641,459,1.488,460,1.641,461,1.453,462,1.641,463,1.419,464,1.641,465,2.164,466,1.641,467,1.488,468,1.641,469,1.488,470,1.641,471,1.641,472,1.488,473,1.641,474,1.641,475,1.453,476,1.641,477,1.453,478,1.641,479,1.488,480,1.641,481,1.453,482,1.641,483,1.488,484,1.562,485,1.641,486,1.641,550,3.375,554,2.478,644,5.528,645,4.733,778,5.528,792,4.548,918,4.733,922,5.528,1003,6.913,1022,6.098,1034,4.317,1199,6.686,1415,6.686,1429,4.733,1438,6.061,1847,4.733,1848,7.578,1849,6.869,1850,7.99,1851,8.59,1852,6.869,1853,5.365,1854,5.365,1855,5.365,1856,5.365,1857,5.365,1858,5.365,1859,7.578,1860,5.365,1861,5.365,1862,5.365,1863,6.869,1864,5.365,1865,6.869,1866,6.869,1867,6.869,1868,6.869]],["title/modules/NewpasswordModule.html",[557,1.221,1869,3.286]],["body/modules/NewpasswordModule.html",[3,0.165,4,0.165,5,0.15,13,0.009,15,0.234,22,0.165,44,0.165,54,0.18,120,0.007,121,0.008,122,0.007,421,1.56,465,2.423,557,1.887,559,2.361,560,3.246,561,4.015,562,3.358,563,3.358,564,3.246,570,4.575,571,4.062,572,3.478,573,3.478,576,3.07,577,2.986,579,3.908,580,4.279,760,4.083,792,4.503,1869,6.853,1870,6.001,1871,6.001,1872,6.001,1873,6.267,1874,6.801,1875,5.259,1876,6.001]],["title/modules/NewpasswordRoutingModule.html",[557,1.221,1873,3.083]],["body/modules/NewpasswordRoutingModule.html",[3,0.171,4,0.171,5,0.155,13,0.009,15,0.226,19,0.704,22,0.171,44,0.171,54,0.187,120,0.007,121,0.008,122,0.007,258,0.988,465,2.194,554,3.248,559,2.441,576,2.718,577,3.045,597,4.042,598,4.363,599,4.042,601,4.042,602,4.222,1873,5.675,1876,6.206,1877,7.034]],["title/injectables/PasswordChangeGQL.html",[123,0.313,287,1.221]],["body/injectables/PasswordChangeGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.679,38,1.076,39,0.648,40,0.632,44,0.228,46,0.696,47,1.639,48,0.696,54,0.23,57,1.656,62,1.186,87,0.648,94,1.594,96,1.594,100,1.594,102,0.713,104,0.713,107,2.13,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.713,125,0.632,126,0.696,127,2.542,128,0.536,129,0.499,130,2.543,131,2.695,132,0.767,133,2.26,134,0.767,135,2.033,136,0.283,138,2.644,139,0.618,140,1.594,141,1.215,142,0.73,143,1.185,144,1.185,145,1.185,146,0.696,147,1.102,148,0.748,149,0.748,150,0.73,151,2.598,152,1.215,153,2.109,154,1.849,155,1.849,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.674,162,0.767,163,2.103,164,1.634,165,0.767,166,0.767,167,1.436,168,0.767,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.674,175,1.185,176,1.802,177,0.767,178,1.674,179,2.147,180,2.147,181,1.894,182,1.157,183,1.674,184,1.185,185,1.215,186,1.215,187,1.674,188,1.519,189,1.894,190,1.674,191,1.709,192,1.185,193,0.767,194,1.674,195,1.941,196,1.157,197,0.869,198,1.002,199,0.648,200,2.027,201,0.748,202,1.102,203,1.436,204,1.05,205,1.961,206,0.748,207,1.129,208,1.849,209,0.748,210,1.157,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.472,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.68,224,1.617,225,1.185,226,1.185,227,1.185,228,1.087,229,1.157,230,1.674,231,1.185,232,0.73,233,1.157,234,1.157,235,1.402,236,1.185,237,1.185,238,1.436,239,1.436,240,0.767,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.674,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.336,254,0.558,255,1.102,256,0.713,257,0.767,258,1.087,259,1.436,260,1.804,261,1.436,262,1.402,263,1.436,264,1.157,265,1.157,266,1.157,267,1.157,268,1.436,269,1.436,270,1.157,271,0.73,272,1.944,273,1.898,274,0.713,275,2.466,276,2.484,277,1.508,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.679,285,0.767,286,0.767,287,1.102,288,1.215,289,1.215,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.73,313,2.366,314,0.767,315,0.767,316,0.679,317,0.767,318,0.767,319,0.679,320,0.767,321,0.767,322,0.632,323,0.767,324,1.215,325,0.713,326,0.632,327,0.767,328,0.679,329,0.713,330,0.767,331,0.767,332,0.679,333,0.713,334,0.73,1878,2.508]],["title/injectables/PasswordResetGQL.html",[123,0.313,284,1.192]],["body/injectables/PasswordResetGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.126,164,1.983,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,1.075,285,1.214,286,1.214,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1879,2.505]],["title/injectables/PitchService.html",[123,0.313,999,2.641]],["body/injectables/PitchService.html",[3,0.166,4,0.166,5,0.151,7,0.467,8,0.847,12,0.61,13,0.009,15,0.23,22,0.166,34,3.449,35,2.643,41,2.503,42,2.967,43,2.967,44,0.166,54,0.181,64,1.586,65,1.944,120,0.007,121,0.008,122,0.007,123,0.566,125,1.725,128,1.461,129,1.361,136,0.899,170,0.642,203,2.456,222,1.725,272,1.532,273,1.496,325,2.469,360,1.725,361,1.645,999,4.784,1880,6.034,1881,6.839,1882,6.839,1883,7.969,1884,7.969,1885,7.031,1886,7.969,1887,6.839]],["title/components/PitchesComponent.html",[19,0.44,467,1.221]],["body/components/PitchesComponent.html",[3,0.143,4,0.143,5,0.13,7,0.403,8,0.775,12,0.558,13,0.009,15,0.193,19,0.792,20,2.143,22,0.143,44,0.143,49,2.537,50,2.418,52,1.974,54,0.156,55,1.559,56,1.838,64,1.45,67,1.995,77,2.239,89,2.609,120,0.006,121,0.007,122,0.006,136,0.892,170,0.743,197,0.704,202,2.022,215,0.785,228,0.828,254,0.828,335,1.635,336,2.175,337,1.848,338,1.803,339,1.803,343,1.803,344,1.759,345,2.122,351,1.795,360,1.486,361,1.418,363,1.451,381,1.559,419,3.166,421,1.352,422,2.229,423,2.229,424,1.803,425,2.528,426,1.803,427,1.635,428,1.803,429,1.803,430,1.803,431,1.596,432,1.803,433,1.635,434,1.803,435,1.635,436,1.803,437,1.635,438,1.803,439,1.596,440,1.803,441,1.635,442,1.803,443,1.635,444,1.803,445,1.635,446,1.803,447,1.635,448,1.803,449,1.596,450,1.803,451,1.635,452,1.803,453,1.635,454,1.803,455,1.635,456,1.803,457,1.635,458,1.803,459,1.635,460,1.803,461,1.596,462,1.803,463,1.559,464,1.803,465,1.596,466,1.803,467,2.293,468,1.803,469,1.635,470,1.803,471,1.803,472,1.635,473,1.803,474,1.803,475,1.596,476,1.803,477,1.596,478,1.803,479,1.635,480,1.803,481,1.596,482,1.803,483,1.635,484,1.716,485,1.803,486,1.803,947,5.865,999,5.362,1030,4.129,1047,5.791,1084,5.865,1689,5.2,1888,5.2,1889,7.912,1890,7.288,1891,5.894,1892,5.894,1893,5.894,1894,7.288,1895,7.288]],["title/injectables/PitchesGQL.html",[123,0.313,325,1.251]],["body/injectables/PitchesGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.656,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.368,203,1.633,204,1.05,205,1.96,206,0.748,207,1.128,208,1.848,209,0.748,210,1.156,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.471,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.879,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.804,261,1.633,262,1.401,263,1.436,264,1.156,265,1.156,266,1.156,267,1.156,268,1.436,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,1.128,326,0.632,327,0.766,328,0.679,329,0.712,330,0.766,331,0.766,332,0.679,333,0.712,334,0.73,1896,2.506]],["title/injectables/RankingGQL.html",[123,0.313,326,1.11]],["body/injectables/RankingGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.134,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,2.018,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.435,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.507,325,0.712,326,1.001,327,1.214,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1897,2.505]],["title/injectables/RedisEventGQL.html",[123,0.313,1237,2.914]],["body/injectables/RedisEventGQL.html",[0,1.011,3,0.154,4,0.154,5,0.14,7,0.432,8,0.809,12,0.692,13,0.01,14,1.19,15,0.216,22,0.154,28,4.039,44,0.219,54,0.168,87,1.634,110,1.559,111,1.624,120,0.008,121,0.008,122,0.006,123,0.541,125,1.596,127,2.377,128,1.626,129,1.259,130,2.32,136,0.714,138,2.407,139,1.559,150,1.843,151,1.843,156,2.062,170,0.715,251,1.843,252,2.347,253,2.211,254,1.07,255,1.756,256,1.799,258,0.889,271,1.843,272,1.418,273,1.385,275,1.799,334,1.843,1216,4.727,1219,6.326,1237,5.04,1273,6.097,1397,4.789,1398,4.434,1399,5.685,1401,7.224,1402,7.202,1403,5.584,1404,5.685,1405,5.093,1898,6.329]],["title/injectables/RemoveTeamFromSeasonGQL.html",[123,0.313,293,1.251]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.328,134,0.766,135,2.108,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,1.128,294,1.214,295,1.214,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1899,2.505]],["title/components/RenameTeamComponent.html",[19,0.44,469,1.221]],["body/components/RenameTeamComponent.html",[3,0.136,4,0.136,5,0.124,7,0.384,8,0.752,12,0.622,13,0.009,14,1.088,15,0.215,16,4.619,17,3.371,18,1.949,19,0.774,20,2.097,21,3.097,22,0.136,23,4.284,24,3.371,36,2.047,41,2.055,44,0.136,47,1.954,49,2.531,50,2.413,52,1.915,54,0.149,55,1.485,56,1.783,64,1.407,65,1.596,67,2.156,68,4.311,71,4.245,77,2.201,89,2.552,91,2.512,92,2.231,114,2.364,115,1.949,120,0.006,121,0.007,122,0.006,136,0.944,170,0.763,182,2.059,197,0.67,215,0.748,228,0.789,254,0.789,260,1.558,305,1.558,335,1.558,336,2.11,337,1.76,338,1.717,339,1.717,343,1.717,344,1.676,345,2.059,351,1.741,360,1.783,361,1.701,363,1.741,365,1.717,381,1.485,405,2.679,417,4.063,419,2.973,421,1.288,422,2.163,423,2.163,424,1.717,425,2.485,426,1.717,427,1.558,428,1.717,429,1.717,430,1.717,431,1.521,432,1.717,433,1.558,434,1.717,435,1.558,436,1.717,437,1.558,438,1.717,439,1.521,440,1.717,441,1.558,442,1.717,443,1.558,444,1.717,445,1.558,446,1.717,447,1.558,448,1.717,449,1.521,450,1.717,451,1.558,452,1.717,453,1.558,454,1.717,455,1.558,456,1.717,457,1.558,458,1.717,459,1.558,460,1.717,461,1.521,462,1.717,463,1.485,464,1.717,465,1.521,466,1.717,467,1.558,468,1.717,469,2.254,470,2.685,471,1.717,472,1.558,473,1.717,474,1.717,475,1.521,476,1.717,477,1.521,478,1.717,479,1.558,480,1.717,481,1.521,482,1.717,483,1.558,484,1.635,485,1.717,486,1.717,503,6.385,523,2.772,919,4.519,926,4.954,931,6.239,974,5.69,1900,7.543,1901,4.954,1902,7.74,1903,7.071,1904,5.615,1905,5.615,1906,7.071,1907,5.615,1908,6.239,1909,5.615,1910,5.615,1911,5.615]],["title/injectables/RenameTeamGQL.html",[123,0.313,305,1.221]],["body/injectables/RenameTeamGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.285,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,2.033,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,1.101,306,1.214,307,1.214,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1912,2.505]],["title/interfaces/RoundTeam.html",[0,0.703,45,3.083]],["body/interfaces/RoundTeam.html",[0,1.179,1,5.169,2,3.075,3,0.146,4,0.146,5,0.133,6,4.491,7,0.411,8,0.784,9,1.999,10,4.212,11,1.285,12,0.565,13,0.01,14,0.845,15,0.238,16,4.07,17,3.609,18,2.087,19,0.738,20,1.999,21,3.317,22,0.146,23,3.941,24,3.609,25,5.962,26,3.609,27,3.609,28,3.19,29,3.361,30,2.968,31,3.809,32,2.142,33,2.532,34,3.017,35,2.323,36,1.379,37,1.999,38,1.999,39,1.905,40,1.861,41,2.2,42,2.609,43,2.609,44,0.179,45,5.593,46,2.412,47,2.139,48,2.412,49,1.629,50,1.553,51,4.839,52,1.629,53,4.839,54,0.159,55,1.59,56,1.516,57,1.629,58,4.839,59,2.26,60,3.317,61,4.839,62,1.774,63,4.839,64,1.196,65,2.428,66,4.491,67,2.013,68,3.19,69,4.839,70,4.212,71,3.609,72,2.26,73,4.491,74,4.491,75,3.783,76,4.491,77,1.629,78,4.839,79,4.491,80,6.424,81,6.424,82,4.839,83,5.169,84,4.839,85,4.839,86,4.839,87,1.553,88,4.839,89,1.982,90,4.839,91,2.69,92,2.389,93,4.839,94,1.709,95,5.938,96,1.709,97,5.938,98,5.938,99,4.839,100,1.709,101,4.839,102,1.709,103,4.839,104,1.709,105,4.839,106,3.609,107,1.774,108,4.491,109,4.839,110,1.481,111,1.196,112,3.19,113,3.981,114,2.532,115,2.087,116,4.491,117,4.839,118,4.429,119,4.839,120,0.006,121,0.007,122,0.006]],["title/injectables/ScheduleMatchGQL.html",[123,0.313,278,1.251]],["body/injectables/ScheduleMatchGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.171,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,2.118,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,1.128,279,1.214,280,1.214,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,1913,2.505]],["title/injectables/SeasonService.html",[123,0.313,611,2.335]],["body/injectables/SeasonService.html",[3,0.151,4,0.151,5,0.137,7,0.424,8,0.799,12,0.66,13,0.01,14,1.137,15,0.229,22,0.151,32,2.21,35,2.397,44,0.151,54,0.164,59,3.042,64,1.496,65,2.137,67,2.041,89,2.668,106,3.723,107,1.492,111,1.234,115,2.153,120,0.006,121,0.008,122,0.006,123,0.534,125,1.564,128,1.325,129,1.234,136,0.972,169,2.244,170,0.79,200,2.09,207,1.763,258,0.872,272,1.389,273,1.357,290,2.519,328,2.373,351,1.852,360,2.041,361,1.946,363,1.852,383,5.616,384,4.632,523,3.062,555,2.752,611,3.99,639,3.902,640,3.291,842,5.358,867,3.172,872,2.775,875,5.268,876,4.345,882,4.106,887,4.345,1463,6.634,1914,4.991,1915,8.092,1916,8.092,1917,7.519,1918,6.202,1919,7.519,1920,7.519,1921,6.202,1922,7.519,1923,8.413,1924,6.202,1925,7.519,1926,6.634,1927,7.519,1928,6.202,1929,8.092,1930,7.519,1931,4.991,1932,5.472,1933,6.202,1934,6.202,1935,6.202,1936,6.202,1937,6.202,1938,6.202]],["title/components/SeasonchooserComponent.html",[19,0.44,472,1.221]],["body/components/SeasonchooserComponent.html",[3,0.135,4,0.135,5,0.123,7,0.38,8,0.747,12,0.653,13,0.009,15,0.226,18,1.929,19,0.771,20,2.087,22,0.135,34,3.15,35,2.148,41,2.034,42,3.048,43,2.411,44,0.135,49,2.529,50,2.411,52,1.903,54,0.147,55,1.47,56,1.772,59,2.089,64,1.398,65,1.58,67,1.943,72,2.089,77,2.192,120,0.006,121,0.007,122,0.006,128,1.187,129,1.106,136,0.988,142,1.618,170,0.76,191,1.305,197,0.664,200,2.156,207,1.58,215,0.741,228,0.781,254,0.781,328,2.345,335,1.542,336,2.096,337,1.742,338,1.7,339,1.7,343,1.7,344,1.658,345,2.046,351,1.73,360,1.772,361,1.69,363,1.73,365,2.149,367,6.514,381,1.47,421,1.275,422,2.149,423,2.149,424,1.7,425,2.476,426,1.7,427,1.542,428,1.7,429,1.7,430,1.7,431,1.505,432,1.7,433,1.542,434,1.7,435,1.542,436,1.7,437,1.542,438,1.7,439,1.505,440,1.7,441,1.542,442,1.7,443,1.542,444,1.7,445,1.542,446,1.7,447,1.542,448,1.7,449,1.505,450,1.7,451,1.542,452,1.7,453,1.542,454,1.7,455,1.542,456,1.7,457,1.542,458,1.7,459,1.542,460,1.7,461,1.505,462,1.7,463,1.47,464,1.7,465,1.505,466,1.7,467,1.542,468,1.7,469,1.542,470,1.7,471,1.7,472,2.246,473,1.7,474,1.7,475,1.505,476,1.7,477,1.505,478,1.7,479,1.542,480,1.7,481,1.505,482,1.7,483,1.542,484,1.618,485,1.7,486,1.7,611,4.691,937,5.247,940,4.651,1448,6.797,1456,4.15,1495,4.15,1497,4.903,1498,4.903,1545,6.198,1630,6.198,1636,7.141,1650,6.198,1926,6.198,1939,4.903,1940,7.025,1941,7.703,1942,7.025,1943,7.025,1944,7.703,1945,7.703,1946,7.025,1947,7.025,1948,5.557,1949,7.025,1950,5.557,1951,5.557,1952,5.557,1953,5.557,1954,5.557,1955,5.557,1956,5.557,1957,5.557,1958,5.557,1959,5.557,1960,5.557,1961,5.557]],["title/modules/SharedModule.html",[557,1.221,570,2.25]],["body/modules/SharedModule.html",[3,0.146,4,0.146,5,0.133,13,0.009,15,0.243,22,0.146,26,3.622,27,3.622,28,3.202,32,2.15,33,2.541,44,0.146,54,0.16,120,0.006,121,0.007,122,0.006,123,0.429,379,3.086,381,2.353,421,1.384,437,2.469,441,2.526,443,2.469,445,2.469,447,2.469,459,2.526,472,2.526,557,1.674,559,2.094,560,2.879,561,3.815,562,2.979,563,2.979,564,3.815,570,4.775,571,3.781,572,3.086,573,3.086,575,5.95,576,2.857,577,2.78,727,6.434,739,6.028,752,5.323,757,7.054,758,7.054,760,3.622,764,5.323,933,4.856,1875,5.294,1962,5.323,1963,5.323,1964,6.034,1965,5.323,1966,6.034,1967,6.034,1968,6.034,1969,6.034,1970,6.034,1971,6.034,1972,6.034,1973,7.995,1974,7.995,1975,6.034,1976,6.034]],["title/components/SnackbarComponent.html",[19,0.44,381,1.164]],["body/components/SnackbarComponent.html",[0,0.958,3,0.146,4,0.146,5,0.132,7,0.41,8,0.783,12,0.564,13,0.009,14,0.843,15,0.195,18,2.081,19,0.798,20,2.16,21,3.307,22,0.146,44,0.179,49,2.539,50,2.421,52,1.995,54,0.159,55,1.586,56,1.857,64,1.465,67,2.011,72,3.126,77,2.252,120,0.006,121,0.007,122,0.006,136,0.899,170,0.749,197,0.716,215,0.799,228,0.843,254,0.843,335,1.664,336,2.198,337,1.88,338,1.834,339,1.834,343,1.834,344,1.789,345,2.145,351,1.814,355,3.908,360,1.512,361,1.442,363,1.477,365,1.834,381,2.199,400,3.066,421,1.375,422,2.253,423,2.253,424,1.834,425,2.543,426,1.834,427,1.664,428,1.834,429,1.834,430,1.834,431,1.624,432,1.834,433,1.664,434,1.834,435,1.664,436,1.834,437,1.664,438,1.834,439,1.624,440,1.834,441,1.664,442,1.834,443,1.664,444,1.834,445,1.664,446,1.834,447,1.664,448,1.834,449,1.624,450,1.834,451,1.664,452,1.834,453,1.664,454,1.834,455,1.664,456,1.834,457,1.664,458,1.834,459,1.664,460,1.834,461,1.624,462,1.834,463,1.586,464,1.834,465,1.624,466,1.834,467,1.664,468,1.834,469,1.664,470,1.834,471,1.834,472,1.664,473,1.834,474,1.834,475,1.624,476,1.834,477,1.624,478,1.834,479,1.664,480,1.834,481,1.624,482,1.834,483,1.664,484,1.746,485,1.834,486,1.834,523,2.96,1391,6.375,1392,4.825,1393,5.29,1394,6.499,1395,7.034,1396,6.499,1977,5.996,1978,5.996,1979,5.996,1980,5.996,1981,7.366]],["title/injectables/StartSeasonGQL.html",[123,0.313,298,1.251]],["body/injectables/StartSeasonGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.679,38,1.076,39,0.648,40,0.632,44,0.228,46,0.696,47,1.639,48,0.696,54,0.23,57,1.656,62,1.186,87,0.648,94,1.594,96,1.594,100,1.594,102,0.713,104,0.713,107,2.13,110,2.137,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.713,125,0.632,126,0.696,127,2.542,128,0.536,129,0.499,130,2.543,131,2.695,132,0.767,133,2.26,134,0.767,135,2.033,136,0.283,138,2.644,139,0.618,140,1.594,141,1.215,142,0.73,143,1.185,144,1.185,145,1.185,146,0.696,147,1.102,148,0.748,149,0.748,150,0.73,151,2.598,152,1.215,153,2.109,154,1.849,155,1.849,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.674,162,0.767,163,2.103,164,1.634,165,0.767,166,0.767,167,1.157,168,0.767,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.674,175,1.185,176,1.802,177,0.767,178,1.674,179,2.147,180,2.147,181,1.894,182,1.157,183,1.674,184,1.185,185,1.215,186,1.215,187,1.674,188,1.519,189,1.894,190,1.674,191,1.709,192,1.185,193,0.767,194,1.674,195,1.941,196,1.157,197,0.869,198,1.002,199,0.648,200,2.027,201,0.748,202,1.102,203,1.436,204,1.05,205,1.961,206,0.748,207,1.129,208,1.849,209,0.748,210,1.157,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.472,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.68,224,1.617,225,1.185,226,1.185,227,1.185,228,1.087,229,1.157,230,1.674,231,1.185,232,0.73,233,1.157,234,1.157,235,1.402,236,1.185,237,1.185,238,1.436,239,1.436,240,0.767,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.674,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.336,254,0.558,255,1.102,256,0.713,257,0.767,258,1.087,259,1.436,260,1.804,261,1.436,262,1.402,263,1.436,264,1.157,265,1.157,266,1.157,267,1.157,268,1.436,269,1.436,270,1.157,271,0.73,272,1.944,273,1.898,274,0.713,275,2.466,276,2.484,277,1.508,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.679,285,0.767,286,0.767,287,0.696,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,1.129,299,1.215,300,1.215,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.73,313,2.366,314,0.767,315,0.767,316,0.679,317,0.767,318,0.767,319,0.679,320,0.767,321,0.767,322,0.632,323,0.767,324,1.215,325,0.713,326,0.632,327,0.767,328,0.679,329,0.713,330,0.767,331,0.767,332,0.679,333,0.713,334,0.73,1982,2.508]],["title/injectables/SubmitResultGQL.html",[123,0.313,274,1.251]],["body/injectables/SubmitResultGQL.html",[0,0.633,3,0.061,4,0.061,5,0.055,7,0.171,8,0.421,9,1.517,11,1.454,12,0.711,13,0.01,14,1.295,15,0.13,22,0.061,36,1.862,37,0.677,38,1.073,39,0.645,40,0.63,44,0.228,46,0.693,47,1.637,48,0.693,54,0.23,57,1.653,62,1.183,87,0.645,94,1.591,96,1.591,100,1.591,102,0.71,104,0.71,107,2.129,110,2.136,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.71,125,0.63,126,0.693,127,2.541,128,0.534,129,0.497,130,2.543,131,2.694,132,0.764,133,2.258,134,0.764,135,2.031,136,0.282,138,2.644,139,0.615,140,1.591,141,1.211,142,0.728,143,1.182,144,1.182,145,1.182,146,0.693,147,1.099,148,0.746,149,0.746,150,0.728,151,2.597,152,1.505,153,2.267,154,2.066,155,2.066,156,2.427,157,1.468,158,1.182,159,1.891,160,1.182,161,1.671,162,0.764,163,2.101,164,1.63,165,0.764,166,0.764,167,1.153,168,0.764,169,1.182,170,0.795,171,1.182,172,1.182,173,1.505,174,1.671,175,1.182,176,1.8,177,0.764,178,1.671,179,2.145,180,2.145,181,1.891,182,1.153,183,1.671,184,1.182,185,1.211,186,1.211,187,1.671,188,1.517,189,1.891,190,1.671,191,1.707,192,1.182,193,0.764,194,1.671,195,1.938,196,1.153,197,0.868,198,0.999,199,0.645,200,2.026,201,0.746,202,1.099,203,1.433,204,1.048,205,1.958,206,0.746,207,1.126,208,1.846,209,0.746,210,1.153,211,1.891,212,0.746,213,1.969,214,0.746,215,0.941,216,1.468,217,1.182,218,1.777,219,2.314,220,1.182,221,1.182,222,1.833,223,1.677,224,1.614,225,1.182,226,1.182,227,1.182,228,1.086,229,1.153,230,1.671,231,1.182,232,0.728,233,1.153,234,1.153,235,1.399,236,1.182,237,1.182,238,1.433,239,1.433,240,0.764,241,1.182,242,1.182,243,1.182,244,1.182,245,1.182,246,1.182,247,1.671,248,0.746,249,1.182,250,0.746,251,0.728,252,1.653,253,1.333,254,0.557,255,1.099,256,0.71,257,0.764,258,1.086,259,1.433,260,1.802,261,1.433,262,1.399,263,1.433,264,1.153,265,1.153,266,1.153,267,1.153,268,1.433,269,1.433,270,1.153,271,0.728,272,1.943,273,1.898,274,1.126,275,2.465,276,2.482,277,1.867,278,0.71,279,0.764,280,0.764,281,0.71,282,0.764,283,0.764,284,0.677,285,0.764,286,0.764,287,0.693,288,0.764,289,0.764,290,0.71,291,0.764,292,0.764,293,0.71,294,0.764,295,0.764,296,0.71,297,0.764,298,0.71,299,0.764,300,0.764,301,0.71,302,0.764,303,0.764,304,0.71,305,0.693,306,0.764,307,0.764,308,0.71,309,0.764,310,0.764,311,0.71,312,0.728,313,2.364,314,0.764,315,0.764,316,0.677,317,0.764,318,0.764,319,0.677,320,0.764,321,0.764,322,0.63,323,0.764,324,1.211,325,0.71,326,0.63,327,0.764,328,0.677,329,0.71,330,0.764,331,0.764,332,0.677,333,0.71,334,0.728,1983,2.499]],["title/components/TableComponent.html",[19,0.44,475,1.192]],["body/components/TableComponent.html",[3,0.124,4,0.124,5,0.113,7,0.348,8,0.707,11,1.58,12,0.65,13,0.01,15,0.231,18,1.77,19,0.74,20,2.003,22,0.124,29,3.697,30,2.517,31,4.051,32,1.817,33,2.147,34,3.025,35,1.97,41,1.866,42,2.884,43,2.212,44,0.124,49,2.517,50,2.4,52,1.801,54,0.135,55,1.349,56,1.676,64,1.323,65,1.889,67,2.195,72,1.917,77,2.123,111,1.015,115,2.567,120,0.007,121,0.007,122,0.005,136,0.981,139,1.256,170,0.736,197,0.609,205,2.175,215,0.68,228,0.717,254,0.717,326,1.976,335,1.415,336,1.984,337,1.599,338,1.56,339,1.56,343,1.56,344,1.522,345,1.936,351,1.637,355,4.313,356,4.671,360,1.676,361,1.599,363,1.821,365,2.262,381,1.758,399,3.061,400,2.608,402,3.061,403,3.99,407,3.208,419,2.433,421,1.17,422,2.033,423,2.033,424,1.56,425,2.397,426,1.56,427,1.415,428,1.56,429,1.56,430,1.56,431,1.381,432,1.56,433,1.415,434,1.56,435,1.415,436,1.56,437,1.415,438,1.56,439,1.381,440,1.56,441,1.415,442,1.56,443,1.415,444,1.56,445,1.415,446,1.56,447,1.415,448,1.56,449,1.381,450,1.56,451,1.415,452,1.56,453,1.415,454,1.56,455,1.415,456,1.56,457,1.415,458,1.56,459,1.415,460,1.56,461,1.381,462,1.56,463,1.349,464,1.56,465,1.381,466,1.56,467,1.415,468,1.56,469,1.415,470,1.56,471,1.56,472,1.415,473,1.56,474,1.56,475,2.123,476,1.56,477,1.381,478,1.56,479,1.415,480,1.56,481,1.381,482,1.56,483,1.415,484,1.485,485,1.56,486,1.56,555,2.433,611,4.618,662,4.104,664,3.572,776,2.517,778,4.104,787,4.965,841,3.808,872,2.974,893,3.061,1238,5.524,1433,5.865,1456,3.808,1495,3.808,1598,3.808,1984,4.499,1985,7.396,1986,6.648,1987,7.838,1988,6.648,1989,6.648,1990,5.099,1991,5.099,1992,6.648,1993,5.099,1994,5.099,1995,5.099,1996,5.099,1997,5.099,1998,5.099,1999,5.099,2000,5.099,2001,5.099,2002,5.099,2003,5.099,2004,5.099,2005,6.648,2006,5.099,2007,5.099,2008,5.099,2009,5.099,2010,6.648,2011,6.648,2012,6.648,2013,6.648,2014,6.648,2015,6.648,2016,6.648,2017,6.648,2018,6.648,2019,6.648,2020,6.648,2021,6.648,2022,7.838,2023,7.838,2024,6.648,2025,6.648,2026,6.648,2027,5.099,2028,5.099]],["title/modules/TableModule.html",[557,1.221,2029,3.286]],["body/modules/TableModule.html",[3,0.165,4,0.165,5,0.15,13,0.009,15,0.234,22,0.165,44,0.165,54,0.18,120,0.007,121,0.008,122,0.007,421,1.56,475,2.423,557,1.887,559,2.361,560,3.246,561,4.015,562,3.358,563,3.358,564,3.246,570,4.575,571,4.062,572,3.478,573,3.478,576,3.07,577,2.986,579,3.908,580,4.279,760,4.083,787,5.08,1875,5.259,2029,6.853,2030,6.001,2031,6.001,2032,6.001,2033,6.267,2034,6.801,2035,6.001]],["title/modules/TableRoutingModule.html",[557,1.221,2033,3.083]],["body/modules/TableRoutingModule.html",[3,0.171,4,0.171,5,0.155,13,0.009,15,0.226,19,0.704,22,0.171,44,0.171,54,0.187,120,0.007,121,0.008,122,0.007,258,0.988,475,2.194,554,3.248,559,2.441,576,2.718,577,3.045,597,4.042,598,4.363,599,4.042,601,4.042,602,4.222,2033,5.675,2035,6.206,2036,7.034]],["title/interfaces/TeamIdPair.html",[0,0.703,38,1.192]],["body/interfaces/TeamIdPair.html",[0,0.634,2,1.282,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.712,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.336,39,0.648,40,0.632,44,0.228,46,0.696,47,1.639,48,0.696,54,0.23,57,1.656,62,1.186,87,0.648,94,1.594,96,1.594,100,1.594,102,1.594,104,1.594,107,2.13,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.713,126,0.696,127,2.527,130,2.54,131,2.691,132,0.767,133,2.26,134,0.767,135,2.033,138,2.647,139,0.618,140,1.594,141,1.215,142,0.73,143,1.185,144,1.185,145,1.185,146,0.696,147,1.102,148,0.748,149,0.748,150,0.73,151,2.598,152,1.215,153,2.109,154,1.849,155,1.849,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.674,162,0.767,163,2.103,164,1.634,165,0.767,166,0.767,167,1.157,168,0.767,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.674,175,1.185,176,1.802,177,0.767,178,1.674,179,2.147,180,2.147,181,1.894,182,1.157,183,1.674,184,1.185,185,1.215,186,1.215,187,1.674,188,1.519,189,1.894,190,1.674,191,1.709,192,1.185,193,0.767,194,1.674,195,1.941,196,1.157,197,0.869,198,1.002,199,0.648,200,2.027,201,0.748,202,1.102,203,1.436,204,1.05,205,1.961,206,0.748,207,1.129,208,1.849,209,0.748,210,1.157,211,1.894,212,0.748,213,1.971,214,0.748,215,0.942,216,1.472,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.68,224,1.617,225,1.185,226,1.185,227,1.185,228,1.087,229,1.157,230,1.674,231,1.185,232,0.73,233,1.157,234,1.157,235,1.402,236,1.185,237,1.185,238,1.436,239,1.436,240,0.767,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.674,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.336,254,0.558,255,1.102,256,0.713,257,0.767,258,1.087,259,1.436,260,1.804,261,1.436,262,1.402,263,1.436,264,1.157,265,1.157,266,1.157,267,1.157,268,1.436,269,1.436,270,1.157,271,0.73,272,1.944,273,1.898,274,0.713,275,2.466,276,2.484,277,1.508,278,0.713,279,0.767,280,0.767,281,0.713,282,0.767,283,0.767,284,0.679,285,0.767,286,0.767,287,0.696,288,0.767,289,0.767,290,0.713,291,0.767,292,0.767,293,0.713,294,0.767,295,0.767,296,0.713,297,0.767,298,0.713,299,0.767,300,0.767,301,0.713,302,0.767,303,0.767,304,0.713,305,0.696,306,0.767,307,0.767,308,0.713,309,0.767,310,0.767,311,0.713,312,0.73,313,2.366,314,0.767,315,0.767,316,0.679,317,0.767,318,0.767,319,0.679,320,0.767,321,0.767,322,0.632,323,0.767,324,1.215,325,0.713,326,0.632,327,0.767,328,0.679,329,0.713,330,0.767,331,0.767,332,0.679,333,0.713,334,0.73,361,1.349]],["title/injectables/TeamService.html",[23,2.172,123,0.313]],["body/injectables/TeamService.html",[3,0.14,4,0.14,5,0.127,7,0.394,8,0.764,12,0.628,13,0.01,14,1.259,15,0.224,22,0.14,23,4.049,34,3.203,35,2.228,36,2.024,42,2.501,43,2.501,44,0.175,54,0.191,57,2.122,59,2.945,64,1.43,65,2.226,72,2.703,89,2.878,91,2.579,92,2.291,106,3.46,107,1.386,111,1.559,112,3.059,114,2.427,115,2.495,120,0.007,121,0.007,122,0.006,123,0.511,125,1.454,128,1.232,129,1.147,133,1.638,136,0.925,156,1.561,170,0.793,176,1.901,182,2.093,183,1.72,219,1.947,258,0.81,260,2.173,272,1.291,273,1.261,301,2.331,305,2.422,329,2.481,351,1.77,360,1.975,361,1.884,363,1.929,383,5.369,384,4.305,405,2.751,491,6.342,495,6.342,497,7.446,555,2.109,640,3.059,842,5.43,845,5.036,867,2.948,875,5.036,876,4.039,882,3.817,887,4.039,1152,4.759,1386,4.524,1508,5.369,1509,5.369,1737,5.086,1738,6.342,1740,5.086,1741,5.086,1885,6.342,1908,7.446,2037,5.086,2038,5.765,2039,7.189,2040,7.189,2041,7.189,2042,7.189,2043,5.765,2044,5.765,2045,5.765,2046,7.189,2047,5.765,2048,7.189,2049,6.342,2050,7.189,2051,7.189,2052,5.765,2053,7.189,2054,7.189,2055,5.765,2056,5.765,2057,5.765,2058,5.765,2059,5.765,2060,5.765,2061,5.765,2062,5.765,2063,7.189]],["title/components/TeamadminComponent.html",[19,0.44,477,1.192]],["body/components/TeamadminComponent.html",[3,0.125,4,0.125,5,0.113,7,0.351,8,0.711,12,0.651,13,0.009,14,1.281,15,0.229,18,1.785,19,0.743,20,2.011,22,0.125,23,4.341,24,3.086,31,4.196,32,1.832,33,2.165,41,1.881,44,0.125,49,2.518,50,2.401,52,1.81,54,0.136,55,1.36,56,1.685,59,2.513,64,1.33,65,2.111,67,2.198,72,2.513,77,2.13,89,2.448,91,2.3,92,2.043,106,3.086,107,1.237,112,2.728,114,2.165,115,1.785,120,0.005,121,0.007,122,0.005,128,1.428,129,1.33,133,1.461,136,0.983,163,2.155,170,0.766,178,2.216,179,1.427,180,1.427,181,2.373,197,0.614,215,1.048,228,0.722,254,0.722,304,2.235,332,2.13,335,1.427,336,1.994,337,1.612,338,1.573,339,1.573,343,1.573,344,1.534,345,1.946,348,6.937,349,6.937,351,1.646,355,4.325,356,4.683,357,3.687,358,3.411,360,1.873,361,1.786,363,1.829,365,1.573,370,5.127,378,3.404,379,2.629,380,2.629,381,1.768,382,3.602,386,4.425,387,5.897,399,4.012,400,3.418,402,4.012,403,4.72,404,3.404,405,2.454,407,3.235,419,2.446,421,1.179,422,2.044,423,2.044,424,1.573,425,2.405,426,1.573,427,1.427,428,1.573,429,1.573,430,1.573,431,1.393,432,1.573,433,1.427,434,1.573,435,1.427,436,1.573,437,1.427,438,1.573,439,1.393,440,1.573,441,1.427,442,1.573,443,1.427,444,1.573,445,1.427,446,1.573,447,1.427,448,1.573,449,1.393,450,1.573,451,1.427,452,1.573,453,1.427,454,1.573,455,1.427,456,1.573,457,1.427,458,1.573,459,1.427,460,1.573,461,1.393,462,1.573,463,1.36,464,1.573,465,1.393,466,1.573,467,1.427,468,1.573,469,1.427,470,1.573,471,1.573,472,1.427,473,1.573,474,1.573,475,1.393,476,1.573,477,2.13,478,1.573,479,1.427,480,1.573,481,1.393,482,1.573,483,1.427,484,1.497,485,1.573,486,1.573,550,3.235,555,1.881,776,2.538,797,5.379,834,5.976,845,4.682,1095,4.992,2064,4.536,2065,7.426,2066,6.684,2067,7.426,2068,6.684,2069,6.684,2070,6.684,2071,6.684,2072,5.142,2073,6.684,2074,5.142,2075,6.684,2076,5.142,2077,5.142,2078,5.142,2079,5.142,2080,5.142,2081,6.684,2082,5.142,2083,5.142,2084,5.142,2085,5.142,2086,5.142,2087,6.684]],["title/guards/TeamadminGuard.html",[544,3.541,781,3.286]],["body/guards/TeamadminGuard.html",[3,0.162,4,0.162,5,0.147,7,0.456,12,0.602,13,0.009,15,0.229,22,0.162,34,3.416,35,2.582,44,0.162,54,0.177,56,1.685,64,1.329,120,0.007,121,0.008,122,0.007,123,0.558,136,0.942,170,0.738,234,2.432,272,1.497,273,1.462,351,1.936,357,4.336,358,3.741,360,1.982,361,1.89,363,1.936,380,3.417,546,5.376,548,7.076,549,7.17,550,4.203,554,3.085,555,2.876,781,5.871,807,6.326,813,4.989,842,5.205,872,3.517,2088,5.894,2089,6.681,2090,6.681,2091,8.622,2092,8.622,2093,6.681,2094,6.681,2095,7.861]],["title/modules/TeamadminModule.html",[557,1.221,2096,3.286]],["body/modules/TeamadminModule.html",[3,0.165,4,0.165,5,0.15,13,0.009,15,0.234,22,0.165,44,0.165,54,0.181,120,0.007,121,0.008,122,0.007,421,1.563,477,2.424,557,1.89,559,2.365,560,3.251,561,4.018,562,3.363,563,3.363,564,3.251,570,4.576,571,4.066,572,3.484,573,3.484,576,3.072,577,2.989,579,3.915,580,4.286,760,4.089,797,5.482,1875,5.264,2096,6.855,2097,6.01,2098,6.01,2099,6.01,2100,6.269,2101,6.812,2102,6.01]],["title/modules/TeamadminRoutingModule.html",[557,1.221,2100,3.083]],["body/modules/TeamadminRoutingModule.html",[3,0.17,4,0.17,5,0.154,13,0.009,15,0.232,19,0.7,22,0.17,44,0.17,54,0.185,120,0.007,121,0.008,122,0.007,258,0.983,477,2.187,554,3.23,559,2.428,561,3.337,576,2.703,577,3.035,597,4.019,598,4.353,599,4.019,601,4.019,602,4.198,760,4.198,1875,4.631,2100,5.656,2102,6.17,2103,6.994]],["title/components/TeamsComponent.html",[19,0.44,479,1.221]],["body/components/TeamsComponent.html",[3,0.145,4,0.145,5,0.132,7,0.408,8,0.781,12,0.562,13,0.009,15,0.195,19,0.796,20,2.155,22,0.145,23,4.418,44,0.145,49,2.538,50,2.42,52,1.989,54,0.158,55,1.578,56,1.852,64,1.461,67,2.006,77,2.249,89,2.623,120,0.006,121,0.007,122,0.006,136,0.897,170,0.747,176,1.942,197,0.712,215,0.795,228,0.838,254,0.838,335,1.656,336,2.192,337,1.871,338,1.825,339,1.825,343,1.825,344,1.781,345,2.139,351,1.809,354,4.802,360,1.505,361,1.435,363,1.469,381,1.578,417,4.22,419,3.038,421,1.369,422,2.246,423,2.246,424,1.825,425,2.539,426,1.825,427,1.656,428,1.825,429,1.825,430,1.825,431,1.616,432,1.825,433,1.656,434,1.825,435,1.656,436,1.825,437,1.656,438,1.825,439,1.616,440,1.825,441,1.656,442,1.825,443,1.656,444,1.825,445,1.656,446,1.825,447,1.656,448,1.825,449,1.616,450,1.825,451,1.656,452,1.825,453,1.656,454,1.825,455,1.656,456,1.825,457,1.656,458,1.825,459,1.656,460,1.825,461,1.616,462,1.825,463,1.578,464,1.825,465,1.616,466,1.825,467,1.656,468,1.825,469,1.656,470,1.825,471,1.825,472,1.656,473,1.825,474,1.825,475,1.616,476,1.825,477,1.616,478,1.825,479,2.303,480,1.825,481,1.616,482,1.825,483,1.656,484,1.738,485,1.825,486,1.825,947,5.91,1496,5.265,2104,5.265,2105,7.956,2106,7.344,2107,5.967,2108,5.967,2109,5.967,2110,7.344]],["title/injectables/TeamsGQL.html",[123,0.313,301,1.251]],["body/injectables/TeamsGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.13,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.694,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.806,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,1.971,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.156,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,1.128,302,1.214,303,1.214,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,0.766,331,0.766,332,0.678,333,0.712,334,0.729,2111,2.505]],["title/components/TournamentComponent.html",[19,0.44,481,1.192]],["body/components/TournamentComponent.html",[3,0.109,4,0.109,5,0.099,7,0.305,8,0.647,9,2.378,10,4.852,12,0.614,13,0.01,14,1.093,15,0.213,19,0.693,20,1.876,22,0.109,29,3.569,30,2.207,32,1.593,34,3.181,35,1.727,39,1.92,40,1.875,41,1.636,42,3.005,43,1.939,44,0.148,49,2.497,50,2.381,52,1.649,54,0.119,55,1.182,56,1.535,59,1.681,60,2.466,64,1.211,65,1.731,67,1.746,70,4.852,72,2.289,77,2.014,111,1.211,120,0.004,121,0.006,122,0.004,136,0.956,139,1.831,170,0.698,197,0.727,210,1.302,213,2.123,215,0.596,228,0.628,254,0.628,258,0.628,335,1.24,336,1.817,337,1.401,338,1.367,339,1.367,343,1.367,344,1.334,345,1.773,351,1.499,360,1.535,361,1.464,363,1.831,365,2.274,381,1.182,419,3.347,421,1.025,422,1.862,423,1.862,424,1.367,425,2.274,426,1.367,427,1.24,428,1.367,429,1.367,430,1.367,431,1.211,432,1.367,433,1.24,434,1.367,435,1.24,436,1.367,437,1.24,438,1.367,439,1.211,440,1.367,441,1.24,442,1.367,443,1.24,444,1.367,445,1.24,446,1.367,447,1.24,448,1.367,449,1.211,450,1.367,451,1.24,452,1.367,453,1.24,454,1.367,455,1.24,456,1.367,457,1.24,458,1.367,459,1.24,460,1.367,461,1.211,462,1.367,463,1.182,464,1.367,465,1.211,466,1.367,467,1.24,468,1.367,469,1.24,470,1.367,471,1.367,472,1.24,473,1.367,474,1.367,475,1.211,476,1.367,477,1.211,478,1.367,479,1.24,480,1.367,481,2.014,482,1.367,483,1.24,484,1.302,485,1.367,486,1.367,523,2.207,631,5.372,639,2.812,640,2.372,641,3.338,668,6.11,693,4.291,896,4.9,1152,4.585,1253,3.132,1386,4.843,1508,4.548,1509,4.548,1565,6.11,1591,3.944,1593,3.944,1596,5.372,1598,3.338,1610,5.372,1631,4.9,1668,7.082,1669,6.864,1763,5.372,1797,3.944,1800,5.372,1801,5.372,1807,5.372,2112,3.597,2113,6.925,2114,6.089,2115,7.436,2116,7.436,2117,4.47,2118,6.925,2119,6.089,2120,4.47,2121,4.47,2122,4.47,2123,4.47,2124,4.47,2125,4.47,2126,4.47,2127,3.944,2128,4.47,2129,4.47,2130,4.47,2131,6.089,2132,4.47,2133,4.47,2134,4.47,2135,4.47,2136,4.47,2137,4.47,2138,7.78,2139,4.47,2140,4.47,2141,4.47,2142,4.47,2143,4.47,2144,6.089,2145,4.47,2146,4.47,2147,6.089,2148,4.47,2149,4.47,2150,4.47,2151,4.47,2152,6.089,2153,6.089,2154,6.089,2155,7.436,2156,8.36,2157,7.436,2158,7.436,2159,6.089,2160,6.089,2161,6.089]],["title/injectables/TournamentGQL.html",[40,1.11,123,0.313]],["body/injectables/TournamentGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.455,12,0.711,13,0.01,14,1.295,15,0.131,22,0.061,36,1.863,37,0.678,38,1.075,39,0.647,40,1.001,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.655,62,1.185,87,0.647,94,1.593,96,1.593,100,1.593,102,0.712,104,0.712,107,2.134,110,2.136,111,1.788,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.498,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.282,138,2.644,139,0.617,140,1.593,141,1.214,142,0.729,143,1.184,144,1.184,145,1.184,146,0.695,147,1.101,148,0.747,149,0.747,150,0.729,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.184,158,1.184,159,1.893,160,1.184,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.184,170,0.795,171,1.184,172,1.184,173,1.507,174,1.673,175,1.184,176,1.801,177,0.766,178,1.673,179,2.146,180,2.146,181,1.893,182,1.156,183,1.673,184,1.184,185,1.214,186,1.214,187,1.673,188,1.519,189,1.893,190,1.673,191,1.709,192,1.184,193,0.766,194,1.673,195,1.94,196,1.156,197,0.868,198,1.001,199,0.647,200,2.027,201,0.747,202,1.101,203,1.435,204,1.049,205,1.96,206,0.747,207,1.128,208,1.848,209,0.747,210,1.156,211,1.893,212,0.747,213,2.011,214,0.747,215,0.941,216,1.471,217,1.184,218,1.779,219,2.315,220,1.184,221,1.184,222,1.834,223,1.679,224,1.616,225,1.184,226,1.184,227,1.184,228,1.087,229,1.156,230,1.673,231,1.184,232,0.729,233,1.156,234,1.156,235,1.401,236,1.184,237,1.184,238,1.435,239,1.435,240,0.766,241,1.184,242,1.184,243,1.184,244,1.184,245,1.184,246,1.184,247,1.673,248,0.747,249,1.184,250,0.747,251,0.729,252,1.655,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.435,260,1.804,261,1.435,262,1.401,263,1.435,264,1.156,265,1.156,266,1.156,267,1.435,268,1.435,269,1.435,270,1.156,271,0.729,272,1.944,273,1.898,274,0.712,275,2.466,276,2.483,277,1.507,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.678,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.729,313,2.366,314,0.766,315,0.766,316,0.678,317,0.766,318,0.766,319,0.678,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.678,329,0.712,330,1.214,331,1.214,332,0.678,333,0.712,334,0.729,2162,2.505]],["title/modules/TournamentModule.html",[557,1.221,2163,3.286]],["body/modules/TournamentModule.html",[3,0.165,4,0.165,5,0.15,13,0.009,15,0.234,22,0.165,44,0.165,54,0.181,120,0.007,121,0.008,122,0.007,213,1.802,421,1.563,481,2.424,557,1.89,559,2.365,560,3.251,561,4.018,562,3.363,563,3.363,564,3.251,570,4.576,571,4.066,572,3.484,573,3.484,576,3.072,577,2.989,579,3.915,580,4.286,760,4.089,1875,5.264,2163,6.855,2164,6.01,2165,6.01,2166,6.01,2167,6.269,2168,6.812,2169,6.01]],["title/modules/TournamentRoutingModule.html",[557,1.221,2167,3.083]],["body/modules/TournamentRoutingModule.html",[3,0.17,4,0.17,5,0.155,13,0.009,15,0.226,19,0.703,22,0.17,44,0.17,54,0.186,120,0.007,121,0.008,122,0.007,258,0.987,481,2.192,554,3.243,559,2.437,561,3.351,576,2.714,577,3.042,597,4.035,598,4.36,599,4.035,601,4.035,602,4.215,2167,5.669,2169,6.195,2170,7.022]],["title/injectables/UpdateTeamContactGQL.html",[123,0.313,304,1.251]],["body/injectables/UpdateTeamContactGQL.html",[0,0.632,3,0.061,4,0.061,5,0.055,7,0.17,8,0.42,9,1.515,11,1.453,12,0.711,13,0.01,14,1.297,15,0.13,22,0.061,36,1.861,37,0.675,38,1.071,39,0.644,40,0.629,44,0.228,46,0.692,47,1.635,48,0.692,54,0.23,57,1.651,62,1.182,87,0.644,94,1.589,96,1.589,100,1.589,102,0.709,104,0.709,107,2.129,110,2.135,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.709,125,0.629,126,0.692,127,2.541,128,0.533,129,0.496,130,2.542,131,2.693,132,0.763,133,2.326,134,0.763,135,2.029,136,0.281,138,2.644,139,0.614,140,1.589,141,1.209,142,0.726,143,1.18,144,1.18,145,1.18,146,0.692,147,1.097,148,0.744,149,0.744,150,0.726,151,2.596,152,1.209,153,2.105,154,1.844,155,1.844,156,2.426,157,1.18,158,1.18,159,1.889,160,1.18,161,1.669,162,0.763,163,2.165,164,1.628,165,0.763,166,0.763,167,1.151,168,0.763,169,1.18,170,0.795,171,1.18,172,1.18,173,1.503,174,1.669,175,1.18,176,1.798,177,0.763,178,1.936,179,2.228,180,2.228,181,2.115,182,1.151,183,1.669,184,1.18,185,1.209,186,1.209,187,1.669,188,1.515,189,1.889,190,1.669,191,1.706,192,1.18,193,0.763,194,1.669,195,1.936,196,1.151,197,0.867,198,0.997,199,0.644,200,2.025,201,0.744,202,1.097,203,1.431,204,1.046,205,1.957,206,0.744,207,1.124,208,1.844,209,0.744,210,1.151,211,1.889,212,0.744,213,1.968,214,0.744,215,0.94,216,1.466,217,1.18,218,1.775,219,2.313,220,1.18,221,1.18,222,1.832,223,1.675,224,1.612,225,1.18,226,1.18,227,1.18,228,1.086,229,1.151,230,1.669,231,1.18,232,0.726,233,1.151,234,1.151,235,1.396,236,1.18,237,1.18,238,1.431,239,1.431,240,0.763,241,1.18,242,1.18,243,1.18,244,1.18,245,1.18,246,1.18,247,1.669,248,0.744,249,1.18,250,0.744,251,0.726,252,1.651,253,1.331,254,0.556,255,1.097,256,0.709,257,0.763,258,1.086,259,1.431,260,1.8,261,1.431,262,1.396,263,1.431,264,1.151,265,1.151,266,1.151,267,1.151,268,1.431,269,1.431,270,1.151,271,0.726,272,1.942,273,1.897,274,0.709,275,2.464,276,2.481,277,1.503,278,0.709,279,0.763,280,0.763,281,0.709,282,0.763,283,0.763,284,0.675,285,0.763,286,0.763,287,0.692,288,0.763,289,0.763,290,0.709,291,0.763,292,0.763,293,0.709,294,0.763,295,0.763,296,0.709,297,0.763,298,0.709,299,0.763,300,0.763,301,0.709,302,0.763,303,0.763,304,1.124,305,0.692,306,0.763,307,0.763,308,0.709,309,0.763,310,0.763,311,0.709,312,0.726,313,2.363,314,0.763,315,0.763,316,0.675,317,0.763,318,0.763,319,0.675,320,0.763,321,0.763,322,0.629,323,0.763,324,1.209,325,0.709,326,0.629,327,0.763,328,0.675,329,0.709,330,0.763,331,0.763,332,0.675,333,0.709,334,0.726,2171,2.493]],["title/injectables/UserGQL.html",[123,0.313,332,1.192]],["body/injectables/UserGQL.html",[0,0.634,3,0.061,4,0.061,5,0.055,7,0.171,8,0.422,9,1.519,11,1.456,12,0.711,13,0.01,14,1.294,15,0.131,22,0.061,36,1.863,37,0.679,38,1.075,39,0.647,40,0.632,44,0.228,46,0.695,47,1.638,48,0.695,54,0.23,57,1.656,62,1.186,87,0.647,94,1.594,96,1.594,100,1.594,102,0.712,104,0.712,107,2.134,110,2.137,111,1.785,120,0.003,121,0.004,122,0.003,123,0.618,124,0.712,125,0.632,126,0.695,127,2.542,128,0.535,129,0.499,130,2.543,131,2.691,132,0.766,133,2.26,134,0.766,135,2.033,136,0.283,138,2.644,139,0.617,140,1.594,141,1.214,142,0.73,143,1.185,144,1.185,145,1.185,146,0.695,147,1.101,148,0.748,149,0.748,150,0.73,151,2.598,152,1.214,153,2.108,154,1.848,155,1.848,156,2.427,157,1.185,158,1.185,159,1.894,160,1.185,161,1.673,162,0.766,163,2.103,164,1.633,165,0.766,166,0.766,167,1.156,168,0.766,169,1.185,170,0.795,171,1.185,172,1.185,173,1.508,174,1.673,175,1.185,176,1.802,177,0.766,178,1.673,179,2.146,180,2.146,181,1.894,182,1.156,183,1.673,184,1.185,185,1.214,186,1.214,187,1.673,188,1.519,189,1.894,190,1.673,191,1.709,192,1.185,193,0.766,194,1.673,195,1.94,196,1.156,197,0.869,198,1.001,199,0.647,200,2.027,201,0.748,202,1.101,203,1.436,204,1.05,205,1.96,206,0.748,207,1.128,208,1.848,209,0.748,210,1.156,211,1.894,212,0.748,213,1.971,214,0.748,215,0.993,216,1.673,217,1.185,218,1.78,219,2.315,220,1.185,221,1.185,222,1.835,223,1.679,224,1.616,225,1.185,226,1.185,227,1.185,228,1.087,229,1.156,230,1.673,231,1.185,232,0.73,233,1.156,234,1.156,235,1.401,236,1.185,237,1.185,238,1.436,239,1.436,240,0.766,241,1.185,242,1.185,243,1.185,244,1.185,245,1.185,246,1.185,247,1.673,248,0.748,249,1.185,250,0.748,251,0.73,252,1.656,253,1.335,254,0.558,255,1.101,256,0.712,257,0.766,258,1.087,259,1.436,260,1.804,261,1.436,262,1.401,263,1.436,264,1.156,265,1.156,266,1.156,267,1.156,268,1.633,269,1.436,270,1.156,271,0.73,272,1.944,273,1.898,274,0.712,275,2.466,276,2.484,277,1.508,278,0.712,279,0.766,280,0.766,281,0.712,282,0.766,283,0.766,284,0.679,285,0.766,286,0.766,287,0.695,288,0.766,289,0.766,290,0.712,291,0.766,292,0.766,293,0.712,294,0.766,295,0.766,296,0.712,297,0.766,298,0.712,299,0.766,300,0.766,301,0.712,302,0.766,303,0.766,304,0.712,305,0.695,306,0.766,307,0.766,308,0.712,309,0.766,310,0.766,311,0.712,312,0.73,313,2.366,314,0.766,315,0.766,316,0.679,317,0.766,318,0.766,319,0.679,320,0.766,321,0.766,322,0.632,323,0.766,324,1.214,325,0.712,326,0.632,327,0.766,328,0.679,329,0.712,330,0.766,331,0.766,332,1.075,333,0.712,334,0.73,2172,2.506]],["title/components/UserListComponent.html",[19,0.44,483,1.221]],["body/components/UserListComponent.html",[3,0.139,4,0.139,5,0.126,7,0.391,8,0.761,12,0.548,13,0.009,15,0.217,19,0.781,20,2.115,22,0.139,34,3.193,35,2.211,41,2.094,42,3.105,43,2.483,44,0.139,49,2.533,50,2.415,52,1.938,54,0.152,55,1.513,56,1.804,64,1.424,65,1.627,72,2.151,77,2.216,120,0.006,121,0.007,122,0.006,136,0.88,170,0.733,176,1.892,179,1.985,180,1.985,197,0.683,215,1.184,218,2.274,228,0.804,254,0.804,333,2.442,335,1.588,336,2.135,337,1.794,338,1.75,339,1.75,343,1.75,344,1.708,345,2.084,351,1.762,360,1.443,361,1.376,363,1.409,365,1.75,381,1.513,417,4.112,421,1.313,422,2.189,423,2.189,424,1.75,425,2.502,426,1.75,427,1.588,428,1.75,429,1.75,430,1.75,431,1.55,432,1.75,433,1.588,434,1.75,435,1.588,436,1.75,437,1.588,438,1.75,439,1.55,440,1.75,441,1.588,442,1.75,443,1.588,444,1.75,445,1.588,446,1.75,447,1.588,448,1.75,449,1.55,450,1.75,451,1.588,452,1.75,453,1.588,454,1.75,455,1.588,456,1.75,457,1.588,458,1.75,459,1.588,460,1.75,461,1.55,462,1.75,463,1.513,464,1.75,465,1.55,466,1.75,467,1.588,468,1.75,469,1.588,470,1.75,471,1.75,472,1.588,473,1.75,474,1.75,475,1.55,476,1.75,477,1.55,478,1.75,479,1.588,480,1.75,481,1.55,482,1.75,483,2.27,484,2.274,485,1.75,486,1.75,509,5.344,592,6.583,868,5.344,1152,3.789,1386,3.947,2173,7.217,2174,5.049,2175,7.808,2176,7.156,2177,5.723,2178,7.156,2179,5.723,2180,5.723,2181,5.723,2182,5.723,2183,5.723,2184,5.723,2185,7.156,2186,7.156,2187,7.156,2188,7.156,2189,7.156]],["title/coverage.html",[2190,4.848]],["body/coverage.html",[0,1.39,1,3.23,5,0.102,6,5.255,12,0.353,13,0.009,19,0.922,23,2.276,29,1.941,37,1.249,38,1.249,39,1.191,40,1.163,45,3.23,55,1.219,59,1.733,120,0.007,121,0.006,122,0.005,123,0.659,124,1.31,126,2.583,140,1.31,259,1.343,260,1.279,261,1.343,262,1.31,263,1.343,264,1.343,265,1.343,266,1.343,267,1.343,268,1.343,269,1.343,270,1.343,274,1.31,278,1.31,281,1.31,284,1.249,287,1.279,290,1.31,293,1.31,296,1.31,298,1.31,301,1.31,304,1.31,305,1.279,308,1.31,311,1.31,312,1.343,316,1.249,319,1.249,322,1.163,325,1.31,326,1.163,328,1.249,329,1.31,332,1.249,333,1.31,335,1.279,340,4.068,341,3.71,342,4.068,358,2,381,1.219,427,1.279,431,1.249,433,1.279,435,1.279,437,1.279,439,1.249,441,1.279,443,1.279,445,1.279,447,1.279,449,1.249,451,1.279,453,1.279,455,1.279,457,1.279,459,1.279,461,1.249,463,1.219,465,1.249,467,1.279,469,1.279,472,1.279,475,1.249,477,1.249,479,1.279,481,1.249,483,1.279,487,4.068,503,3.443,539,4.068,544,5.004,545,3.23,547,4.068,587,4.929,592,3.71,607,4.068,611,2.446,617,2.901,634,5.624,636,4.356,641,3.443,693,5.215,725,3.443,740,3.23,741,3.71,768,5.486,773,3.71,781,3.443,787,3.443,800,4.068,802,4.068,820,5.255,848,3.443,850,3.053,869,3.443,903,4.068,923,4.068,932,4.068,933,3.71,934,4.068,948,4.068,968,4.068,979,4.068,999,2.768,1000,2.543,1096,4.068,1119,4.068,1140,4.068,1168,4.644,1191,3.71,1231,3.71,1232,5.004,1237,3.053,1252,3.443,1281,5.004,1301,3.71,1309,3.23,1310,5.255,1311,5.255,1315,3.23,1391,3.443,1392,5.004,1397,3.912,1398,4.929,1406,5.004,1407,5.004,1410,4.068,1440,4.068,1556,4.068,1615,4.068,1621,4.068,1717,4.068,1746,6.061,1778,3.71,1780,3.71,1782,3.71,1847,4.068,1880,4.068,1888,4.068,1900,4.068,1901,4.068,1914,5.004,1931,3.71,1939,4.068,1984,4.068,2037,4.068,2064,4.068,2088,4.068,2104,4.068,2112,5.004,2173,4.068,2174,4.068,2190,3.71,2191,4.068,2192,4.61,2193,4.61,2194,9.247,2195,8.7,2196,9.195,2197,9.218,2198,7.036,2199,7.036,2200,7.531,2201,8.28,2202,7.531,2203,4.61,2204,6.218,2205,4.61,2206,6.218,2207,7.863,2208,4.61,2209,6.218,2210,4.61,2211,4.61,2212,4.61,2213,4.068,2214,4.068,2215,4.068,2216,4.068,2217,5.486,2218,4.068,2219,4.61]],["title/dependencies.html",[560,2.528,2220,3.666]],["body/dependencies.html",[13,0.009,18,2.115,22,0.148,26,3.658,27,3.658,28,3.233,32,2.861,33,2.566,35,2.874,120,0.006,121,0.007,122,0.006,219,1.65,252,2.433,253,2.175,255,2.492,344,1.818,379,3.116,383,4.551,554,2.814,560,2.908,562,3.008,640,3.233,743,6.563,744,5.986,750,5.376,751,5.376,760,3.658,850,4.034,865,4.903,866,5.986,1173,7.084,1174,5.376,1179,5.555,1184,4.551,1185,4.551,1187,7.084,1188,5.376,1190,5.376,1223,5.376,1258,4.903,1318,4.551,1831,5.376,2190,4.903,2221,6.093,2222,8.981,2223,6.093,2224,7.439,2225,6.093,2226,7.439,2227,6.093,2228,6.093,2229,6.093,2230,6.093,2231,6.093,2232,6.093,2233,6.093,2234,6.093,2235,6.093,2236,6.093,2237,6.093,2238,6.093,2239,7.439,2240,6.093,2241,6.093,2242,6.093,2243,6.093,2244,7.439,2245,7.439,2246,7.439,2247,6.093,2248,6.093,2249,6.093,2250,6.093,2251,6.093,2252,6.093,2253,6.093,2254,6.093,2255,6.093,2256,6.093,2257,6.093,2258,6.093,2259,6.093,2260,6.093,2261,6.093,2262,8.915,2263,8.832,2264,6.093,2265,6.093,2266,8.362,2267,6.093,2268,6.093,2269,6.093,2270,6.093,2271,6.093,2272,6.093,2273,6.093,2274,6.093,2275,6.093,2276,6.093,2277,6.093,2278,6.093,2279,6.093,2280,6.093,2281,6.093,2282,6.093,2283,6.093,2284,6.093,2285,6.093,2286,6.093,2287,6.093,2288,6.093,2289,6.093,2290,6.093,2291,6.093,2292,6.093,2293,6.093,2294,6.093,2295,6.093,2296,6.093,2297,6.093,2298,6.093,2299,6.093,2300,6.093]],["title/miscellaneous/enumerations.html",[2301,2.201,2302,4.674]],["body/miscellaneous/enumerations.html",[7,0.487,13,0.009,120,0.007,121,0.008,122,0.007,126,1.977,129,1.779,142,2.376,143,2.435,144,2.435,145,2.435,146,2.264,147,2.264,148,2.127,149,2.127,2301,4.278,2302,6.287,2303,6.567]],["title/miscellaneous/functions.html",[2301,2.201,2304,4.674]],["body/miscellaneous/functions.html",[7,0.488,13,0.009,120,0.007,121,0.008,122,0.007,170,0.768,357,4.508,360,2.061,361,1.965,741,5.749,769,6.303,773,6.577,1168,5.335,1172,6.303,1231,6.577,2301,4.288,2304,6.303,2305,6.303,2306,7.144,2307,7.144,2308,8.172,2309,7.144]],["title/index.html",[7,0.25,2310,3.234,2311,3.234]],["body/index.html",[13,0.008,120,0.007,121,0.008,122,0.007,2191,6.409,2312,7.264,2313,8.25,2314,8.25,2315,7.264]],["title/modules.html",[559,2.091]],["body/modules.html",[13,0.008,120,0.007,121,0.008,122,0.007,558,5.032,559,2.339,568,4.721,569,4.721,570,3.446,721,4.461,731,5.032,737,4.721,738,4.721,739,4.461,744,7.402,954,5.032,958,4.721,1160,4.721,1808,5.032,1812,4.721,1869,5.032,1873,4.721,2029,5.032,2033,4.721,2096,5.032,2100,4.721,2163,5.032,2167,4.721,2316,9.198,2317,9.198,2318,9.369,2319,9.198,2320,9.198]],["title/overview.html",[2321,4.848]],["body/overview.html",[2,2.743,13,0.009,55,2.004,120,0.005,121,0.007,122,0.005,125,1.353,335,2.102,336,1.601,358,3.288,381,2.004,421,1.231,427,2.102,431,2.052,433,2.383,435,2.102,437,2.102,439,2.052,441,2.383,443,2.102,445,2.102,447,2.102,449,2.327,451,2.102,453,2.102,455,2.102,457,2.102,459,2.383,461,2.052,463,2.004,465,2.052,467,2.102,469,2.102,472,2.383,475,2.052,477,2.052,479,2.102,481,2.052,483,2.102,546,4.317,557,1.488,558,6.937,559,1.862,560,2.56,561,2.56,562,2.648,563,2.648,564,2.56,565,4.733,566,4.733,567,4.733,568,5.309,569,6.28,570,4.766,571,3.513,572,2.743,573,2.743,598,2.743,617,4.767,721,5.29,731,6.849,732,4.733,733,4.733,734,4.733,735,4.733,736,4.733,737,5.309,738,5.786,739,5.76,740,5.309,954,6.695,955,4.733,956,4.733,957,4.733,958,5.309,1156,4.733,1157,4.733,1158,4.733,1159,4.733,1160,5.309,1166,4.733,1167,4.733,1211,4.006,1808,6.614,1809,4.733,1810,4.733,1811,4.733,1812,5.309,1869,6.497,1870,4.733,1871,4.733,1872,4.733,1873,5.309,1962,4.733,1963,4.733,1965,4.733,2029,6.497,2030,4.733,2031,4.733,2032,4.733,2033,5.309,2096,6.497,2097,4.733,2098,4.733,2099,4.733,2100,5.309,2163,6.497,2164,4.733,2165,4.733,2166,4.733,2167,5.309,2321,4.317,2322,6.869,2323,5.365,2324,5.365,2325,5.365]],["title/routes.html",[598,3.081]],["body/routes.html",[13,0.008,120,0.007,121,0.008,122,0.007,598,3.733]],["title/todo.html",[2310,3.234,2311,3.234,2326,3.666]],["body/todo.html",[13,0.009,83,5.001,120,0.007,121,0.008,122,0.007,197,0.852,200,1.843,202,1.98,215,0.951,248,2.13,509,6.1,794,6.298,977,6.298,2321,5.744,2327,9.108,2328,7.138,2329,7.138,2330,7.138,2331,7.138,2332,7.138,2333,7.138,2334,7.138,2335,7.138]],["title/miscellaneous/typealiases.html",[2301,2.201,2336,5.298]],["body/miscellaneous/typealiases.html",[7,0.353,12,0.723,13,0.008,28,3.559,36,1.538,46,1.861,47,2.048,48,1.861,57,1.817,62,1.613,87,1.732,107,2.218,110,2.317,120,0.005,121,0.007,122,0.005,126,1.434,131,2.775,138,2.239,139,1.652,176,2.084,191,1.575,192,2.001,196,1.953,197,0.801,198,1.691,200,2.035,201,1.543,203,1.953,204,1.774,205,1.861,206,1.543,208,1.906,209,1.543,211,1.953,212,1.543,213,1.774,214,1.543,216,2.001,217,2.001,218,1.953,219,2.498,222,1.691,224,1.774,228,1.107,229,1.953,232,1.953,233,1.953,235,1.906,238,1.953,239,1.953,250,2.001,1219,5.009,1398,3.621,1400,7.596,1401,5.397,2301,3.103,2303,7.616,2337,5.169,2338,7.203]],["title/miscellaneous/variables.html",[110,1.305,2301,2.201]],["body/miscellaneous/variables.html",[7,0.35,11,1.425,12,0.691,13,0.01,14,1.194,36,2.016,75,3.223,110,1.262,111,1.761,120,0.008,121,0.007,122,0.005,126,1.421,128,1.977,129,1.841,130,2.531,154,1.456,155,1.456,159,1.492,163,1.763,170,0.765,176,1.763,179,1.85,180,1.85,181,1.492,189,1.492,191,1.566,194,1.529,195,1.529,197,0.885,200,2.028,205,1.85,208,1.456,211,1.492,213,1.961,215,0.889,219,2.412,220,1.529,221,1.529,222,1.98,223,2.028,224,1.763,225,1.529,226,1.529,227,1.529,228,1.173,230,1.99,231,1.529,234,1.492,235,1.456,236,1.529,237,1.529,238,1.492,239,1.492,241,1.529,242,1.529,243,1.529,244,1.529,245,1.529,246,1.529,247,1.99,249,1.529,259,2.287,260,2.316,261,2.159,262,2.107,263,2.287,264,1.942,265,1.942,266,1.942,267,1.942,268,1.942,269,1.942,270,1.942,634,6.435,641,4.98,776,3.876,820,3.826,850,4.415,867,3.41,869,4.98,870,4.123,893,4.713,1168,3.826,1189,6.541,1191,5.366,1192,4.52,1281,4.123,1301,5.366,1397,4.195,1398,3.589,1399,4.98,1404,4.98,1406,4.123,1407,5.366,1746,4.123,1778,5.366,1779,4.52,1780,5.366,1781,4.52,1782,5.366,1783,4.52,1914,4.123,1931,5.366,1932,4.52,2049,5.883,2112,4.123,2127,4.52,2213,4.52,2214,4.52,2215,4.52,2216,4.52,2217,4.52,2218,5.883,2301,3.075,2303,7.167,2305,4.52,2338,4.52,2339,5.123,2340,6.668,2341,5.123,2342,5.123,2343,5.123,2344,5.123,2345,7.413,2346,5.123,2347,5.123,2348,5.123,2349,5.123,2350,5.123,2351,5.123,2352,7.852,2353,7.852,2354,7.852,2355,7.852,2356,7.852,2357,7.852,2358,7.852,2359,5.123,2360,5.123,2361,5.123,2362,5.123,2363,5.123,2364,5.123,2365,5.123,2366,5.123]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":693,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2274,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2262,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":707,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2258,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2291,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":720,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2300,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2297,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1386,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2278,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2288,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":2325,"title":{},"body":{"overview.html":{}}}],["11.0.1",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2286,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2259,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":708,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1211,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2270,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2284,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2283,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2293,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["2/5",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2322,"title":{},"body":{"overview.html":{}}}],["25",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["2500",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["25px",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1681,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":714,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2282,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2272,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2323,"title":{},"body":{"overview.html":{}}}],["30000",{"_index":1863,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["304701",{"_index":711,"title":{},"body":{"components/AppComponent.html":{}}}],["37",{"_index":2324,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1585,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["441313",{"_index":718,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":704,"title":{},"body":{"components/AppComponent.html":{}}}],["50vw",{"_index":508,"title":{},"body":{"components/AddteamComponent.html":{}}}],["6.0.2",{"_index":2296,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2294,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":2009,"title":{},"body":{"components/TableComponent.html":{}}}],["7",{"_index":1485,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["7.0.0",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":709,"title":{},"body":{"components/AppComponent.html":{}}}],["89ff00",{"_index":713,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1118,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":712,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1399,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":156,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":1915,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1233,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["_team",{"_index":250,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["a.email.tolowercase",{"_index":2183,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.length",{"_index":1385,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":1508,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["a.number",{"_index":2133,"title":{},"body":{"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1153,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":1501,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["a[i",{"_index":1389,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1390,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1713,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1379,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1671,"title":{},"body":{"components/MatchComponent.html":{}}}],["access_token",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["accesstoken",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":1851,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2091,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":486,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":344,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1686,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1331,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatch",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addmatch'},{'name",{"_index":429,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewseason",{"_index":1449,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewseason(seasonname",{"_index":1461,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addnewteam",{"_index":491,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":495,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["addteam",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteam'},{'name",{"_index":428,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["addteam.component.css",{"_index":488,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam.component.html",{"_index":489,"title":{},"body":{"components/AddteamComponent.html":{}}}],["addteam/addteam.component",{"_index":581,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteam/rename",{"_index":594,"title":{},"body":{"modules/AdminModule.html":{}}}],["addteamcomponent",{"_index":427,"title":{"components/AddteamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addteamgql",{"_index":1459,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseason",{"_index":171,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":132,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":134,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(teamid",{"_index":1464,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["addteamtoseasongql",{"_index":124,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtournamentround.component.html",{"_index":53,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addtournamentround/addtournamentround.component",{"_index":1588,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["addtournamentroundcomponent",{"_index":55,"title":{"components/AddtournamentroundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addtypename",{"_index":1221,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["addusercomponent",{"_index":335,"title":{"components/AddUserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adm",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":147,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":432,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":578,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":540,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":541,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":600,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":431,"title":{"components/AdminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":545,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":558,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":568,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":983,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["afterwarelink.concat(auth).concat(http",{"_index":1220,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["aizasybo4ktasyvs6hxw6pv7njib0k9musx8ym0",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":403,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["alert(`${matchday.id",{"_index":1366,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2337,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":1799,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":1549,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":203,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":208,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":209,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":265,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":207,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":1926,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":328,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":329,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":210,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlistgql",{"_index":39,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2118,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":211,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":212,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":266,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsqgl",{"_index":66,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":218,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":333,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":1505,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["angular",{"_index":253,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":760,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":762,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":379,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":1822,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":1826,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":1824,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":1828,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":1820,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":1818,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":554,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2049,"title":{},"body":{"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["api/graphql",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"miscellaneous/variables.html":{}}}],["apollo",{"_index":252,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":276,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":313,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1403,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollo_options",{"_index":1170,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink",{"_index":1181,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollomodule",{"_index":1169,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":783,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":433,"title":{"components/AppComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":721,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":731,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":737,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1223,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["array",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["array(gamecount",{"_index":1608,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":1500,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["async",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{}}}],["auth",{"_index":1202,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.interceptor",{"_index":756,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticateduser",{"_index":216,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationservice",{"_index":358,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authinterceptor",{"_index":740,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authservice",{"_index":357,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"miscellaneous/functions.html":{}}}],["authservice.accesstoken",{"_index":1201,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.logout",{"_index":1198,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice.user.first_name",{"_index":1866,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":677,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":697,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2320,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1282,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["b",{"_index":1152,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2184,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.name.tolowercase",{"_index":1509,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{}}}],["b.state.tolocalelowercase",{"_index":1503,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["background",{"_index":699,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":899,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1214,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["basic",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":819,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/GraphQLModule.html":{}}}],["behaviorsubject",{"_index":1929,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":1930,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["betweenmatchdaysoffset",{"_index":1443,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["bname",{"_index":1504,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["body",{"_index":1060,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.label",{"_index":1062,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_latitude",{"_index":1064,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["body.location_longitude",{"_index":1065,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["boolean",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"guards/TeamadminGuard.html":{}}}],["boolean(this.accesstoken",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1524,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2318,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":1502,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.add_user",{"_index":418,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.back",{"_index":1093,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.cancel",{"_index":1094,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_result",{"_index":1116,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":931,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1087,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.create_season",{"_index":1547,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.create_team",{"_index":510,"title":{},"body":{"components/AddteamComponent.html":{}}}],["button.create_tournament",{"_index":1611,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1677,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1676,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_round",{"_index":1612,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_time",{"_index":1678,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":676,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1091,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["button.ok",{"_index":922,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1095,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/TeamadminComponent.html":{}}}],["button.send_user_mail",{"_index":420,"title":{},"body":{"components/AddUserComponent.html":{}}}],["button.set_day",{"_index":1551,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["button.set_time",{"_index":536,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":538,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["button.start_season",{"_index":1555,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["c1",{"_index":1925,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":1937,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":1923,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":1938,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1187,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1222,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["calls",{"_index":2048,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":548,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2090,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":977,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"todo.html":{}}}],["canload",{"_index":549,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1320,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1679,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1519,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["catch",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["cdref",{"_index":1001,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changedetectorref",{"_index":1002,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1284,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1289,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":436,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":904,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":905,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":435,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":168,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":289,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["checknewpitchname",{"_index":992,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["class",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["client",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":955,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":956,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":957,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1156,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1157,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1159,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1158,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1166,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1167,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":1809,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":1810,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":1811,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":1870,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":1871,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":1872,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1962,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1963,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1965,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":1964,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2030,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2031,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2032,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2097,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2098,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2099,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2164,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2165,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2166,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2260,"title":{},"body":{"dependencies.html":{}}}],["codegen",{"_index":2263,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":700,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2267,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":1875,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":19,"title":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":426,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":336,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":796,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":780,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":795,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":790,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":793,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/contact",{"_index":1975,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/contact/contact.component",{"_index":1968,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.pitch.component",{"_index":1972,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.result.component",{"_index":1970,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/editmatch/editmatch.time.component",{"_index":1971,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/match/match.component",{"_index":1967,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/seasonchooser/seasonchooser.component",{"_index":1969,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":764,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["components/table#tablemodule",{"_index":789,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":798,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":782,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":791,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament/tournament.component",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["conceded_goals",{"_index":246,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1235,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connected",{"_index":1234,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connecttodevtools",{"_index":1229,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.error('iwas",{"_index":1373,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":405,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["console.error(result.errors",{"_index":2004,"title":{},"body":{"components/TableComponent.html":{}}}],["console.log('connected",{"_index":1261,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(match",{"_index":1381,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log(message.data",{"_index":1269,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(result",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["console.log(this.data",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["console.log(this.possiblekickoffs",{"_index":1342,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["const",{"_index":258,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":1918,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":514,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["constructor(allusersgql",{"_index":2177,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(authservice",{"_index":550,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(data",{"_index":1977,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1571,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":926,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(i18service",{"_index":2117,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1143,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":998,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitchesqgl",{"_index":1881,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1689,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":813,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(redis",{"_index":1236,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":832,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1456,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(submitresultgql",{"_index":1720,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":354,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamsql",{"_index":2044,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(translateservice",{"_index":1287,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":969,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["contact",{"_index":228,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":438,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component.css",{"_index":924,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":925,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.email",{"_index":946,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":941,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":229,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":942,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":944,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1651,"title":{},"body":{"components/MatchComponent.html":{}}}],["contact_mail",{"_index":945,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":943,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactcomponent",{"_index":437,"title":{"components/ContactComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactfragment",{"_index":259,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":949,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":440,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":960,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":950,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":951,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":439,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":954,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":958,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":441,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":794,"title":{},"body":{"modules/AppRoutingModule.html":{},"todo.html":{}}}],["context",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1164,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":723,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2190,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":2050,"title":{},"body":{"injectables/TeamService.html":{}}}],["createapollo",{"_index":1231,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createapollo(httplink",{"_index":2307,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created_at",{"_index":230,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchdays",{"_index":1450,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchdays(startdate",{"_index":1466,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["creatematchesforseason",{"_index":173,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":297,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":296,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":993,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createnewtournament",{"_index":1566,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1573,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createpitchbody",{"_index":1061,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["createpitches",{"_index":2331,"title":{},"body":{"todo.html":{}}}],["createround",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundnr",{"_index":1560,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createseason",{"_index":169,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":291,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":292,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":1920,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":290,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":177,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":303,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament",{"_index":184,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":309,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":310,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":308,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":185,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":37,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":187,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":311,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["currentlang",{"_index":1286,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":1916,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":1943,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":1949,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":725,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d",{"_index":1535,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["d').todate",{"_index":1359,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1711,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":407,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["data",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["data.allpitches",{"_index":1886,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":1957,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allseasons.sort",{"_index":1499,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["data.allteams.sort((a",{"_index":2054,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1593,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2182,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1151,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":1981,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.round",{"_index":532,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["data.season",{"_index":1510,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":1795,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":1506,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":1796,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":1507,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.tournament.rounds",{"_index":2131,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2132,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(dp.from",{"_index":1530,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1361,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1363,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(startdate.value",{"_index":1526,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date.setutchours(new",{"_index":1360,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1362,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1364,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.value",{"_index":1543,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1672,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":2027,"title":{},"body":{"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1136,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate",{"_index":1714,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1800,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1673,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1682,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":2028,"title":{},"body":{"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1138,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate",{"_index":1716,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1807,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1683,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":140,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":174,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1312,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1292,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":523,"title":{},"body":{"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"components/TournamentComponent.html":{}}}],["default",{"_index":128,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":136,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"interfaces/RoundTeam.html":{},"todo.html":{}}}],["dependencies",{"_index":560,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":774,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["description",{"_index":2038,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2280,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":681,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":490,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["dialogref",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1658,"title":{},"body":{"components/MatchComponent.html":{}}}],["directive",{"_index":424,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":485,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["displaypitch",{"_index":994,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":1007,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":127,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":660,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":650,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2191,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":150,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":338,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["dp.from",{"_index":1525,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.from.setdate(dp.from.getdate",{"_index":1527,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to",{"_index":1529,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["dp.to.setdate(dp.to.getdate",{"_index":1531,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["draws",{"_index":243,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{}}}],["dynamic",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1710,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1709,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1708,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":509,"title":{},"body":{"components/AddteamComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["edit_round",{"_index":531,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2087,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editmatch.pitch",{"_index":980,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":444,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":981,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":982,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1098,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1099,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1120,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":448,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1121,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1122,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1654,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.result.component",{"_index":1652,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatch/editmatch.time.component",{"_index":1653,"title":{},"body":{"components/MatchComponent.html":{}}}],["editmatchpitchcomponent",{"_index":443,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1097,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":446,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":445,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":447,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editround",{"_index":1567,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["element",{"_index":423,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":163,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":2067,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["en",{"_index":1293,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":334,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":195,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":145,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":2329,"title":{},"body":{"todo.html":{}}}],["englisch",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":141,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2302,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":634,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.googlemapsapikey",{"_index":654,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.graphqlurl",{"_index":1192,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["environment.graphqlwsurl",{"_index":1207,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.persistcache",{"_index":1225,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.production",{"_index":1230,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":1182,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["err",{"_index":901,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["error('empty",{"_index":2059,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorcode",{"_index":1994,"title":{},"body":{"components/TableComponent.html":{}}}],["errors.enter_valid_email",{"_index":411,"title":{},"body":{"components/AddUserComponent.html":{}}}],["errors.enter_valid_password",{"_index":414,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["errors.password_token_invalid",{"_index":1868,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1089,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["errors.username_password_wrong",{"_index":921,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["event",{"_index":191,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":314,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":315,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":192,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.index",{"_index":1518,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["event.occurred_at",{"_index":1154,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.type",{"_index":1155,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventemitter",{"_index":1636,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":269,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":312,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":595,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":450,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1163,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1141,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1142,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":449,"title":{"components/EventsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1239,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":569,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1160,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2041,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2043,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2257,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":275,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":717,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":893,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/TableComponent.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":665,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":1802,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1756,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":984,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1753,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1758,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1754,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1760,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstate",{"_index":1944,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2158,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2276,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":179,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":412,"title":{},"body":{"components/AddUserComponent.html":{}}}],["firstname",{"_index":348,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["flex",{"_index":1806,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":749,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot_password",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":1003,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":370,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/TeamadminComponent.html":{}}}],["formgroup",{"_index":1022,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward(operation).map(response",{"_index":1193,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["fragment",{"_index":219,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1738,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":257,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["fromtooffset",{"_index":1444,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["full",{"_index":786,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":768,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2304,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":1614,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["gamecount",{"_index":1606,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2261,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1568,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["getcachekey",{"_index":1224,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getcurrentlang",{"_index":1297,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":1776,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1176,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmaindefinition(query",{"_index":1217,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getmatchdaylength",{"_index":1706,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getranking",{"_index":1987,"title":{},"body":{"components/TableComponent.html":{}}}],["getround(round[0].match_day_id).end_date",{"_index":2161,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).number",{"_index":2159,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getround(round[0].match_day_id).start_date",{"_index":2160,"title":{},"body":{"components/TournamentComponent.html":{}}}],["getsubscriptionclient",{"_index":1246,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2310,"title":{"index.html":{},"todo.html":{}},"body":{}}],["getwinner",{"_index":2115,"title":{},"body":{"components/TournamentComponent.html":{}}}],["googelmapsscript",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1024,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1052,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["googlemapsapikey",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["googlemapsjs",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":130,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2319,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":255,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["graphql.module",{"_index":765,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":738,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":617,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlwsurl",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphsubscription",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["green",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":544,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":546,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest_score",{"_index":155,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":221,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1255,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":48,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2157,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2269,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1755,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":817,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1205,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('authorization",{"_index":1204,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headers.get('x",{"_index":1200,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["height",{"_index":687,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":1865,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played",{"_index":1779,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["hide_played_key",{"_index":1778,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_played_matches",{"_index":1803,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1629,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1749,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["history",{"_index":2332,"title":{},"body":{"todo.html":{}}}],["home_score",{"_index":154,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":220,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1254,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":46,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":422,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1174,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["http://192.168.178.23/api",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http:/192.168.178.23/api/graphql",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":812,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":808,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["httpheaders().set('authorization",{"_index":898,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["httpinterceptor",{"_index":811,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httplink",{"_index":1172,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/functions.html":{}}}],["httplinkmodule",{"_index":1171,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httprequest",{"_index":806,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://manager.wildeligabremen.de/api",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://manager.wildeligabremen.de/api/graphql",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2315,"title":{},"body":{"index.html":{}}}],["i18n/de",{"_index":1299,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1300,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":29,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":773,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":769,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2281,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":111,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2327,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["implenet",{"_index":2330,"title":{},"body":{"todo.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":576,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":1285,"title":{},"body":{"injectables/I18Service.html":{}}}],["inject",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1396,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":123,"title":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":125,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1188,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1186,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["input",{"_index":940,"title":{},"body":{"components/ContactPersonComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":937,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1117,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":710,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":277,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["intercept",{"_index":803,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":805,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":800,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":801,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/DatePeriod.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2265,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1397,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1309,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":2068,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":2071,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["isloading",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["ismatchplayed",{"_index":1718,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1723,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1391,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1624,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1637,"title":{},"body":{"components/MatchComponent.html":{}}}],["isteamadmin",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1719,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1725,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1315,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1387,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2271,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2273,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1346,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1274,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["karma",{"_index":2275,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1228,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["kickoff",{"_index":159,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1124,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1126,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1313,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1216,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1369,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":225,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{},"miscellaneous/variables.html":{}}}],["lang_key",{"_index":1301,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":180,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":413,"title":{},"body":{"components/AddUserComponent.html":{}}}],["last_updated_at",{"_index":2025,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":349,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["latestevent",{"_index":193,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":317,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":316,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":196,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":318,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1145,"title":{},"body":{"components/EventsComponent.html":{}}}],["launcher",{"_index":2277,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1208,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["led",{"_index":685,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":421,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":1467,"title":{},"body":{"components/ManageseasonComponent.html":{},"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2312,"title":{},"body":{"index.html":{}}}],["line",{"_index":1831,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":1830,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1173,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["list",{"_index":484,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":593,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2175,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2176,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2174,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":2178,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:19",{"_index":2179,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1353,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":592,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1355,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1365,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1357,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":1400,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2040,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1569,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadchildren",{"_index":788,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":612,"title":{},"body":{"components/AppComponent.html":{}}}],["loaduser",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":761,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":639,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["localstorage(access_token_key",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localstorage(hide_played_key",{"_index":1766,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(lang_key",{"_index":1295,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage(selected_matchday_key",{"_index":1772,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_season_key",{"_index":1927,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage(selected_team_key",{"_index":1774,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_tournament_key",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["locatematch",{"_index":160,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":282,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":283,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1728,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":281,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1721,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":1894,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":227,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":226,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1080,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1084,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["login",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":452,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":451,"title":{"components/LoginComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":848,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["losses",{"_index":244,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":2073,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["manager",{"_index":2313,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1324,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":454,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason.component.css",{"_index":1441,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason.component.html",{"_index":1442,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseason/manageseason.component",{"_index":582,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":586,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasonchanged",{"_index":1451,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasonchanged(event",{"_index":1471,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["manageseasoncomponent",{"_index":453,"title":{"components/ManageseasonComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1445,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["managetournament",{"_index":1557,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":456,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1558,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1559,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/addtournamentround/addtournamentround.component",{"_index":585,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":584,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":455,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1561,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1562,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1563,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1616,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":458,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1617,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1618,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/add",{"_index":589,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":583,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":591,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":457,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map(({data",{"_index":1885,"title":{},"body":{"injectables/PitchService.html":{},"injectables/TeamService.html":{}}}],["map(value",{"_index":1038,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1042,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":691,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1393,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":763,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":1835,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":1821,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":197,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":460,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":320,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":321,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["match.component.css",{"_index":1622,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1623,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":198,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1668,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.guest_team",{"_index":2143,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1354,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":1079,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team_id",{"_index":2148,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_score",{"_index":1669,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["match.home_team",{"_index":2142,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1352,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":1078,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team_id",{"_index":2150,"title":{},"body":{"components/TournamentComponent.html":{}}}],["match.kickoff",{"_index":1135,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1356,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1083,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1715,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match:${matchid",{"_index":1739,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_days",{"_index":231,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":153,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":459,"title":{"components/MatchComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":223,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1523,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":233,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.from",{"_index":1552,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchday.matches.foreach",{"_index":1347,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1554,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1522,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.to",{"_index":1553,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchdayfragment",{"_index":263,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1328,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":232,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":1787,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2264,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":224,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":1790,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1380,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1750,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchesinseason",{"_index":1446,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matchesql",{"_index":1457,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["matcheventpayload",{"_index":1252,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":262,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":319,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1253,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1123,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1742,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":199,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":462,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":323,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":1814,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1747,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1748,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1325,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":461,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":322,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":1808,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":1812,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1240,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":463,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservice",{"_index":1000,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1631,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":1763,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["matchviewmodel",{"_index":2146,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":1839,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":493,"title":{},"body":{"components/AddteamComponent.html":{},"components/AppComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["matdialogmodule",{"_index":1832,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":1825,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2279,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":739,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1604,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1388,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":1823,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":1834,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":1838,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":1837,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":1840,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":1843,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":1846,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectchange",{"_index":367,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":1827,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":1819,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":1844,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":1845,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":356,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["matsnackbarmodule",{"_index":1842,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":1833,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabchangeevent",{"_index":1477,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["mattabsmodule",{"_index":1836,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":1817,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":1841,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":138,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2057,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":674,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":400,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["message.data",{"_index":1268,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1272,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":343,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":351,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["minwidth",{"_index":507,"title":{},"body":{"components/AddteamComponent.html":{}}}],["miscellaneous",{"_index":2301,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":557,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":559,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1318,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1317,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1358,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["msgtype",{"_index":1271,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1275,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.number",{"_index":1613,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":775,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":131,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":170,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":151,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1801,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1670,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["new",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1137,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":183,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":167,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1085,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1092,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_label",{"_index":1088,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newelement",{"_index":1332,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchdays",{"_index":1447,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["newmatchpitch",{"_index":985,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1086,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":1908,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":792,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":466,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":1876,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":1848,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":1849,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":465,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":1869,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":1873,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":986,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchformcontrol",{"_index":987,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchlabelexist",{"_index":988,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplace",{"_index":1035,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newpitchplaceformgroup",{"_index":989,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newroundplandatefrom",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newwinner(match",{"_index":2145,"title":{},"body":{"components/TournamentComponent.html":{}}}],["next",{"_index":807,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["next.handle(req",{"_index":815,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(req.clone",{"_index":816,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":577,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1330,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":32,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1370,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":947,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1081,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1674,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2152,"title":{},"body":{"components/TournamentComponent.html":{}}}],["nswag",{"_index":2285,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":139,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchResultComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":236,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1402,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1334,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old",{"_index":2334,"title":{},"body":{"todo.html":{}}}],["old_kickoff_time",{"_index":1134,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1082,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldmatchdays",{"_index":1468,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["oldpassword",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":906,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1316,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":352,"title":{},"body":{"components/AddUserComponent.html":{}}}],["onchangeteamselect(event",{"_index":366,"title":{},"body":{"components/AddUserComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":613,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["only'}).topromise",{"_index":1279,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["onpitchselect",{"_index":995,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1011,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":996,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["onshowcreatenewpitch",{"_index":997,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["ontournamentselected",{"_index":1570,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openchangepassworddialog",{"_index":614,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1625,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditpitchdialog",{"_index":1626,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1627,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1628,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["openrenameteamdialog",{"_index":492,"title":{},"body":{"components/AddteamComponent.html":{}}}],["openrenameteamdialog(team",{"_index":499,"title":{},"body":{"components/AddteamComponent.html":{}}}],["operation",{"_index":1215,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operation.getcontext",{"_index":1194,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationdefinition",{"_index":1218,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["optional",{"_index":361,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1650,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1630,"title":{},"body":{"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2321,"title":{"overview.html":{}},"body":{"overview.html":{},"todo.html":{}}}],["owldatetimeintl",{"_index":724,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":1973,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":1974,"title":{},"body":{"modules/SharedModule.html":{}}}],["ownservice",{"_index":2308,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ownservice.subscriptionclient",{"_index":1206,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["p.label",{"_index":1073,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["package",{"_index":2220,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":402,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["param",{"_index":2056,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":360,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1858,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":1859,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1374,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":188,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":1867,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":166,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":288,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":287,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":162,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":285,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":284,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":601,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":785,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1273,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1277,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":239,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["perm_contact_calendar",{"_index":1675,"title":{},"body":{"components/MatchComponent.html":{}}}],["persist",{"_index":1190,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1189,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":679,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":442,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":1976,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":935,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":936,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":934,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":938,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":939,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":933,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":181,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":27,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":222,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":204,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1745,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1047,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["pitch_contact",{"_index":1895,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":161,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1090,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitches",{"_index":202,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["pitches'},{'name",{"_index":468,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":1889,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":1890,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitchescomponent",{"_index":467,"title":{"components/PitchesComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":325,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchesqgl",{"_index":1883,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchexist",{"_index":1075,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchfragment",{"_index":261,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":1067,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchid.id",{"_index":1069,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["pitchservice",{"_index":999,"title":{"injectables/PitchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1054,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lat",{"_index":1057,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["place.geometry.location.lng",{"_index":1059,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["places",{"_index":990,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["plan_date_from",{"_index":535,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["plan_date_to",{"_index":537,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["points",{"_index":247,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2287,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2023,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2020,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2021,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2018,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2016,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2024,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2022,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2017,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2019,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":238,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1326,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1349,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1405,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":143,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":144,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":729,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["providedin",{"_index":272,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2309,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2289,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":205,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":327,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":206,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2026,"title":{},"body":{"components/TableComponent.html":{}}}],["rankingfragment",{"_index":270,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":326,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":248,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{}}}],["rankingposition",{"_index":240,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1238,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["reason",{"_index":249,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reconnect",{"_index":1209,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["reconnectionattempts",{"_index":1210,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["red",{"_index":716,"title":{},"body":{"components/AppComponent.html":{}}}],["redirectto",{"_index":784,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1242,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1401,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1237,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":1797,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["refetchqueries",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["refresh",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["registerlocaledata",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":767,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(error",{"_index":887,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2058,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2042,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1712,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["remove_red_eye",{"_index":920,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1687,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1337,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removeteam",{"_index":511,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["removeteam(tupel",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":172,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":294,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":295,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(teamid",{"_index":1474,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["removeteamfromseasongql",{"_index":293,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteamgql",{"_index":1458,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["rename",{"_index":470,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["renameteam",{"_index":182,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":306,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":1906,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":307,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2051,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":469,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":305,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["req",{"_index":810,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.get('authorization",{"_index":814,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":818,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":2218,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{}}}],["reschedulematchday",{"_index":2328,"title":{},"body":{"todo.html":{}}}],["reset",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":889,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":900,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"interfaces/LoginContext.html":{}}}],["response.errors",{"_index":1195,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["response.errors.some(x",{"_index":1196,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["result",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season",{"_index":2006,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.season.ranking",{"_index":2007,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1599,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1601,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.errors",{"_index":2003,"title":{},"body":{"components/TableComponent.html":{}}}],["result.ts",{"_index":1407,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":555,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["returns",{"_index":363,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":706,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":719,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2292,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":189,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":273,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":434,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["round.number",{"_index":2156,"title":{},"body":{"components/TournamentComponent.html":{}}}],["rounds",{"_index":235,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":45,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":599,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":602,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":799,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2092,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":598,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":579,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":597,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":1958,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":974,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2069,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2075,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1375,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematch",{"_index":158,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":279,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":280,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1730,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1341,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":278,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1321,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":464,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":588,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1323,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1322,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1311,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:116",{"_index":1697,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:131",{"_index":1699,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1691,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1704,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1700,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1702,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1705,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1707,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1690,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1703,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1701,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1695,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1694,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1693,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1692,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1696,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1698,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":587,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1727,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":245,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1657,"title":{},"body":{"components/MatchComponent.html":{}}}],["season",{"_index":200,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":324,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":201,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.match_days",{"_index":1520,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.match_days.map((matchday",{"_index":1521,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season.name",{"_index":1545,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1251,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["season.state",{"_index":1546,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["season_id",{"_index":135,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":1945,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":1940,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":473,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":1941,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":1942,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchoosercomponent",{"_index":472,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":1917,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":1922,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":264,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonlist",{"_index":1448,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["seasonname",{"_index":1463,"title":{},"body":{"components/ManageseasonComponent.html":{},"injectables/SeasonService.html":{}}}],["seasons",{"_index":2335,"title":{},"body":{"todo.html":{}}}],["seasonservice",{"_index":611,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManageseasonComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":142,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.progress",{"_index":1947,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selected_matchday",{"_index":1781,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_matchday_key",{"_index":1780,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_season",{"_index":1932,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/variables.html":{}}}],["selected_season_key",{"_index":1931,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_team",{"_index":1783,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_team_key",{"_index":1782,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament",{"_index":2127,"title":{},"body":{"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament_key",{"_index":641,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedmatchdayid",{"_index":1751,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedtabchanged",{"_index":1452,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedtabchanged(event",{"_index":1476,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["selectedteamid",{"_index":1752,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selector",{"_index":49,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendmatchdays",{"_index":1453,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["sendpasswordmail",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":165,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":286,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":353,"title":{},"body":{"components/AddUserComponent.html":{}}}],["server",{"_index":2268,"title":{},"body":{"dependencies.html":{}}}],["serverurl",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service",{"_index":2039,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":271,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["services/authentication.service",{"_index":380,"title":{},"body":{"components/AddUserComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/ChangepasswordComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/i18.service",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1031,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1030,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":1495,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1258,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1175,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":1203,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setmatchdayfromdate",{"_index":1454,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdayfromdate(index",{"_index":1480,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate",{"_index":1455,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setmatchdaytodate(index",{"_index":1482,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["setplandatefrom",{"_index":512,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandatefrom(event",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":513,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["setplandateto(event",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setsubscriptionclient(value",{"_index":1248,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentround",{"_index":186,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":705,"title":{},"body":{"components/AppComponent.html":{}}}],["shared.module",{"_index":580,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["shared/snackbar/snackbar.component",{"_index":382,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["sharedmodule",{"_index":570,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":2333,"title":{},"body":{"todo.html":{}}}],["showcreatenewpitch",{"_index":991,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrorsnackbar",{"_index":1988,"title":{},"body":{"components/TableComponent.html":{}}}],["showerrorsnackbar(errorcode",{"_index":1992,"title":{},"body":{"components/TableComponent.html":{}}}],["shuffle",{"_index":1688,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1384,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":355,"title":{},"body":{"components/AddUserComponent.html":{},"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["snackbar'},{'name",{"_index":474,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1395,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1394,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":1107,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["snackbarcomponent",{"_index":381,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":241,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":1805,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1368,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1367,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1180,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/.../app.module.ts",{"_index":2306,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.ts",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.local.ts",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.module.ts",{"_index":2305,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2303,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2338,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../i18.service.ts",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../matchplan.component.ts",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../season.service.ts",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.component.ts",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":126,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1016",{"_index":1912,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1029",{"_index":965,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1042",{"_index":966,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1065",{"_index":967,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1091",{"_index":1139,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1108",{"_index":1408,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1122",{"_index":1684,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1139",{"_index":1685,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1153",{"_index":1896,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1167",{"_index":1897,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1184",{"_index":603,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1201",{"_index":604,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1218",{"_index":605,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1235",{"_index":2162,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1249",{"_index":2172,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1266",{"_index":606,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphql.ts:840",{"_index":1983,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:861",{"_index":1913,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:874",{"_index":1409,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:887",{"_index":1879,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:900",{"_index":1878,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:913",{"_index":964,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:926",{"_index":137,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:939",{"_index":1899,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:952",{"_index":963,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:968",{"_index":1982,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:978",{"_index":2111,"title":{},"body":{"injectables/TeamsGQL.html":{}}}],["src/api/graphql.ts:991",{"_index":2171,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1250,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1398,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":1898,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1406,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":722,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":628,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":630,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":629,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":627,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/auth.interceptor.ts",{"_index":802,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/auth.interceptor.ts:12",{"_index":809,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/auth.interceptor.ts:8",{"_index":804,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts",{"_index":487,"title":{},"body":{"components/AddteamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:12",{"_index":494,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:15",{"_index":502,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:16",{"_index":501,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:21",{"_index":498,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:24",{"_index":496,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/addteam.component.ts:32",{"_index":500,"title":{},"body":{"components/AddteamComponent.html":{}}}],["src/app/components/admin/addteam/rename",{"_index":1900,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin",{"_index":596,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":539,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":543,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":542,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":547,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":552,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":553,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":551,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1165,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1140,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1144,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1147,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1146,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1161,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":1440,"title":{},"body":{"components/ManageseasonComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:120",{"_index":1475,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:143",{"_index":1478,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:153",{"_index":1469,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:168",{"_index":1479,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:202",{"_index":1484,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:23",{"_index":1490,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:233",{"_index":1481,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:240",{"_index":1483,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:25",{"_index":1491,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:26",{"_index":1487,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:27",{"_index":1486,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:29",{"_index":1492,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:30",{"_index":1489,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:31",{"_index":1460,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:34",{"_index":1493,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:35",{"_index":1494,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:36",{"_index":1488,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:72",{"_index":1473,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:75",{"_index":1462,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:83",{"_index":1472,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts:97",{"_index":1465,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1310,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25",{"_index":527,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26",{"_index":526,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27",{"_index":522,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29",{"_index":529,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30",{"_index":528,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31",{"_index":515,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35",{"_index":525,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36",{"_index":530,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42",{"_index":524,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51",{"_index":518,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55",{"_index":516,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66",{"_index":519,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70",{"_index":517,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95",{"_index":520,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99",{"_index":521,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1556,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:16",{"_index":1587,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:17",{"_index":1582,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:18",{"_index":1583,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:19",{"_index":1586,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:20",{"_index":1580,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:21",{"_index":1584,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1572,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1581,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1578,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:35",{"_index":1577,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1574,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:53",{"_index":1579,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:72",{"_index":1576,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:83",{"_index":1575,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/add",{"_index":340,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1615,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1620,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1619,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2173,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":903,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:13",{"_index":911,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:14",{"_index":912,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":907,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:19",{"_index":910,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:21",{"_index":909,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:31",{"_index":908,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":962,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":948,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":953,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":952,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":959,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":1888,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":1893,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":1892,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":1891,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2104,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2109,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2108,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2107,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:17",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:18",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:23",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:33",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":1815,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1746,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:20",{"_index":1769,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:22",{"_index":1767,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:24",{"_index":1773,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:26",{"_index":1775,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:28",{"_index":1777,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:30",{"_index":1757,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:33",{"_index":1771,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:34",{"_index":1768,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:35",{"_index":1770,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:40",{"_index":1765,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:46",{"_index":1759,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:52",{"_index":1761,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:60",{"_index":1762,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:78",{"_index":1764,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":1813,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":1877,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":1847,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":1856,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:17",{"_index":1852,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:20",{"_index":1855,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:31",{"_index":1853,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:47",{"_index":1854,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":1874,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/contact",{"_index":932,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":923,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:10",{"_index":927,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:13",{"_index":929,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":930,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:16",{"_index":928,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":979,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:17",{"_index":1018,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1016,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1026,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:21",{"_index":1019,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1020,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:23",{"_index":1023,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:24",{"_index":1021,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:26",{"_index":1025,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:27",{"_index":1004,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1017,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:43",{"_index":1010,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:55",{"_index":1008,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1012,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:63",{"_index":1013,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:72",{"_index":1014,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:82",{"_index":1006,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:97",{"_index":1005,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1096,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1103,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1100,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1104,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1105,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1106,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1101,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1102,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1119,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1125,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1131,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1130,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1128,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1127,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1129,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1621,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:107",{"_index":1638,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:21",{"_index":1634,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1635,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1633,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1632,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:28",{"_index":1645,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:29",{"_index":1644,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1646,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1648,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1647,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1649,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:36",{"_index":1639,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:39",{"_index":1642,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:59",{"_index":1641,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:78",{"_index":1643,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:97",{"_index":1640,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":1939,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":1948,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":1952,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":1953,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":1946,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:20",{"_index":1954,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:24",{"_index":1951,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:37",{"_index":1950,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component",{"_index":1999,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1392,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:12",{"_index":1978,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:15",{"_index":1980,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:19",{"_index":1979,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2036,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":1984,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":1996,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:19",{"_index":1989,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":1997,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":1995,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:24",{"_index":1998,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:30",{"_index":1991,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:36",{"_index":1990,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:56",{"_index":1993,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2034,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2103,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2064,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:17",{"_index":2077,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:18",{"_index":2070,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2079,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2078,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:24",{"_index":2080,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2074,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:32",{"_index":2076,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:65",{"_index":2072,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2088,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2094,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2093,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2089,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2101,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2170,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2112,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tournament/tournament.component.ts:17",{"_index":2126,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":2125,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:20",{"_index":2119,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:23",{"_index":2124,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:28",{"_index":2122,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:37",{"_index":2121,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:45",{"_index":2123,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:71",{"_index":2120,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2168,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1168,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/material.module.ts",{"_index":1816,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":820,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:119",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:21",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:37",{"_index":849,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:78",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":636,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/i18.service",{"_index":1148,"title":{},"body":{"components/EventsComponent.html":{},"components/ManageseasonComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1281,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/i18.service.ts:14",{"_index":1294,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:16",{"_index":1296,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:18",{"_index":1298,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1288,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:25",{"_index":1291,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:37",{"_index":1290,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":726,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":968,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":970,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1319,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1717,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:117",{"_index":1729,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:20",{"_index":1724,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:24",{"_index":1726,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:28",{"_index":1733,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:73",{"_index":1731,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:9",{"_index":1722,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/pitch.service.ts",{"_index":1880,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:11",{"_index":1887,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:13",{"_index":1882,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service",{"_index":638,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/services/season.service.ts",{"_index":1914,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/season.service.ts:14",{"_index":1928,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:16",{"_index":1919,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:31",{"_index":1921,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:56",{"_index":1924,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1496,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2037,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2055,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2045,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:34",{"_index":2047,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:62",{"_index":2052,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/shared.module",{"_index":1162,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/shared.module.ts",{"_index":1966,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":635,"title":{},"body":{"components/AppComponent.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":251,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":194,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["start_season_date",{"_index":1550,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["startdate",{"_index":1470,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["started",{"_index":2311,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1603,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1327,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":175,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":299,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":300,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["startseasongql",{"_index":298,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1564,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1028,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":234,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1226,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["store",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["store.readfragment",{"_index":1740,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1741,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["storedlang",{"_index":1283,"title":{},"body":{"injectables/I18Service.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":337,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":345,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":2290,"title":{},"body":{"dependencies.html":{}}}],["submit",{"_index":1850,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":157,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1732,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":152,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":274,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["subscription",{"_index":1219,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":637,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["subscription.service.ts",{"_index":1232,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:20",{"_index":1245,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1244,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:23",{"_index":1247,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:26",{"_index":1249,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:60",{"_index":1241,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:72",{"_index":1243,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1183,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1259,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1184,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":404,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["super",{"_index":972,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2316,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2317,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1517,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["switchmapto",{"_index":1029,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1041,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.guestteam.id",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":896,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["table",{"_index":787,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":476,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2035,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":1986,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":1985,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2012,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2010,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2015,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2011,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2014,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2013,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":475,"title":{"components/TableComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2029,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2033,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":256,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":652,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":164,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":471,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":504,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{}}}],["team.component.css",{"_index":1902,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":1903,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":1901,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:11",{"_index":1904,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:14",{"_index":1909,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":1910,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:19",{"_index":1905,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":1907,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":47,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.name",{"_index":417,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ContactComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":503,"title":{},"body":{"components/AddteamComponent.html":{},"modules/AdminModule.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2063,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2110,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":133,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":190,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":149,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":797,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":478,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2102,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2065,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2066,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":477,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":781,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2096,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2100,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":260,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":38,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":148,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":497,"title":{},"body":{"components/AddteamComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":176,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/ContactComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":480,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams($id",{"_index":302,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["teams.component.css",{"_index":2105,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2106,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams/teams.component",{"_index":961,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teams_in_season",{"_index":1548,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["teamscanplay",{"_index":1314,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":479,"title":{"components/TeamsComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamservice",{"_index":23,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/ManageseasonComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["teamsgql",{"_index":301,"title":{"injectables/TeamsGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teamsql",{"_index":2046,"title":{},"body":{"injectables/TeamService.html":{}}}],["template",{"_index":254,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["templateurl",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1371,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["text",{"_index":1680,"title":{},"body":{"components/MatchComponent.html":{}}}],["text/javascript",{"_index":657,"title":{},"body":{"components/AppComponent.html":{}}}],["this._currentseason",{"_index":1934,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1257,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.accesstoken",{"_index":890,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":1857,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addteamgql.mutate",{"_index":1513,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.allseasonslistgql.document",{"_index":1936,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":1498,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2061,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2053,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2128,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.alltournamentsqgl.watch().valuechanges.pipe",{"_index":1592,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.allusers",{"_index":2180,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2181,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apiclient.createpitch(body).subscribe",{"_index":1066,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":644,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":1861,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":915,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":556,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2095,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":645,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":918,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":408,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.authservice.user",{"_index":2081,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.betweenmatchdaysoffset",{"_index":1528,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.cancelbtnlabel",{"_index":978,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cdref.detectchanges",{"_index":1050,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.changelang(this.storedlang",{"_index":1307,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":897,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.connected",{"_index":1262,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.createform",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createroundgql.mutate",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createroundnr",{"_index":1602,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createseasongql.mutate",{"_index":1935,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createtournament.mutate",{"_index":1594,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":393,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.currentseason.subscribe",{"_index":1933,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.round",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.tournamentid",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":648,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1665,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1661,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1655,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1663,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":506,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.dialogref.close",{"_index":919,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":385,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.email.value.tolowercase",{"_index":394,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":2086,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.error",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{},"components/TableComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1270,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1036,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstate",{"_index":1959,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":388,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.firstname.value",{"_index":396,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.formbuilder.group",{"_index":1034,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.fromtooffset",{"_index":1532,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.getranking",{"_index":2000,"title":{},"body":{"components/TableComponent.html":{}}}],["this.getround(m.match_day_id).number",{"_index":2134,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.getwinner",{"_index":2137,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.graphsubscription.connect",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guest_score",{"_index":1110,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.guestteam",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.handlegetmatches",{"_index":1785,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":1784,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home_score",{"_index":1108,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.hometeam",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.i18service.changelang(lang",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isteamadmin",{"_index":894,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1735,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1734,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":389,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.lastname.value",{"_index":397,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.latestevents",{"_index":1149,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1150,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1590,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadgooglemapsscript",{"_index":646,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1609,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.locatematchqgl.mutate",{"_index":1744,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls['username'].seterrors",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristine",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason",{"_index":1512,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.manageseason.match_days.filter",{"_index":1343,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1376,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1329,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1335,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1514,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.managetournamentid",{"_index":1597,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1600,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1595,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1656,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1111,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.guest_team",{"_index":1667,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1109,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.match.home_team",{"_index":1666,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1048,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matches",{"_index":2135,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches.reverse",{"_index":2136,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0",{"_index":2139,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matches[0].foreach",{"_index":2140,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchesgql",{"_index":1793,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchesql.mutate",{"_index":1534,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchkickoff",{"_index":1132,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":1515,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.matchplangql.fetch",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1278,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":1794,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1276,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1113,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1112,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1382,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1049,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1383,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1133,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1114,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1660,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchdays",{"_index":1511,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays.push(dp",{"_index":1533,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index",{"_index":1541,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].from",{"_index":1542,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchdays[index].to",{"_index":1544,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.newmatchpitch.setvalue(this.newpitch",{"_index":1070,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1043,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1037,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":913,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch.id",{"_index":1068,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.label",{"_index":1063,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1056,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1058,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1032,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1074,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1076,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1077,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1033,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.newroundplandatefrom",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.oldpassword",{"_index":914,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":916,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":917,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.password",{"_index":390,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.password.value",{"_index":395,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.pitchesqgl.watch().valuechanges.pipe",{"_index":1884,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.pitchadded.next(null",{"_index":1071,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.pitchservice.pitches.find(p",{"_index":1072,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places",{"_index":1051,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1053,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.places.getplace",{"_index":1055,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.possiblekickoffs",{"_index":1338,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1339,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1333,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1336,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.fetch",{"_index":663,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranking.watch",{"_index":2002,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.watch",{"_index":1798,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2001,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.fetch({id",{"_index":1280,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1267,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removeteamgql.mutate",{"_index":1516,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2062,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":902,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1605,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1607,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.filter(t",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":891,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1743,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":1956,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonchanged.emit(event.value",{"_index":1961,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonlist",{"_index":1497,"title":{},"body":{"components/ManageseasonComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":662,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":664,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.next(event.value",{"_index":1960,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":1955,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":1786,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1789,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.setbtnlabel",{"_index":975,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.showerrorsnackbar",{"_index":2005,"title":{},"body":{"components/TableComponent.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1348,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":399,"title":{},"body":{"components/AddUserComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["this.startmatchday).foreach",{"_index":1345,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":1538,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.storedlang",{"_index":1305,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.submitresultgql.mutate",{"_index":1736,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1260,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1263,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1264,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnected",{"_index":1265,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnecting",{"_index":1266,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":505,"title":{},"body":{"components/AddteamComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":1911,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.teamsql.mutate",{"_index":2060,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.token",{"_index":1860,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2130,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2129,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentgql.fetch",{"_index":669,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tournamentid",{"_index":668,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournamentqgl.document",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1596,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1591,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1302,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1306,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('common_error",{"_index":2008,"title":{},"body":{"components/TableComponent.html":{}}}],["this.translateservice.instant('create_match_days_error",{"_index":1537,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_match_days_success",{"_index":1536,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('create_user_error",{"_index":406,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('create_user_success",{"_index":401,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.translateservice.instant('edit_result_error",{"_index":1115,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.translateservice.instant('password_changed_error",{"_index":1864,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('password_changed_success",{"_index":1862,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.translateservice.instant('pitch_save_success",{"_index":1662,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('result_save_success",{"_index":1659,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_error",{"_index":410,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('send_new_password_mail_success",{"_index":409,"title":{},"body":{"components/AddUserComponent.html":{},"components/LoginComponent.html":{}}}],["this.translateservice.instant('start_season_error",{"_index":1540,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('start_season_success",{"_index":1539,"title":{},"body":{"components/ManageseasonComponent.html":{}}}],["this.translateservice.instant('team_contact_save_error",{"_index":2085,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('team_contact_save_success",{"_index":2084,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.translateservice.instant('time_save_success",{"_index":1664,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1303,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1304,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1308,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":976,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":973,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updateteamcontact.mutate",{"_index":2082,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.user",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.role",{"_index":892,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":895,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.document",{"_index":2083,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":888,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":398,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.userteamlist",{"_index":392,"title":{},"body":{"components/AddUserComponent.html":{}}}],["this.winnerlastround",{"_index":2138,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.filter(t",{"_index":2147,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.guest_team",{"_index":2151,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_score",{"_index":2141,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.push(match.home_team",{"_index":2149,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.winnerlastround.sort((a",{"_index":2144,"title":{},"body":{"components/TournamentComponent.html":{}}}],["todo",{"_index":2326,"title":{"todo.html":{}},"body":{}}],["token",{"_index":1199,"title":{},"body":{"modules/GraphQLModule.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tournament",{"_index":213,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":482,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":330,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":331,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2169,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2114,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2113,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":214,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1610,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2116,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":481,"title":{"components/TournamentComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":267,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":40,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":10,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentmodule",{"_index":2163,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2167,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1565,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["translate",{"_index":419,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["translate/core",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":1804,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":727,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":728,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{}}}],["translationservice",{"_index":971,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["transport",{"_index":1185,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":339,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["tslint:disable",{"_index":1829,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AddtournamentroundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["tupel.guestteam.name",{"_index":534,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["tupel.hometeam.name",{"_index":533,"title":{},"body":{"components/AddtournamentroundComponent.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2336,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1039,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{}}}],["types",{"_index":1404,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2266,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2314,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1009,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1737,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["updated_at",{"_index":237,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updateteamcontact",{"_index":178,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":304,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1191,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":730,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["useexisting",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{}}}],["usefactory",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["user",{"_index":215,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"injectables/TeamsGQL.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["user'},{'name",{"_index":430,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["user.authenticateduser",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["user.component",{"_index":590,"title":{},"body":{"modules/AdminModule.html":{}}}],["user.component.css",{"_index":346,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.html",{"_index":347,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts",{"_index":342,"title":{},"body":{"components/AddUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:18",{"_index":377,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:20",{"_index":375,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:22",{"_index":376,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:24",{"_index":371,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:25",{"_index":372,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:26",{"_index":373,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:27",{"_index":359,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:30",{"_index":374,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:45",{"_index":364,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:47",{"_index":368,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:51",{"_index":362,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.component.ts:81",{"_index":369,"title":{},"body":{"components/AddUserComponent.html":{}}}],["user.email",{"_index":2186,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2187,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":217,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["user.last_name",{"_index":2188,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2189,"title":{},"body":{"components/UserListComponent.html":{}}}],["user/add",{"_index":341,"title":{},"body":{"components/AddUserComponent.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["user_role",{"_index":2185,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":268,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":332,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1256,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":483,"title":{"components/UserListComponent.html":{}},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":146,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":415,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":416,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["userteamlist",{"_index":350,"title":{},"body":{"components/AddUserComponent.html":{}}}],["usevalue",{"_index":777,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":1177,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["uuid",{"_index":383,"title":{},"body":{"components/AddUserComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":384,"title":{},"body":{"components/AddUserComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1589,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["val",{"_index":1378,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":378,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.email",{"_index":387,"title":{},"body":{"components/AddUserComponent.html":{},"components/TeamadminComponent.html":{}}}],["validators.minlength(6",{"_index":391,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{}}}],["validators.required",{"_index":386,"title":{},"body":{"components/AddUserComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{}}}],["value",{"_index":129,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"components/AddUserComponent.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1040,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["valuechanges.pipe",{"_index":1598,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":425,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":110,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AddtournamentroundComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageseasonComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2155,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":1027,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["viewchild('adressautocomplete",{"_index":1015,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["void",{"_index":365,"title":{},"body":{"components/AddUserComponent.html":{},"components/AddteamComponent.html":{},"components/AddtournamentroundComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManageseasonComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["websocketlink",{"_index":1178,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websocketlink(ownservice.subscriptionclient",{"_index":1213,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["websockets",{"_index":2295,"title":{},"body":{"dependencies.html":{}}}],["webstoragemodule",{"_index":766,"title":{},"body":{"modules/AppModule.html":{}}}],["werden",{"_index":1372,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":689,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1227,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["winner.name",{"_index":2154,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_last_round",{"_index":2153,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":242,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamsGQL.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1179,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["ws://${window.location.hostname}:4000",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://192.168.178.23:3001/ws",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ws://localhost:4000",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wsclient",{"_index":1212,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["wss://manager.wildeligabremen.de/ws",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":1046,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.filter(y",{"_index":1044,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_team.id",{"_index":1791,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_team.id",{"_index":1792,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1788,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1340,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1377,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.message.includes('unauthenticated",{"_index":1197,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["x.number",{"_index":1344,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1350,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1045,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1351,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/TableComponent.html":{}}}],["zip",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        round\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:926\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserComponent.html":{"url":"components/AddUserComponent.html","title":"component - AddUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/add-user/add-user.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user\n            \n\n            \n                styleUrls\n                ./add-user.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, snackBar: MatSnackBar, authService: AuthenticationService, createUserGQL: CreateUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/add-user/add-user.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRole, CreateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from '../../../../services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar, MatSelectChange } from '@angular/material';\nimport { AuthenticationService } from '../../../../services/authentication.service';\nimport { SnackbarComponent } from '../../../shared/snackbar/snackbar.component';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    this.password = new FormControl('', [\n      Validators.required,\n      Validators.minLength(6)\n    ]);\n  }\n\n  ngOnInit() {\n  }\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('CREATE_USER_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.ADD_USER' | translate}}\n      \n    \n    \n      \n        {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./add-user.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                                  {{ \\'BUTTON.ADD_USER\\' | translate}}                            {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddteamComponent.html":{"url":"components/AddteamComponent.html","title":"component - AddteamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddteamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/addteam.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addteam\n            \n\n            \n                styleUrls\n                ./addteam.component.css\n            \n\n\n\n            \n                templateUrl\n                ./addteam.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/addteam.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/addteam.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/addteam.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\n\n@Component({\n  selector: 'app-addteam',\n  templateUrl: './addteam.component.html',\n  styleUrls: ['./addteam.component.css']\n})\nexport class AddteamComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team, minWidth: '50vw' });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              edit\n            \n          \n          {{team.name}}\n        \n      \n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          {{ 'BUTTON.CREATE_TEAM' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./addteam.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        edit                                {{team.name}}                                                                                                          {{ \\'BUTTON.CREATE_TEAM\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddteamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddtournamentroundComponent.html":{"url":"components/AddtournamentroundComponent.html","title":"component - AddtournamentroundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddtournamentroundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addmatch\n            \n\n\n\n\n            \n                templateUrl\n                addtournamentround.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guestTeam\n                            \n                            \n                                homeTeam\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(tupel: TeamIdPair)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tupel\n                                    \n                                                TeamIdPair\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guestTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homeTeam\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n    \n        \n   {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n  \n    \n      \n        {{ tupel.homeTeam.name }}\n      \n      \n        -\n      \n      \n        {{ tupel.guestTeam.name }}\n      \n      \n        \n          -\n        \n      \n    \n    \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        -\n      \n      \n        \n          \n            \n              {{team.name}}\n            \n          \n        \n      \n      \n        +\n      \n    \n    \n      \n        {{ 'PLAN_DATE_FROM'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n      \n        {{ 'PLAN_DATE_TO'| translate}}:\n        \n        {{ 'BUTTON.SET_TIME' | translate}}\n        \n      \n    \n  \n  \n    \n      {{ 'BUTTON.START_ROUND' | translate }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}                    {{ tupel.homeTeam.name }}                    -                    {{ tupel.guestTeam.name }}                              -                                                                        {{team.name}}                                                  -                                                        {{team.name}}                                                  +                            {{ \\'PLAN_DATE_FROM\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                            {{ \\'PLAN_DATE_TO\\'| translate}}:                {{ \\'BUTTON.SET_TIME\\' | translate}}                                {{ \\'BUTTON.START_ROUND\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddtournamentroundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddUserComponent\n                        \n                        \n                            AddteamComponent\n                        \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AddtournamentroundComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddteamComponent } from './addteam/addteam.component';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { AddtournamentroundComponent } from './managetournament/addtournamentround/addtournamentround.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { AddUserComponent } from './manageusers/add-user/add-user.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './addteam/rename-team/rename-team.component';\nimport { EventsModule } from './events';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    AddteamComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    AddtournamentroundComponent,\n    MatchSchedulingComponent,\n    AddUserComponent,\n    UserListComponent,\n    RenameTeamComponent\n  ],\n  entryComponents: [\n    AddtournamentroundComponent,\n    RenameTeamComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1184\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1201\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1218\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1266\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                graphSubscription\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, ranking: RankingGQL, matchPlanGQL: MatchPlanGQL, tournamentGQL: TournamentGQL, seasonService: SeasonService, graphSubscription: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentGQL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphSubscription\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            graphSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphqlSubscriptionService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { RankingGQL, MatchPlanGQL, TournamentGQL } from 'src/api/graphql';\nimport { SeasonService } from 'src/app/services/season.service';\nimport { LocalStorage } from 'ngx-store';\nimport { SELECTED_TOURNAMENT_KEY } from './components/tournament/tournament.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private ranking: RankingGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private tournamentGQL: TournamentGQL,\n    public seasonService: SeasonService,\n    public graphSubscription: GraphqlSubscriptionService) {\n  }\n\n  async ngOnInit() {\n    this.graphSubscription.connect();\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n\n  async refresh() {\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.ranking.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.matchPlanGQL.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.tournamentId) {\n      await this.tournamentGQL.fetch({ id: this.tournamentId }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n      \n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n      \n        \n          refresh\n        \n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                                {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                              refresh                                  Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebStorageModule } from 'ngx-store';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    WebStorageModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: MAT_SNACK_BAR_DEFAULT_OPTIONS,\n      useValue: { duration: 2500 }\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.interceptor.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { AuthenticationService } from './services/authentication.service';\nimport { Observable } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthenticationService) {\n    }\n    public intercept(req: HttpRequest,\n        next: HttpHandler): Observable> {\n\n        if (req.headers.get('Authorization')) {\n            return next.handle(req);\n        }\n\n        if (this.authService.accessToken) {\n            return next.handle(req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + this.authService.accessToken)\n            }));\n        }\n\n        return next.handle(req);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(ACCESS_TOKEN_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            console.log(result);\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.accessToken = null;\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.dialogRef.close();\n      } catch (error) {\n          console.error(error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                teams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teams: Team.Fragment[])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teams\n                                                  \n                                                        \n                                                                    Team.Fragment[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public teams: Team.Fragment[]) { }\n\n  ngOnInit() {\n\n  }\n\n}\n\n    \n\n    \n        \n   {{ 'CONTACT' | translate }}\n  \n    \n      \n        \n          {{ team.name }}\n        \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CLOSE' | translate }}\n  \n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ \\'CONTACT\\' | translate }}                              {{ team.name }}                                                    {{ \\'BUTTON.CLOSE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:952\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:913\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1029\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1042\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1065\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        from\n                                \n                                \n                                            Optional\n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                createNewPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                onShowCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, cdRef: ChangeDetectorRef, formBuilder: FormBuilder, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onShowCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nonShowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showCreateNewPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n  showCreateNewPitch: boolean;\n\n  newPitch: Pitch.Fragment;\n  newPitchFormControl: FormControl;\n  newPitchPlaceFormGroup: FormGroup;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private cdRef: ChangeDetectorRef,\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  onShowCreateNewPitch() {\n    this.cdRef.detectChanges();\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n\n  createNewPitch() {\n    // if (this.newPitch.location_latitude && this.newPitch.location_longitude) {\n    //   const body: CreatePitchBody = new CreatePitchBody();\n    //   body.label = this.newPitch.label;\n    //   body.location_latitude = this.newPitch.location_latitude;\n    //   body.location_longitude = this.newPitch.location_longitude;\n    //   this.apiClient.createPitch(body).subscribe(\n    //     async (pitchId) => {\n    //       this.newPitch.id = pitchId.id;\n    //       this.newMatchPitch.setValue(this.newPitch);\n    //       this.pitchService.pitchAdded.next(null);\n    //     }\n    //   );\n    // }\n  }\n  checkNewPitchName() {\n    // const pitch = this.pitchService.pitches.find(p => p.label === this.newPitch.label);\n    // if (pitch) {\n    //   this.newPitchFormControl.setErrors({ pitchexist: true });\n    // } else {\n    //   this.newPitchFormControl.setErrors(null);\n    //   this.newPitchFormControl.updateValueAndValidity();\n    // }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n     -->\n    \n      \n        \n          {{ 'NEW_PITCH_LABEL' | translate }}\n          \n            \n            ERRORS.PITCH_EXIST\n            PITCH_REQUIRED\n          \n          \n            \n          \n          \n            {{'BUTTON.NEXT' | translate}}\n          \n        \n        \n          \n            {{ 'NEW_PITCH_ADRESS' | translate}}\n            \n              \n            \n            \n              {{'BUTTON.BACK' | translate}}\n              {{'BUTTON.CREATE_PITCH' | translate}}\n            \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                             -->                            {{ \\'NEW_PITCH_LABEL\\' | translate }}                                  ERRORS.PITCH_EXIST            PITCH_REQUIRED                                                                {{\\'BUTTON.NEXT\\' | translate}}                                                {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                                                {{\\'BUTTON.BACK\\' | translate}}              {{\\'BUTTON.CREATE_PITCH\\' | translate}}                                                {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, snackBar: MatSnackBar, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score)\n        .then( () => {\n          this.dialogRef.close(true);\n        })\n        .catch( (error) => {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('EDIT_RESULT_ERROR')\n            },\n            panelClass: ['alert', 'alert-danger'],\n          });\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1091\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule, APOLLO_OPTIONS } from 'apollo-angular';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\n\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split, ApolloLink } from 'apollo-link';\nimport { environment } from '../environments/environment';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\n\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { persistCache } from 'apollo-cache-persist';\n\nconst uri = environment.graphqlUrl; //  {\n    return forward(operation).map(response => {\n      const { response: { headers } } = operation.getContext();\n      if (response.errors && response.errors.some(x => x.message.includes('Unauthenticated'))) {\n        authService.logout();\n      }\n      if (headers) {\n        const token = headers.get('x-token');\n        if (token) {\n          authService.accessToken = token;\n        }\n      }\n      return response;\n    });\n  });\n\n  const auth = setContext((_, { headers }) => {\n    if (!headers) {\n      headers = new HttpHeaders();\n    }\n    const token = authService.accessToken;\n    if (token) {\n      return {\n        headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n      };\n    } else {\n      return {};\n    }\n  });\n\n  ownService.subscriptionClient = new SubscriptionClient(\n    environment.graphqlWsUrl,\n    {\n      lazy: true,\n      reconnect: true,\n      reconnectionAttempts: 2\n    });\n  const wsClient = new WebSocketLink(ownService.subscriptionClient);\n\n  const link = split(\n    // split based on operation type\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsClient,\n    afterwareLink.concat(auth).concat(http),\n  );\n\n  const cache = new InMemoryCache(\n    {\n      addTypename: true,\n      cacheRedirects: {\n        Query: {\n          allSeasons: (t, args, { getCacheKey }) => {\n            return getCacheKey({ __typename: 'Season' });\n          }\n        },\n      }\n    }\n  );\n  if (environment.persistCache) {\n    persistCache({\n      cache,\n      storage: window.localStorage,\n      key: 'graphql-cache'\n    });\n  }\n  return {\n    link: link,\n    cache: cache,\n    connectToDevTools: !environment.production\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    GraphqlSubscriptionService,\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [\n        HttpLink,\n        AuthenticationService,\n        GraphqlSubscriptionService\n      ],\n    },\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                            \n                                    Public\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:23\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: GraphqlSubscriptionService\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                            \n                                storedLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storedLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(LANG_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\nimport { LocalStorage } from 'ngx-store';\n\nconst LANG_KEY = 'LANG';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  @LocalStorage(LANG_KEY) storedLang: string;\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    if (!this.storedLang) {\n      this.storedLang = this.translateService.getBrowserLang();\n    }\n    if (!this.storedLang) {\n      this.storedLang = 'de';\n    }\n    this.changeLang(this.storedLang);\n  }\n\n  changeLang(lang: string) {\n    this.translateService.use(lang);\n    this.storedLang = lang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1108\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:874\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { PasswordResetGQL } from '../../../api/graphql';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isLoading: boolean;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    this.isLoading = true;\n    if (await this.authenticationService.loginAsync(this.loginForm.value)) {\n      this.loginForm.markAsPristine();\n      this.isLoading = false;\n      this.dialogRef.close();\n    } else {\n      this.isLoading = false;\n      this.error = true;\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      } catch (error) {\n        console.error(error);\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    } else {\n      this.loginForm.controls['username'].setErrors({ required: true });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          ERRORS.USERNAME_PASSWORD_WRONG\n        \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.LOGIN' | translate}}\n        \n      \n    \n    \n      FORGOT_PASSWORD\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              ERRORS.USERNAME_PASSWORD_WRONG                                                USERNAME_REQUIRED                                                          PASSWORD_REQUIRED                                remove_red_eye                                                        {{ \\'BUTTON.LOGIN\\' | translate}}                            FORGOT_PASSWORD      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            console.log(result);\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.accessToken = null;\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers: oldPassword ?\n                new HttpHeaders().set('Authorization', 'Basic ' + Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)) : null\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject();\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageseasonComponent.html":{"url":"components/ManageseasonComponent.html","title":"component - ManageseasonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageseasonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manageseason.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageseason\n            \n\n            \n                styleUrls\n                ./manageseason.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageseason.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                betweenMatchDaysOffset\n                            \n                            \n                                fromToOffset\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageSeason\n                            \n                            \n                                manageSeasonId\n                            \n                            \n                                matchesInSeason\n                            \n                            \n                                newMatchDays\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewSeason\n                            \n                            \n                                    Async\n                                addTeamToSeason\n                            \n                            \n                                createMatchDays\n                            \n                            \n                                manageSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                removeTeamFromSeason\n                            \n                            \n                                selectedTabChanged\n                            \n                            \n                                sendMatchDays\n                            \n                            \n                                setMatchDayFromDate\n                            \n                            \n                                setMatchDayToDate\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, teamService: TeamService, i18Service: I18Service, snackBar: MatSnackBar, translateService: TranslateService, matchesQL: CreateMatchesForSeasonGQL, matchPlanGQL: MatchPlanGQL, removeTeamGQL: RemoveTeamFromSeasonGQL, addTeamGQL: AddTeamToSeasonGQL, startSeasonGQL: StartSeasonGQL, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchesQL\n                                                  \n                                                        \n                                                                        CreateMatchesForSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeTeamGQL\n                                                  \n                                                        \n                                                                        RemoveTeamFromSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addTeamGQL\n                                                  \n                                                        \n                                                                        AddTeamToSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTeamToSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTeamToSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMatchDays(startDate: any, length: number, oldMatchDays: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldMatchDays\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            manageSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \nmanageSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeTeamFromSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeTeamFromSeason(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectedTabChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                MatTabChangeEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    season\n                                    \n                                            MatchPlan.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nsendMatchDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayFromDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayFromDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMatchDayToDate\n                        \n                        \n                    \n                \n            \n            \n                \nsetMatchDayToDate(index: number, date: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            betweenMatchDaysOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 7\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromToOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageSeasonId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchesInSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePeriod[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manageseason.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange, MatTabChangeEvent, MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../../shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TeamService } from 'src/app/services/team.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  AllSeasonsList, Match,\n  MatchPlan, MatchPlanGQL, CreateMatchesForSeasonGQL, RemoveTeamFromSeasonGQL,\n  AddTeamToSeasonGQL, DatePeriod, StartSeasonGQL, AllSeasonsListGQL\n} from '../../../../api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n@Component({\n  selector: 'app-manageseason',\n  templateUrl: './manageseason.component.html',\n  styleUrls: ['./manageseason.component.css']\n})\nexport class ManageseasonComponent implements OnInit {\n\n  matchesInSeason: Match.Fragment[];\n\n  newMatchDays: DatePeriod[];\n  fromToOffset = 2;\n  betweenMatchDaysOffset = 7;\n\n  seasonList: Observable;\n  manageSeason: Observable;\n  manageSeasonId: string;\n\n  constructor(\n    public seasonService: SeasonService,\n    public teamService: TeamService,\n    public i18Service: I18Service,\n    private snackBar: MatSnackBar,\n    private translateService: TranslateService,\n    private matchesQL: CreateMatchesForSeasonGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private removeTeamGQL: RemoveTeamFromSeasonGQL,\n    private addTeamGQL: AddTeamToSeasonGQL,\n    private startSeasonGQL: StartSeasonGQL,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) {\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          return data.allSeasons.sort(\n            (a, b) => {\n              const aState = a.state.toLocaleLowerCase();\n              const bState = b.state.toLocaleLowerCase();\n              if (aState > bState) {\n                return 1;\n              }\n              if (aState  bName) {\n                return 1;\n              }\n              if (aName  {\n        if (data.season.teams) {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n        }\n        return data.season;\n      })\n    );\n    delete this.newMatchDays;\n  }\n\n  async addTeamToSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.addTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async removeTeamFromSeason(teamId: string) {\n    if (this.manageSeason) {\n      try {\n        await this.removeTeamGQL.mutate(\n          {\n            season_id: this.manageSeasonId,\n            team_id: teamId\n          },\n          {\n            refetchQueries: [\n              {\n                query: this.matchPlanGQL.document,\n                variables: { id: this.manageSeasonId }\n              }\n            ]\n          }\n        ).toPromise();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  selectedTabChanged(event: MatTabChangeEvent, season: MatchPlan.Season) {\n    switch (event.index) {\n      case 1:\n        if (season.match_days) {\n          this.newMatchDays = season.match_days.map((matchDay) => ({ from: matchDay.start_date, to: matchDay.end_date }));\n        }\n        break;\n    }\n  }\n\n  createMatchDays(startDate: any, length: number, oldMatchDays: any) {\n    this.newMatchDays = new Array();\n    if (length % 2 !== 0) {\n      length += 1;\n    }\n    for (let i = 0; i {};\n      dp.from = new Date(startDate.value);\n      dp.from.setDate(dp.from.getDate() + (i * this.betweenMatchDaysOffset));\n      dp.to = new Date(dp.from);\n      dp.to.setDate(dp.to.getDate() + this.fromToOffset);\n      this.newMatchDays.push(dp);\n    }\n  }\n\n  sendMatchDays() {\n    this.matchesQL.mutate(\n      {\n        season_id: this.manageSeasonId,\n        dates: this.newMatchDays\n      },\n      {\n        refetchQueries: [\n          {\n            query: this.matchPlanGQL.document,\n            variables: { id: this.manageSeasonId }\n          }\n        ]\n      }\n    ).subscribe(\n      (d) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success']\n        });\n      },\n      (error) => {\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('CREATE_MATCH_DAYS_ERROR')\n          },\n          panelClass: ['alert', 'alert-danger']\n        });\n      }\n    );\n  }\n\n  async startSeason() {\n    try {\n      await this.startSeasonGQL.mutate(\n        {\n          id: this.manageSeasonId\n        },\n        {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.manageSeasonId }\n            }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('START_SEASON_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  setMatchDayFromDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].from = date.value;\n  }\n\n  setMatchDayToDate(index: number, date: any) {\n    if (!this.newMatchDays[index]) {\n      this.newMatchDays[index] = {};\n    }\n    this.newMatchDays[index].to = date.value;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ season.name }} | {{ season.state }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_SEASON' | translate\n        }}\n      \n    \n  \n  \n    \n      \n        \n          \n            TEAMS_IN_SEASON\n            \n              \n                {{team.name}}\n                \n                  ->\n                \n              \n            \n          \n          \n            ALL_TEAMS\n            \n              \n                \n                  \n                    {{team.name}}\n                    \n              \n            \n          \n        \n      \n      \n        \n          \n            {{ 'START_SEASON_DATE' | translate}}:\n            \n            {{ 'BUTTON.SET_DAY' | translate }}\n            \n          \n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n        \n          \n            {{ i + 1 }}. Spieltag\n          \n          \n            {{ matchDay.from | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n          \n            {{ matchDay.to | date:'short':'':i18Service.currentLang }}\n          \n          \n            {{ 'BUTTON.SET_TIME' | translate }}\n            \n            \n          \n        \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n      \n        \n          \n            \n              \n                {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date\n                  | date}})\n              \n            \n            \n              \n                {{ match.home_team.name }} - {{ match.guest_team.name }}\n              \n            \n          \n          \n            \n              {{ 'BUTTON.START_SEASON' | translate}}\n            \n          \n        \n      \n      \n          \n        \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./manageseason.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ season.name }} | {{ season.state }}                                                                  {{ \\'BUTTON.CREATE_SEASON\\' | translate        }}                                                      TEAMS_IN_SEASON                                          {{team.name}}                                  ->                                                                          ALL_TEAMS                                                                                {{team.name}}                                                                                                          {{ \\'START_SEASON_DATE\\' | translate}}:                        {{ \\'BUTTON.SET_DAY\\' | translate }}                                                                                                                                                                                {{ i + 1 }}. Spieltag                                {{ matchDay.from | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                        {{ matchDay.to | date:\\'short\\':\\'\\':i18Service.currentLang }}                                {{ \\'BUTTON.SET_TIME\\' | translate }}                                                            {{ \\'BUTTON.OK\\' | translate }}                                                                                {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{matchDay.start_date | date }}-{{matchDay.end_date                  | date}})                                                                    {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                        {{ \\'BUTTON.START_SEASON\\' | translate}}                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageseasonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRoundNr\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRoundNr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AddtournamentroundComponent } from './addtournamentround/addtournamentround.component';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\n\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  manageTournamentId: string;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  createRoundNr: number;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          {query: this.allTournamentsQGL.document}\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length;\n          } else {\n            this.manageTournamentRoundCount = 0;\n          }\n          this.createRoundNr = this.manageTournamentRoundCount;\n          return result.data.tournament.rounds;\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound() {\n    if (this.createRoundNr  {\n        if (result) {\n          // this.loadMatches(this.tournament.id);\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          \n        \n      \n      \n      \n        {{ 'BUTTON.EDIT_ROUND' | translate }}\n      \n    \n    \n    \n      \n        {{ mt.number }}. {{ 'ROUND' | translate }}\n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      {{ 'MATCH' | translate }} {{ game }}\n    \n   -->\n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                                                      {{ \\'BUTTON.EDIT_ROUND\\' | translate }}                                {{ mt.number }}. {{ \\'ROUND\\' | translate }}                              {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                          {{ \\'MATCH\\' | translate }} {{ game }}       -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n      \n    \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                tournament\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournament\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() match: Match.Fragment;\n  @Input() tournament: boolean;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match,\n      panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('RESULT_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('PITCH_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.snackBar.openFromComponent(SnackbarComponent, {\n            data: {\n              message: this.translateService.instant('TIME_SAVE_SUCCESS')\n            },\n            panelClass: ['alert', 'alert-success']\n          });\n          this.matchUpdated.emit(this.match.id);\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: [\n        this.match.home_team,\n        this.match.guest_team\n      ],\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                 match.guest_score }\">\n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    access_time\n                \n                \n                    \n                        {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                        {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                    \n                    {{ 'NO_TIME_SET' | translate }}\n                \n                \n                    location_off\n                    location_on\n                \n                \n                    {{ 'NO_PTICH_SET' | translate }}\n                \n                \n                    \n                        {{ match.pitch.label }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                         match.guest_score }\">                    {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                            access_time                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                         {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                        {{ \\'NO_TIME_SET\\' | translate }}                                                    location_off                    location_on                                                    {{ \\'NO_PTICH_SET\\' | translate }}                                                                            {{ match.pitch.label }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: GraphqlSubscriptionService\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1122\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1139\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    console.log(this.possibleKickoffs);\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        console.log(match);\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'short':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate'}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'short\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\'}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, rankingQGL: RankingGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL, seasonService: SeasonService, matchPlanGQL: MatchPlanGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, RankingGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, MatchPlanGQL, Match, Pitch } from '../../api/graphql';\nimport { SeasonService } from './season.service';\nimport { Apollo } from 'apollo-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private rankingQGL: RankingGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n    private seasonService: SeasonService,\n    private matchPlanGQL: MatchPlanGQL\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      (resolve, reject) => {\n        this.submitResultGQL.mutate(\n          {\n            match_id: matchId,\n            ...result\n          },\n          {\n            // update: (store, { data }) => {\n            //   const fragment = {\n            //     fragmentName: 'Match',\n            //     fragment: MatchFragment,\n            //     id: `Match:${matchId}`\n            //   };\n            //   const match: any = store.readFragment(\n            //     {\n            //       ...fragment\n            //     }\n            //   );\n            //   store.writeFragment(\n            //     {\n            //       ...fragment,\n            //       data: {\n            //         __typename: 'Match',\n            //         ...match,\n            //         ...result\n            //       }\n            //     }\n            //   );\n            // }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                selectedMatchDayId\n                            \n                            \n                                selectedTeamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, rankingGQL: RankingGQL, matchGQL: MatchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchGQL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePlayed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(HIDE_PLAYED_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMatchDayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_MATCHDAY_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TEAM_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:28\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\n\nconst HIDE_PLAYED_KEY = 'HIDE_PLAYED';\nconst SELECTED_MATCHDAY_KEY = 'SELECTED_MATCHDAY';\nconst SELECTED_TEAM_KEY = 'SELECTED_TEAM';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  @LocalStorage(HIDE_PLAYED_KEY) hidePlayed: boolean;\n\n  @LocalStorage(SELECTED_MATCHDAY_KEY) selectedMatchDayId = '0';\n\n  @LocalStorage(SELECTED_TEAM_KEY) selectedTeamId = '0';\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private rankingGQL: RankingGQL,\n    private matchGQL: MatchGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n\n  matchUpdated(matchId: string) {\n    this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }).refetch();\n    this.rankingGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id }).refetch();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }}\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }}                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.accessToken = params['token'];\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.accessToken = null;\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n        this.snackBar.openFromComponent(SnackbarComponent, {\n          data: {\n            message: this.translateService.instant('PASSWORD_CHANGED_SUCCESS')\n          },\n          panelClass: ['alert', 'alert-success'],\n          duration: 30000\n        });\n    } catch (error) {\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('PASSWORD_CHANGED_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger'],\n        duration: 30000\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:900\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:887\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesQGL: PitchesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesQGL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesQGL.watch().valueChanges.pipe(\n    map(({data}) => data.allPitches)\n  );\n\n  constructor(\n    private pitchesQGL: PitchesGQL\n  ) {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1153\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1167\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:939\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/addteam/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/addteam/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.dialogRef.close();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1016\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n}\ninterface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-addmatch',\n  templateUrl: 'addtournamentround.component.html'\n})\nexport class AddtournamentroundComponent implements OnInit {\n\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n    console.log(this.data);\n  }\n\n  addTeam() {\n    if (this.homeTeam !== this.guestTeam) {\n      this.roundTeams.push({\n        homeTeam: this.homeTeam,\n        guestTeam: this.guestTeam\n      });\n      delete this.homeTeam;\n      delete this.guestTeam;\n    }\n  }\n\n  removeTeam(tupel: TeamIdPair) {\n    this.roundTeams = this.roundTeams.filter(t => t !== tupel);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: this.newRoundPlanDateFrom,\n            to: this.newRoundPlanDateTo\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:861\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentSeason\n                            \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_SEASON_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\nimport { LocalStorage } from 'ngx-store';\n\nconst SELECTED_SEASON_KEY = 'SELECTED_SEASON';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  @LocalStorage(SELECTED_SEASON_KEY) _currentSeason: AllSeasonsList.AllSeasons;\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              { query: this.allSeasonsListGQL.document }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterState\n                    \n                \n                \n                    \n                        Default value : SeasonState.Progress\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterState = SeasonState.Progress;\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => data.allSeasons.filter(s => s.state === this.filterState)\n      )\n    );\n  }\n\n  currentSeasonChanged(event: MatSelectChange) {\n    this.seasonService.currentSeason.next(event.value);\n    this.seasonChanged.emit(event.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ season.name }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }}      '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nContactComponent\n\nContactComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ContactComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContactPersonComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './components/shared/match/match.component';\nimport { MaterialModule } from './material.module';\nimport { ContactComponent } from './components/shared/contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './components/shared/seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './components/shared/editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './components/shared/editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './components/shared/editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { ContactPersonComponent } from './components/shared/contact-person/contact-person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.message }}'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:968\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:840\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showErrorSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, ranking: RankingGQL, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorSnackBar(errorCode?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from 'src/app/components/shared/snackbar/snackbar.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n  error: boolean;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private ranking: RankingGQL,\n    private translateService: TranslateService\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n  }\n\n  getRanking() {\n    this.error = false;\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.errors) {\n            console.error(result.errors);\n            this.showErrorSnackBar();\n            return null;\n          } else {\n            if (!result.data.season) {\n              this.showErrorSnackBar();\n            }\n            return result.data.season.ranking;\n          }\n        }\n      )\n    );\n  }\n\n  showErrorSnackBar(errorCode?: number) {\n    this.error = true;\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        message: this.translateService.instant('COMMON_ERROR'),\n        duration: 60000\n      },\n      panelClass: ['alert', 'alert-danger'],\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              {{ pos.points }}\n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})              {{ pos.points }}                                                  {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                    '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        guest_team_id\n                                \n                                \n                                            Optional\n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:     Maybe\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Maybe\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsQL: TeamsGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsQL\n                                                  \n                                                        \n                                                                        TeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:34\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamsGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private teamsQL: TeamsGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  async addNewTeam(teamName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        this.teamsQL.mutate(\n          {\n            id: uuid(),\n            name: teamName\n          },\n          {\n            refetchQueries: [\n              {query: this.allTeamsGQL.document}\n            ]\n          }\n        ).subscribe(\n          async (result) => {\n            resolve();\n          },\n            (error) => {\n              reject(error);\n            }\n        );\n      }\n    );\n  }\n\n  async renameTeam(teamId: string, newName: string) {\n    try {\n      await this.renameTeamGQL.mutate(\n        {\n          team_id: teamId,\n          new_name: newName\n        },\n        {\n          update: (store, { data }) => {\n            const team: any = store.readFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`\n              }\n            );\n            store.writeFragment(\n              {\n                fragmentName: 'Team',\n                fragment: TeamFragment,\n                id: `Team:${teamId}`,\n                data: {\n                  __typename: 'Team',\n                  ...team,\n                  name: newName\n                }\n              }\n            );\n          },\n        }\n      ).toPromise();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, teamService: TeamService, snackBar: MatSnackBar, translateService: TranslateService, updateTeamContact: UpdateTeamContactGQL, userQGL: UserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { UpdateTeamContactGQL, UserGQL } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n  user = this.authService.user;\n\n  constructor(\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    public snackBar: MatSnackBar,\n    public translateService: TranslateService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    private userQGL: UserGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, firstname: string, lastname: string, email: string, phone: string) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          email: email,\n          first_name: firstname,\n          last_name: lastname,\n          phone: phone\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS')\n        },\n        panelClass: ['alert', 'alert-success']\n      });\n    } catch (error) {\n      console.error(error);\n      this.snackBar.openFromComponent(SnackbarComponent, {\n        data: {\n          message: this.translateService.instant('TEAM_CONTACT_SAVE_ERROR')\n        },\n        panelClass: ['alert', 'alert-danger']\n      });\n    }\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n              \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      {{ 'BUTTON.SAVE' | translate }}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ \\'BUTTON.SAVE\\' | translate }}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../../shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamsGQL.html":{"url":"injectables/TeamsGQL.html","title":"injectable - TeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:978\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                tournament\n                            \n                            \n                                tournamentId\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWinner\n                            \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWinner\n                        \n                        \n                    \n                \n            \n            \n                \ngetWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\n\nexport const SELECTED_TOURNAMENT_KEY = 'SELECTED_TOURNAMENT';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (this.tournamentId) {\n      this.tournamentChanged();\n    }\n  }\n\n  matchUpdated(matchId: string) {\n    this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).refetch();\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.tournamentId\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number ();\n    // for (let round = 0; round  this.getRound(m.match_day_id).number === (round + 1));\n    // }\n    // this.matches = this.matches.reverse();\n    // this.getWinner();\n  }\n\n  getWinner() {\n    // this.winnerLastRound = new Array();\n    // if (this.matches[0]) {\n    //   this.matches[0].forEach(\n    //     (match) => {\n    //       if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n    //         this.winnerLastRound.push(match.home_score > match.guest_score ? match.home_team : match.guest_team);\n    //       }\n    //     });\n    //   this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n    // }\n  }\n\n  // newWinner(match: MatchViewModel) {\n  //   if (match.home_score != null && match.guest_score != null && match.home_score >= 0 && match.guest_score >= 0) {\n  //     if (match.home_score > match.guest_score) {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.guest_team_id);\n  //       this.winnerLastRound.push(match.home_team);\n  //     } else {\n  //       this.winnerLastRound = this.winnerLastRound.filter(t => t.id !== match.home_team_id);\n  //       this.winnerLastRound.push(match.guest_team);\n  //     }\n\n  //     this.winnerLastRound = this.winnerLastRound.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n  //   }\n  // }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ tournament.name }}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'WINNER_LAST_ROUND' | translate }}\n        \n        \n          \n            {{ winner.name }}\n          \n        \n       -->\n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number + 1 }}. {{ 'ROUND' | translate }})\n          {{ round.number + 1 }}. {{ 'ROUND' | translate }}\n        \n        \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'VIERTELFINALE' | translate }}\n          {{ 'HALBFINALE' | translate }}\n          {{ 'FINALE' | translate }}\n          {{ getRound(round[0].match_day_id).number }}. {{ 'ROUND' | translate }}\n        \n        ({{ getRound(round[0].match_day_id).start_date | date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{\n          getRound(round[0].match_day_id).end_date | date:'shortDate':'':i18Service.currentLang }})\n      \n    \n    \n      \n        \n          \n        \n      \n    \n   -->\n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ tournament.name }}                                        {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'WINNER_LAST_ROUND\\' | translate }}                                      {{ winner.name }}                         -->                        {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number + 1 }}. {{ \\'ROUND\\' | translate }})          {{ round.number + 1 }}. {{ \\'ROUND\\' | translate }}                                                                            {{ \\'VIERTELFINALE\\' | translate }}          {{ \\'HALBFINALE\\' | translate }}          {{ \\'FINALE\\' | translate }}          {{ getRound(round[0].match_day_id).number }}. {{ \\'ROUND\\' | translate }}                ({{ getRound(round[0].match_day_id).start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{          getRound(round[0].match_day_id).end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                           -->'\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1235\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../../shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:991\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1249\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from?: Maybe;\n\n  to?: Maybe;\n}\n\nexport interface TeamIdPair {\n  home_team_id?: Maybe;\n\n  guest_team_id?: Maybe;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace Teams {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: Maybe;\n\n    home_team: Maybe;\n\n    home_score: Maybe;\n\n    guest_team: Maybe;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: Maybe;\n\n    number: Maybe;\n\n    start_date: Maybe;\n\n    end_date: Maybe;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: Maybe;\n\n    label: Maybe;\n\n    location_longitude: Maybe;\n\n    location_latitude: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    created_at: Maybe;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n\n    phone: Maybe;\n\n    email: Maybe;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    state: Maybe;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: Maybe;\n\n    name: Maybe;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: Maybe;\n\n    email: Maybe;\n\n    teams: Maybe)[]>;\n\n    role: Maybe;\n\n    first_name: Maybe;\n\n    last_name: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: Maybe;\n\n    occurred_at: Maybe;\n\n    type: Maybe;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: Maybe;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Maybe;\n\n    sort_index: Maybe;\n\n    number: Maybe;\n\n    matches: Maybe;\n\n    wins: Maybe;\n\n    draws: Maybe;\n\n    losses: Maybe;\n\n    scored_goals: Maybe;\n\n    conceded_goals: Maybe;\n\n    points: Maybe;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = {\n    __typename?: \"RankingPenalty\";\n\n    team: Maybe;\n\n    reason: Maybe;\n\n    created_at: Maybe;\n\n    points: Maybe;\n  };\n\n  export type _Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: String!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TeamsGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation Teams($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        USERNAME\n        FIRST_NAME\n        LAST_NAME\n        USER_ROLE\n        TEAMS\n        \n      \n    \n    \n      \n        \n          {{ user.email }}\n        \n        \n          {{ user.first_name }}\n        \n        \n          {{ user.last_name }}\n        \n        \n          {{ user.role }}\n        \n        \n          \n            {{ team.name }}\n          \n        \n        \n          \n            \n              edit\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    USERNAME        FIRST_NAME        LAST_NAME        USER_ROLE        TEAMS                                              {{ user.email }}                          {{ user.first_name }}                          {{ user.last_name }}                          {{ user.role }}                                      {{ team.name }}                                                              edit                                          '\n    var COMPONENTS = [{'name': 'AddteamComponent', 'selector': 'app-addteam'},{'name': 'AddtournamentroundComponent', 'selector': 'app-addmatch'},{'name': 'AddUserComponent', 'selector': 'app-add-user'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/addteam.component.ts\n            \n            component\n            AddteamComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/addteam/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            component\n            AddtournamentroundComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/addtournamentround/addtournamentround.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/add-user/add-user.component.ts\n            \n            component\n            AddUserComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            HIDE_PLAYED_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_MATCHDAY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_TEAM_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            variable\n            SELECTED_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createApollo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            uri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            variable\n            LANG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            variable\n            SELECTED_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-store : ^2.1.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createApollo   (src/.../graphql.module.ts)\n                        \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createApollo\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApollo(httpLink, authService, ownService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpLink\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ownService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAddUserComponent\n\nAddUserComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAddUserComponent->AdminModule\n\n\n\n\n\nAddteamComponent\n\nAddteamComponent\n\nAdminModule -->\n\nAddteamComponent->AdminModule\n\n\n\n\n\nAddtournamentroundComponent\n\nAddtournamentroundComponent\n\nAdminModule -->\n\nAddtournamentroundComponent->AdminModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    37 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nImplement rescheduleMatchDay()\nImplement RankingPenalty\nImplement endSeason()\nImplenet CreatePitches\nImplement Edit User\nImplement Edit Pitches (Overview + Contacts + Delete)\nImplement Cancel Match\nImplement Season History (show old Seasons)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _Team   (src/.../graphql.ts)\n                        \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    _Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            HIDE_PLAYED_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            LANG_KEY   (src/.../i18.service.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            SELECTED_MATCHDAY_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_SEASON_KEY   (src/.../season.service.ts)\n                        \n                        \n                            SELECTED_TEAM_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_TOURNAMENT_KEY   (src/.../tournament.component.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            uri   (src/.../graphql.module.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCESS_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACCESS_TOKEN'\n                        \n                    \n\n\n            \n        \n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        team {\n          ...Team\n        }\n        reason\n        created_at\n        points\n      }\n    }\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: 'ws://localhost:4000',\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'http://192.168.178.23/api',\n    graphqlUrl: 'http:/192.168.178.23/api/graphql',\n    graphqlWsUrl: 'ws://192.168.178.23:3001/ws'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n  serverUrl: '/api',\n  graphqlUrl: 'api/graphql',\n  graphqlWsUrl: `ws://${window.location.hostname}:4000`,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    googleMapsApiKey: 'AIzaSyBo4kTaSyVs6hxw6PV7njib0k9muSx8YM0',\n    serverUrl: 'https://manager.wildeligabremen.de/api',\n    graphqlUrl: 'https://manager.wildeligabremen.de/api/graphql',\n    graphqlWsUrl: 'wss://manager.wildeligabremen.de/ws',\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/matchplan/matchplan.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_PLAYED_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HIDE_PLAYED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_MATCHDAY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_MATCHDAY'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TEAM_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TEAM'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/i18.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANG_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LANG'\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/season.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_SEASON'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tournament/tournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TOURNAMENT'\n                        \n                    \n\n\n            \n        \n\n    src/app/graphql.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.graphqlUrl\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
