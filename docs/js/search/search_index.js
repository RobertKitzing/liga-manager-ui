var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/AddMatchData.html",[0,0.542,1,3.281]],["body/interfaces/AddMatchData.html",[0,0.922,1,6.02,2,3.032,3,0.12,4,0.12,5,0.109,6,4.868,7,0.899,8,4.349,9,4.868,10,0.332,11,0.6,12,2.101,13,2.148,14,1.801,15,5.942,16,5.583,17,0.546,18,0.008,19,1.699,20,6.091,21,0.885,22,0.193,23,3.591,24,3.032,25,4.585,26,1.99,27,0.744,28,1.947,29,2.87,30,4.146,31,0.12,32,4.496,33,4.146,34,6.392,35,3.969,36,3.969,37,1.343,38,3.671,39,3.316,40,3.033,41,1.872,42,2.118,43,3.405,44,2.594,45,1.219,46,1.837,47,1.508,48,1.767,49,1.733,50,2.074,51,2.87,52,2.87,53,2.877,54,2.594,55,0.158,56,1.836,57,2.113,58,1.766,59,2.148,60,1.598,61,1.538,62,2.105,63,1.598,64,5.223,65,0.131,66,1.662,67,1.538,68,5.223,69,5.223,70,5.223,71,5.223,72,5.223,73,5.223,74,5.223,75,5.223,76,1.508,77,5.223,78,3.248,79,3.812,80,5.223,81,5.223,82,1.196,83,2.368,84,5.223,85,2.099,86,2.532,87,5.223,88,2.594,89,4.585,90,3.032,91,1,92,4.868,93,4.868,94,4.146,95,4.868,96,6.361,97,5.223,98,5.223,99,6.859,100,5.223,101,6.859,102,5.223,103,1.598,104,5.223,105,5.223,106,5.223,107,1.605,108,5.223,109,5.223,110,5.223,111,3.316,112,1.835,113,5.223,114,2.164,115,2.031,116,5.223,117,1.538,118,6.361,119,1.568,120,5.223,121,5.223,122,5.223,123,1.568,124,5.223,125,1.568,126,5.223,127,1.568,128,5.223,129,3.215,130,1.485,131,5.223,132,5.223,133,1.318,134,1.084,135,2.658,136,5.223,137,3.969,138,2.118,139,2.234,140,5.223,141,5.223,142,4.834,143,5.223,144,5.223,145,2.796,146,2.211,147,5.223,148,3.316,149,0.005,150,0.006,151,0.005]],["title/injectables/AddRankingPenaltyGQL.html",[152,0.202,153,1.101]],["body/injectables/AddRankingPenaltyGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.405,14,1.58,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.674,46,0.637,47,1.003,48,0.613,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.654,119,1.827,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.616,149,0.002,150,0.003,151,0.002,152,0.413,153,1.022,154,0.568,155,0.65,156,2.342,157,0.476,158,0.458,159,2.329,160,2.46,161,1.788,162,2.152,163,2.144,164,1.946,165,1.924,166,1.684,167,0.252,168,2.714,169,2.357,170,0.637,171,1.719,172,1.105,173,1.063,174,1.083,175,1.083,176,1.083,177,1.022,178,1.022,179,0.689,180,0.689,181,1.083,182,1.083,183,1.083,184,1.083,185,1.083,186,1.083,187,1.083,188,1.083,189,1.083,190,1.405,191,1.083,192,1.083,193,1.083,194,1.083,195,1.083,196,1.063,197,0.676,198,2.371,199,1.105,200,1.962,201,1.686,202,1.686,203,2.244,204,1.083,205,1.083,206,1.719,207,1.083,208,1.924,209,1.083,210,0.702,211,2.053,212,1.489,213,0.702,214,0.689,215,1.063,216,0.702,217,1.548,218,1.518,219,1.063,220,1.548,221,2.11,222,2.11,223,1.962,224,1.548,225,1.686,226,1.518,227,1.518,228,1.083,229,0.703,230,1.105,231,1.105,232,1.366,233,1.366,234,1.366,235,1.083,236,1.105,237,1.105,238,1.518,239,1.063,240,1.518,241,1.063,242,1.083,243,1.105,244,1.105,245,1.083,246,1.518,247,1.405,248,1.962,249,1.9,250,1.518,251,1.719,252,1.083,253,1.55,254,1.083,255,0.702,256,1.518,257,1.753,258,1.063,259,0.77,260,0.946,261,0.625,262,1.898,263,0.689,264,0.663,265,0.899,266,1.654,267,1.003,268,1.022,269,1.313,270,0.893,271,0.689,272,1.063,273,1.686,274,0.689,275,1.063,276,1.719,277,0.689,278,0.676,279,0.824,280,1.339,281,1.042,282,1.619,283,2.128,284,1.083,285,1.083,286,0.77,287,1.083,288,1.083,289,1.561,290,1.499,291,1.083,292,1.083,293,0.899,294,1.003,295,1.518,296,1.083,297,0.676,298,1.042,299,1.063,300,1.288,301,1.083,302,1.083,303,1.313,304,0.702,305,1.083,306,1.083,307,1.083,308,1.083,309,1.083,310,1.083,311,1.405,312,1.063,313,0.676,314,1.499,315,1.216,316,0.492,317,0.663,318,0.702,319,1.022,320,1.313,321,1.792,322,1.313,323,1.288,324,1.313,325,1.063,326,1.063,327,1.063,328,1.063,329,1.313,330,1.313,331,1.313,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.702,341,0.702,342,0.663,343,0.702,344,0.702,345,0.663,346,0.702,347,0.702,348,0.65,349,0.702,350,0.702,351,0.65,352,0.702,353,0.702,354,0.663,355,0.663,356,0.702,357,0.702,358,0.663,359,0.663,360,1.083,361,0.663,362,0.702,363,0.702,364,0.676,365,0.702,366,0.702,367,0.676,368,0.702,369,0.702,370,0.676,371,0.702,372,0.676,373,0.702,374,0.663,375,0.702,376,0.702,377,0.676,378,0.702,379,0.702,380,0.663,381,0.702,382,0.702,383,0.65,384,0.65,385,0.702,386,0.702,387,0.663,388,0.702,389,0.702,390,0.663,391,0.702,392,0.702,393,0.663,394,0.702,395,0.702,396,0.663,397,0.663,398,0.663,399,0.702,400,0.702,401,0.676,402,2.145,403,0.702,404,0.702,405,0.637,406,0.702,407,0.702,408,0.637,409,0.702,410,0.702,411,0.613,412,0.702,413,1.366,414,0.637,415,0.702,416,0.65,417,0.579,418,0.702,419,0.65,420,0.663,421,0.702,422,0.702,423,0.625,424,0.65,425,0.676]],["title/injectables/AddTeamToSeasonGQL.html",[152,0.202,364,1.144]],["body/injectables/AddTeamToSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.125,163,2.145,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,1.065,365,1.108,366,1.108,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,426,2.723]],["title/components/AdminComponent.html",[27,0.437,427,1.213]],["body/components/AdminComponent.html",[3,0.124,4,0.124,5,0.113,7,0.68,10,0.343,18,0.008,22,0.163,27,0.814,28,2.129,31,0.124,32,3.538,33,4.284,55,0.124,60,2.457,61,2.364,62,2.443,63,1.985,65,0.136,66,1.717,67,1.91,82,1.592,103,2.209,149,0.005,150,0.006,151,0.005,167,0.74,178,1.91,229,0.63,259,0.798,265,0.73,279,0.878,286,0.798,293,0.878,316,0.765,427,2.342,428,2.279,429,1.973,430,1.934,431,1.934,432,5.888,433,1.934,434,2.105,435,8.551,436,7.975,437,1.837,438,6.634,439,6.634,440,1.528,441,1.858,442,1.528,443,2.325,444,2.325,445,1.934,446,2.586,447,1.934,448,1.934,449,1.786,450,1.934,451,1.786,452,1.858,453,2.646,454,1.786,455,1.934,456,1.751,457,1.858,458,1.751,459,2.325,460,1.751,461,1.934,462,1.786,463,1.934,464,1.786,465,1.858,466,1.786,467,1.786,468,1.934,469,1.786,470,1.934,471,1.786,472,1.934,473,1.786,474,1.751,475,2.325,476,1.934,477,1.786,478,1.751,479,1.934,480,1.786,481,1.934,482,1.786,483,1.934,484,1.786,485,1.934,486,1.821,487,1.934,488,1.786,489,1.934,490,1.786,491,1.934,492,1.786,493,1.934,494,1.786,495,1.934,496,1.751,497,1.934,498,1.717,499,1.934,500,1.751,501,1.934,502,1.786,503,1.934,504,1.786,505,1.934,506,1.934,507,1.786,508,1.934,509,1.684,510,1.934,511,1.751,512,1.934,513,1.751,514,1.934,515,1.786,516,1.934,517,1.751,518,1.934,519,1.786,520,1.858,521,1.934,522,1.934]],["title/guards/AdminGuard.html",[523,3.738,524,3.281]],["body/guards/AdminGuard.html",[3,0.137,4,0.137,5,0.125,10,0.378,17,0.437,18,0.008,22,0.182,31,0.137,55,0.137,65,0.15,67,1.753,82,1.574,83,1.895,146,2.91,149,0.006,150,0.007,151,0.006,152,0.371,167,0.827,229,0.578,334,1.364,335,1.337,437,1.947,440,1.947,524,6.035,525,5.956,526,6.499,527,7.665,528,7.665,529,5.228,530,4.325,531,7.322,532,1.753,533,1.753,534,5.018,535,7.322,536,7.322,537,3.558,538,4.347,539,8.452]],["title/modules/AdminModule.html",[540,1.424,541,3.484]],["body/modules/AdminModule.html",[3,0.123,4,0.123,5,0.112,7,0.813,8,4.455,18,0.008,22,0.198,31,0.123,55,0.123,65,0.134,66,2.429,149,0.005,150,0.006,151,0.005,178,1.575,265,0.874,279,0.874,427,2.428,442,1.516,474,2.477,477,2.527,482,2.476,484,2.476,486,2.526,488,2.476,490,2.476,492,2.476,498,2.381,504,2.527,519,2.476,540,2.038,541,7.47,542,2.476,543,3.293,544,4.265,545,3.397,546,3.397,547,3.293,548,5.838,549,5.838,550,5.838,551,6.568,552,6.568,553,4.906,554,4.231,555,3.508,556,3.508,557,6.578,558,6.454,559,3.284,560,3.205,561,5.838,562,3.905,563,4.248,564,6.578,565,6.578,566,6.578,567,6.578,568,4.697,569,6.578,570,6.578,571,5.351,572,6.578,573,6.578,574,4.987,575,5.838,576,5.351,577,6.578,578,6.578,579,7.934,580,5.351,581,7.042,582,5.665,583,6.578,584,4.248,585,3.905,586,6.578,587,5.838]],["title/modules/AdminRoutingModule.html",[540,1.424,551,3.281]],["body/modules/AdminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.708,31,0.139,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,319,0.918,427,2.252,524,5.313,537,3.616,542,2.801,551,6.092,559,3.08,560,3.446,561,6.605,588,7.442,589,4.418,590,4.784,591,4.418,592,7.442,593,4.254,594,4.6]],["title/injectables/AllSeasonsListGQL.html",[152,0.202,419,1.101]],["body/injectables/AllSeasonsListGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.025,269,1.317,270,0.896,271,0.691,272,1.317,273,1.83,274,0.691,275,1.066,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.291,324,1.317,325,1.066,326,1.317,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,1.025,420,0.665,421,0.705,422,0.705,423,0.628,424,0.652,425,0.678,595,2.724]],["title/injectables/AllTeamsGQL.html",[152,0.202,420,1.122]],["body/injectables/AllTeamsGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.684,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.7,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.025,269,1.317,270,0.896,271,0.691,272,1.066,273,1.689,274,0.691,275,1.066,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.846,322,1.317,323,1.291,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,1.045,421,0.705,422,0.705,423,0.628,424,0.652,425,0.678,596,2.724]],["title/injectables/AllTournamentListGQL.html",[48,1.039,152,0.202]],["body/injectables/AllTournamentListGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.967,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.025,269,1.317,270,0.896,271,0.691,272,1.066,273,1.689,274,0.691,275,1.317,276,1.866,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.291,324,1.317,325,1.066,326,1.066,327,1.317,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.628,424,0.652,425,0.678,597,2.724]],["title/injectables/AllUsersGQL.html",[152,0.202,424,1.101]],["body/injectables/AllUsersGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.025,269,1.317,270,0.896,271,0.691,272,1.066,273,1.689,274,0.691,275,1.066,276,1.722,277,0.691,278,0.678,279,0.849,280,1.342,281,1.045,282,1.801,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.291,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.492,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.628,424,1.025,425,0.678,598,2.724]],["title/components/AppComponent.html",[27,0.437,449,1.237]],["body/components/AppComponent.html",[3,0.099,4,0.099,5,0.09,7,0.544,10,0.274,11,0.532,15,5.23,17,0.53,18,0.008,21,0.892,22,0.193,26,1.645,27,0.735,28,1.922,31,0.099,38,3.999,39,2.741,41,1.547,49,1.968,50,1.715,55,0.099,60,2.435,61,2.342,62,2.287,63,1.726,65,0.108,66,1.374,67,1.661,82,1.291,83,2.297,85,2.318,94,3.428,103,2.038,112,2.489,115,2.443,134,1.303,135,3.197,148,4.874,149,0.004,150,0.005,151,0.004,167,0.864,229,0.646,259,0.694,265,0.902,279,0.763,286,0.694,293,0.763,314,1.598,315,1.223,316,0.612,317,1.296,319,0.855,335,1.266,360,1.347,411,2.006,417,1.746,427,1.401,428,1.981,429,1.579,430,1.547,431,1.547,433,1.547,434,1.83,437,1.598,440,2.007,441,2.293,442,1.223,443,2.021,444,2.021,445,1.547,446,2.387,447,1.547,448,1.547,449,2.204,450,1.547,451,1.429,452,1.487,453,2.476,454,1.867,455,1.547,456,1.401,457,1.487,458,1.401,459,2.021,460,1.401,461,1.547,462,1.429,463,1.547,464,1.429,465,1.487,466,1.429,467,1.429,468,1.547,469,1.429,470,1.547,471,1.429,472,1.547,473,1.429,474,1.401,475,2.021,476,1.547,477,1.429,478,1.401,479,1.547,480,1.867,481,1.547,482,1.429,483,1.547,484,1.429,485,1.547,486,1.457,487,1.547,488,1.429,489,1.547,490,1.429,491,1.547,492,1.429,493,1.547,494,1.429,495,1.547,496,1.401,497,1.547,498,1.374,499,1.547,500,1.401,501,1.547,502,1.429,503,1.547,504,1.429,505,1.547,506,1.547,507,1.429,508,1.547,509,1.347,510,1.547,511,1.401,512,1.547,513,1.401,514,1.547,515,1.429,516,1.547,517,1.401,518,1.547,519,1.429,520,1.487,521,1.547,522,1.547,529,3.79,530,4.011,532,1.661,533,1.661,534,4.861,538,3.152,599,4.711,600,7.722,601,6.934,602,5.251,603,6.066,604,8.188,605,6.934,606,8.188,607,8.188,608,8.713,609,6.911,610,3.866,611,5.062,612,6.011,613,5.732,614,5.487,615,6.934,616,5.308,617,5.308,618,6.934,619,5.308,620,5.308,621,5.308,622,5.308,623,5.308,624,5.308,625,5.308,626,5.308,627,2.253,628,6.154,629,4.711,630,4.711,631,4.025,632,4.711,633,4.025,634,4.318,635,4.711,636,3.282,637,2.831,638,4.025,639,5.308,640,4.711,641,4.711,642,5.308,643,4.711,644,5.308,645,4.318,646,4.711,647,5.308,648,5.308,649,5.308,650,6.934,651,5.308,652,6.934,653,5.308,654,5.308,655,5.308,656,5.308,657,5.308,658,5.308,659,5.308,660,5.308,661,5.308,662,5.308,663,5.641,664,5.308,665,4.696,666,4.987,667,4.987,668,5.308,669,6.154,670,5.308,671,6.934,672,6.934,673,6.934,674,6.934,675,6.934,676,6.934,677,6.154,678,3,679,6.934,680,6.934,681,6.154,682,6.934,683,6.934,684,6.934,685,6.934,686,6.934,687,7.722,688,7.722,689,6.854,690,5.308,691,6.854,692,5.308,693,7.722,694,5.308,695,5.308,696,5.308,697,6.154,698,8.188,699,6.934,700,6.154,701,5.308,702,6.934,703,6.934,704,6.934,705,6.934,706,6.934,707,6.934,708,8.713,709,6.934,710,6.934,711,5.308,712,6.934,713,5.308,714,6.934,715,6.934,716,4.711,717,5.308,718,5.308,719,5.308,720,5.308]],["title/modules/AppCoreModule.html",[540,1.424,721,3.112]],["body/modules/AppCoreModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,31,0.139,35,4.603,36,4.603,37,1.558,41,2.171,42,2.456,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,542,2.803,546,3.845,559,3.082,560,3.447,721,5.78,722,6.057,723,7.446,724,7.575,725,6.471,726,7.446,727,6.057,728,7.446,729,6.609,730,7.446]],["title/modules/AppModule.html",[540,1.424,731,3.484]],["body/modules/AppModule.html",[3,0.123,4,0.123,5,0.112,18,0.008,22,0.199,26,2.041,31,0.123,38,3.712,39,3.402,41,2.315,42,2.173,55,0.16,61,1.578,65,0.135,146,2.734,149,0.005,150,0.006,151,0.005,442,1.518,449,2.58,454,2.527,480,2.527,509,2.164,530,4.345,538,3.911,540,2.041,542,2.48,543,3.298,544,4.268,545,4.402,546,4.402,547,3.298,554,4.235,555,3.513,556,3.513,558,6.46,559,3.287,560,3.208,562,3.911,613,5.505,629,5.847,630,5.847,637,3.513,640,5.847,727,5.359,729,7.048,731,7.377,732,5.847,733,5.847,734,5.847,735,5.847,736,5.847,737,6.57,738,6.57,739,6.232,740,5.359,741,7.941,742,7.048,743,5.359,744,8.525,745,7.941,746,6.588,747,6.588,748,7.941,749,5.847,750,5.847,751,5.847,752,7.941,753,4.461,754,7.048,755,7.048,756,3.402,757,6.588,758,4.072,759,6.588,760,6.588,761,6.588,762,5.847,763,6.588,764,7.941,765,6.588,766,7.048,767,5.847,768,7.941,769,5.847,770,6.588,771,7.941,772,5.359,773,7.941,774,7.941,775,4.235,776,5.359]],["title/modules/AppRoutingModule.html",[540,1.424,737,3.281]],["body/modules/AppRoutingModule.html",[3,0.135,4,0.135,5,0.123,7,0.738,18,0.008,22,0.186,31,0.135,55,0.157,65,0.147,149,0.006,150,0.007,151,0.006,178,1.723,261,1.928,319,0.888,524,6.317,527,7.197,528,7.197,537,3.496,542,2.708,547,3.602,559,2.978,560,3.38,589,4.271,590,4.462,591,4.967,593,5.449,722,5.853,737,5.974,777,7.194,778,7.031,779,7.194,780,7.194,781,7.194,782,7.194,783,5.853,784,5.455,785,9.469,786,7.194,787,7.194,788,7.194,789,4.872,790,7.194,791,7.194,792,7.194,793,7.194,794,5.853,795,7.194,796,7.194]],["title/interfaces/AppsettingsModel.html",[0,0.542,797,3.484]],["body/interfaces/AppsettingsModel.html",[0,0.85,2,3.401,3,0.135,4,0.135,5,0.123,10,0.372,11,0.642,17,0.528,18,0.008,21,1.006,22,0.171,31,0.135,55,0.157,65,0.147,78,2.774,112,2.058,114,2.427,115,2.278,135,2.981,138,2.762,139,2.392,146,2.48,149,0.006,150,0.007,151,0.006,152,0.368,334,1.341,335,1.315,613,4.651,753,4.878,797,6.711,798,5.859,799,7.413,800,8.087,801,8.087,802,7.856,803,6.392,804,5.142,805,5.859,806,6.392,807,6.392,808,6.392,809,6.392,810,4.971,811,4.452,812,4.452,813,6.392,814,6.392,815,6.392,816,4.452]],["title/injectables/AppsettingsService.html",[152,0.202,613,2.968]],["body/injectables/AppsettingsService.html",[0,0.842,3,0.134,4,0.134,5,0.122,10,0.369,11,0.639,17,0.497,18,0.008,21,0.926,22,0.17,31,0.134,55,0.156,65,0.146,78,2.749,82,1.329,112,2.519,114,2.405,115,2.257,135,2.954,138,2.747,139,2.379,146,2.457,149,0.006,150,0.007,151,0.006,152,0.366,154,1.493,167,0.843,229,0.563,334,1.329,335,1.303,437,1.919,440,1.919,532,1.709,533,1.709,613,5.377,753,4.833,797,6.685,798,5.805,799,5.805,800,6.334,801,6.334,802,8.316,803,7.826,804,5.095,805,7.391,806,6.334,807,6.334,808,6.334,809,8.064,810,5.235,811,4.411,812,4.411,813,6.334,814,6.334,815,6.334,816,4.411,817,7.136,818,8.327,819,7.136,820,7.136]],["title/injectables/AuthenticationService.html",[152,0.202,530,2.17]],["body/injectables/AuthenticationService.html",[0,0.712,3,0.113,4,0.113,5,0.103,10,0.312,11,0.578,17,0.546,18,0.008,21,1.008,22,0.184,31,0.113,41,1.76,55,0.141,65,0.123,78,3.471,82,1.402,83,2.287,85,2.243,107,1.762,112,2.574,139,2.343,145,2.628,146,3.181,149,0.006,150,0.006,151,0.005,152,0.33,154,1.263,157,1.06,158,1.019,167,0.879,177,1.446,211,1.89,212,1.503,215,1.503,229,0.698,247,1.418,279,0.946,319,0.745,334,1.124,335,1.102,348,2.056,351,2.056,423,1.979,437,1.734,440,2.076,441,1.691,530,3.873,532,2.116,533,2.116,537,2.933,627,2.562,636,3.732,637,3.219,666,3.898,667,3.898,753,4.088,789,5.555,810,5.627,811,5.57,812,5.309,816,5.071,821,4.577,822,7.28,823,6.681,824,7.527,825,7.622,826,7.527,827,7.622,828,7.527,829,5.374,830,7.28,831,7.28,832,7.28,833,6.036,834,7.997,835,6.672,836,7.28,837,7.28,838,7.435,839,6.036,840,6.681,841,6.986,842,6.036,843,4.088,844,6.681,845,6.036,846,5.707,847,6.036,848,6.681,849,6.511,850,6.036,851,5.555,852,6.036,853,6.681,854,6.036,855,6.681,856,6.036,857,6.681,858,6.036,859,6.036,860,6.036,861,6.036,862,6.036,863,6.036,864,6.036,865,6.672,866,6.123,867,4.911,868,3.584,869,4.577,870,4.577,871,4.911,872,5.358,873,7.33,874,5.358,875,5.358,876,6.123,877,6.681,878,6.681,879,5.358,880,5.358,881,6.219,882,6.681,883,5.358,884,6.681,885,5.358,886,5.358,887,5.358,888,5.358,889,6.123,890,4.911,891,4.861,892,4.911,893,5.358,894,5.358,895,4.911,896,5.358,897,5.358,898,4.911,899,5.358,900,5.358,901,5.358]],["title/components/CancelMatchDialogComponent.html",[27,0.437,451,1.237]],["body/components/CancelMatchDialogComponent.html",[3,0.111,4,0.111,5,0.101,7,0.607,10,0.306,11,0.57,17,0.509,18,0.008,21,0.854,22,0.183,23,4.034,24,2.794,26,1.834,27,0.774,28,2.023,29,2.645,31,0.111,40,3.274,41,1.725,42,1.952,50,1.911,53,3.137,54,2.39,55,0.111,60,2.446,61,2.353,62,2.365,63,1.851,65,0.121,66,1.532,67,1.78,82,1.384,83,2.274,85,2.232,86,3.464,88,3.283,90,3.51,103,2.123,112,2.322,114,1.994,115,1.872,129,2.963,130,1.124,133,1.214,134,0.999,135,2.449,138,1.952,139,2.124,149,0.005,150,0.006,151,0.005,164,1.909,167,0.815,200,1.473,209,1.887,229,0.673,259,0.974,260,1.89,265,0.652,279,0.818,286,0.744,293,0.818,316,0.682,345,2.222,411,2.056,427,1.562,428,2.124,429,1.76,430,1.725,431,1.725,433,1.725,434,1.962,437,1.713,440,1.713,441,1.657,442,1.363,443,2.167,444,2.167,445,1.725,446,2.485,447,1.725,448,1.725,449,1.593,450,1.725,451,2.295,452,2.577,453,2.561,454,1.593,455,1.725,456,1.562,457,1.657,458,1.562,459,2.167,460,1.562,461,1.725,462,1.593,463,1.725,464,1.593,465,1.657,466,1.593,467,1.593,468,1.725,469,1.593,470,1.725,471,1.593,472,1.725,473,1.593,474,1.562,475,2.167,476,1.725,477,1.593,478,1.562,479,1.725,480,1.593,481,1.725,482,1.593,483,1.725,484,1.593,485,1.725,486,1.625,487,1.725,488,1.593,489,1.725,490,1.593,491,1.725,492,1.593,493,1.725,494,1.593,495,1.725,496,1.562,497,1.725,498,1.532,499,1.725,500,1.562,501,1.725,502,1.593,503,1.725,504,1.593,505,1.725,506,1.725,507,1.593,508,1.725,509,1.502,510,1.725,511,1.562,512,1.725,513,1.562,514,1.725,515,1.593,516,1.725,517,1.562,518,1.725,519,1.593,520,1.657,521,1.725,522,1.725,532,1.78,533,1.78,602,5.202,610,3.722,627,2.512,635,5.252,665,4.007,678,3.087,902,7.957,903,6.798,904,3.821,905,5.505,906,5.035,907,4.486,908,5.252,909,7.434,910,5.917,911,4.814,912,5.252,913,4.814,914,5.252,915,5.917,916,5.917,917,5.917,918,5.252,919,5.917,920,5.917,921,3.821,922,5.917,923,7.434,924,4.414,925,4.414,926,7.434,927,7.434,928,5.636,929,6.598]],["title/injectables/CancelMatchGQL.html",[152,0.202,345,1.122]],["body/injectables/CancelMatchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.948,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,2.002,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,1.045,346,1.108,347,1.108,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,930,2.723]],["title/components/ChangepasswordComponent.html",[27,0.437,454,1.237]],["body/components/ChangepasswordComponent.html",[3,0.114,4,0.114,5,0.104,7,0.624,10,0.314,11,0.58,17,0.529,18,0.008,22,0.184,23,4.067,26,1.885,27,0.783,28,2.049,31,0.114,40,3.294,41,1.773,42,2.007,53,3.168,54,2.457,55,0.114,60,2.449,61,2.356,62,2.384,63,1.883,65,0.124,66,1.575,67,1.811,78,2.914,82,1.409,83,2.131,85,2.049,86,3.493,88,3.325,103,2.144,112,2.352,114,2.05,115,1.924,138,2.007,139,2.161,145,3.294,149,0.005,150,0.006,151,0.005,167,0.849,229,0.65,259,0.757,265,0.67,279,0.833,286,0.757,293,0.833,316,0.702,427,1.606,428,2.161,429,1.81,430,1.773,431,1.773,433,1.773,434,1.997,437,1.743,440,1.743,441,1.704,442,1.402,443,2.205,444,2.205,445,1.773,446,2.51,447,1.773,448,1.773,449,1.638,450,1.773,451,1.638,452,1.704,453,2.582,454,2.318,455,1.773,456,1.606,457,1.704,458,1.606,459,2.205,460,1.606,461,1.773,462,1.638,463,1.773,464,1.638,465,1.704,466,1.638,467,1.638,468,1.773,469,1.638,470,1.773,471,1.638,472,1.773,473,1.638,474,1.606,475,2.205,476,1.773,477,1.638,478,1.606,479,1.773,480,1.638,481,1.773,482,1.638,483,1.773,484,1.638,485,1.773,486,1.67,487,1.773,488,1.638,489,1.773,490,1.638,491,1.773,492,1.638,493,1.773,494,1.638,495,1.773,496,1.606,497,1.773,498,1.575,499,1.773,500,1.606,501,1.773,502,1.638,503,1.773,504,1.638,505,1.773,506,1.773,507,1.638,508,1.773,509,1.544,510,1.773,511,1.606,512,1.773,513,1.606,514,1.773,515,1.638,516,1.773,517,1.606,518,1.773,519,1.638,520,1.704,521,1.773,522,1.773,529,4.344,530,4.066,532,1.457,533,1.457,534,4.491,538,3.612,678,3.186,756,3.141,775,3.245,789,5.575,823,8.013,841,6.696,891,3.929,921,3.929,931,5.4,932,8.231,933,7.564,934,8.231,935,7.564,936,6.084,937,6.084,938,6.084,939,5.659,940,6.084,941,6.084,942,3.929,943,6.084,944,5.122,945,5.4,946,6.084,947,6.084,948,6.084,949,7.564,950,4.949,951,5.4,952,5.4,953,7.643,954,7.643,955,7.564,956,6.713]],["title/components/ConfirmDialogComponent.html",[27,0.437,456,1.213]],["body/components/ConfirmDialogComponent.html",[0,0.751,3,0.119,4,0.119,5,0.108,7,0.652,10,0.329,11,0.597,17,0.464,18,0.008,21,0.668,22,0.159,24,3.004,26,1.971,27,0.799,28,2.09,29,2.844,31,0.119,55,0.146,60,2.453,61,2.36,62,2.415,63,1.936,65,0.13,66,1.647,67,1.862,82,1.448,85,2.09,90,3.672,91,1.362,103,2.177,149,0.005,150,0.006,151,0.005,167,0.779,229,0.663,259,0.778,265,0.701,279,0.856,286,0.778,293,0.856,316,0.734,427,1.679,428,2.222,429,1.892,430,1.855,431,1.855,433,1.855,434,2.052,437,1.791,440,1.466,441,1.782,442,1.466,443,2.267,444,2.267,445,1.855,446,2.55,447,1.855,448,1.855,449,1.713,450,1.855,451,1.713,452,1.782,453,2.615,454,1.713,455,1.855,456,2.309,457,2.613,458,1.679,459,2.267,460,1.679,461,1.855,462,1.713,463,1.855,464,1.713,465,1.782,466,1.713,467,1.713,468,1.855,469,1.713,470,1.855,471,1.713,472,1.855,473,1.713,474,1.679,475,2.267,476,1.855,477,1.713,478,1.679,479,1.855,480,1.713,481,1.855,482,1.713,483,1.855,484,1.713,485,1.855,486,1.747,487,1.855,488,1.713,489,1.855,490,1.713,491,1.855,492,1.713,493,1.855,494,1.713,495,1.855,496,1.679,497,1.855,498,1.647,499,1.855,500,1.679,501,1.855,502,1.713,503,1.855,504,1.713,505,1.855,506,1.855,507,1.713,508,1.855,509,1.615,510,1.855,511,1.679,512,1.855,513,1.679,514,1.855,515,1.713,516,1.855,517,1.679,518,1.855,519,1.713,520,1.782,521,1.855,522,1.855,532,1.524,533,1.524,610,3.893,627,2.7,678,3.143,904,4.108,905,5.687,906,5.266,908,5.647,913,5.176,957,6.245,958,5.193,959,5.176,960,6.802,961,5.647,962,3.285,963,7.775,964,6.901,965,7.775,966,7.775]],["title/interfaces/ConfirmDialogComponentData.html",[0,0.542,960,3.484]],["body/interfaces/ConfirmDialogComponentData.html",[0,0.87,2,3.483,3,0.138,4,0.138,5,0.126,10,0.381,11,0.651,17,0.44,18,0.008,21,0.939,22,0.173,24,3.483,26,2.285,27,0.808,28,2.113,29,3.297,31,0.138,55,0.159,60,1.836,61,1.766,63,1.836,65,0.151,67,1.766,82,1.373,85,1.836,90,3.483,91,1.148,103,1.836,149,0.006,150,0.007,151,0.006,434,1.947,456,1.947,457,2.503,610,3.692,904,4.763,905,4.995,906,4.995,957,5.266,958,4.379,960,6.776,962,4.74]],["title/components/ContactComponent.html",[27,0.437,458,1.213]],["body/components/ContactComponent.html",[0,0.749,3,0.119,4,0.119,5,0.108,7,0.651,10,0.328,11,0.596,14,1.304,17,0.501,18,0.008,22,0.171,23,4.118,24,3,26,1.969,27,0.799,28,2.089,29,2.84,31,0.119,45,1.206,50,2.052,55,0.119,58,1.279,60,2.453,61,2.36,62,2.414,63,1.934,65,0.13,66,1.644,67,1.86,82,1.447,85,2.271,86,3.448,90,3.668,91,1.396,103,2.176,149,0.005,150,0.006,151,0.005,167,0.811,229,0.663,259,0.777,265,0.699,270,1.329,279,0.855,286,0.875,293,1.005,316,0.733,427,1.677,428,2.22,429,1.89,430,1.852,431,1.852,433,1.852,434,2.051,437,1.79,440,1.464,441,1.779,442,1.464,443,2.265,444,2.265,445,1.852,446,2.548,447,1.852,448,1.852,449,1.71,450,1.852,451,1.71,452,1.779,453,2.614,454,1.71,455,1.852,456,1.677,457,1.779,458,2.308,459,2.265,460,1.677,461,1.852,462,1.71,463,1.852,464,1.71,465,1.779,466,1.71,467,1.71,468,1.852,469,1.71,470,1.852,471,1.71,472,1.852,473,1.71,474,1.677,475,2.265,476,1.852,477,1.71,478,1.677,479,1.852,480,1.71,481,1.852,482,1.71,483,1.852,484,1.71,485,1.852,486,1.744,487,1.852,488,1.71,489,1.852,490,1.71,491,1.852,492,1.71,493,1.852,494,1.71,495,1.852,496,1.677,497,1.852,498,1.644,499,1.852,500,1.677,501,1.852,502,1.71,503,1.852,504,1.71,505,1.852,506,1.852,507,1.71,508,1.852,509,1.613,510,1.852,511,1.677,512,1.852,513,1.677,514,1.852,515,1.71,516,1.852,517,1.677,518,1.852,519,1.71,520,1.779,521,1.852,522,1.852,532,1.521,533,1.521,627,2.696,678,3.01,967,5.168,968,6.827,969,6.32,970,5.639,971,6.799,972,6.353,973,6.353,974,6.353,975,6.353,976,4.612,977,7.768,978,6.895]],["title/interfaces/ContactComponentData.html",[0,0.542,971,3.484]],["body/interfaces/ContactComponentData.html",[0,0.864,2,3.459,3,0.137,4,0.137,5,0.125,10,0.379,11,0.649,14,1.88,17,0.505,18,0.008,22,0.182,23,3.883,24,3.459,26,2.27,27,0.805,28,2.105,29,3.275,31,0.137,45,1.391,50,2.366,55,0.137,58,1.794,60,1.824,61,1.754,63,1.824,65,0.15,67,1.754,82,1.364,85,2.105,86,2.889,90,3.459,91,1.141,103,1.824,149,0.006,150,0.007,151,0.006,270,1.865,286,0.932,293,0.807,434,1.934,458,1.934,967,5.96,968,5.96,969,5.96,971,6.758]],["title/components/ContactPersonComponent.html",[27,0.437,462,1.237]],["body/components/ContactPersonComponent.html",[3,0.121,4,0.121,5,0.11,7,0.664,10,0.335,17,0.387,18,0.008,22,0.161,27,0.806,28,2.107,31,0.121,50,2.092,55,0.121,60,2.455,61,2.362,62,2.427,63,1.957,65,0.132,66,1.677,67,1.883,82,1.576,103,2.191,149,0.005,150,0.006,151,0.005,167,0.785,229,0.621,259,0.786,265,0.713,279,0.866,286,0.786,293,1.056,294,1.846,316,0.747,427,1.71,428,2.246,429,1.927,430,1.888,431,1.888,433,1.888,434,2.075,437,1.811,440,1.492,441,1.814,442,1.492,443,2.292,444,2.292,445,1.888,446,2.565,447,1.888,448,1.888,449,1.744,450,1.888,451,1.744,452,1.814,453,2.628,454,1.744,455,1.888,456,1.71,457,1.814,458,1.71,459,2.292,460,1.71,461,1.888,462,2.369,463,1.888,464,1.744,465,1.814,466,1.744,467,1.744,468,1.888,469,1.744,470,1.888,471,1.744,472,1.888,473,1.744,474,1.71,475,2.292,476,1.888,477,1.744,478,1.71,479,1.888,480,1.744,481,1.888,482,1.744,483,1.888,484,1.744,485,1.888,486,1.779,487,1.888,488,1.744,489,1.888,490,1.744,491,1.888,492,1.744,493,1.888,494,1.744,495,1.888,496,1.71,497,1.888,498,1.677,499,1.888,500,1.71,501,1.888,502,1.744,503,1.888,504,1.744,505,1.888,506,1.888,507,1.744,508,1.888,509,1.644,510,1.888,511,1.71,512,1.888,513,1.71,514,1.888,515,1.744,516,1.888,517,1.71,518,1.888,519,1.744,520,1.814,521,1.888,522,1.888,678,2.707,681,7.811,979,7.811,980,7.159,981,5.749,982,8.463,983,7.861,984,5.324,985,7.861,986,6.478,987,4.86,988,7.861,989,7.861,990,7.861,991,7.861,992,7.861,993,7.861,994,6.395]],["title/components/ContactlistComponent.html",[27,0.437,460,1.213]],["body/components/ContactlistComponent.html",[3,0.125,4,0.125,5,0.113,7,0.682,10,0.344,18,0.008,22,0.136,27,0.815,28,2.132,31,0.125,55,0.125,60,2.457,61,2.364,62,2.445,63,1.989,65,0.136,66,1.722,67,1.913,82,1.595,103,2.211,149,0.005,150,0.006,151,0.005,167,0.741,229,0.631,259,0.799,265,0.733,279,0.88,286,0.799,293,0.88,316,0.767,427,1.756,428,2.283,429,1.979,430,1.94,431,1.94,433,1.94,434,2.109,437,1.841,440,1.533,441,1.864,442,1.533,443,2.329,444,2.329,445,1.94,446,2.589,447,1.94,448,1.94,449,1.791,450,1.94,451,1.791,452,1.864,453,2.648,454,1.791,455,1.94,456,1.756,457,1.864,458,1.756,459,2.329,460,2.344,461,1.94,462,1.791,463,1.94,464,1.791,465,1.864,466,1.791,467,1.791,468,1.94,469,1.791,470,1.94,471,1.791,472,1.94,473,1.791,474,1.756,475,2.329,476,1.94,477,1.791,478,1.756,479,1.94,480,1.791,481,1.94,482,1.791,483,1.94,484,1.791,485,1.94,486,1.827,487,1.94,488,1.791,489,1.94,490,1.791,491,1.94,492,1.791,493,1.94,494,1.791,495,1.94,496,1.756,497,1.94,498,1.722,499,1.94,500,1.756,501,1.94,502,1.791,503,1.94,504,1.791,505,1.94,506,1.94,507,1.791,508,1.94,509,1.689,510,1.94,511,1.756,512,1.94,513,1.756,514,1.94,515,1.791,516,1.94,517,1.756,518,1.94,519,1.791,520,1.864,521,1.94,522,1.94,995,5.906,996,7.091,997,8.562,998,7.989,999,6.654,1000,6.654]],["title/modules/ContactlistModule.html",[540,1.424,1001,3.484]],["body/modules/ContactlistModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.192,31,0.135,55,0.135,65,0.147,149,0.006,150,0.007,151,0.006,268,1.727,442,1.661,460,2.479,502,2.528,515,2.528,540,2.234,542,2.714,543,3.61,544,4.433,545,3.723,546,3.723,547,3.61,553,5.008,554,4.468,555,3.845,556,3.845,559,3.468,560,3.384,562,4.281,563,4.656,996,6.399,1001,7.375,1002,6.399,1003,6.399,1004,6.399,1005,6.705,1006,7.21,1007,6.399,1008,7.21]],["title/modules/ContactlistRoutingModule.html",[540,1.424,1005,3.281]],["body/modules/ContactlistRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.921,460,2.256,537,3.627,542,2.809,559,3.089,560,3.452,589,4.431,590,4.789,591,4.431,593,4.266,594,4.613,1005,6.101,1007,6.624,1009,7.463]],["title/injectables/CreateMatchesForSeasonGQL.html",[152,0.202,370,1.144]],["body/injectables/CreateMatchesForSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.732,13,1.407,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.558,117,1.656,119,1.829,123,1.463,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.569,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.14,163,2.111,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.639,171,1.801,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.407,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.677,198,2.371,199,1.107,200,1.963,201,1.688,202,1.688,203,2.244,204,1.086,205,1.086,206,1.721,207,1.086,208,1.926,209,1.086,210,0.704,211,2.053,212,1.492,213,0.704,214,0.691,215,1.065,216,0.704,217,1.551,218,1.521,219,1.065,220,1.551,221,2.111,222,2.111,223,1.963,224,1.551,225,1.688,226,1.521,227,1.521,228,1.086,229,0.704,230,1.107,231,1.107,232,1.551,233,1.368,234,1.368,235,1.086,236,1.107,237,1.107,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.107,244,1.107,245,1.086,246,1.521,247,1.407,248,1.963,249,1.902,250,1.521,251,1.721,252,1.086,253,1.551,254,1.086,255,0.704,256,1.521,257,1.755,258,1.065,259,0.771,260,0.948,261,0.627,262,1.899,263,0.691,264,0.664,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.688,274,0.691,275,1.065,276,1.721,277,0.691,278,0.677,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.677,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.704,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.407,312,1.065,313,0.677,314,1.501,315,1.218,316,0.493,317,0.664,318,0.704,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.677,334,1.748,335,1.714,336,0.664,337,2.291,338,2.362,339,0.664,340,0.704,341,0.704,342,0.664,343,0.704,344,0.704,345,0.664,346,0.704,347,0.704,348,0.652,349,0.704,350,0.704,351,0.652,352,0.704,353,0.704,354,0.664,355,0.664,356,0.704,357,0.704,358,0.664,359,0.664,360,1.086,361,0.664,362,0.704,363,0.704,364,0.677,365,0.704,366,0.704,367,0.677,368,0.704,369,0.704,370,1.065,371,1.107,372,0.677,373,0.704,374,0.664,375,0.704,376,0.704,377,0.677,378,0.704,379,0.704,380,0.664,381,0.704,382,0.704,383,0.652,384,0.652,385,0.704,386,0.704,387,0.664,388,0.704,389,0.704,390,0.664,391,0.704,392,0.704,393,0.664,394,0.704,395,0.704,396,0.664,397,0.664,398,0.664,399,0.704,400,0.704,401,0.677,402,2.146,403,0.704,404,0.704,405,0.639,406,0.704,407,0.704,408,0.639,409,0.704,410,0.704,411,0.615,412,0.704,413,1.368,414,0.639,415,0.704,416,0.652,417,0.58,418,0.704,419,0.652,420,0.664,421,0.704,422,0.704,423,0.627,424,0.652,425,0.677,1010,2.721]],["title/components/CreatePitchDialogComponent.html",[27,0.437,464,1.237]],["body/components/CreatePitchDialogComponent.html",[3,0.107,4,0.107,5,0.097,7,0.585,10,0.295,11,0.558,17,0.53,18,0.008,22,0.184,23,3.865,26,1.769,27,0.761,28,1.99,30,3.687,31,0.107,40,3.248,41,1.665,42,1.884,50,1.844,53,3.097,54,2.307,55,0.107,60,2.442,61,2.35,62,2.34,63,1.809,65,0.117,66,1.478,67,1.741,78,2.8,82,1.354,83,2.25,86,3.153,88,3.23,103,2.095,112,2.284,114,1.924,115,1.806,138,1.884,139,2.077,145,3.165,149,0.004,150,0.006,151,0.004,157,1.003,158,0.964,167,0.863,225,1.394,229,0.631,259,0.727,265,0.629,268,1.367,279,0.8,286,0.978,293,0.8,316,0.658,319,0.897,427,1.507,428,2.077,429,1.698,430,1.665,431,1.665,433,1.665,434,1.918,437,1.675,440,1.842,441,2.036,442,1.316,443,2.119,444,2.119,445,1.665,446,2.453,447,1.665,448,1.665,449,1.537,450,1.665,451,1.537,452,1.599,453,2.533,454,1.537,455,1.665,456,1.507,457,1.599,458,1.507,459,2.119,460,1.507,461,1.665,462,1.537,463,1.665,464,2.266,465,2.559,466,1.537,467,1.537,468,1.665,469,1.537,470,1.665,471,1.537,472,1.665,473,1.537,474,1.507,475,2.119,476,1.665,477,1.537,478,1.507,479,1.665,480,1.537,481,1.665,482,1.537,483,1.665,484,1.537,485,1.665,486,1.568,487,1.665,488,1.537,489,1.665,490,1.537,491,1.665,492,1.537,493,1.665,494,1.537,495,1.665,496,1.507,497,1.665,498,1.478,499,1.665,500,1.507,501,1.665,502,1.537,503,1.665,504,1.537,505,1.665,506,1.665,507,1.537,508,1.665,509,1.449,510,1.665,511,1.507,512,1.665,513,1.507,514,1.665,515,1.537,516,1.665,517,1.507,518,1.665,519,1.537,520,1.599,521,1.665,522,1.665,532,1.367,533,1.367,610,3.639,627,2.424,678,3.201,756,2.949,775,3.045,904,3.687,905,5.415,906,4.922,912,5.068,913,4.645,921,3.687,939,5.203,942,3.687,944,4.922,961,5.068,1011,8.305,1012,6.681,1013,7.995,1014,7.995,1015,7.995,1016,7.995,1017,7.995,1018,7.995,1019,8.416,1020,6.847,1021,5.068,1022,6.736,1023,5.161,1024,5.913,1025,5.068,1026,5.71,1027,5.71,1028,7.268,1029,5.068,1030,7.268,1031,5.71,1032,5.068,1033,5.068,1034,5.71,1035,5.71,1036,4.645,1037,5.71,1038,5.71,1039,5.71,1040,5.71,1041,5.71,1042,5.71,1043,5.71,1044,5.71,1045,5.71,1046,5.71,1047,5.71,1048,5.71,1049,7.268,1050,5.71,1051,5.71,1052,5.71,1053,5.71,1054,5.71,1055,5.71,1056,5.71,1057,5.71,1058,5.71,1059,7.268,1060,7.268,1061,7.268,1062,7.268,1063,7.268,1064,7.268,1065,6.451]],["title/injectables/CreatePitchGQL.html",[152,0.202,359,1.122]],["body/injectables/CreatePitchGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.406,14,1.581,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.674,46,0.638,47,1.003,48,0.614,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.655,119,1.828,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.616,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.477,158,0.458,159,2.329,160,2.46,161,1.549,162,2.108,163,2.111,164,1.852,165,1.793,166,1.549,167,0.252,169,2.357,170,0.638,171,1.72,172,1.106,173,1.063,174,1.084,175,1.084,176,1.084,177,1.023,178,1.023,179,0.689,180,0.689,181,1.084,182,1.084,183,1.084,184,1.084,185,1.084,186,1.084,187,1.084,188,1.084,189,1.084,190,1.406,191,1.084,192,1.084,193,1.084,194,1.084,195,1.084,196,1.063,197,0.676,198,2.371,199,1.106,200,1.962,201,1.687,202,1.687,203,2.244,204,1.084,205,1.084,206,1.72,207,1.084,208,1.925,209,1.084,210,0.703,211,2.053,212,1.49,213,0.703,214,0.689,215,1.063,216,0.703,217,1.549,218,1.519,219,1.063,220,1.549,221,2.111,222,2.111,223,1.962,224,1.788,225,1.88,226,1.835,227,1.835,228,1.084,229,0.703,230,1.106,231,1.106,232,1.366,233,1.366,234,1.366,235,1.084,236,1.106,237,1.106,238,1.519,239,1.063,240,1.519,241,1.063,242,1.084,243,1.106,244,1.106,245,1.084,246,1.519,247,1.406,248,1.962,249,1.9,250,1.519,251,1.72,252,1.084,253,1.55,254,1.084,255,0.703,256,1.519,257,1.754,258,1.063,259,0.77,260,0.947,261,0.626,262,1.898,263,0.689,264,0.663,265,0.9,266,1.655,267,1.003,268,1.023,269,1.314,270,0.894,271,0.689,272,1.063,273,1.687,274,0.689,275,1.063,276,1.72,277,0.689,278,0.676,279,0.824,280,1.34,281,1.043,282,1.62,283,2.128,284,1.084,285,1.084,286,0.77,287,1.084,288,1.084,289,1.561,290,1.499,291,1.084,292,1.084,293,0.9,294,1.003,295,1.519,296,1.084,297,0.676,298,1.043,299,1.063,300,1.289,301,1.084,302,1.084,303,1.314,304,0.703,305,1.084,306,1.084,307,1.084,308,1.084,309,1.084,310,1.084,311,1.406,312,1.063,313,0.676,314,1.499,315,1.216,316,0.493,317,0.663,318,0.703,319,1.022,320,1.314,321,1.793,322,1.314,323,1.289,324,1.314,325,1.063,326,1.063,327,1.063,328,1.063,329,1.314,330,1.314,331,1.314,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.703,341,0.703,342,0.663,343,0.703,344,0.703,345,0.663,346,0.703,347,0.703,348,0.65,349,0.703,350,0.703,351,0.65,352,0.703,353,0.703,354,0.663,355,0.663,356,0.703,357,0.703,358,0.663,359,1.043,360,1.519,361,0.663,362,0.703,363,0.703,364,0.676,365,0.703,366,0.703,367,0.676,368,0.703,369,0.703,370,0.676,371,0.703,372,0.676,373,0.703,374,0.663,375,0.703,376,0.703,377,0.676,378,0.703,379,0.703,380,0.663,381,0.703,382,0.703,383,0.65,384,0.65,385,0.703,386,0.703,387,0.663,388,0.703,389,0.703,390,0.663,391,0.703,392,0.703,393,0.663,394,0.703,395,0.703,396,0.663,397,0.663,398,0.663,399,0.703,400,0.703,401,0.676,402,2.145,403,0.703,404,0.703,405,0.638,406,0.703,407,0.703,408,0.638,409,0.703,410,0.703,411,0.614,412,0.703,413,1.366,414,0.638,415,0.703,416,0.65,417,0.579,418,0.703,419,0.65,420,0.663,421,0.703,422,0.703,423,0.626,424,0.65,425,0.676,1066,2.716]],["title/injectables/CreateSeasonGQL.html",[152,0.202,361,1.122]],["body/injectables/CreateSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.713,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,1.045,362,1.108,363,1.108,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1067,2.723]],["title/injectables/CreateTeamGQL.html",[152,0.202,380,1.122]],["body/injectables/CreateTeamGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.713,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,1.045,381,1.108,382,1.108,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1068,2.723]],["title/injectables/CreateTournamentGQL.html",[152,0.202,390,1.122]],["body/injectables/CreateTournamentGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.713,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,1.045,391,1.108,392,1.108,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1069,2.723]],["title/injectables/CreateTournamentRoundGQL.html",[46,1.079,152,0.202]],["body/injectables/CreateTournamentRoundGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.698,14,1.581,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.674,46,1.003,47,1.24,48,0.614,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.844,119,1.962,123,1.765,125,0.663,127,0.663,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.477,158,0.458,159,2.329,160,2.46,161,1.549,162,2.108,163,2.111,164,1.852,165,1.793,166,1.684,167,0.252,169,2.357,170,0.638,171,1.799,172,1.106,173,1.063,174,1.084,175,1.084,176,1.084,177,1.023,178,1.023,179,0.689,180,0.689,181,1.084,182,1.084,183,1.084,184,1.084,185,1.084,186,1.084,187,1.084,188,1.084,189,1.084,190,1.406,191,1.084,192,1.084,193,1.084,194,1.084,195,1.084,196,1.063,197,0.676,198,2.371,199,1.106,200,1.962,201,1.687,202,1.687,203,2.244,204,1.084,205,1.084,206,1.72,207,1.084,208,1.925,209,1.084,210,0.703,211,2.053,212,1.49,213,0.703,214,0.689,215,1.063,216,0.703,217,1.549,218,1.519,219,1.063,220,1.549,221,2.111,222,2.111,223,1.962,224,1.549,225,1.687,226,1.519,227,1.519,228,1.084,229,0.703,230,1.106,231,1.106,232,1.366,233,1.366,234,1.366,235,1.084,236,1.106,237,1.106,238,1.519,239,1.063,240,1.519,241,1.063,242,1.084,243,1.366,244,1.366,245,1.084,246,1.519,247,1.406,248,1.962,249,1.9,250,1.519,251,1.72,252,1.084,253,1.55,254,1.084,255,0.703,256,1.519,257,1.754,258,1.063,259,0.77,260,0.947,261,0.626,262,1.898,263,0.689,264,0.663,265,0.9,266,1.655,267,1.003,268,1.023,269,1.314,270,0.894,271,0.689,272,1.063,273,1.687,274,0.689,275,1.063,276,1.72,277,0.689,278,0.676,279,0.824,280,1.34,281,1.043,282,1.62,283,2.128,284,1.084,285,1.084,286,0.77,287,1.084,288,1.084,289,1.561,290,1.499,291,1.084,292,1.084,293,0.9,294,1.003,295,1.519,296,1.084,297,0.676,298,1.043,299,1.063,300,1.289,301,1.084,302,1.084,303,1.314,304,0.703,305,1.084,306,1.084,307,1.084,308,1.084,309,1.084,310,1.084,311,1.406,312,1.063,313,0.676,314,1.499,315,1.216,316,0.493,317,0.663,318,0.703,319,1.022,320,1.314,321,1.793,322,1.314,323,1.289,324,1.314,325,1.063,326,1.063,327,1.063,328,1.063,329,1.314,330,1.314,331,1.314,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.703,341,0.703,342,0.663,343,0.703,344,0.703,345,0.663,346,0.703,347,0.703,348,0.65,349,0.703,350,0.703,351,0.65,352,0.703,353,0.703,354,0.663,355,0.663,356,0.703,357,0.703,358,0.663,359,0.663,360,1.084,361,0.663,362,0.703,363,0.703,364,0.676,365,0.703,366,0.703,367,0.676,368,0.703,369,0.703,370,0.676,371,0.703,372,0.676,373,0.703,374,0.663,375,0.703,376,0.703,377,0.676,378,0.703,379,0.703,380,0.663,381,0.703,382,0.703,383,0.65,384,0.65,385,0.703,386,0.703,387,0.663,388,0.703,389,0.703,390,0.663,391,0.703,392,0.703,393,0.663,394,0.703,395,0.703,396,0.663,397,0.663,398,0.663,399,0.703,400,0.703,401,0.676,402,2.145,403,0.703,404,0.703,405,0.638,406,0.703,407,0.703,408,0.638,409,0.703,410,0.703,411,0.614,412,0.703,413,1.366,414,0.638,415,0.703,416,0.65,417,0.579,418,0.703,419,0.65,420,0.663,421,0.703,422,0.703,423,0.626,424,0.65,425,0.676,1070,2.716]],["title/injectables/CreateUserGQL.html",[152,0.202,396,1.122]],["body/injectables/CreateUserGQL.html",[0,0.503,3,0.051,4,0.051,5,0.046,7,0.807,10,0.14,11,0.327,12,1.431,13,1.404,14,1.579,17,0.586,18,0.008,19,1.733,21,1.034,22,0.108,31,0.051,37,1.103,45,1.673,46,0.636,47,1.001,48,0.612,49,0.601,55,0.185,56,1.36,57,1.001,58,1.506,59,1.001,65,0.192,76,1.527,91,0.664,107,0.556,117,1.653,119,1.826,123,1.459,125,0.661,127,0.661,130,1.776,133,1.925,134,1.616,149,0.002,150,0.003,151,0.002,152,0.412,153,0.649,154,0.567,155,0.649,156,2.342,157,0.476,158,0.457,159,2.329,160,2.459,161,1.547,162,2.107,163,2.11,164,1.85,165,1.791,166,1.547,167,0.251,169,2.357,170,0.636,171,1.718,172,1.103,173,1.061,174,1.082,175,1.082,176,1.082,177,1.021,178,1.021,179,0.688,180,0.688,181,1.082,182,1.082,183,1.082,184,1.082,185,1.082,186,1.082,187,1.082,188,1.082,189,1.082,190,1.404,191,1.082,192,1.082,193,1.082,194,1.082,195,1.082,196,1.061,197,0.674,198,2.37,199,1.103,200,1.961,201,1.685,202,1.685,203,2.244,204,1.082,205,1.082,206,1.718,207,1.082,208,1.923,209,1.082,210,0.701,211,2.079,212,1.488,213,0.701,214,0.688,215,1.061,216,0.701,217,1.547,218,1.517,219,1.061,220,1.547,221,2.143,222,2.143,223,1.961,224,1.547,225,1.685,226,1.517,227,1.517,228,1.082,229,0.703,230,1.103,231,1.103,232,1.364,233,1.364,234,1.364,235,1.082,236,1.103,237,1.103,238,1.517,239,1.061,240,1.517,241,1.061,242,1.082,243,1.103,244,1.103,245,1.082,246,1.752,247,1.696,248,2.062,249,2.039,250,1.517,251,1.718,252,1.082,253,1.549,254,1.082,255,0.701,256,1.517,257,1.752,258,1.061,259,0.77,260,0.945,261,0.624,262,1.897,263,0.688,264,0.661,265,0.899,266,1.653,267,1.001,268,1.021,269,1.312,270,0.892,271,0.688,272,1.061,273,1.685,274,0.688,275,1.061,276,1.718,277,0.688,278,0.674,279,0.824,280,1.338,281,1.041,282,1.618,283,2.128,284,1.082,285,1.082,286,0.77,287,1.082,288,1.082,289,1.56,290,1.497,291,1.082,292,1.082,293,0.899,294,1.001,295,1.517,296,1.082,297,0.674,298,1.041,299,1.061,300,1.287,301,1.082,302,1.082,303,1.312,304,0.701,305,1.082,306,1.082,307,1.082,308,1.082,309,1.082,310,1.082,311,1.404,312,1.061,313,0.674,314,1.497,315,1.214,316,0.492,317,0.661,318,0.701,319,1.022,320,1.312,321,1.791,322,1.312,323,1.287,324,1.312,325,1.061,326,1.061,327,1.061,328,1.061,329,1.312,330,1.312,331,1.312,332,1.061,333,0.674,334,1.747,335,1.713,336,0.661,337,2.29,338,2.36,339,0.661,340,0.701,341,0.701,342,0.661,343,0.701,344,0.701,345,0.661,346,0.701,347,0.701,348,0.649,349,0.701,350,0.701,351,0.649,352,0.701,353,0.701,354,0.661,355,0.661,356,0.701,357,0.701,358,0.661,359,0.661,360,1.082,361,0.661,362,0.701,363,0.701,364,0.674,365,0.701,366,0.701,367,0.674,368,0.701,369,0.701,370,0.674,371,0.701,372,0.674,373,0.701,374,0.661,375,0.701,376,0.701,377,0.674,378,0.701,379,0.701,380,0.661,381,0.701,382,0.701,383,0.649,384,0.649,385,0.701,386,0.701,387,0.661,388,0.701,389,0.701,390,0.661,391,0.701,392,0.701,393,0.661,394,0.701,395,0.701,396,1.041,397,0.661,398,0.661,399,0.701,400,0.701,401,0.674,402,2.144,403,0.701,404,0.701,405,0.636,406,0.701,407,0.701,408,0.636,409,0.701,410,0.701,411,0.612,412,0.701,413,1.364,414,0.636,415,0.701,416,0.649,417,0.578,418,0.701,419,0.649,420,0.661,421,0.701,422,0.701,423,0.624,424,0.649,425,0.674,1071,2.709]],["title/injectables/CustomOwlDateTimeIntl.html",[152,0.202,725,3.484]],["body/injectables/CustomOwlDateTimeIntl.html",[3,0.138,4,0.138,5,0.125,17,0.44,18,0.008,22,0.182,31,0.138,35,4.552,36,4.552,37,1.54,40,3.301,41,2.146,42,2.429,55,0.138,65,0.15,82,1.371,149,0.006,150,0.007,151,0.006,152,0.372,154,1.54,167,0.683,229,0.581,337,2.07,452,2.375,532,1.763,533,1.763,724,7.927,725,6.429,804,5.257,1072,6.535,1073,7.363,1074,7.363,1075,7.526,1076,7.363,1077,7.363,1078,6.898,1079,7.363,1080,7.363,1081,7.363]],["title/interfaces/DatePeriod.html",[0,0.542,171,1.144]],["body/interfaces/DatePeriod.html",[0,0.506,2,1.289,3,0.051,4,0.051,5,0.047,7,0.809,10,0.141,11,0.329,12,1.437,13,1.41,14,1.583,17,0.586,18,0.008,19,1.735,21,1.033,22,0.108,31,0.051,37,1.108,45,1.675,46,0.641,47,1.007,48,0.617,49,0.605,55,0.185,56,1.614,57,1.007,58,1.51,59,1.007,65,0.192,76,1.532,91,0.668,107,0.56,117,1.658,119,1.831,123,1.466,125,0.667,127,0.667,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.654,155,0.654,156,2.337,159,2.328,160,2.459,161,1.554,162,2.11,163,2.113,164,1.854,165,1.796,166,1.554,169,2.358,170,0.641,171,1.803,172,1.11,173,1.068,174,1.089,175,1.089,176,1.089,177,1.027,178,1.027,179,0.693,180,0.693,181,1.089,182,1.089,183,1.089,184,1.089,185,1.089,186,1.089,187,1.089,188,1.089,189,1.089,190,1.41,191,1.089,192,1.089,193,1.089,194,1.089,195,1.089,196,1.068,197,0.68,198,2.371,199,1.11,200,1.965,201,1.691,202,1.691,203,2.245,204,1.089,205,1.089,206,1.724,207,1.089,208,1.928,209,1.089,210,0.707,211,2.054,212,1.494,213,0.707,214,0.693,215,1.068,216,0.707,217,1.554,218,1.524,219,1.068,220,1.554,221,2.113,222,2.113,223,1.965,224,1.554,225,1.691,226,1.524,227,1.524,228,1.089,229,0.704,230,1.11,231,1.11,232,1.371,233,1.371,234,1.371,235,1.089,236,1.11,237,1.11,238,1.524,239,1.068,240,1.524,241,1.068,242,1.089,243,1.11,244,1.11,245,1.089,246,1.524,247,1.41,248,1.965,249,1.904,250,1.524,251,1.724,252,1.089,253,1.553,254,1.089,255,0.707,256,1.524,257,1.758,258,1.068,259,0.772,260,0.951,261,0.629,262,1.9,263,0.693,264,0.667,265,0.901,266,1.658,267,1.007,268,1.027,269,1.319,270,0.897,271,0.693,272,1.068,273,1.691,274,0.693,275,1.068,276,1.724,277,0.693,278,0.68,279,0.826,280,1.345,281,1.047,282,1.624,283,2.13,284,1.089,285,1.089,286,0.772,287,1.089,288,1.089,289,1.565,290,1.503,291,1.089,292,1.089,293,0.901,294,1.007,295,1.524,296,1.089,297,0.68,298,1.047,299,1.068,300,1.293,301,1.089,302,1.089,303,1.319,304,0.707,305,1.089,306,1.089,307,1.089,308,1.089,309,1.089,310,1.089,311,1.41,312,1.068,313,0.68,314,1.503,315,1.22,316,0.495,317,0.667,318,0.707,319,1.024,320,1.319,321,1.796,322,1.319,323,1.293,324,1.319,325,1.068,326,1.068,327,1.068,328,1.068,329,1.319,330,1.319,331,1.319,332,1.068,333,0.68,334,1.748,335,1.714,336,0.667,337,2.292,338,2.363,339,0.667,340,0.707,341,0.707,342,0.667,343,0.707,344,0.707,345,0.667,346,0.707,347,0.707,348,0.654,349,0.707,350,0.707,351,0.654,352,0.707,353,0.707,354,0.667,355,0.667,356,0.707,357,0.707,358,0.667,359,0.667,360,1.089,361,0.667,362,0.707,363,0.707,364,0.68,365,0.707,366,0.707,367,0.68,368,0.707,369,0.707,370,0.68,371,0.707,372,0.68,373,0.707,374,0.667,375,0.707,376,0.707,377,0.68,378,0.707,379,0.707,380,0.667,381,0.707,382,0.707,383,0.654,384,0.654,385,0.707,386,0.707,387,0.667,388,0.707,389,0.707,390,0.667,391,0.707,392,0.707,393,0.667,394,0.707,395,0.707,396,0.667,397,0.667,398,0.667,399,0.707,400,0.707,401,0.68,402,2.148,403,0.707,404,0.707,405,0.641,406,0.707,407,0.707,408,0.641,409,0.707,410,0.707,411,0.617,412,0.707,413,1.371,414,0.641,415,0.707,416,0.654,417,0.582,418,0.707,419,0.654,420,0.667,421,0.707,422,0.707,423,0.629,424,0.654,425,0.68]],["title/injectables/DeletePitchGQL.html",[152,0.202,355,1.122]],["body/injectables/DeletePitchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.964,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,1.046,356,1.108,357,1.108,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,1082,2.725]],["title/injectables/DeleteTeamGQL.html",[152,0.202,387,1.122]],["body/injectables/DeleteTeamGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.124,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,1.046,388,1.108,389,1.108,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,1083,2.725]],["title/injectables/DeleteTournamentGQL.html",[152,0.202,393,1.122]],["body/injectables/DeleteTournamentGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.733,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,1.046,394,1.108,395,1.108,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,1084,2.725]],["title/injectables/DeleteUserGQL.html",[152,0.202,398,1.122]],["body/injectables/DeleteUserGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.802,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,1.046,399,1.108,400,1.108,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,1085,2.725]],["title/components/EditContactComponent.html",[27,0.437,466,1.237]],["body/components/EditContactComponent.html",[3,0.114,4,0.114,5,0.104,7,0.625,10,0.315,11,0.581,17,0.529,18,0.008,21,1.007,22,0.181,27,0.784,28,2.05,31,0.114,40,2.192,41,1.776,42,2.01,50,1.968,53,2.241,54,2.461,55,0.114,60,2.449,61,2.356,62,2.554,63,1.885,65,0.124,66,1.577,67,1.813,78,3.173,82,1.534,103,2.145,146,2.098,149,0.005,150,0.006,151,0.005,157,1.07,158,1.028,167,0.85,211,2.041,221,1.459,222,1.459,223,2.206,229,0.68,259,0.757,265,0.671,279,0.834,286,0.757,293,1.019,294,1.778,316,0.703,383,1.459,423,1.404,427,1.608,428,2.163,429,1.812,430,1.776,431,1.776,433,1.776,434,1.998,437,1.744,440,1.898,441,2.12,442,1.404,443,2.207,444,2.207,445,1.776,446,2.511,447,1.776,448,1.776,449,1.64,450,1.776,451,1.64,452,1.706,453,2.583,454,1.64,455,1.776,456,1.608,457,1.706,458,1.608,459,2.207,460,1.608,461,1.776,462,1.64,463,1.776,464,1.64,465,1.706,466,2.319,467,1.64,468,1.776,469,1.64,470,1.776,471,1.64,472,1.776,473,1.64,474,1.608,475,2.207,476,1.776,477,1.64,478,1.608,479,1.776,480,1.64,481,1.776,482,1.64,483,1.776,484,1.64,485,1.776,486,1.673,487,1.776,488,1.64,489,1.776,490,1.64,491,1.776,492,1.64,493,1.776,494,1.64,495,1.776,496,1.608,497,1.776,498,1.577,499,1.776,500,1.608,501,1.776,502,1.64,503,1.776,504,1.64,505,1.776,506,1.776,507,1.64,508,1.776,509,1.546,510,1.776,511,1.608,512,1.776,513,1.608,514,1.776,515,1.64,516,1.776,517,1.608,518,1.776,519,1.64,520,1.706,521,1.776,522,1.776,532,1.813,533,1.813,678,2.607,756,3.146,775,3.249,939,5.477,942,3.934,944,5.127,968,6.7,969,6.158,984,5.127,987,4.68,1086,7.528,1087,7.528,1088,5.407,1089,8.236,1090,7.57,1091,7.57,1092,6.158,1093,7.31,1094,7.57,1095,6.092,1096,6.7,1097,6.092,1098,7.57,1099,7.647,1100,6.092,1101,6.719,1102,7.57,1103,6.092,1104,7.57,1105,6.092,1106,6.719,1107,6.158,1108,6.092,1109,6.092,1110,5.405]],["title/components/EditPitchContactDialogComponent.html",[27,0.437,473,1.237]],["body/components/EditPitchContactDialogComponent.html",[3,0.115,4,0.115,5,0.104,7,0.627,10,0.316,11,0.583,17,0.493,18,0.008,22,0.181,23,3.963,24,2.89,26,1.896,27,0.786,28,2.055,29,2.736,31,0.115,40,3.298,41,1.784,42,2.019,50,1.977,53,3.175,54,2.472,55,0.115,60,2.45,61,2.356,62,2.556,63,1.89,65,0.125,66,1.584,67,1.818,82,1.414,83,2.234,85,2.055,86,3.255,88,3.334,90,3.585,103,2.148,112,2.358,114,2.062,115,1.936,135,2.534,138,2.019,139,2.169,149,0.005,150,0.006,151,0.005,167,0.801,208,1.494,229,0.681,259,0.76,265,0.674,270,1.805,279,0.836,286,0.974,293,1.07,294,1.939,316,0.706,358,2.238,427,1.616,428,2.169,429,1.821,430,1.784,431,1.784,433,1.784,434,2.004,437,1.749,440,1.749,441,1.714,442,1.41,443,2.213,444,2.213,445,1.784,446,2.516,447,1.784,448,1.784,449,1.648,450,1.784,451,1.648,452,1.714,453,2.586,454,1.648,455,1.784,456,1.616,457,1.714,458,1.616,459,2.213,460,1.616,461,1.784,462,1.648,463,1.784,464,1.648,465,1.714,466,1.648,467,1.648,468,1.784,469,1.648,470,1.784,471,1.648,472,1.784,473,2.323,474,1.616,475,2.213,476,1.784,477,1.648,478,1.616,479,1.784,480,1.648,481,1.784,482,1.648,483,1.784,484,1.648,485,1.784,486,1.68,487,1.784,488,1.648,489,1.784,490,1.648,491,1.784,492,1.648,493,1.784,494,1.648,495,1.784,496,1.616,497,1.784,498,1.584,499,1.784,500,1.616,501,1.784,502,1.648,503,1.784,504,1.648,505,1.784,506,1.784,507,1.648,508,1.784,509,1.554,510,1.784,511,1.616,512,1.784,513,1.616,514,1.784,515,1.648,516,1.784,517,1.616,518,1.784,519,1.648,520,1.714,521,1.784,522,1.784,532,1.818,533,1.818,584,5.729,610,3.801,627,2.598,904,3.952,905,5.59,906,5.142,911,4.979,921,3.952,1024,4.979,1086,7.217,1093,6.738,1111,6.12,1112,6.12,1113,7.592,1114,6.12,1115,6.12,1116,6.12,1117,6.12,1118,6.12,1119,4.693]],["title/components/EditRankingPenaltyComponent.html",[27,0.437,474,1.213]],["body/components/EditRankingPenaltyComponent.html",[0,0.682,3,0.108,4,0.108,5,0.098,7,0.592,10,0.298,11,0.562,17,0.532,18,0.008,19,1.418,21,0.888,22,0.182,23,3.882,24,2.728,26,1.79,27,0.765,28,2.001,29,2.583,30,3.731,31,0.108,40,3.256,41,1.684,42,1.906,50,1.866,53,3.11,54,2.334,55,0.108,60,2.444,61,2.351,62,2.536,63,1.823,65,0.118,66,1.495,67,1.754,82,1.364,83,2.307,85,2.001,86,3.17,88,3.247,90,3.458,91,1.316,103,2.104,112,2.297,114,1.947,115,1.828,129,2.892,130,1.391,133,1.503,134,1.357,135,2.392,137,3.572,138,1.906,139,2.092,149,0.005,150,0.006,151,0.005,153,2.024,162,1.411,163,1.384,164,1.357,165,1.384,167,0.85,229,0.635,259,0.733,262,1.281,264,1.411,265,1.07,267,1.357,279,0.806,286,0.733,293,0.806,311,1.985,316,0.666,414,2.126,417,1.931,427,1.525,428,2.092,429,1.719,430,1.684,431,1.684,433,1.684,434,1.933,437,1.687,440,1.687,441,1.618,442,1.331,443,2.135,444,2.135,445,1.684,446,2.464,447,1.684,448,1.684,449,1.555,450,1.684,451,1.555,452,1.618,453,2.542,454,1.555,455,1.684,456,1.525,457,1.618,458,1.525,459,2.135,460,1.525,461,1.684,462,1.555,463,1.684,464,1.555,465,1.618,466,1.555,467,1.555,468,1.684,469,1.555,470,1.684,471,1.555,472,1.684,473,1.555,474,2.231,475,2.135,476,1.684,477,1.555,478,1.525,479,1.684,480,1.555,481,1.684,482,1.555,483,1.684,484,1.555,485,1.684,486,1.586,487,1.684,488,1.555,489,1.684,490,1.555,491,1.684,492,1.555,493,1.684,494,1.555,495,1.684,496,1.525,497,1.684,498,1.495,499,1.684,500,1.525,501,1.684,502,1.555,503,1.684,504,1.555,505,1.684,506,1.684,507,1.555,508,1.684,509,1.467,510,1.684,511,1.525,512,1.684,513,1.525,514,1.684,515,1.555,516,1.684,517,1.525,518,1.684,519,1.555,520,1.618,521,1.684,522,1.684,532,1.384,533,1.384,582,6.859,627,3.108,678,2.521,959,4.7,976,4.347,1110,5.228,1120,7.01,1121,4.38,1122,6.54,1123,5.957,1124,7.135,1125,7.135,1126,6.54,1127,7.135,1128,7.502,1129,6.613,1130,7.135,1131,7.322,1132,5.777,1133,5.777,1134,5.128,1135,5.777,1136,5.128,1137,7.135,1138,6.499,1139,5.128,1140,5.552,1141,3.731,1142,4.7,1143,6.499,1144,5.957,1145,5.128,1146,6.499,1147,5.128,1148,6.499,1149,5.128,1150,5.128,1151,5.128,1152,5.128,1153,7.135,1154,4.7,1155,4.7,1156,5.128,1157,5.128]],["title/interfaces/EditRankingPenaltyComponentData.html",[0,0.542,1129,3.484]],["body/interfaces/EditRankingPenaltyComponentData.html",[0,0.809,2,3.237,3,0.128,4,0.128,5,0.117,10,0.354,11,0.624,17,0.486,18,0.008,19,1.327,21,0.854,22,0.19,23,3.735,24,3.237,26,2.124,27,0.774,28,2.024,29,3.064,30,4.426,31,0.128,40,3.12,41,1.998,42,2.261,50,2.214,53,2.992,54,2.769,55,0.128,60,1.706,61,1.641,62,2.334,63,1.706,65,0.14,67,1.641,82,1.277,83,2.404,85,1.706,86,2.703,88,2.769,90,3.237,91,1.067,103,1.706,112,1.958,114,2.31,115,2.168,129,3.432,130,1.544,133,1.669,134,1.463,135,2.837,137,4.237,138,2.261,139,2.323,149,0.005,150,0.006,151,0.005,153,1.947,162,1.674,163,1.641,164,1.61,165,1.641,262,1.988,264,1.674,265,1.008,267,2.037,311,2.181,414,2.037,417,1.849,434,1.809,474,1.809,582,5.806,1120,5.197,1121,5.197,1122,5.576,1123,5.576,1124,6.084,1125,6.084,1126,5.576,1127,6.084,1128,6.084,1129,6.574,1130,6.084,1137,7.218,1138,6.084,1140,6.166,1141,4.426,1142,7.054,1143,7.218,1144,6.615,1145,6.084,1146,7.218,1147,6.084,1148,7.218,1149,6.084,1150,6.084,1151,6.084,1152,6.084,1153,7.696,1154,5.576,1155,5.576,1156,6.084,1157,6.084]],["title/components/EditTournamentRoundComponent.html",[27,0.437,66,1.19]],["body/components/EditTournamentRoundComponent.html",[0,0.793,1,5.975,3,0.095,4,0.095,5,0.086,6,7.227,7,1.003,8,6.455,9,3.842,10,0.347,11,0.516,12,1.214,13,2.02,14,1.04,15,3.432,17,0.552,18,0.008,19,1.557,20,5.446,21,0.532,22,0.186,23,3.843,24,2.393,25,3.618,26,1.57,27,0.718,28,1.879,29,2.265,30,3.273,31,0.095,32,4.858,33,3.273,34,6.654,35,3.133,36,3.133,37,1.06,38,3.822,39,2.617,40,3.157,41,1.477,42,1.672,43,3.287,44,2.047,45,0.962,46,1.889,47,1.19,48,1.817,49,1.782,50,1.637,51,2.265,52,2.265,53,2.958,54,2.047,55,0.141,56,1.8,57,2.02,58,1.794,59,2.093,60,2.429,61,2.337,62,2.428,63,1.674,64,5.471,65,0.104,66,2.081,67,1.611,68,5.471,69,6.141,70,5.471,71,6.141,72,5.471,73,6.141,74,5.471,75,6.141,76,1.773,77,6.141,78,3.097,79,3.993,80,6.141,81,6.141,82,1.253,83,2.226,84,5.471,85,2.246,86,3.3,87,6.141,88,3.049,89,5.39,90,3.176,91,1.303,92,3.842,93,3.842,94,3.273,95,3.842,96,5.471,97,4.123,98,4.123,99,6.141,100,4.123,101,6.141,102,4.123,103,2.002,104,5.471,105,4.123,106,4.123,107,1.38,108,4.123,109,5.471,110,4.123,111,2.617,112,2.157,113,6.541,114,1.708,115,1.603,116,4.123,117,1.214,118,5.471,119,1.237,120,4.123,121,4.123,122,4.123,123,1.237,124,4.123,125,1.237,126,4.123,127,1.237,128,4.123,129,2.537,130,1.277,131,4.123,132,4.123,133,1.04,134,0.855,135,2.098,136,4.123,137,3.133,138,1.672,139,1.922,140,4.123,141,5.471,142,4.158,143,5.471,144,6.541,145,2.929,146,1.745,147,4.123,148,2.617,149,0.004,150,0.005,151,0.004,157,0.89,158,0.855,167,0.882,229,0.693,253,1.354,259,0.673,265,0.558,279,0.741,286,0.673,293,0.741,316,0.584,427,1.338,428,1.922,430,1.477,431,1.477,433,1.477,437,1.55,440,2.022,441,2.344,442,1.168,443,1.961,444,1.961,445,1.477,446,2.344,447,1.477,448,1.477,449,1.364,450,1.477,451,1.364,452,1.419,453,2.439,454,1.364,455,1.477,456,1.338,457,1.419,458,1.338,459,1.961,460,1.338,461,1.477,462,1.364,463,1.477,464,1.364,465,1.419,466,1.364,467,1.364,468,1.477,469,1.364,470,1.477,471,1.364,472,1.477,473,1.364,474,1.338,475,1.961,476,1.477,477,1.364,478,1.338,479,1.477,480,1.364,481,1.477,482,1.364,483,1.477,484,1.364,485,1.477,486,1.391,487,1.477,488,1.364,489,1.477,490,1.364,491,1.477,492,1.364,493,1.477,494,1.364,495,1.477,496,1.338,497,1.477,498,1.312,499,1.477,500,1.338,501,1.477,502,1.364,503,1.477,504,1.364,505,1.477,506,1.477,507,1.364,508,1.477,509,1.286,510,1.477,511,1.338,512,1.477,513,1.338,514,1.477,515,1.364,516,1.477,517,1.338,518,1.477,519,1.364,520,1.419,521,1.477,522,1.477,532,2.004,533,2.004,627,3.552,678,3.069,976,4.774,1158,6.726,1159,6.726,1160,6.726,1161,6.726,1162,5.068,1163,6.726,1164,5.068,1165,5.068,1166,5.068,1167,5.068,1168,5.068,1169,5.068,1170,5.068,1171,5.068,1172,5.068,1173,5.068,1174,5.068,1175,5.068,1176,5.068,1177,5.068,1178,5.068,1179,5.068,1180,5.068,1181,6.726,1182,6.726,1183,6.726,1184,6.726,1185,4.555,1186,4.123,1187,6.726,1188,7.137,1189,6.726,1190,6.726]],["title/components/EditUserDialogComponent.html",[27,0.437,477,1.237]],["body/components/EditUserDialogComponent.html",[3,0.098,4,0.098,5,0.089,7,0.539,10,0.271,11,0.528,17,0.547,18,0.008,21,0.723,22,0.186,23,3.745,24,2.481,25,5.823,26,1.628,27,0.731,28,1.913,29,2.348,31,0.098,32,4.845,40,3.185,41,1.531,42,1.733,50,1.697,53,3,54,2.122,55,0.098,60,2.433,61,2.341,62,2.503,63,1.714,65,0.107,66,1.36,67,1.649,78,3.347,79,4.089,82,1.283,83,2.292,85,2.163,86,3.03,88,3.104,90,3.252,103,2.03,112,2.596,114,2.589,115,2.431,129,3.448,130,1.308,134,0.887,135,2.851,138,2.535,139,2.482,142,3.248,149,0.004,150,0.005,151,0.004,157,1.209,158,1.162,167,0.875,177,2.212,211,1.951,221,1.649,222,1.649,229,0.644,246,2.07,247,1.916,248,1.714,249,1.748,250,2.07,251,1.308,253,1.057,259,0.689,265,0.578,279,1.08,281,1.991,286,0.689,293,0.758,316,0.606,396,2.162,397,2.162,424,1.953,427,1.387,428,1.968,429,1.563,430,1.531,431,1.531,433,1.531,434,1.818,437,1.587,440,1.951,441,1.929,442,1.21,443,2.008,444,2.008,445,1.531,446,2.377,447,1.531,448,1.531,449,1.414,450,1.531,451,1.414,452,1.471,453,2.468,454,1.414,455,1.531,456,1.387,457,1.471,458,1.387,459,2.008,460,1.387,461,1.531,462,1.414,463,1.531,464,1.414,465,1.471,466,1.414,467,1.414,468,1.531,469,1.414,470,1.531,471,1.414,472,1.531,473,1.414,474,1.387,475,2.008,476,1.531,477,2.195,478,1.387,479,1.531,480,1.414,481,1.531,482,1.414,483,1.531,484,1.414,485,1.531,486,1.442,487,1.531,488,1.414,489,1.531,490,1.414,491,1.531,492,1.414,493,1.531,494,1.414,495,1.531,496,1.387,497,1.531,498,1.36,499,1.531,500,1.387,501,1.531,502,1.414,503,1.531,504,1.414,505,1.531,506,1.531,507,1.414,508,1.531,509,1.333,510,1.531,511,1.387,512,1.531,513,1.387,514,1.531,515,1.414,516,1.531,517,1.387,518,1.531,519,1.414,520,1.471,521,1.531,522,1.531,530,3.851,532,1.649,533,1.649,534,4.562,584,6.11,610,3.448,627,2.23,678,2.992,756,2.713,873,5.603,889,4.274,890,5.603,892,5.603,895,4.274,904,3.392,905,5.204,906,4.664,911,4.274,921,4.962,939,5.778,942,3.392,944,5.523,945,4.663,953,6.113,976,4.089,1024,4.274,1025,4.663,1029,4.663,1099,6.82,1101,6.82,1106,4.663,1141,3.392,1191,8.398,1192,7.683,1193,6.887,1194,8.155,1195,4.274,1196,7.683,1197,6.887,1198,5.253,1199,6.887,1200,5.253,1201,5.253,1202,5.253,1203,5.253,1204,5.253,1205,5.253,1206,5.253,1207,5.253,1208,4.663,1209,5.253,1210,5.222,1211,5.253,1212,5.253,1213,5.253,1214,5.253,1215,5.253,1216,5.253,1217,5.253,1218,7.683,1219,8.155,1220,5.253,1221,5.253,1222,6.887,1223,5.253,1224,6.887,1225,6.887,1226,6.887,1227,5.253,1228,5.253,1229,5.253,1230,5.253,1231,5.253,1232,5.253,1233,5.253,1234,4.663,1235,4.663,1236,6.887,1237,6.887,1238,6.887,1239,6.887,1240,6.887,1241,6.887]],["title/components/EditmatchPitchComponent.html",[27,0.437,467,1.237]],["body/components/EditmatchPitchComponent.html",[3,0.106,4,0.106,5,0.096,7,0.579,10,0.292,11,0.554,17,0.529,18,0.008,21,0.88,22,0.188,23,3.85,24,2.667,26,1.75,27,0.757,28,1.98,29,2.525,30,3.648,31,0.106,43,3.464,44,2.282,50,1.825,51,2.525,52,2.525,55,0.106,60,2.441,61,2.348,62,2.332,63,1.797,65,0.115,66,1.462,67,1.729,78,2.781,82,1.344,83,2.17,85,1.98,86,3.137,90,3.409,103,2.087,112,2.273,114,1.904,115,1.787,137,3.492,138,1.863,139,1.614,146,2.485,149,0.004,150,0.006,151,0.004,157,0.992,158,1.342,167,0.854,229,0.684,259,0.901,260,1.858,265,0.622,270,1.854,279,0.795,286,0.921,293,0.795,316,0.651,427,1.491,428,2.062,429,1.68,430,1.647,431,1.647,433,1.647,434,1.905,437,1.663,440,1.996,441,2.228,442,1.302,443,2.104,444,2.104,445,1.647,446,2.444,447,1.647,448,1.647,449,1.521,450,1.647,451,1.521,452,1.582,453,2.525,454,1.521,455,1.647,456,1.491,457,1.582,458,1.491,459,2.104,460,1.491,461,1.647,462,1.521,463,1.647,464,1.943,465,2.022,466,1.521,467,2.257,468,1.647,469,1.521,470,1.647,471,1.521,472,1.647,473,1.521,474,1.491,475,2.104,476,1.647,477,1.521,478,1.491,479,1.647,480,1.521,481,1.647,482,1.521,483,1.647,484,1.521,485,1.647,486,1.551,487,1.647,488,1.521,489,1.647,490,1.521,491,1.647,492,1.521,493,1.647,494,1.521,495,1.647,496,1.491,497,1.647,498,1.462,499,1.647,500,1.491,501,1.647,502,1.521,503,1.647,504,1.521,505,1.647,506,1.647,507,1.521,508,1.647,509,1.434,510,1.647,511,1.491,512,1.647,513,1.491,514,1.647,515,1.521,516,1.647,517,1.491,518,1.647,519,1.521,520,1.582,521,1.647,522,1.647,532,1.905,533,1.905,585,3.354,610,3.983,611,5.182,627,2.398,678,3.234,756,2.917,843,3.826,907,4.283,924,4.286,925,4.286,928,5.473,939,5.355,942,3.648,1012,4.033,1022,4.283,1023,5.148,1032,5.014,1065,6.407,1110,5.154,1119,4.918,1242,5.014,1243,7.218,1244,7.955,1245,7.218,1246,6.031,1247,6.031,1248,6.407,1249,7.218,1250,6.819,1251,8.383,1252,4.65,1253,7.218,1254,5.473,1255,5.649,1256,6.031,1257,5.649,1258,7.218,1259,5.649,1260,5.649,1261,5.649,1262,5.649,1263,5.649,1264,4.595,1265,5.473,1266,4.283,1267,4.033,1268,4.283,1269,4.283,1270,4.283,1271,4.283,1272,4.889,1273,4.283,1274,4.283,1275,4.283,1276,6.031,1277,4.283,1278,4.283,1279,3.826,1280,5.014,1281,5.649,1282,3.648,1283,5.014,1284,6.407,1285,6.407,1286,7.218,1287,6.407,1288,6.356,1289,7.218,1290,7.218,1291,4.889]],["title/components/EditmatchResultComponent.html",[27,0.437,469,1.237]],["body/components/EditmatchResultComponent.html",[3,0.113,4,0.113,5,0.103,7,0.619,10,0.312,11,0.577,17,0.538,18,0.008,19,1.663,22,0.184,23,3.943,24,2.849,26,1.87,27,0.78,28,2.041,29,2.697,31,0.113,40,3.374,41,1.759,42,1.99,50,1.949,53,3.251,54,2.437,55,0.113,60,2.448,61,2.355,62,2.378,63,1.873,65,0.123,66,1.562,67,1.802,82,1.401,83,1.948,85,2.319,86,3.234,88,3.569,90,3.553,103,2.137,112,2.343,114,2.033,115,1.909,137,3.73,138,1.99,139,2.15,149,0.005,150,0.006,151,0.005,167,0.857,201,2.002,202,2.002,229,0.647,259,0.914,260,1.903,265,0.664,279,0.829,286,0.753,293,0.829,316,0.696,427,1.593,428,2.15,429,1.795,430,1.759,431,1.759,433,1.759,434,1.986,437,1.734,440,1.734,441,1.69,442,1.39,443,2.194,444,2.194,445,1.759,446,2.503,447,1.759,448,1.759,449,1.624,450,1.759,451,1.624,452,1.69,453,2.576,454,1.624,455,1.759,456,1.593,457,1.69,458,1.593,459,2.194,460,1.593,461,1.759,462,1.624,463,1.759,464,1.624,465,1.69,466,1.624,467,1.624,468,1.759,469,2.311,470,1.759,471,1.624,472,1.759,473,1.624,474,1.593,475,2.194,476,1.759,477,1.624,478,1.593,479,1.759,480,1.624,481,1.759,482,1.624,483,1.759,484,1.624,485,1.759,486,1.657,487,1.759,488,1.624,489,1.759,490,1.624,491,1.759,492,1.624,493,1.759,494,1.624,495,1.759,496,1.593,497,1.759,498,1.562,499,1.759,500,1.593,501,1.759,502,1.624,503,1.759,504,1.624,505,1.759,506,1.759,507,1.624,508,1.759,509,1.532,510,1.759,511,1.593,512,1.759,513,1.593,514,1.759,515,1.624,516,1.759,517,1.593,518,1.759,519,1.624,520,1.69,521,1.759,522,1.759,532,1.445,533,1.445,627,2.561,678,3.102,691,5.355,907,4.575,924,4.468,925,4.468,928,5.705,1110,5.373,1250,6.985,1252,4.719,1268,4.575,1292,5.355,1293,7.525,1294,8.2,1295,7.525,1296,7.525,1297,6.034,1298,6.034,1299,6.034,1300,6.034,1301,6.034,1302,6.034,1303,7.525,1304,5.355,1305,7.525,1306,5.355,1307,6.034,1308,6.034,1309,6.034,1310,6.034,1311,6.034,1312,6.034,1313,7.525,1314,6.034,1315,6.034]],["title/components/EditmatchTimeComponent.html",[27,0.437,471,1.237]],["body/components/EditmatchTimeComponent.html",[3,0.111,4,0.111,5,0.101,7,0.607,10,0.306,11,0.571,17,0.525,18,0.008,22,0.186,23,3.916,24,2.795,26,1.834,27,0.774,28,2.024,29,2.646,31,0.111,34,6.9,35,3.66,36,3.66,37,1.239,38,4.072,39,3.057,40,3.274,41,1.726,42,1.953,50,1.912,55,0.111,56,1.556,60,2.446,61,2.353,62,2.365,63,1.851,65,0.121,66,1.532,67,1.781,82,1.385,83,2.104,85,2.232,86,3.206,90,3.511,92,4.488,93,4.488,94,3.823,95,4.488,103,2.123,137,3.66,138,1.953,139,1.691,142,3.66,149,0.005,150,0.006,151,0.005,167,0.844,229,0.673,253,1.192,259,0.91,260,1.89,265,0.652,279,0.819,286,0.744,293,0.819,316,0.683,427,1.563,428,2.125,429,1.761,430,1.726,431,1.726,433,1.726,434,1.963,437,1.713,440,1.873,441,2.277,442,1.364,443,2.168,444,2.168,445,1.726,446,2.486,447,1.726,448,1.726,449,1.594,450,1.726,451,1.594,452,1.658,453,2.561,454,1.594,455,1.726,456,1.563,457,1.658,458,1.563,459,2.168,460,1.563,461,1.726,462,1.594,463,1.726,464,1.594,465,1.658,466,1.594,467,1.594,468,1.726,469,1.594,470,1.726,471,2.296,472,1.726,473,1.594,474,1.563,475,2.168,476,1.726,477,1.594,478,1.563,479,1.726,480,1.594,481,1.726,482,1.594,483,1.726,484,1.594,485,1.726,486,1.625,487,1.726,488,1.594,489,1.726,490,1.594,491,1.726,492,1.594,493,1.726,494,1.594,495,1.726,496,1.563,497,1.726,498,1.532,499,1.726,500,1.563,501,1.726,502,1.594,503,1.726,504,1.594,505,1.726,506,1.726,507,1.594,508,1.726,509,1.503,510,1.726,511,1.563,512,1.726,513,1.563,514,1.726,515,1.594,516,1.726,517,1.563,518,1.726,519,1.594,520,1.658,521,1.726,522,1.726,532,1.781,533,1.781,627,2.513,678,3.22,907,4.488,924,4.415,925,4.415,928,5.638,1110,5.309,1250,6.937,1252,4.699,1268,4.488,1282,3.823,1316,5.254,1317,7.436,1318,8.13,1319,7.436,1320,7.798,1321,7.436,1322,7.436,1323,7.436,1324,5.92,1325,5.92,1326,5.92,1327,5.92,1328,5.92,1329,7.436,1330,5.92,1331,6.6,1332,7.436,1333,5.309,1334,5.638,1335,7.436,1336,5.638]],["title/injectables/EndSeasonGQL.html",[152,0.202,377,1.144]],["body/injectables/EndSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.125,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,1.066,378,1.108,379,1.108,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,1337,2.725]],["title/injectables/EventGQL.html",[152,0.202,401,1.144]],["body/injectables/EventGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.588,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.492,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,1.065,402,2.146,403,1.108,404,1.108,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1338,2.723]],["title/components/EventsComponent.html",[27,0.437,478,1.213]],["body/components/EventsComponent.html",[3,0.12,4,0.12,5,0.109,7,0.655,10,0.33,11,0.598,17,0.502,18,0.008,22,0.183,27,0.801,28,2.094,31,0.12,38,4.12,43,3.663,44,2.58,50,2.063,51,3.484,52,2.855,55,0.12,60,2.454,61,2.36,62,2.418,63,1.94,65,0.13,66,1.653,67,1.866,82,1.451,83,1.653,85,2.094,91,0.994,103,2.18,149,0.005,150,0.006,151,0.005,167,0.813,229,0.664,253,1.286,258,2.094,259,0.78,265,0.703,279,0.858,286,0.78,293,0.858,316,0.736,405,2.057,427,1.686,428,2.227,429,1.9,430,1.862,431,1.862,433,1.862,434,2.057,437,1.796,440,1.472,441,1.789,442,1.472,443,2.272,444,2.272,445,1.862,446,2.553,447,1.862,448,1.862,449,1.719,450,1.862,451,1.719,452,1.789,453,2.618,454,1.719,455,1.862,456,1.686,457,1.789,458,1.686,459,2.272,460,1.686,461,1.862,462,1.719,463,1.862,464,1.719,465,1.789,466,1.719,467,1.719,468,1.862,469,1.719,470,1.862,471,1.719,472,1.862,473,1.719,474,1.686,475,2.272,476,1.862,477,1.719,478,2.312,479,1.862,480,1.719,481,1.862,482,1.719,483,1.862,484,1.719,485,1.862,486,1.754,487,1.862,488,1.719,489,1.862,490,1.719,491,1.862,492,1.719,493,1.862,494,1.719,495,1.862,496,1.686,497,1.862,498,1.653,499,1.862,500,1.686,501,1.862,502,1.719,503,1.862,504,1.719,505,1.862,506,1.862,507,1.719,508,1.862,509,1.621,510,1.862,511,1.686,512,1.862,513,1.686,514,1.862,515,1.719,516,1.862,517,1.686,518,1.862,519,1.719,520,1.789,521,1.862,522,1.862,532,1.53,533,1.53,576,6.34,1334,4.842,1336,4.842,1339,5.669,1340,8.411,1341,7.794,1342,6.387,1343,7.794,1344,7.794,1345,6.387,1346,6.387,1347,5.196,1348,6.387,1349,6.387,1350,6.387,1351,3.948,1352,6.387,1353,7.794,1354,7.794]],["title/modules/EventsModule.html",[540,1.424,552,3.281]],["body/modules/EventsModule.html",[3,0.135,4,0.135,5,0.123,18,0.008,22,0.19,31,0.135,55,0.135,65,0.147,149,0.006,150,0.007,151,0.006,442,1.66,478,2.556,540,2.233,542,2.712,543,3.608,544,4.432,545,3.721,546,3.721,547,4.432,552,6.93,553,5.008,554,4.466,555,3.843,556,3.843,559,3.467,560,3.383,562,4.278,576,5.862,721,6.359,722,5.862,1355,6.396,1356,6.396,1357,6.396,1358,6.396,1359,6.704,1360,7.206,1361,7.206,1362,6.396,1363,6.396]],["title/modules/EventsRoutingModule.html",[540,1.424,1359,3.281]],["body/modules/EventsRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.921,478,2.256,537,3.627,542,2.809,559,3.089,560,3.452,589,4.431,590,4.789,591,4.431,593,4.266,594,4.613,1359,6.101,1362,6.624,1364,7.463]],["title/modules/GraphQLModule.html",[540,1.424,738,3.281]],["body/modules/GraphQLModule.html",[3,0.137,4,0.137,5,0.125,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,314,1.946,315,1.946,442,1.684,540,2.265,542,2.751,543,3.66,544,3.66,545,3.775,546,4.598,547,4.228,554,4.503,555,3.898,556,3.898,560,3.411,612,6.379,614,5.823,634,5.947,641,6.488,738,6.823,1365,6.488,1366,6.488,1367,7.31,1368,8.444,1369,8.444,1370,5.947,1371,5.947,1372,7.31]],["title/injectables/GraphqlService.html",[152,0.202,612,3.112]],["body/injectables/GraphqlService.html",[3,0.114,4,0.114,5,0.104,10,0.314,17,0.452,18,0.008,22,0.197,31,0.114,40,3.098,41,1.773,42,2.007,53,3.168,55,0.114,65,0.124,78,3.411,82,1.409,83,2.37,88,3.325,107,1.248,130,1.436,139,2.161,146,3.152,149,0.005,150,0.006,151,0.005,152,0.332,154,1.273,157,1.068,167,0.702,170,1.429,190,1.933,203,1.429,214,1.544,229,0.48,262,1.349,273,1.485,314,2.208,315,1.743,319,1.165,334,1.133,335,1.111,437,1.743,440,1.402,441,1.704,530,4.066,532,1.457,533,1.457,534,4.887,593,3.478,612,5.122,613,5.911,614,5.659,631,4.613,632,5.4,634,4.949,643,6.713,645,6.153,753,4.12,775,4.39,851,4.12,865,6.153,876,7.526,898,6.153,950,4.949,962,4.25,1075,7.306,1370,7.64,1371,6.153,1373,5.4,1374,8.611,1375,6.084,1376,9.154,1377,6.084,1378,6.084,1379,7.564,1380,8.125,1381,5.4,1382,6.084,1383,6.084,1384,8.231,1385,6.084,1386,6.084,1387,6.713,1388,5.4,1389,6.153,1390,4.613,1391,4.613,1392,5.735,1393,6.084,1394,6.084,1395,6.084,1396,7.564,1397,6.084,1398,6.084,1399,6.084,1400,6.084,1401,6.084,1402,6.084,1403,6.084,1404,6.084,1405,6.084,1406,8.125,1407,6.084,1408,6.084,1409,7.564,1410,7.564,1411,8.611,1412,6.084,1413,6.084,1414,6.084,1415,6.084,1416,6.084,1417,6.084,1418,6.084,1419,6.084,1420,5.4,1421,6.084,1422,6.084,1423,6.084,1424,6.084,1425,7.564,1426,7.564,1427,6.084,1428,6.084,1429,6.084,1430,6.084,1431,6.084,1432,6.084,1433,6.084,1434,4.949,1435,7.564,1436,6.084,1437,6.084,1438,5.735,1439,6.084,1440,6.084,1441,4.613,1442,6.084,1443,6.084,1444,5.4,1445,7.564,1446,6.084,1447,6.084,1448,6.084,1449,6.084,1450,6.084]],["title/injectables/GraphqlSubscriptionService.html",[152,0.202,614,2.841]],["body/injectables/GraphqlSubscriptionService.html",[0,0.766,3,0.122,4,0.122,5,0.111,10,0.336,11,0.604,17,0.506,18,0.008,19,1.525,21,0.89,22,0.184,31,0.122,55,0.147,65,0.133,82,1.467,83,2.441,85,2.246,112,1.856,115,2.787,134,1.096,135,3.26,139,2.25,145,3.429,146,2.237,149,0.005,150,0.006,151,0.005,152,0.346,154,1.359,158,1.43,167,0.851,229,0.622,259,0.65,319,0.972,334,1.21,335,1.186,405,2.069,408,2.069,411,2.098,417,1.879,437,1.814,440,1.814,441,2.206,532,1.886,533,1.886,602,5.306,614,4.868,633,7.037,665,5.333,666,5.472,667,5.472,775,4.2,829,5.623,868,3.857,891,5.923,962,3.355,1282,4.195,1389,7.618,1390,4.926,1391,4.926,1392,4.926,1451,5.285,1452,7.521,1453,7.521,1454,7.819,1455,6.497,1456,5.966,1457,6.894,1458,7.521,1459,7.521,1460,6.497,1461,6.99,1462,6.497,1463,6.497,1464,6.497,1465,6.497,1466,6.497,1467,6.497,1468,6.497,1469,5.766,1470,5.766,1471,5.971,1472,4.639,1473,5.285,1474,5.285,1475,5.766,1476,6.99,1477,5.285,1478,5.766,1479,5.766,1480,8.009,1481,8.009,1482,5.766,1483,5.766,1484,5.766,1485,5.766,1486,5.766,1487,5.766,1488,5.766,1489,5.766,1490,5.766,1491,5.766,1492,4.926,1493,5.766,1494,5.766,1495,5.766,1496,5.766,1497,5.766,1498,6.99,1499,5.766]],["title/injectables/I18Service.html",[38,2.001,152,0.202]],["body/injectables/I18Service.html",[3,0.131,4,0.131,5,0.119,10,0.361,11,0.631,17,0.539,18,0.008,21,0.996,22,0.188,31,0.131,38,3.583,40,3.356,41,2.399,42,2.307,55,0.131,65,0.143,82,1.302,85,2.247,94,5.646,146,2.408,149,0.005,150,0.006,151,0.005,152,0.361,154,1.463,157,1.228,158,1.18,167,0.865,229,0.65,319,0.863,334,1.302,335,1.277,437,1.896,440,1.896,441,2.305,532,1.971,533,1.971,627,2.968,636,4.323,637,3.729,804,4.993,805,7.343,829,5.875,1500,5.688,1501,8.744,1502,8.744,1503,8.228,1504,8.744,1505,6.992,1506,6.992,1507,8.228,1508,6.992,1509,6.992,1510,9.205,1511,9.026,1512,6.992,1513,8.228,1514,6.992,1515,6.992,1516,6.992,1517,6.992,1518,6.992,1519,5.688,1520,6.992,1521,6.992,1522,6.992,1523,9.205,1524,6.992,1525,6.992,1526,6.992]],["title/interfaces/IPossibleKickoffs.html",[0,0.542,1527,3.281]],["body/interfaces/IPossibleKickoffs.html",[0,0.899,2,2.908,3,0.115,4,0.115,5,0.105,10,0.474,11,0.585,17,0.531,18,0.008,19,1.81,21,0.869,22,0.191,27,0.725,28,1.897,31,0.115,38,3.604,39,3.18,43,3.318,44,2.487,45,1.572,50,1.989,51,2.753,52,2.753,55,0.115,56,1.809,58,1.239,60,1.533,61,1.475,63,1.533,65,0.126,67,1.475,78,2.935,79,3.656,82,1.147,83,1.594,85,1.897,103,1.533,111,3.935,112,1.759,114,2.075,115,2.411,138,2.031,139,1.759,142,3.807,145,2.681,146,2.978,148,3.935,149,0.005,150,0.006,151,0.005,158,1.286,253,1.239,259,0.889,261,1.419,270,1.809,286,0.918,289,1.392,290,1.419,319,1.067,434,1.625,498,1.594,520,2.134,568,4.397,756,3.18,775,3.284,924,3.656,925,3.656,939,5.116,987,4.711,1023,4.731,1119,3.807,1246,4.668,1247,4.668,1252,4.273,1254,4.668,1256,5.778,1265,5.778,1266,4.668,1267,4.397,1269,4.668,1270,4.668,1271,4.668,1272,5.161,1273,4.668,1274,4.668,1275,4.668,1276,6.557,1277,4.668,1278,4.668,1279,5.605,1282,3.976,1333,5.909,1527,6.346,1528,4.668,1529,4.668,1530,7.23,1531,7.23,1532,7.23,1533,6.175,1534,5.778,1535,5.009,1536,4.668,1537,4.17,1538,6.199,1539,5.009,1540,5.009,1541,5.009,1542,5.009,1543,5.009,1544,7.23,1545,5.009,1546,5.009,1547,5.009,1548,4.668,1549,5.009,1550,5.009,1551,5.009,1552,5.009,1553,5.009,1554,5.009,1555,5.009,1556,5.009,1557,5.009,1558,6.199,1559,5.009,1560,5.009,1561,4.668,1562,5.009,1563,5.009,1564,5.009,1565,5.009,1566,6.199,1567,6.199,1568,6.199,1569,5.009,1570,5.009,1571,5.009,1572,5.009,1573,6.732,1574,5.009,1575,5.009,1576,5.009,1577,5.009,1578,5.009,1579,5.009,1580,5.009,1581,5.009,1582,5.009,1583,5.009,1584,5.009,1585,5.009,1586,5.009,1587,6.199,1588,5.009,1589,5.009,1590,5.009,1591,5.009,1592,5.009,1593,5.009,1594,5.009,1595,4.397,1596,5.009,1597,5.009,1598,5.009,1599,5.009,1600,5.009,1601,5.009,1602,5.009,1603,5.009,1604,6.199,1605,6.199]],["title/interfaces/ISnackBarData.html",[0,0.542,1606,3.484]],["body/interfaces/ISnackBarData.html",[0,0.868,2,3.475,3,0.138,4,0.138,5,0.125,10,0.38,11,0.65,17,0.506,18,0.008,21,0.991,22,0.173,26,2.28,27,0.807,28,2.11,29,3.29,31,0.138,55,0.159,60,1.832,61,1.762,63,1.832,65,0.15,67,1.762,82,1.37,85,1.832,91,1.146,103,1.832,149,0.006,150,0.007,151,0.006,434,1.942,509,1.868,603,5.254,962,4.737,1606,6.77,1607,5.986,1608,7.463,1609,6.531,1610,6.531,1611,6.531,1612,6.531]],["title/interfaces/ITeamCanPlayAtDate.html",[0,0.542,1533,3.281]],["body/interfaces/ITeamCanPlayAtDate.html",[0,0.904,2,2.936,3,0.116,4,0.116,5,0.106,10,0.448,11,0.588,17,0.458,18,0.008,19,1.726,21,0.873,22,0.191,27,0.73,28,1.909,31,0.116,38,3.62,39,3.211,43,3.338,44,2.512,45,1.724,50,2.009,51,2.78,52,2.78,55,0.116,56,1.604,58,1.673,60,1.548,61,1.489,63,1.548,65,0.127,67,1.489,78,2.953,79,3.692,82,1.158,83,1.61,85,1.909,103,1.548,111,3.959,112,1.777,114,2.095,115,2.425,138,2.051,139,1.777,142,3.844,145,3.62,146,2.988,148,3.959,149,0.005,150,0.006,151,0.005,158,1.294,253,1.252,259,0.892,261,1.433,270,1.604,286,0.868,289,1.405,290,1.433,319,1.071,434,1.641,498,1.61,520,2.147,568,4.44,756,3.211,775,3.316,924,3.692,925,3.692,939,5.139,987,4.74,1023,4.752,1119,3.844,1246,4.715,1247,4.715,1252,4.292,1254,4.715,1256,5.813,1265,5.813,1266,4.715,1267,4.44,1269,4.715,1270,4.715,1271,4.715,1272,5.192,1273,4.715,1274,4.715,1275,4.715,1276,6.579,1277,4.715,1278,4.715,1279,5.63,1282,4.015,1333,5.935,1527,6.196,1528,4.715,1529,4.715,1530,6.237,1531,6.237,1532,6.237,1533,5.935,1534,5.813,1535,5.059,1536,4.715,1537,4.211,1538,7.25,1539,5.059,1540,5.059,1541,5.059,1542,5.059,1543,5.059,1544,7.25,1545,5.059,1546,5.059,1547,5.059,1548,4.715,1549,5.059,1550,5.059,1551,5.059,1552,5.059,1553,5.059,1554,5.059,1555,5.059,1556,5.059,1557,5.059,1558,6.237,1559,5.059,1560,5.059,1561,4.715,1562,5.059,1563,5.059,1564,5.059,1565,5.059,1566,6.237,1567,6.237,1568,6.237,1569,5.059,1570,5.059,1571,5.059,1572,5.059,1573,6.762,1574,5.059,1575,5.059,1576,5.059,1577,5.059,1578,5.059,1579,5.059,1580,5.059,1581,5.059,1582,5.059,1583,5.059,1584,5.059,1585,5.059,1586,5.059,1587,6.237,1588,5.059,1589,5.059,1590,5.059,1591,5.059,1592,5.059,1593,5.059,1594,5.059,1595,4.44,1596,5.059,1597,5.059,1598,5.059,1599,5.059,1600,5.059,1601,5.059,1602,5.059,1603,5.059,1604,6.237,1605,6.237]],["title/interfaces/IntrospectionResultData.html",[0,0.542,1613,2.968]],["body/interfaces/IntrospectionResultData.html",[0,0.823,2,3.293,3,0.131,4,0.131,5,0.119,10,0.36,11,0.63,16,5.866,17,0.572,18,0.008,21,0.947,22,0.178,31,0.131,37,1.719,55,0.179,65,0.142,107,1.431,133,1.431,134,1.386,149,0.007,150,0.006,151,0.005,152,0.361,156,1.736,157,1.224,159,2.006,169,2.202,170,1.638,190,1.638,197,1.736,198,1.736,203,1.93,229,0.649,313,1.736,314,2.119,315,2.012,316,0.947,317,1.703,319,0.86,333,1.736,334,1.299,335,1.274,337,1.703,425,1.736,1438,5.287,1441,6.622,1456,4.723,1492,6.229,1613,5.64,1614,4.979,1615,6.974,1616,7.584,1617,7.292,1618,6.19,1619,6.229,1620,5.673]],["title/interfaces/IntrospectionResultData-1.html",[0,0.451,111,1.976,1613,2.471]],["body/interfaces/IntrospectionResultData-1.html",[0,0.877,2,3.51,3,0.139,4,0.139,5,0.127,10,0.384,11,0.654,16,6.088,17,0.535,18,0.008,21,0.941,55,0.16,149,0.007,150,0.007,151,0.006,157,1.305,229,0.673,319,0.917,1438,5.636,1613,5.789,1615,7.09,1619,6.464,1620,6.047,1621,6.047,1622,6.047]],["title/injectables/LatestEventGQL.html",[152,0.202,405,1.079]],["body/injectables/LatestEventGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.406,14,1.581,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.105,45,1.674,46,0.638,47,1.004,48,0.614,49,0.603,55,0.185,56,1.513,57,1.004,58,1.507,59,1.004,65,0.192,76,1.529,91,0.665,107,0.558,117,1.655,119,1.829,123,1.462,125,0.664,127,0.664,130,1.779,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.569,155,0.651,156,2.342,157,0.477,158,0.459,159,2.329,160,2.459,161,1.55,162,2.108,163,2.111,164,1.852,165,1.793,166,1.55,167,0.252,169,2.357,170,0.638,171,1.721,172,1.106,173,1.064,174,1.085,175,1.085,176,1.085,177,1.024,178,1.024,179,0.69,180,0.69,181,1.085,182,1.085,183,1.085,184,1.085,185,1.085,186,1.085,187,1.085,188,1.085,189,1.085,190,1.406,191,1.085,192,1.085,193,1.085,194,1.085,195,1.085,196,1.064,197,0.677,198,2.371,199,1.106,200,1.963,201,1.687,202,1.687,203,2.244,204,1.085,205,1.085,206,1.721,207,1.085,208,1.925,209,1.085,210,0.704,211,2.053,212,1.491,213,0.704,214,0.69,215,1.064,216,0.704,217,1.55,218,1.52,219,1.064,220,1.55,221,2.111,222,2.111,223,1.963,224,1.55,225,1.687,226,1.52,227,1.52,228,1.085,229,0.704,230,1.106,231,1.106,232,1.367,233,1.367,234,1.367,235,1.085,236,1.106,237,1.106,238,1.52,239,1.064,240,1.52,241,1.064,242,1.085,243,1.106,244,1.106,245,1.085,246,1.52,247,1.406,248,1.963,249,1.901,250,1.52,251,1.721,252,1.085,253,1.587,254,1.085,255,0.704,256,1.652,257,1.955,258,1.064,259,0.771,260,0.947,261,0.626,262,1.898,263,0.69,264,0.664,265,0.9,266,1.655,267,1.004,268,1.024,269,1.315,270,0.894,271,0.69,272,1.064,273,1.687,274,0.69,275,1.064,276,1.721,277,0.69,278,0.677,279,0.825,280,1.341,281,1.044,282,1.621,283,2.129,284,1.085,285,1.085,286,0.771,287,1.085,288,1.085,289,1.562,290,1.5,291,1.085,292,1.085,293,0.9,294,1.004,295,1.52,296,1.085,297,0.677,298,1.044,299,1.064,300,1.29,301,1.085,302,1.085,303,1.315,304,0.704,305,1.085,306,1.085,307,1.085,308,1.085,309,1.085,310,1.085,311,1.406,312,1.064,313,0.677,314,1.5,315,1.217,316,0.493,317,0.664,318,0.704,319,1.023,320,1.315,321,1.793,322,1.315,323,1.29,324,1.315,325,1.064,326,1.064,327,1.064,328,1.064,329,1.315,330,1.491,331,1.315,332,1.064,333,0.677,334,1.747,335,1.713,336,0.664,337,2.291,338,2.361,339,0.664,340,0.704,341,0.704,342,0.664,343,0.704,344,0.704,345,0.664,346,0.704,347,0.704,348,0.651,349,0.704,350,0.704,351,0.651,352,0.704,353,0.704,354,0.664,355,0.664,356,0.704,357,0.704,358,0.664,359,0.664,360,1.085,361,0.664,362,0.704,363,0.704,364,0.677,365,0.704,366,0.704,367,0.677,368,0.704,369,0.704,370,0.677,371,0.704,372,0.677,373,0.704,374,0.664,375,0.704,376,0.704,377,0.677,378,0.704,379,0.704,380,0.664,381,0.704,382,0.704,383,0.651,384,0.651,385,0.704,386,0.704,387,0.664,388,0.704,389,0.704,390,0.664,391,0.704,392,0.704,393,0.664,394,0.704,395,0.704,396,0.664,397,0.664,398,0.664,399,0.704,400,0.704,401,0.677,402,2.145,403,0.704,404,0.704,405,1.004,406,1.106,407,1.106,408,0.638,409,0.704,410,0.704,411,0.614,412,0.704,413,1.367,414,0.638,415,0.704,416,0.651,417,0.58,418,0.704,419,0.651,420,0.664,421,0.704,422,0.704,423,0.626,424,0.651,425,0.677,1623,2.718]],["title/injectables/LocateMatchGQL.html",[152,0.202,342,1.122]],["body/injectables/LocateMatchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,2.002,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,2.024,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,1.045,343,1.108,344,1.108,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1624,2.723]],["title/components/LoginComponent.html",[27,0.437,480,1.237]],["body/components/LoginComponent.html",[3,0.112,4,0.112,5,0.101,7,0.611,10,0.308,11,0.573,17,0.526,18,0.008,21,0.856,22,0.183,23,4.042,26,1.846,27,0.776,28,2.03,31,0.112,40,3.279,41,1.737,42,1.965,53,3.145,54,2.406,55,0.112,60,2.447,61,2.354,62,2.37,63,1.858,65,0.122,66,1.542,67,1.788,82,1.39,83,2.359,85,2.03,86,3.471,88,3.293,103,2.128,112,2.566,114,2.516,115,2.362,138,2.463,139,2.604,145,3.251,149,0.005,150,0.006,151,0.005,167,0.855,211,1.72,229,0.675,247,1.399,259,0.747,265,0.656,279,0.822,286,0.747,293,0.822,316,0.687,427,1.573,428,2.133,429,1.772,430,1.737,431,1.737,433,1.737,434,1.971,437,1.72,440,1.969,441,2.091,442,1.373,443,2.176,444,2.176,445,1.737,446,2.492,447,1.737,448,1.737,449,1.604,450,1.737,451,1.604,452,1.668,453,2.566,454,1.604,455,1.737,456,1.573,457,1.668,458,1.573,459,2.176,460,1.573,461,1.737,462,1.604,463,1.737,464,1.604,465,1.668,466,1.604,467,1.604,468,1.737,469,1.604,470,1.737,471,1.604,472,1.737,473,1.604,474,1.573,475,2.176,476,1.737,477,1.604,478,1.573,479,1.737,480,2.301,481,1.737,482,1.604,483,1.737,484,1.604,485,1.737,486,1.636,487,1.737,488,1.604,489,1.737,490,1.604,491,1.737,492,1.604,493,1.737,494,1.604,495,1.737,496,1.573,497,1.737,498,1.542,499,1.737,500,1.573,501,1.737,502,1.604,503,1.737,504,1.604,505,1.737,506,1.737,507,1.604,508,1.737,509,1.512,510,1.737,511,1.573,512,1.737,513,1.573,514,1.737,515,1.604,516,1.737,517,1.573,518,1.737,519,1.604,520,1.668,521,1.737,522,1.737,530,4.303,532,1.788,533,1.788,538,3.537,677,6.626,678,2.943,700,5.288,716,5.288,756,3.076,775,4.558,869,4.517,891,3.847,921,3.847,942,3.847,944,5.056,954,6.626,1021,5.288,1022,6.809,1036,4.846,1234,5.288,1235,5.288,1264,6.633,1625,5.288,1626,9.113,1627,8.153,1628,7.465,1629,7.236,1630,8.547,1631,7.465,1632,7.465,1633,5.957,1634,5.957,1635,5.957,1636,7.465,1637,5.957,1638,5.957,1639,5.957,1640,5.957,1641,5.288,1642,7.465,1643,5.957,1644,5.957,1645,7.465,1646,8.153,1647,5.957,1648,5.957,1649,5.957,1650,7.465,1651,6.626,1652,7.465]],["title/interfaces/LoginContext.html",[0,0.542,849,3.484]],["body/interfaces/LoginContext.html",[0,0.762,2,3.051,3,0.121,4,0.121,5,0.11,10,0.334,11,0.602,17,0.469,18,0.008,21,1,22,0.187,31,0.121,41,1.884,55,0.147,65,0.132,78,3.529,82,1.203,83,2.332,85,2.189,107,1.735,112,2.243,139,2.416,145,2.814,146,3.221,149,0.007,150,0.006,151,0.005,152,0.345,177,1.547,211,1.808,212,1.609,215,1.609,247,2.065,279,0.864,319,0.797,334,1.203,335,1.18,348,1.88,351,1.88,423,1.808,530,3.706,537,3.14,636,3.995,637,3.446,666,4.173,667,4.173,753,4.376,789,5.316,810,5.555,811,5.663,812,5.436,816,5.226,821,4.899,822,5.735,825,5.735,827,5.735,830,5.735,831,5.735,832,5.735,834,7.504,835,5.257,836,5.735,837,5.735,838,6.878,840,5.735,841,6.385,844,5.735,846,4.899,848,5.735,849,6.41,851,5.316,853,5.735,855,5.735,857,5.735,865,6.878,866,6.385,867,5.257,868,3.837,869,6.667,870,4.899,871,5.257,872,5.735,873,7.452,874,5.735,875,5.735,876,6.385,877,6.967,878,6.967,879,5.735,880,5.735,881,6.41,882,6.967,883,5.735,884,6.967,885,5.735,886,5.735,887,5.735,888,5.735,889,6.385,890,5.257,891,5.069,892,5.257,893,5.735,894,5.735,895,5.257,896,5.735,897,5.735,898,5.257,899,5.735,900,5.735,901,5.735]],["title/components/ManagePenaltyComponent.html",[27,0.437,482,1.237]],["body/components/ManagePenaltyComponent.html",[3,0.103,4,0.103,5,0.094,7,0.566,10,0.285,11,0.546,17,0.526,18,0.008,21,0.747,22,0.189,26,1.711,27,0.749,28,1.959,31,0.103,38,4.026,40,3.223,41,1.61,42,1.821,43,3.427,44,2.23,45,1.351,50,1.783,51,3.18,52,2.468,53,3.058,54,2.23,55,0.103,56,1.488,60,2.439,61,2.346,62,2.443,63,1.771,65,0.113,66,1.429,67,1.703,82,1.325,83,2.279,85,1.959,86,2.805,88,3.179,91,1.225,103,2.069,112,2.375,114,1.861,115,1.747,129,2.764,130,1.351,133,1.46,134,1.328,135,2.286,138,1.821,139,2.032,149,0.004,150,0.006,151,0.004,162,1.348,164,1.671,165,1.703,167,0.851,218,1.402,229,0.679,259,0.712,262,1.745,264,1.348,265,0.866,266,1.885,267,2.068,279,0.783,286,0.712,293,0.783,311,2.154,316,0.637,319,0.878,354,2.029,414,2.104,417,1.878,427,1.457,428,2.032,429,1.642,430,1.61,431,1.61,433,1.61,434,1.878,437,1.639,440,1.982,441,2.328,442,1.272,443,2.074,444,2.074,445,1.61,446,2.423,447,1.61,448,1.61,449,1.486,450,1.61,451,1.486,452,1.546,453,2.507,454,1.486,455,1.61,456,1.878,457,2.204,458,1.457,459,2.074,460,1.457,461,1.61,462,1.486,463,1.61,464,1.486,465,1.546,466,1.486,467,1.486,468,1.61,469,1.486,470,1.61,471,1.486,472,1.61,473,1.486,474,1.878,475,2.074,476,1.61,477,1.486,478,1.457,479,1.61,480,1.486,481,1.61,482,2.237,483,2.646,484,1.486,485,1.61,486,1.516,487,1.61,488,1.486,489,1.61,490,1.486,491,1.61,492,1.486,493,1.61,494,1.486,495,1.61,496,1.457,497,1.61,498,1.429,499,1.61,500,1.457,501,1.61,502,1.486,503,1.61,504,1.486,505,1.61,506,1.61,507,1.486,508,1.61,509,1.402,510,1.61,511,1.457,512,1.61,513,1.457,514,1.61,515,1.486,516,1.61,517,1.457,518,1.61,519,1.486,520,1.546,521,1.61,522,1.61,532,1.885,533,1.885,580,7.522,581,4.901,582,3.942,585,3.278,610,3.94,611,5.138,678,3.125,843,3.739,957,3.942,958,3.278,962,2.851,984,4.817,987,4.397,1120,7.01,1121,4.186,1122,6.402,1123,5.787,1134,4.901,1136,6.314,1139,4.901,1142,6.402,1154,4.492,1155,4.492,1185,4.817,1291,4.817,1347,4.492,1534,5.967,1548,6.302,1653,8.312,1654,6.314,1655,7.113,1656,7.87,1657,5.521,1658,7.87,1659,5.521,1660,5.521,1661,5.521,1662,7.113,1663,5.521,1664,7.113,1665,5.521,1666,7.113,1667,5.521,1668,5.521,1669,8.312,1670,3.942,1671,4.901,1672,5.521,1673,3.942,1674,5.521,1675,3.942,1676,5.521,1677,5.521,1678,5.521,1679,5.521,1680,7.113,1681,7.113,1682,7.113,1683,4.901,1684,7.113,1685,4.901]],["title/components/ManagepitchesComponent.html",[27,0.437,484,1.237]],["body/components/ManagepitchesComponent.html",[3,0.111,4,0.111,5,0.101,7,0.61,10,0.307,11,0.572,17,0.51,18,0.008,22,0.192,26,1.843,27,0.775,28,2.028,31,0.111,40,3.277,41,1.733,42,1.962,43,2.589,44,2.402,50,1.921,51,2.658,52,2.658,53,3.143,54,2.402,55,0.111,60,2.447,61,2.354,62,2.368,63,1.856,65,0.122,66,1.539,67,1.786,82,1.389,83,2.109,85,2.028,86,2.345,88,3.291,91,1.161,103,2.126,112,1.699,114,2.004,115,1.881,138,1.962,139,2.131,149,0.005,150,0.006,151,0.005,167,0.833,219,1.856,229,0.695,259,0.746,265,0.655,270,1.878,279,0.821,286,0.946,293,0.988,316,0.686,319,0.734,416,1.424,427,1.57,428,2.131,429,1.769,430,1.733,431,1.733,433,1.733,434,1.968,437,1.718,440,1.968,441,2.392,442,1.37,443,2.174,444,2.174,445,1.733,446,2.49,447,1.733,448,1.733,449,1.601,450,1.733,451,1.601,452,1.665,453,2.565,454,1.601,455,1.733,456,1.968,457,2.282,458,1.57,459,2.174,460,1.57,461,1.733,462,1.601,463,1.733,464,2.007,465,1.665,466,1.601,467,1.601,468,1.733,469,1.601,470,1.733,471,1.601,472,1.733,473,2.007,474,1.57,475,2.174,476,1.733,477,1.601,478,1.57,479,1.733,480,1.601,481,1.733,482,1.601,483,1.733,484,2.299,485,1.733,486,1.633,487,1.733,488,1.601,489,1.733,490,1.601,491,1.733,492,1.601,493,1.733,494,1.601,495,1.733,496,1.57,497,1.733,498,1.539,499,1.733,500,1.57,501,1.733,502,1.601,503,1.733,504,1.601,505,1.733,506,1.733,507,1.601,508,1.733,509,1.509,510,1.733,511,1.57,512,1.733,513,1.57,514,1.733,515,1.601,516,1.733,517,1.57,518,1.733,519,1.601,520,1.665,521,1.733,522,1.733,532,1.951,533,1.951,584,3.84,585,4.837,610,4.079,611,5.28,678,2.941,958,3.531,962,3.071,1012,4.246,1020,6.948,1023,5.312,1033,5.278,1119,5.036,1185,5.05,1283,5.278,1288,5.654,1291,5.05,1673,4.246,1675,4.246,1686,5.278,1687,7.457,1688,8.146,1689,7.457,1690,7.457,1691,4.838,1692,5.947,1693,5.947,1694,7.457,1695,5.947,1696,7.457,1697,5.947,1698,5.947,1699,5.947,1700,5.947,1701,5.947,1702,5.947,1703,4.838,1704,4.509,1705,4.509,1706,5.947,1707,5.947,1708,5.947,1709,5.947,1710,6.618]],["title/components/ManageteamsComponent.html",[27,0.437,488,1.237]],["body/components/ManageteamsComponent.html",[3,0.112,4,0.112,5,0.102,7,0.615,10,0.31,11,0.576,17,0.537,18,0.008,21,0.859,22,0.189,26,1.86,27,0.779,28,2.037,31,0.112,32,4.964,33,3.877,40,3.284,41,1.75,42,1.98,45,1.628,50,1.939,53,3.153,54,2.425,55,0.112,58,1.811,60,2.448,61,2.355,62,2.457,63,1.867,65,0.123,66,1.554,67,1.796,82,1.397,83,1.942,85,2.24,86,2.368,88,3.305,91,1.168,103,2.134,112,2.608,114,2.528,115,2.373,138,2.475,139,2.449,149,0.005,150,0.006,151,0.005,167,0.847,229,0.71,241,1.867,259,0.75,265,0.661,279,0.826,286,0.75,293,0.826,316,0.692,319,0.741,427,1.585,428,2.143,429,1.786,430,1.75,431,1.75,433,1.75,434,1.98,437,1.728,440,1.975,441,2.101,442,1.383,443,2.187,444,2.187,445,1.75,446,2.498,447,1.75,448,1.75,449,1.616,450,1.75,451,1.616,452,1.681,453,2.572,454,1.616,455,1.75,456,1.98,457,2.101,458,1.585,459,2.187,460,1.585,461,1.75,462,1.616,463,1.75,464,1.616,465,1.681,466,1.616,467,1.616,468,1.75,469,1.616,470,1.75,471,1.616,472,1.75,473,1.616,474,1.585,475,2.187,476,1.75,477,1.616,478,1.585,479,1.75,480,1.616,481,1.75,482,1.616,483,1.75,484,1.616,485,1.75,486,1.648,487,1.75,488,2.307,489,1.75,490,1.616,491,1.75,492,1.616,493,1.75,494,1.616,495,1.75,496,1.585,497,1.75,498,1.554,499,1.75,500,1.585,501,1.75,502,1.616,503,1.75,504,2.019,505,2.187,506,1.75,507,1.616,508,1.75,509,1.524,510,1.75,511,1.585,512,1.75,513,1.585,514,1.75,515,1.616,516,1.75,517,1.585,518,1.75,519,1.616,520,1.681,521,1.75,522,1.75,532,2.052,533,2.052,574,4.552,575,5.328,585,3.564,610,4.417,611,5.454,958,3.564,962,3.1,976,4.858,1185,5.08,1195,4.884,1291,5.08,1673,4.287,1675,4.287,1703,4.884,1704,4.552,1705,4.552,1711,5.328,1712,7.501,1713,8.182,1714,7.501,1715,6.658,1716,7.501,1717,6.003,1718,6.658,1719,6.003,1720,5.328,1721,6.658,1722,6.003,1723,6.003,1724,7.501,1725,6.003,1726,6.003,1727,6.003,1728,6.003,1729,6.003,1730,6.003,1731,6.003,1732,6.003,1733,6.003,1734,6.003]],["title/components/ManagetournamentComponent.html",[27,0.437,490,1.237]],["body/components/ManagetournamentComponent.html",[3,0.092,4,0.092,5,0.084,7,0.85,8,3.337,10,0.385,11,0.506,12,2.043,13,2.08,14,1.788,15,5.385,16,4.713,17,0.559,18,0.008,19,1.77,20,5.385,21,0.93,22,0.188,26,1.527,27,0.708,28,1.853,31,0.092,38,3.947,40,3.135,41,1.924,42,1.626,43,3.716,44,1.991,48,1.797,49,1.763,51,3.328,52,2.203,53,2.925,54,1.991,55,0.092,56,1.381,57,1.158,59,1.158,60,2.426,61,2.334,62,2.384,63,1.643,65,0.101,66,1.709,67,1.581,78,2.867,79,2.926,82,1.229,83,2.383,85,2.124,86,1.943,88,3.007,89,5.315,91,1.159,103,1.979,107,1.355,111,4.106,112,2.49,114,1.661,115,2.088,117,1.18,129,3.305,130,1.254,134,1.114,135,2.733,138,1.626,139,1.886,146,2.563,148,2.545,149,0.006,150,0.005,151,0.004,157,1.159,158,1.114,167,0.875,170,1.158,229,0.716,242,1.89,245,1.676,259,0.66,265,0.543,275,1.227,279,0.727,286,0.66,289,1.114,293,0.727,300,1.817,316,0.568,319,1.075,390,1.941,393,2.128,427,1.301,428,1.886,429,1.466,430,1.436,431,1.436,433,1.436,434,1.742,437,1.521,440,2.041,441,2.39,442,1.135,443,1.924,444,1.924,445,1.436,446,2.318,447,1.436,448,1.436,449,1.327,450,1.436,451,1.327,452,1.38,453,2.417,454,1.327,455,1.436,456,1.742,457,2.227,458,1.301,459,1.924,460,1.301,461,1.436,462,1.327,463,1.436,464,1.327,465,1.38,466,1.327,467,1.327,468,1.436,469,1.327,470,1.436,471,1.327,472,1.436,473,1.327,474,1.301,475,1.924,476,1.436,477,1.327,478,1.301,479,1.436,480,1.327,481,1.436,482,1.327,483,1.436,484,1.327,485,1.436,486,1.353,487,1.436,488,1.327,489,1.436,490,2.14,491,1.436,492,1.327,493,1.436,494,1.327,495,1.436,496,1.301,497,1.436,498,1.276,499,1.436,500,1.301,501,1.436,502,1.327,503,1.436,504,1.327,505,1.436,506,1.436,507,1.327,508,1.436,509,1.251,510,1.436,511,1.301,512,1.436,513,1.301,514,1.436,515,1.327,516,1.436,517,1.301,518,1.436,519,1.327,520,1.38,521,1.436,522,1.436,532,1.985,533,1.985,585,2.926,587,4.374,610,4.151,611,5.125,627,2.092,636,3.046,637,2.628,678,2.938,783,4.009,843,4.471,868,2.926,924,3.919,925,3.919,958,2.926,962,2.545,1140,5.005,1141,3.182,1185,5.041,1347,4.009,1351,3.046,1420,4.374,1434,6.055,1561,3.736,1595,3.519,1654,5.859,1670,3.519,1673,3.519,1703,4.009,1704,3.736,1705,3.736,1735,4.009,1736,6.601,1737,7.444,1738,6.601,1739,7.444,1740,7.444,1741,7.444,1742,7.444,1743,7.057,1744,6.601,1745,6.601,1746,7.951,1747,7.951,1748,7.951,1749,4.374,1750,7.444,1751,6.601,1752,6.601,1753,4.928,1754,6.601,1755,4.928,1756,6.601,1757,4.928,1758,4.928,1759,4.928,1760,4.928,1761,4.928,1762,6.601,1763,4.928,1764,4.928,1765,4.928,1766,6.601,1767,4.928,1768,4.928,1769,4.928,1770,6.601,1771,4.928,1772,4.928,1773,4.928,1774,5.37,1775,4.928,1776,7.444,1777,4.928,1778,4.374,1779,4.928,1780,4.374,1781,4.928,1782,6.601,1783,6.601,1784,4.374,1785,4.928,1786,4.928,1787,4.928,1788,4.928,1789,4.928,1790,4.374,1791,6.601,1792,4.928,1793,4.928,1794,8.533,1795,4.928,1796,4.928,1797,4.928,1798,4.928,1799,4.928,1800,4.928,1801,4.928,1802,4.928,1803,4.928,1804,4.928,1805,4.928,1806,4.928,1807,6.601,1808,4.928,1809,4.928,1810,4.928,1811,4.009,1812,4.374,1813,4.928,1814,4.928,1815,4.928,1816,4.928,1817,4.374,1818,4.928,1819,6.607,1820,4.928,1821,4.928,1822,4.928,1823,4.928,1824,6.601,1825,6.601,1826,6.601,1827,6.601,1828,5.005,1829,6.601,1830,5.005]],["title/components/ManageusersComponent.html",[27,0.437,492,1.237]],["body/components/ManageusersComponent.html",[3,0.124,4,0.124,5,0.113,7,0.681,10,0.343,18,0.008,22,0.136,27,0.814,28,2.13,31,0.124,55,0.124,60,2.457,61,2.364,62,2.444,63,1.987,65,0.136,66,1.72,67,1.912,82,1.594,103,2.21,112,2.445,149,0.005,150,0.006,151,0.005,167,0.741,229,0.63,259,0.799,265,0.732,279,0.879,286,0.799,293,0.879,316,0.766,427,1.754,428,2.281,429,1.976,430,1.937,431,1.937,433,1.937,434,2.107,437,1.839,440,1.531,442,1.531,443,2.327,444,2.327,445,1.937,446,2.587,447,1.937,448,1.937,449,1.789,450,1.937,451,1.789,452,1.861,453,2.647,454,1.789,455,1.937,456,1.754,457,1.861,458,1.754,459,2.327,460,1.754,461,1.937,462,1.789,463,1.937,464,1.789,465,1.861,466,1.789,467,1.789,468,1.937,469,1.789,470,1.937,471,1.789,472,1.937,473,1.789,474,1.754,475,2.327,476,1.937,477,1.789,478,1.754,479,1.937,480,1.789,481,1.937,482,1.789,483,1.937,484,1.789,485,1.937,486,1.824,487,1.937,488,1.789,489,1.937,490,1.789,491,1.937,492,2.389,493,1.937,494,1.789,495,1.937,496,1.754,497,1.937,498,1.72,499,1.937,500,1.754,501,1.937,502,1.789,503,1.937,504,1.789,505,1.937,506,1.937,507,1.789,508,1.937,509,1.686,510,1.937,511,1.754,512,1.937,513,1.754,514,1.937,515,1.789,516,1.937,517,1.754,518,1.937,519,1.789,520,1.861,521,1.937,522,1.937,1831,5.897,1832,7.982,1833,8.557,1834,7.982,1835,6.644,1836,6.644]],["title/components/MatchComponent.html",[27,0.437,494,1.237]],["body/components/MatchComponent.html",[3,0.095,4,0.095,5,0.087,7,0.522,10,0.263,11,0.518,14,1.045,15,5.456,17,0.552,18,0.008,21,0.846,22,0.19,26,1.578,27,0.72,28,1.884,31,0.095,38,3.97,39,2.629,40,3.28,41,1.484,42,1.68,50,1.644,53,3.084,54,2.057,55,0.095,60,2.43,61,2.337,62,2.365,63,1.679,65,0.104,66,1.318,67,1.616,78,1.961,82,1.256,83,1.958,85,2.362,86,3.177,88,3.385,91,1.305,103,2.005,145,3.826,146,2.323,149,0.007,150,0.005,151,0.004,167,0.889,196,1.267,229,0.636,259,0.912,260,1.496,265,0.561,279,0.743,286,0.757,293,0.743,316,0.587,319,0.994,427,1.344,428,1.927,429,1.514,430,1.484,431,1.484,433,1.484,434,1.781,437,1.554,440,2.101,441,2.461,442,1.173,443,1.967,444,1.967,445,1.484,446,2.348,447,1.484,448,1.484,449,1.371,450,1.484,451,1.816,452,1.889,453,2.443,454,1.371,455,1.484,456,1.344,457,1.426,458,1.781,459,1.967,460,1.344,461,1.484,462,1.371,463,1.484,464,1.371,465,1.426,466,1.371,467,1.816,468,1.484,469,1.816,470,1.484,471,1.816,472,1.484,473,1.371,474,1.344,475,1.967,476,1.484,477,1.371,478,1.344,479,1.484,480,1.371,481,1.484,482,1.371,483,1.484,484,1.371,485,1.484,486,1.398,487,1.484,488,1.371,489,1.484,490,1.371,491,1.484,492,1.371,493,1.484,494,2.169,495,1.484,496,1.344,497,1.484,498,1.318,499,1.484,500,1.344,501,1.484,502,1.371,503,1.484,504,1.371,505,1.484,506,1.484,507,1.371,508,1.484,509,1.292,510,1.484,511,1.344,512,1.484,513,1.344,514,1.484,515,1.371,516,1.484,517,1.344,518,1.484,519,1.371,520,1.426,521,1.484,522,1.484,530,3.957,532,1.616,533,1.616,534,4.976,538,3.023,585,3.023,610,4.466,611,5.181,669,7.15,678,3.22,689,4.519,783,6.553,903,3.86,918,5.988,924,4.005,925,4.005,929,5.988,984,4.569,987,5.181,1092,5.488,1096,6.155,1107,5.488,1188,5.988,1252,4.708,1268,3.86,1280,4.519,1284,5.988,1285,5.988,1287,5.988,1288,5.115,1304,5.988,1306,4.519,1333,5.752,1334,3.86,1336,3.86,1472,4.817,1595,3.635,1675,5.752,1710,5.988,1749,4.519,1811,6.553,1812,7.15,1837,4.519,1838,7.566,1839,6.746,1840,8.055,1841,8.055,1842,8.055,1843,6.746,1844,8.055,1845,8.055,1846,8.055,1847,8.055,1848,8.055,1849,7.566,1850,7.15,1851,6.715,1852,6.746,1853,5.091,1854,5.091,1855,5.091,1856,5.091,1857,5.091,1858,5.091,1859,5.091,1860,5.091,1861,5.091,1862,5.091,1863,5.091,1864,5.091,1865,5.091,1866,5.091,1867,5.091,1868,5.091,1869,5.091,1870,5.091,1871,5.091,1872,5.091,1873,5.091,1874,4.519,1875,4.519,1876,4.519,1877,4.519,1878,5.091,1879,8.055,1880,8.055,1881,5.091,1882,5.091,1883,5.091,1884,5.091,1885,5.091,1886,5.091,1887,5.091,1888,5.091,1889,5.091,1890,5.091,1891,6.746,1892,6.746,1893,6.746,1894,5.091,1895,4.519,1896,6.746,1897,6.746,1898,6.746,1899,6.746,1900,6.746,1901,6.746,1902,6.746,1903,5.091,1904,5.091,1905,5.091,1906,4.519]],["title/interfaces/MatchEventPayload.html",[0,0.542,1471,3.484]],["body/interfaces/MatchEventPayload.html",[0,0.788,2,3.155,3,0.125,4,0.125,5,0.114,10,0.345,11,0.614,17,0.531,18,0.008,19,1.788,21,0.98,22,0.186,31,0.125,55,0.15,65,0.137,82,1.244,83,2.416,85,2.135,112,1.909,115,2.813,134,1.127,135,3.315,139,2.288,145,2.909,146,2.3,149,0.005,150,0.006,151,0.005,152,0.352,158,1.352,259,0.668,319,0.988,334,1.244,335,1.22,405,1.881,408,1.881,411,1.938,417,1.708,602,4.903,614,4.13,633,5.065,665,5.424,666,5.539,667,5.539,775,4.271,868,3.967,891,5.962,962,3.45,1282,4.314,1389,7.397,1390,5.065,1391,5.065,1392,5.065,1451,5.435,1452,5.93,1453,5.93,1454,5.93,1456,5.424,1457,5.435,1458,5.93,1459,5.93,1461,5.93,1469,5.93,1470,5.93,1471,6.503,1472,6.349,1473,7.234,1474,7.234,1475,7.893,1476,7.108,1477,5.435,1478,5.93,1479,5.93,1480,8.071,1481,8.071,1482,5.93,1483,5.93,1484,5.93,1485,5.93,1486,5.93,1487,5.93,1488,5.93,1489,5.93,1490,5.93,1491,5.93,1492,5.065,1493,5.93,1494,5.93,1495,5.93,1496,5.93,1497,5.93,1498,7.108,1499,5.93]],["title/injectables/MatchGQL.html",[152,0.202,408,1.079]],["body/injectables/MatchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.789,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.463,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,1.005,409,1.108,410,1.108,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1907,2.723]],["title/injectables/MatchPlanGQL.html",[152,0.202,411,1.039]],["body/injectables/MatchPlanGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.915,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.316,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.967,412,1.108,413,1.551,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,1908,2.723]],["title/components/MatchSchedulingComponent.html",[27,0.437,498,1.19]],["body/components/MatchSchedulingComponent.html",[0,0.779,3,0.092,4,0.092,5,0.084,7,0.506,10,0.428,11,0.507,17,0.546,18,0.008,19,1.755,21,0.835,22,0.183,27,0.709,28,1.854,31,0.092,38,3.947,39,2.547,43,3.243,44,1.993,45,1.414,50,1.593,51,2.205,52,2.205,55,0.092,56,1.382,58,0.993,60,2.426,61,2.334,62,2.233,63,1.645,65,0.101,66,1.277,67,1.582,78,3.064,79,3.922,82,1.23,83,1.277,85,2.125,103,1.98,111,3.411,112,1.41,114,1.662,115,2.09,138,1.627,139,1.41,142,3.05,145,2.148,146,2.739,148,3.846,149,0.004,150,0.005,151,0.004,157,1.308,158,1.4,167,0.875,229,0.688,253,1.499,259,0.915,261,1.137,265,0.543,268,1.582,270,1.664,279,0.727,286,0.872,289,1.874,290,1.137,293,0.727,316,0.569,319,0.981,427,1.302,428,1.887,429,1.467,430,1.438,431,1.438,433,1.438,434,1.744,437,1.522,440,2.041,441,2.391,442,1.137,443,1.926,444,1.926,445,1.438,446,2.319,447,1.438,448,1.438,449,1.328,450,1.438,451,1.328,452,1.382,453,2.418,454,1.328,455,1.438,456,1.302,457,1.382,458,1.302,459,1.926,460,1.302,461,1.438,462,1.328,463,1.438,464,1.328,465,1.382,466,1.328,467,1.328,468,1.438,469,1.328,470,1.438,471,1.328,472,1.438,473,1.328,474,1.302,475,1.926,476,1.438,477,1.328,478,1.302,479,1.438,480,1.328,481,1.438,482,1.328,483,1.438,484,1.328,485,1.438,486,1.355,487,1.438,488,1.328,489,1.438,490,1.328,491,1.438,492,1.328,493,1.438,494,1.328,495,1.438,496,1.302,497,1.438,498,2.059,499,1.438,500,1.302,501,1.438,502,1.328,503,1.438,504,1.328,505,1.438,506,1.438,507,1.328,508,1.438,509,1.252,510,1.438,511,1.302,512,1.438,513,1.302,514,1.438,515,1.328,516,1.438,517,1.302,518,1.438,519,1.328,520,2.086,521,1.438,522,1.438,532,1.986,533,1.986,568,6.752,678,2.739,756,2.547,775,2.631,829,4.717,843,3.341,924,4.422,925,4.422,939,5.127,984,4.474,987,4.084,1023,5.129,1078,5.374,1119,4.604,1246,5.647,1247,5.647,1248,5.863,1252,4.502,1254,5.009,1256,5.647,1265,5.009,1266,3.74,1267,3.522,1269,3.74,1270,3.74,1271,3.74,1272,4.474,1273,3.74,1274,3.74,1275,3.74,1276,6.031,1277,3.74,1278,3.74,1279,5.044,1282,3.186,1331,5.863,1333,5.922,1334,3.74,1336,3.74,1527,5.922,1528,7.17,1529,3.74,1530,5.374,1531,5.374,1532,5.374,1533,4.717,1534,5.647,1535,4.013,1536,3.74,1537,3.341,1538,5.374,1539,5.374,1540,5.374,1541,6.059,1542,6.059,1543,5.374,1544,7.092,1545,6.059,1546,6.059,1547,4.013,1548,6.031,1549,5.374,1550,4.013,1551,4.013,1552,6.944,1553,4.013,1554,4.013,1555,5.374,1556,4.013,1557,4.013,1558,5.374,1559,6.944,1560,4.013,1561,3.74,1562,4.013,1563,4.013,1564,4.013,1565,4.013,1566,5.374,1567,5.374,1568,5.374,1569,4.013,1570,4.013,1571,4.013,1572,4.013,1573,6.059,1574,4.013,1575,4.013,1576,4.013,1577,4.013,1578,4.013,1579,4.013,1580,4.013,1581,4.013,1582,4.013,1583,4.013,1584,6.059,1585,4.013,1586,4.013,1587,5.374,1588,4.013,1589,4.013,1590,4.013,1591,4.013,1592,6.471,1593,4.013,1594,4.013,1595,3.522,1596,4.013,1597,4.013,1598,4.013,1599,4.013,1600,5.374,1601,4.013,1602,4.013,1603,4.013,1604,5.374,1605,5.374,1691,4.013,1828,5.009,1830,5.009,1895,4.379,1906,4.379,1909,6.606,1910,6.606,1911,6.606,1912,4.933,1913,4.933,1914,4.933,1915,4.933,1916,4.933,1917,4.933,1918,4.933,1919,4.933,1920,4.933,1921,4.933,1922,4.933,1923,4.933,1924,4.933,1925,4.933,1926,4.933,1927,4.933,1928,4.933,1929,4.933,1930,6.606,1931,6.606,1932,6.606,1933,6.606,1934,5.863,1935,6.606,1936,7.06,1937,5.863,1938,5.863,1939,6.606]],["title/injectables/MatchService.html",[152,0.202,1252,2.373]],["body/injectables/MatchService.html",[3,0.112,4,0.112,5,0.102,10,0.31,11,0.575,17,0.537,18,0.008,19,1.815,21,0.999,22,0.167,31,0.112,44,2.424,55,0.112,56,1.711,65,0.123,78,3.516,82,1.397,83,2.117,85,2.24,91,1.401,112,1.714,114,2.022,115,1.898,134,1.518,135,2.484,138,1.98,139,2.337,145,3.731,146,3.037,148,3.099,149,0.007,150,0.006,151,0.005,152,0.329,154,1.255,157,1.317,158,1.266,167,0.856,200,2.036,201,1.465,202,1.465,203,1.921,204,1.904,205,1.904,206,2.133,207,1.904,208,1.465,229,0.71,259,0.962,260,1.813,270,1.711,283,2.113,286,0.9,319,1.088,323,2.229,334,1.118,335,1.096,336,2.197,339,2.229,342,2.092,437,1.728,440,2.032,532,2.155,533,2.155,637,4.363,810,5.526,811,5.562,812,5.057,816,5.057,868,3.563,881,5.686,1252,3.872,1272,5.079,1320,7.985,1472,6.424,1473,6.971,1474,6.971,1940,5.326,1941,8.18,1942,8.18,1943,7.499,1944,7.499,1945,6.001,1946,8.18,1947,7.499,1948,7.499,1949,6.001,1950,7.499,1951,6.001,1952,8.18,1953,7.499,1954,6.001,1955,7.499,1956,6.001,1957,7.499,1958,6.001,1959,7.829,1960,6.001,1961,6.001,1962,6.001,1963,6.001,1964,7.26,1965,7.26,1966,7.985,1967,8.997,1968,7.26,1969,6.001,1970,6.001,1971,6.001,1972,6.001]],["title/components/MatchplanComponent.html",[27,0.437,496,1.213]],["body/components/MatchplanComponent.html",[3,0.101,4,0.101,5,0.092,7,0.555,10,0.28,11,0.539,17,0.55,18,0.008,21,0.738,22,0.185,27,0.742,28,1.941,31,0.101,38,4.013,39,2.796,41,1.578,43,3.395,44,2.187,51,3.14,52,2.421,55,0.101,60,2.437,61,2.344,62,2.301,63,1.749,65,0.111,66,1.402,67,1.682,82,1.308,83,1.818,85,2.336,91,0.843,103,2.054,111,4.26,134,1.185,145,3.395,146,2.841,148,4.668,149,0.004,150,0.005,151,0.004,157,1.233,158,1.185,167,0.871,229,0.675,253,1.09,259,0.78,260,1.895,261,1.796,265,0.596,279,0.773,286,0.703,289,1.762,290,1.618,293,0.773,297,1.749,298,2.087,316,0.624,319,0.962,408,1.272,411,2.083,417,1.902,427,1.429,428,2.007,429,1.611,430,1.578,431,1.578,433,1.578,434,1.854,437,1.618,440,1.901,441,1.967,442,1.248,443,2.048,444,2.048,445,1.578,446,2.405,447,1.578,448,1.578,449,1.458,450,1.578,451,1.458,452,1.517,453,2.492,454,1.458,455,1.578,456,1.429,457,1.517,458,1.429,459,2.048,460,1.429,461,1.578,462,1.458,463,1.578,464,1.458,465,1.517,466,1.458,467,1.458,468,1.578,469,1.458,470,1.578,471,1.458,472,1.578,473,1.458,474,1.429,475,2.048,476,1.578,477,1.458,478,1.429,479,1.578,480,1.458,481,1.578,482,1.458,483,1.578,484,1.458,485,1.578,486,1.487,487,1.578,488,1.458,489,1.578,490,1.458,491,1.578,492,1.458,493,1.578,494,1.458,495,1.578,496,2.178,497,1.578,498,1.402,499,1.578,500,1.429,501,1.578,502,1.458,503,1.578,504,1.458,505,1.578,506,1.578,507,1.458,508,1.578,509,1.375,510,1.578,511,1.429,512,1.578,513,1.429,514,1.578,515,1.458,516,1.578,517,1.429,518,1.578,519,1.458,520,1.517,521,1.578,522,1.578,532,1.867,533,1.867,602,5.223,627,3.309,636,3.348,637,2.888,663,4.405,665,3.667,666,3.497,667,3.497,678,3.016,697,4.806,829,5.016,868,3.215,976,4.171,1126,6.343,1144,7.126,1186,6.712,1252,4.605,1351,3.348,1537,3.667,1670,3.866,1671,4.806,1817,6.92,1828,6.255,1830,6.255,1936,7.775,1937,7.323,1938,7.323,1973,4.405,1974,7.797,1975,7.024,1976,7.797,1977,7.797,1978,7.797,1979,7.024,1980,7.024,1981,8.251,1982,7.797,1983,4.405,1984,5.415,1985,7.024,1986,5.415,1987,7.024,1988,5.415,1989,5.415,1990,5.415,1991,7.024,1992,5.415,1993,5.415,1994,5.415,1995,5.415,1996,5.415,1997,7.024,1998,5.415,1999,7.024,2000,5.415,2001,5.415,2002,5.415,2003,4.405,2004,4.405,2005,4.806,2006,4.405,2007,4.806,2008,4.405,2009,4.806,2010,5.415,2011,5.415,2012,4.806,2013,5.415,2014,4.806,2015,4.806,2016,8.549,2017,5.415,2018,5.415,2019,5.415,2020,5.415,2021,5.415,2022,5.415,2023,5.415,2024,5.415,2025,4.806,2026,4.806,2027,5.415,2028,5.415,2029,7.024,2030,7.024,2031,8.251,2032,7.024,2033,7.024,2034,5.415,2035,5.415]],["title/modules/MatchplanModule.html",[540,1.424,2036,3.484]],["body/modules/MatchplanModule.html",[3,0.136,4,0.136,5,0.124,18,0.008,22,0.19,31,0.136,55,0.136,61,1.738,65,0.148,149,0.006,150,0.007,151,0.006,261,1.672,442,1.672,496,2.482,540,2.249,542,2.732,543,3.633,544,4.445,545,3.748,546,3.748,547,3.633,553,5.015,554,4.485,555,3.871,556,3.871,559,3.481,560,3.397,562,4.309,563,4.687,721,6.369,1363,6.442,2036,7.347,2037,6.442,2038,6.442,2039,6.442,2040,6.715,2041,7.258,2042,6.442]],["title/modules/MatchplanRoutingModule.html",[540,1.424,2040,3.281]],["body/modules/MatchplanRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.921,496,2.256,537,3.627,542,2.809,559,3.089,560,3.452,589,4.431,590,4.789,591,4.431,593,4.266,594,4.613,2040,6.101,2042,6.624,2043,7.463]],["title/modules/MaterialModule.html",[540,1.424,739,3.112]],["body/modules/MaterialModule.html",[3,0.134,4,0.134,5,0.122,18,0.008,22,0.195,26,2.215,31,0.134,55,0.134,65,0.146,149,0.006,150,0.007,151,0.006,542,2.69,547,3.578,559,2.959,560,3.367,739,5.645,2044,7.147,2045,8.823,2046,7.147,2047,8.823,2048,7.147,2049,8.823,2050,7.147,2051,8.823,2052,7.147,2053,8.823,2054,7.147,2055,8.823,2056,7.147,2057,7.147,2058,6.344,2059,7.147,2060,6.344,2061,7.147,2062,8.823,2063,8.823,2064,8.823,2065,9.258,2066,8.823,2067,8.823,2068,8.823,2069,8.823,2070,8.823,2071,8.823,2072,8.823,2073,8.823,2074,7.147,2075,8.823,2076,8.823,2077,8.823]],["title/components/NewpasswordComponent.html",[27,0.437,500,1.213]],["body/components/NewpasswordComponent.html",[3,0.114,4,0.114,5,0.104,7,0.625,10,0.315,11,0.581,17,0.514,18,0.008,21,0.795,22,0.185,27,0.784,28,2.05,31,0.114,40,3.295,41,1.776,42,2.01,53,3.17,54,2.461,55,0.114,60,2.449,61,2.356,62,2.385,63,1.885,65,0.124,66,1.577,67,1.813,82,1.41,83,2.23,85,2.05,88,3.327,103,2.145,112,2.462,114,2.053,115,2.395,138,2.01,139,2.163,149,0.005,150,0.006,151,0.005,167,0.838,229,0.65,247,1.431,259,0.757,265,0.671,279,0.949,286,0.757,293,0.834,316,0.703,319,0.752,427,1.608,428,2.163,429,1.812,430,1.776,431,1.776,433,1.776,434,1.998,437,1.744,440,1.744,441,1.706,442,1.404,443,2.207,444,2.207,445,1.776,446,2.511,447,1.776,448,1.776,449,1.64,450,1.776,451,1.64,452,1.706,453,2.583,454,1.64,455,1.776,456,1.608,457,1.706,458,1.608,459,2.207,460,1.608,461,1.776,462,1.64,463,1.776,464,1.64,465,1.706,466,1.64,467,1.64,468,1.776,469,1.64,470,1.776,471,1.64,472,1.776,473,1.64,474,1.608,475,2.207,476,1.776,477,1.64,478,1.608,479,1.776,480,1.64,481,1.776,482,1.64,483,1.776,484,1.64,485,1.776,486,1.673,487,1.776,488,1.64,489,1.776,490,1.64,491,1.776,492,1.64,493,1.776,494,1.64,495,1.776,496,1.608,497,1.776,498,1.577,499,1.776,500,2.274,501,1.776,502,1.64,503,1.776,504,1.64,505,1.776,506,1.776,507,1.64,508,1.776,509,1.546,510,1.776,511,1.608,512,1.776,513,1.608,514,1.776,515,1.64,516,1.776,517,1.608,518,1.776,519,1.64,520,1.706,521,1.776,522,1.776,529,4.35,530,4.184,532,1.459,533,1.459,534,5.115,537,2.961,538,3.617,645,4.956,646,5.407,678,2.607,756,3.146,789,5.127,942,3.934,944,4.126,950,6.158,951,5.407,952,5.407,956,6.719,1022,6.943,1036,4.956,1264,6.7,1406,7.31,1629,7.31,1641,5.407,1651,6.719,2078,5.407,2079,8.236,2080,7.57,2081,8.615,2082,9.157,2083,7.57,2084,6.092,2085,6.092,2086,6.092,2087,6.092,2088,6.092,2089,6.092,2090,8.236,2091,6.092,2092,6.092,2093,7.57,2094,7.57,2095,7.57,2096,7.57]],["title/modules/NewpasswordModule.html",[540,1.424,2097,3.484]],["body/modules/NewpasswordModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,442,1.68,500,2.485,540,2.259,542,2.744,543,3.65,544,4.453,545,3.764,546,3.764,547,3.65,553,5.02,554,4.496,555,3.888,556,3.888,559,3.49,560,3.406,562,4.328,563,4.707,758,4.506,789,4.937,2097,7.307,2098,6.47,2099,6.47,2100,6.47,2101,6.721,2102,7.29,2103,5.71,2104,6.47]],["title/modules/NewpasswordRoutingModule.html",[540,1.424,2101,3.281]],["body/modules/NewpasswordRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.921,500,2.256,537,3.627,542,2.809,559,3.089,560,3.452,589,4.431,590,4.789,591,4.431,593,4.266,594,4.613,2101,6.101,2104,6.624,2105,7.463]],["title/injectables/NotificationService.html",[53,1.691,152,0.202]],["body/injectables/NotificationService.html",[3,0.129,4,0.129,5,0.117,10,0.356,11,0.626,17,0.568,18,0.008,19,1.739,21,1.024,22,0.178,26,2.134,31,0.129,53,3,55,0.129,65,0.141,82,1.519,83,2.325,91,1.072,149,0.005,150,0.006,151,0.005,152,0.358,154,1.441,157,1.209,158,1.162,167,0.851,229,0.709,334,1.283,335,1.258,437,1.879,440,2.002,441,2.433,509,1.748,532,2.151,533,2.151,603,5.823,609,7.307,762,6.112,843,5.884,962,4.988,1608,7.458,1811,5.602,2106,6.112,2107,8.688,2108,8.155,2109,8.155,2110,8.155,2111,6.887,2112,8.155,2113,8.155,2114,6.887,2115,8.155,2116,8.982,2117,8.982,2118,9.168,2119,6.887,2120,8.155,2121,6.887,2122,8.155,2123,8.155,2124,6.887,2125,6.887,2126,8.155]],["title/injectables/PasswordChangeGQL.html",[152,0.202,351,1.101]],["body/injectables/PasswordChangeGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.317,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,1.026,352,1.108,353,1.108,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,2127,2.725]],["title/injectables/PasswordResetGQL.html",[152,0.202,348,1.101]],["body/injectables/PasswordResetGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.063,212,1.801,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,1.025,349,1.108,350,1.108,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,2128,2.723]],["title/injectables/PitchService.html",[152,0.202,1023,2.627]],["body/injectables/PitchService.html",[3,0.126,4,0.126,5,0.114,10,0.346,11,0.616,17,0.532,18,0.008,21,0.902,22,0.186,31,0.126,43,3.74,44,2.708,50,2.166,51,3.84,52,2.997,55,0.126,65,0.137,78,3.092,82,1.495,83,2.223,91,1.25,111,4.597,112,2.691,114,2.705,115,2.539,129,4.018,130,1.524,134,1.131,135,3.322,138,2.648,139,2.293,146,2.763,149,0.005,150,0.006,151,0.005,152,0.352,154,1.403,157,1.177,158,1.131,167,0.826,208,1.637,219,1.998,225,1.637,226,1.702,227,1.702,229,0.678,269,2.138,270,1.797,286,0.803,334,1.249,335,1.224,355,2.281,359,2.281,416,2.213,437,1.849,440,1.849,532,2.057,533,2.057,810,5.486,811,5.504,812,4.962,816,4.962,1020,6.529,1023,4.588,1119,4.145,1140,6.085,1141,4.33,1351,4.962,2129,5.951,2130,6.705,2131,6.705,2132,8.026,2133,6.705,2134,8.026,2135,6.705,2136,8.026,2137,8.026,2138,8.026,2139,8.026,2140,8.026,2141,6.705,2142,6.705,2143,8.026,2144,6.705,2145,6.705,2146,6.705]],["title/components/PitchesComponent.html",[27,0.437,502,1.237]],["body/components/PitchesComponent.html",[3,0.12,4,0.12,5,0.109,7,0.659,10,0.332,11,0.6,17,0.467,18,0.008,22,0.16,27,0.803,28,2.1,31,0.12,55,0.12,60,2.454,61,2.361,62,2.422,63,1.948,65,0.131,66,1.664,67,1.874,82,1.457,85,2.1,103,2.185,112,2.41,149,0.005,150,0.006,151,0.005,167,0.783,229,0.666,259,0.783,265,0.708,268,1.874,279,0.861,286,0.783,293,0.861,316,0.741,427,1.697,428,2.235,429,1.912,430,1.874,431,1.874,433,1.874,434,2.065,437,1.803,440,1.481,442,1.481,443,2.281,444,2.281,445,1.874,446,2.559,447,1.874,448,1.874,449,1.73,450,1.874,451,1.73,452,1.8,453,2.623,454,1.73,455,1.874,456,1.697,457,1.8,458,1.697,459,2.281,460,1.697,461,1.874,462,1.73,463,1.874,464,1.73,465,1.8,466,1.73,467,1.73,468,1.874,469,1.73,470,1.874,471,1.73,472,1.874,473,1.73,474,1.697,475,2.281,476,1.874,477,1.73,478,1.697,479,1.874,480,1.73,481,1.874,482,1.73,483,1.874,484,1.73,485,1.874,486,1.765,487,1.874,488,1.73,489,1.874,490,1.73,491,1.874,492,1.73,493,1.874,494,1.73,495,1.874,496,1.697,497,1.874,498,1.664,499,1.874,500,1.697,501,1.874,502,2.363,503,1.874,504,1.73,505,1.874,506,1.874,507,1.73,508,1.874,509,1.631,510,1.874,511,1.697,512,1.874,513,1.697,514,1.874,515,1.73,516,1.874,517,1.697,518,1.874,519,1.73,520,1.8,521,1.874,522,1.874,532,1.539,533,1.539,678,3.15,994,6.365,1023,5.382,1119,5.426,1267,4.589,1288,5.932,1691,5.229,2147,5.705,2148,8.434,2149,7.824,2150,6.427,2151,6.427,2152,6.427,2153,7.824,2154,7.824]],["title/injectables/PitchesGQL.html",[152,0.202,416,1.101]],["body/injectables/PitchesGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.267,269,1.492,270,0.896,271,0.691,272,1.066,273,1.689,274,0.691,275,1.066,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.087,285,1.087,286,0.789,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.492,323,1.291,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,1.025,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.628,424,0.652,425,0.678,2155,2.724]],["title/injectables/RankingGQL.html",[152,0.202,417,0.98]],["body/injectables/RankingGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.913,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.316,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.551,414,0.64,415,0.705,416,0.652,417,0.913,418,1.108,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,2156,2.723]],["title/injectables/RedisEventGQL.html",[152,0.202,1456,3.112]],["body/injectables/RedisEventGQL.html",[0,0.817,3,0.13,4,0.13,5,0.118,10,0.358,11,0.628,17,0.569,18,0.008,21,0.945,22,0.178,31,0.13,37,1.712,55,0.178,65,0.142,107,1.421,133,1.421,134,1.47,149,0.007,150,0.006,151,0.005,152,0.359,154,1.449,156,2.168,157,1.437,158,1.169,159,2.126,167,0.643,169,2.197,170,1.627,190,1.627,197,1.724,198,1.724,203,1.922,229,0.646,313,1.724,314,2.115,315,2.007,316,0.944,317,1.691,319,0.854,333,1.724,334,1.29,335,1.265,337,1.691,425,1.724,1438,5.251,1441,6.823,1456,5.542,1492,6.603,1613,5.284,1614,4.945,1615,6.204,1616,7.704,1617,7.73,1618,6.147,1619,6.204,1620,5.635,2157,6.926]],["title/injectables/RemoveRankingPenaltyGQL.html",[152,0.202,354,1.122]],["body/injectables/RemoveRankingPenaltyGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.808,10,0.141,11,0.328,12,1.435,13,1.407,14,1.581,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.362,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.558,117,1.656,119,1.829,123,1.463,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.569,155,0.651,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.153,163,2.111,164,1.852,165,1.794,166,1.551,167,0.252,169,2.358,170,0.639,171,1.721,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.024,178,1.024,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.407,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.677,198,2.371,199,1.107,200,1.963,201,1.688,202,1.688,203,2.244,204,1.086,205,1.086,206,1.721,207,1.086,208,1.926,209,1.086,210,0.704,211,2.053,212,1.491,213,0.704,214,0.691,215,1.065,216,0.704,217,1.79,218,1.836,219,1.065,220,1.551,221,2.111,222,2.111,223,1.963,224,1.551,225,1.688,226,1.521,227,1.521,228,1.086,229,0.704,230,1.107,231,1.107,232,1.368,233,1.368,234,1.368,235,1.086,236,1.107,237,1.107,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.107,244,1.107,245,1.086,246,1.521,247,1.407,248,1.963,249,1.902,250,1.521,251,1.721,252,1.086,253,1.551,254,1.086,255,0.704,256,1.521,257,1.755,258,1.065,259,0.771,260,0.948,261,0.627,262,1.898,263,0.691,264,0.664,265,0.9,266,1.656,267,1.005,268,1.024,269,1.316,270,0.895,271,0.691,272,1.065,273,1.688,274,0.691,275,1.065,276,1.721,277,0.691,278,0.677,279,0.825,280,1.341,281,1.044,282,1.621,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.562,290,1.5,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.677,298,1.044,299,1.065,300,1.29,301,1.086,302,1.086,303,1.316,304,0.704,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.407,312,1.065,313,0.677,314,1.5,315,1.218,316,0.493,317,0.664,318,0.704,319,1.023,320,1.316,321,1.794,322,1.316,323,1.29,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.677,334,1.747,335,1.714,336,0.664,337,2.291,338,2.362,339,0.664,340,0.704,341,0.704,342,0.664,343,0.704,344,0.704,345,0.664,346,0.704,347,0.704,348,0.651,349,0.704,350,0.704,351,0.651,352,0.704,353,0.704,354,1.044,355,0.664,356,0.704,357,0.704,358,0.664,359,0.664,360,1.086,361,0.664,362,0.704,363,0.704,364,0.677,365,0.704,366,0.704,367,0.677,368,0.704,369,0.704,370,0.677,371,0.704,372,0.677,373,0.704,374,0.664,375,0.704,376,0.704,377,0.677,378,0.704,379,0.704,380,0.664,381,0.704,382,0.704,383,0.651,384,0.651,385,0.704,386,0.704,387,0.664,388,0.704,389,0.704,390,0.664,391,0.704,392,0.704,393,0.664,394,0.704,395,0.704,396,0.664,397,0.664,398,0.664,399,0.704,400,0.704,401,0.677,402,2.146,403,0.704,404,0.704,405,0.639,406,0.704,407,0.704,408,0.639,409,0.704,410,0.704,411,0.615,412,0.704,413,1.368,414,0.639,415,0.704,416,0.651,417,0.58,418,0.704,419,0.651,420,0.664,421,0.704,422,0.704,423,0.627,424,0.651,425,0.677,2158,2.72]],["title/injectables/RemoveTeamFromSeasonGQL.html",[152,0.202,367,1.144]],["body/injectables/RemoveTeamFromSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.125,163,2.145,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,1.065,368,1.108,369,1.108,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,2159,2.723]],["title/components/RenameTeamComponent.html",[27,0.437,504,1.237]],["body/components/RenameTeamComponent.html",[3,0.115,4,0.115,5,0.104,7,0.628,10,0.317,11,0.583,17,0.515,18,0.008,21,0.867,22,0.185,23,4.076,24,2.894,26,1.899,27,0.786,28,2.056,29,2.74,31,0.115,32,4.89,33,3.958,40,3.299,41,1.787,42,2.022,45,1.785,50,1.98,53,3.177,54,2.476,55,0.115,58,1.738,60,2.45,61,2.357,62,2.389,63,1.892,65,0.125,66,1.586,67,1.82,82,1.415,83,2.138,85,2.252,86,3.405,88,3.336,90,3.588,103,2.149,112,2.36,114,2.065,115,1.939,138,2.022,139,2.171,149,0.005,150,0.006,151,0.005,167,0.824,229,0.682,239,1.892,259,0.76,265,0.675,279,0.837,286,0.76,293,0.837,316,0.707,321,1.468,384,1.468,427,1.618,428,2.171,429,1.823,430,1.787,431,1.787,433,1.787,434,2.006,437,1.751,440,1.751,441,1.717,442,1.412,443,2.215,444,2.215,445,1.787,446,2.517,447,1.787,448,1.787,449,1.65,450,1.787,451,1.65,452,1.717,453,2.587,454,1.65,455,1.787,456,1.618,457,1.717,458,1.618,459,2.215,460,1.618,461,1.787,462,1.65,463,1.787,464,1.65,465,1.717,466,1.65,467,1.65,468,1.787,469,1.65,470,1.787,471,1.65,472,1.787,473,1.65,474,1.618,475,2.215,476,1.787,477,1.65,478,1.618,479,1.787,480,1.65,481,1.787,482,1.65,483,1.787,484,1.65,485,1.787,486,1.683,487,1.787,488,1.65,489,1.787,490,1.65,491,1.787,492,1.65,493,1.787,494,1.65,495,1.787,496,1.618,497,1.787,498,1.586,499,1.787,500,1.618,501,1.787,502,1.65,503,1.787,504,2.324,505,2.701,506,1.787,507,1.65,508,1.787,509,1.556,510,1.787,511,1.618,512,1.787,513,1.618,514,1.787,515,1.65,516,1.787,517,1.618,518,1.787,519,1.65,520,1.717,521,1.787,522,1.787,532,1.82,533,1.82,574,6.857,627,2.601,678,2.973,921,3.958,970,5.44,976,4.511,978,6.744,1078,6.181,2160,8.027,2161,5.44,2162,8.259,2163,7.598,2164,6.129,2165,6.129,2166,7.598,2167,6.129,2168,6.744,2169,6.129,2170,6.129,2171,6.129,2172,6.129,2173,6.129]],["title/injectables/RenameTeamGQL.html",[152,0.202,384,1.101]],["body/injectables/RenameTeamGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.124,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.836,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,1.025,385,1.108,386,1.108,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,2174,2.723]],["title/injectables/RescheduleMatchDayGQL.html",[152,0.202,372,1.144]],["body/injectables/RescheduleMatchDayGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.407,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.639,47,1.005,48,0.615,49,0.603,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.558,117,1.656,119,1.963,123,1.463,125,0.664,127,0.664,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.569,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.111,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.639,171,1.801,172,1.107,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.407,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.677,198,2.371,199,1.107,200,1.963,201,1.688,202,1.688,203,2.244,204,1.086,205,1.086,206,1.721,207,1.086,208,1.926,209,1.086,210,0.704,211,2.053,212,1.492,213,0.704,214,0.691,215,1.065,216,0.704,217,1.551,218,1.521,219,1.065,220,1.551,221,2.111,222,2.111,223,1.963,224,1.551,225,1.688,226,1.521,227,1.521,228,1.086,229,0.704,230,1.107,231,1.107,232,1.368,233,1.551,234,1.686,235,1.086,236,1.107,237,1.107,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.107,244,1.107,245,1.086,246,1.521,247,1.407,248,1.963,249,1.902,250,1.521,251,1.721,252,1.086,253,1.551,254,1.086,255,0.704,256,1.521,257,1.755,258,1.065,259,0.771,260,0.948,261,0.627,262,1.899,263,0.691,264,0.664,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.688,274,0.691,275,1.065,276,1.721,277,0.691,278,0.677,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.677,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.704,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.407,312,1.065,313,0.677,314,1.501,315,1.218,316,0.493,317,0.664,318,0.704,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.677,334,1.748,335,1.714,336,0.664,337,2.291,338,2.362,339,0.664,340,0.704,341,0.704,342,0.664,343,0.704,344,0.704,345,0.664,346,0.704,347,0.704,348,0.652,349,0.704,350,0.704,351,0.652,352,0.704,353,0.704,354,0.664,355,0.664,356,0.704,357,0.704,358,0.664,359,0.664,360,1.086,361,0.664,362,0.704,363,0.704,364,0.677,365,0.704,366,0.704,367,0.677,368,0.704,369,0.704,370,0.677,371,0.704,372,1.065,373,1.107,374,0.664,375,0.704,376,0.704,377,0.677,378,0.704,379,0.704,380,0.664,381,0.704,382,0.704,383,0.652,384,0.652,385,0.704,386,0.704,387,0.664,388,0.704,389,0.704,390,0.664,391,0.704,392,0.704,393,0.664,394,0.704,395,0.704,396,0.664,397,0.664,398,0.664,399,0.704,400,0.704,401,0.677,402,2.146,403,0.704,404,0.704,405,0.639,406,0.704,407,0.704,408,0.639,409,0.704,410,0.704,411,0.615,412,0.704,413,1.368,414,0.639,415,0.704,416,0.652,417,0.58,418,0.704,419,0.652,420,0.664,421,0.704,422,0.704,423,0.627,424,0.652,425,0.677,2175,2.721]],["title/interfaces/RoundTeam.html",[0,0.542,20,3.112]],["body/interfaces/RoundTeam.html",[0,0.927,1,5.609,2,3.056,3,0.121,4,0.121,5,0.11,6,4.906,7,0.902,8,4.383,9,4.906,10,0.334,11,0.603,12,1.55,13,1.987,14,1.328,15,4.383,17,0.469,18,0.008,19,1.521,20,5.958,21,0.68,22,0.194,23,3.608,24,3.056,25,4.621,26,2.005,27,0.748,28,1.956,29,2.893,30,4.179,31,0.121,32,4.512,33,4.179,34,6.414,35,4.001,36,4.001,37,1.354,38,3.684,39,3.342,40,3.044,41,1.886,42,2.135,43,3.421,44,2.614,45,1.229,46,1.845,47,1.52,48,1.776,49,1.742,50,2.09,51,2.893,52,2.893,53,2.891,54,2.614,55,0.158,56,1.841,57,2.198,58,1.884,59,2.214,60,1.611,61,1.55,62,2.115,63,1.611,64,5.264,65,0.132,66,1.675,67,1.55,68,5.264,69,5.264,70,5.264,71,5.264,72,5.264,73,5.264,74,5.264,75,5.264,76,1.52,77,5.264,78,3.259,79,3.842,80,5.264,81,5.264,82,1.205,83,2.372,84,5.264,85,2.106,86,2.552,87,5.264,88,2.614,89,4.621,90,3.056,91,1.008,92,4.906,93,4.906,94,4.179,95,4.906,96,6.391,97,5.264,98,5.264,99,6.882,100,5.264,101,6.882,102,5.264,103,1.611,104,5.264,105,5.264,106,5.264,107,1.612,108,5.264,109,5.264,110,5.264,111,3.342,112,1.849,113,5.264,114,2.181,115,2.047,116,5.264,117,1.55,118,6.391,119,1.58,120,5.264,121,5.264,122,5.264,123,1.58,124,5.264,125,1.58,126,5.264,127,1.58,128,5.264,129,3.24,130,1.492,131,5.264,132,5.264,133,1.328,134,1.092,135,2.679,136,5.264,137,4.001,138,2.135,139,2.245,140,5.264,141,5.264,142,4.857,143,5.264,144,5.264,145,2.818,146,2.228,147,5.264,148,3.342,149,0.005,150,0.006,151,0.005]],["title/injectables/ScheduleMatchGQL.html",[152,0.202,339,1.122]],["body/injectables/ScheduleMatchGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.254,45,1.674,46,0.64,47,1.005,48,0.615,49,0.604,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.776,133,1.926,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.46,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,2.002,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.919,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.065,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,1.045,340,1.108,341,1.108,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.627,424,0.652,425,0.678,2176,2.723]],["title/injectables/SeasonPenaltiesGQL.html",[152,0.202,414,1.079]],["body/injectables/SeasonPenaltiesGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.406,14,1.618,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.683,46,0.638,47,1.003,48,0.614,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.655,119,1.828,123,1.461,125,0.663,127,0.663,130,1.779,133,1.925,134,1.615,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.477,158,0.458,159,2.329,160,2.459,161,1.549,162,2.108,163,2.111,164,1.852,165,1.793,166,1.549,167,0.252,169,2.357,170,0.638,171,1.72,172,1.106,173,1.063,174,1.084,175,1.084,176,1.084,177,1.023,178,1.023,179,0.689,180,0.689,181,1.084,182,1.084,183,1.084,184,1.084,185,1.084,186,1.084,187,1.084,188,1.084,189,1.084,190,1.406,191,1.084,192,1.084,193,1.084,194,1.084,195,1.084,196,1.063,197,0.676,198,2.371,199,1.106,200,1.962,201,1.687,202,1.687,203,2.244,204,1.084,205,1.084,206,1.72,207,1.084,208,1.925,209,1.084,210,0.703,211,2.053,212,1.49,213,0.703,214,0.689,215,1.063,216,0.703,217,1.549,218,1.519,219,1.063,220,1.549,221,2.111,222,2.111,223,1.962,224,1.549,225,1.687,226,1.519,227,1.519,228,1.084,229,0.703,230,1.106,231,1.106,232,1.366,233,1.366,234,1.366,235,1.084,236,1.106,237,1.106,238,1.519,239,1.063,240,1.519,241,1.063,242,1.084,243,1.106,244,1.106,245,1.084,246,1.519,247,1.406,248,1.962,249,1.9,250,1.519,251,1.72,252,1.084,253,1.55,254,1.084,255,0.703,256,1.519,257,1.754,258,1.063,259,0.77,260,0.947,261,0.626,262,1.898,263,0.689,264,0.663,265,0.912,266,1.731,267,1.003,268,1.023,269,1.314,270,0.894,271,0.689,272,1.063,273,1.687,274,0.689,275,1.063,276,1.72,277,0.689,278,0.676,279,0.824,280,1.34,281,1.043,282,1.62,283,2.128,284,1.084,285,1.084,286,0.77,287,1.084,288,1.084,289,1.561,290,1.499,291,1.084,292,1.084,293,0.9,294,1.003,295,1.519,296,1.084,297,0.676,298,1.043,299,1.063,300,1.289,301,1.084,302,1.084,303,1.314,304,0.703,305,1.084,306,1.084,307,1.084,308,1.084,309,1.084,310,1.084,311,1.528,312,1.063,313,0.676,314,1.499,315,1.216,316,0.493,317,0.663,318,0.703,319,1.022,320,1.314,321,1.844,322,1.314,323,1.289,324,1.314,325,1.063,326,1.063,327,1.063,328,1.063,329,1.314,330,1.314,331,1.49,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.703,341,0.703,342,0.663,343,0.703,344,0.703,345,0.663,346,0.703,347,0.703,348,0.65,349,0.703,350,0.703,351,0.65,352,0.703,353,0.703,354,0.663,355,0.663,356,0.703,357,0.703,358,0.663,359,0.663,360,1.084,361,0.663,362,0.703,363,0.703,364,0.676,365,0.703,366,0.703,367,0.676,368,0.703,369,0.703,370,0.676,371,0.703,372,0.676,373,0.703,374,0.663,375,0.703,376,0.703,377,0.676,378,0.703,379,0.703,380,0.663,381,0.703,382,0.703,383,0.65,384,0.65,385,0.703,386,0.703,387,0.663,388,0.703,389,0.703,390,0.663,391,0.703,392,0.703,393,0.663,394,0.703,395,0.703,396,0.663,397,0.663,398,0.663,399,0.703,400,0.703,401,0.676,402,2.145,403,0.703,404,0.703,405,0.638,406,0.703,407,0.703,408,0.638,409,0.703,410,0.703,411,0.614,412,0.703,413,1.549,414,1.003,415,1.106,416,0.65,417,0.579,418,0.703,419,0.65,420,0.663,421,0.703,422,0.703,423,0.626,424,0.65,425,0.676,2177,2.716]],["title/injectables/SeasonService.html",[152,0.202,602,2.627]],["body/injectables/SeasonService.html",[3,0.124,4,0.124,5,0.112,10,0.341,11,0.61,17,0.55,18,0.008,21,0.967,22,0.185,31,0.124,41,1.923,44,2.665,55,0.124,65,0.135,78,3.411,82,1.48,83,2.208,85,2.124,112,2.66,114,2.223,115,2.087,129,3.979,130,1.509,134,1.341,135,2.731,138,2.176,139,2.271,145,2.873,146,2.937,149,0.005,150,0.006,151,0.005,152,0.349,154,1.38,157,1.158,158,1.113,167,0.854,228,2.018,229,0.715,235,2.018,262,1.891,272,1.642,319,0.814,334,1.229,335,1.205,361,2.273,374,2.273,419,2.204,437,1.831,440,1.966,532,2.121,533,2.121,602,4.544,627,2.8,636,4.079,637,3.519,810,5.465,811,5.474,812,4.914,816,4.914,868,3.917,881,5.002,1141,4.26,1210,6.026,1850,7.055,2178,5.367,2179,8.531,2180,8.531,2181,7.948,2182,6.597,2183,7.948,2184,7.948,2185,6.597,2186,7.948,2187,7.948,2188,8.855,2189,6.597,2190,7.948,2191,7.948,2192,6.597,2193,7.055,2194,7.948,2195,6.597,2196,8.531,2197,7.948,2198,5.367,2199,5.856,2200,6.597,2201,6.597,2202,6.597,2203,7.948,2204,6.597,2205,6.597,2206,6.597]],["title/components/SeasonchooserComponent.html",[27,0.437,507,1.237]],["body/components/SeasonchooserComponent.html",[3,0.112,4,0.112,5,0.101,7,0.61,10,0.308,11,0.573,17,0.544,18,0.008,22,0.183,25,5.82,26,1.845,27,0.776,28,2.029,31,0.112,43,3.55,44,2.405,50,1.923,51,3.336,52,2.662,55,0.112,60,2.447,61,2.354,62,2.369,63,1.858,65,0.122,66,1.541,67,1.787,78,2.294,79,4.431,82,1.39,83,1.541,85,2.029,91,0.927,103,2.127,111,3.854,146,2.57,149,0.005,150,0.006,151,0.005,157,1.31,158,1.259,167,0.862,173,2.294,229,0.675,253,1.199,259,0.747,262,1.951,265,0.656,272,1.482,279,0.822,286,0.747,293,0.822,316,0.687,319,0.921,419,2.182,427,1.572,428,2.132,429,1.771,430,1.736,431,1.736,433,1.736,434,1.97,437,1.72,440,1.72,441,2.09,442,1.372,443,2.176,444,2.176,445,1.736,446,2.491,447,1.736,448,1.736,449,1.603,450,1.736,451,1.603,452,1.668,453,2.566,454,1.603,455,1.736,456,1.572,457,1.668,458,1.572,459,2.176,460,1.572,461,1.736,462,1.603,463,1.736,464,1.603,465,1.668,466,1.603,467,1.603,468,1.736,469,1.603,470,1.736,471,1.603,472,1.736,473,1.603,474,1.572,475,2.176,476,1.736,477,1.603,478,1.572,479,1.736,480,1.603,481,1.736,482,1.603,483,1.736,484,1.603,485,1.736,486,1.635,487,1.736,488,1.603,489,1.736,490,1.603,491,1.736,492,1.603,493,1.736,494,1.603,495,1.736,496,1.572,497,1.736,498,1.541,499,1.736,500,1.572,501,1.736,502,1.603,503,1.736,504,1.603,505,1.736,506,1.736,507,2.3,508,1.736,509,1.512,510,1.736,511,1.572,512,1.736,513,1.572,514,1.736,515,1.603,516,1.736,517,1.572,518,1.736,519,1.603,520,1.668,521,1.736,522,1.736,532,1.787,533,1.787,602,5.314,678,2.57,984,5.054,987,4.614,1092,6.071,1096,6.952,1107,6.071,1279,4.033,1351,3.681,1983,4.844,2003,4.844,2193,6.624,2207,5.285,2208,7.463,2209,8.151,2210,7.463,2211,8.151,2212,7.463,2213,8.151,2214,8.151,2215,7.463,2216,8.546,2217,7.463,2218,5.955,2219,5.955,2220,5.955,2221,5.955,2222,5.955,2223,5.955,2224,5.955,2225,5.955,2226,5.955,2227,5.955,2228,5.955,2229,5.955,2230,6.624,2231,5.955,2232,5.955,2233,5.955,2234,5.955,2235,8.151,2236,5.955,2237,7.463,2238,5.955,2239,5.955,2240,5.955,2241,7.463,2242,8.546]],["title/modules/SharedModule.html",[540,1.424,553,2.451]],["body/modules/SharedModule.html",[3,0.119,4,0.119,5,0.108,18,0.008,22,0.198,31,0.119,35,3.926,36,3.926,37,1.329,41,1.851,42,2.095,55,0.119,62,2.091,65,0.13,149,0.005,150,0.006,151,0.005,259,0.777,286,0.874,293,0.924,442,1.463,451,2.585,452,1.778,456,2.462,457,1.778,458,2.462,462,2.568,464,2.511,465,1.778,466,2.568,467,2.511,469,2.511,471,2.511,473,2.511,494,2.568,507,2.568,509,2.367,540,1.968,542,2.39,543,3.179,544,4.2,545,3.279,546,3.279,547,4.2,553,5.251,554,4.142,555,3.387,556,3.387,558,6.318,559,3.215,560,3.137,584,4.1,585,5.19,727,6.825,739,6.46,751,5.636,754,7.446,755,7.446,756,3.279,758,3.926,903,4.814,958,3.77,980,5.166,1012,4.534,1087,5.166,1874,5.636,1875,5.636,1876,5.636,1877,5.636,2103,5.682,2243,5.636,2244,5.636,2245,6.35,2246,5.636,2247,6.35,2248,6.35,2249,6.35,2250,8.39,2251,8.39,2252,6.35,2253,6.35,2254,6.35]],["title/components/SnackbarComponent.html",[27,0.437,509,1.167]],["body/components/SnackbarComponent.html",[0,0.765,3,0.121,4,0.121,5,0.11,7,0.664,10,0.335,11,0.603,17,0.469,18,0.008,21,0.826,22,0.161,26,2.008,27,0.806,28,2.107,29,2.897,31,0.121,55,0.147,60,2.455,61,2.362,62,2.427,63,1.958,65,0.132,66,1.678,67,1.883,82,1.464,85,2.107,91,1.371,103,2.191,149,0.005,150,0.006,151,0.005,167,0.785,229,0.668,259,0.787,265,0.714,279,0.866,286,0.787,293,0.866,316,0.747,427,1.711,428,2.247,429,1.928,430,1.889,431,1.889,433,1.889,434,2.076,437,1.812,440,1.493,441,1.815,442,1.493,443,2.292,444,2.292,445,1.889,446,2.566,447,1.889,448,1.889,449,1.745,450,1.889,451,1.745,452,1.815,453,2.629,454,1.745,455,1.889,456,1.711,457,1.815,458,1.711,459,2.292,460,1.711,461,1.889,462,1.745,463,1.889,464,1.745,465,1.815,466,1.745,467,1.745,468,1.889,469,1.745,470,1.889,471,1.745,472,1.889,473,1.745,474,1.711,475,2.292,476,1.889,477,1.745,478,1.711,479,1.889,480,1.745,481,1.889,482,1.745,483,1.889,484,1.745,485,1.889,486,1.779,487,1.889,488,1.745,489,1.889,490,1.745,491,1.889,492,1.745,493,1.889,494,1.745,495,1.889,496,1.711,497,1.889,498,1.678,499,1.889,500,1.711,501,1.889,502,1.745,503,1.889,504,1.745,505,1.889,506,1.889,507,1.745,508,1.889,509,2.234,510,1.889,511,1.711,512,1.889,513,1.711,514,1.889,515,1.745,516,1.889,517,1.711,518,1.889,519,1.745,520,1.815,521,1.889,522,1.889,532,1.552,533,1.552,603,5.615,627,2.751,959,5.272,962,3.347,964,6.979,1606,6.837,1607,5.272,1608,5.272,1609,5.752,1610,6.979,1611,7.513,1612,6.979,2255,6.481,2256,6.481,2257,6.481,2258,7.863]],["title/injectables/StartSeasonGQL.html",[152,0.202,374,1.122]],["body/injectables/StartSeasonGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.364,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.777,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,154,0.57,155,0.653,156,2.343,157,0.478,158,0.46,159,2.329,160,2.46,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.026,178,1.026,179,0.692,180,0.692,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.493,213,0.705,214,0.692,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.903,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.692,264,0.665,265,0.9,266,1.657,267,1.006,268,1.026,269,1.317,270,0.896,271,0.692,272,1.066,273,1.689,274,0.692,275,1.066,276,1.722,277,0.692,278,0.678,279,0.825,280,1.343,281,1.046,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.564,290,1.502,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.046,299,1.066,300,1.292,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.502,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.292,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.317,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.653,349,0.705,350,0.705,351,0.653,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,1.046,375,1.108,376,1.108,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.653,384,0.653,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.147,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.653,417,0.581,418,0.705,419,0.653,420,0.665,421,0.705,422,0.705,423,0.628,424,0.653,425,0.678,2259,2.725]],["title/injectables/SubmitResultGQL.html",[152,0.202,336,1.122]],["body/injectables/SubmitResultGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.434,13,1.406,14,1.581,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.105,45,1.674,46,0.638,47,1.004,48,0.614,49,0.603,55,0.185,56,1.362,57,1.004,58,1.507,59,1.004,65,0.192,76,1.529,91,0.665,107,0.558,117,1.655,119,1.829,123,1.462,125,0.664,127,0.664,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.651,154,0.569,155,0.651,156,2.342,157,0.477,158,0.459,159,2.329,160,2.46,161,1.55,162,2.108,163,2.111,164,1.852,165,1.793,166,1.789,167,0.252,169,2.357,170,0.638,171,1.721,172,1.106,173,1.064,174,1.085,175,1.085,176,1.085,177,1.024,178,1.024,179,0.69,180,0.69,181,1.085,182,1.085,183,1.085,184,1.085,185,1.085,186,1.085,187,1.085,188,1.085,189,1.085,190,1.406,191,1.085,192,1.085,193,1.085,194,1.085,195,1.085,196,1.064,197,0.677,198,2.371,199,1.367,200,2.063,201,1.881,202,1.881,203,2.244,204,1.341,205,1.085,206,1.721,207,1.085,208,1.925,209,1.085,210,0.704,211,2.053,212,1.491,213,0.704,214,0.69,215,1.064,216,0.704,217,1.55,218,1.52,219,1.064,220,1.55,221,2.111,222,2.111,223,1.963,224,1.55,225,1.687,226,1.52,227,1.52,228,1.085,229,0.704,230,1.106,231,1.106,232,1.367,233,1.367,234,1.367,235,1.085,236,1.106,237,1.106,238,1.52,239,1.064,240,1.52,241,1.064,242,1.085,243,1.106,244,1.106,245,1.085,246,1.52,247,1.406,248,1.963,249,1.901,250,1.52,251,1.721,252,1.085,253,1.551,254,1.085,255,0.704,256,1.52,257,1.754,258,1.064,259,0.771,260,0.947,261,0.626,262,1.898,263,0.69,264,0.664,265,0.9,266,1.655,267,1.004,268,1.024,269,1.315,270,0.894,271,0.69,272,1.064,273,1.687,274,0.69,275,1.064,276,1.721,277,0.69,278,0.677,279,0.825,280,1.341,281,1.044,282,1.621,283,2.129,284,1.085,285,1.085,286,0.771,287,1.085,288,1.085,289,1.562,290,1.5,291,1.085,292,1.085,293,0.9,294,1.004,295,1.52,296,1.085,297,0.677,298,1.044,299,1.064,300,1.29,301,1.085,302,1.085,303,1.315,304,0.704,305,1.085,306,1.085,307,1.085,308,1.085,309,1.085,310,1.085,311,1.406,312,1.064,313,0.677,314,1.5,315,1.217,316,0.493,317,0.664,318,0.704,319,1.023,320,1.315,321,1.793,322,1.315,323,1.29,324,1.315,325,1.064,326,1.064,327,1.064,328,1.064,329,1.315,330,1.315,331,1.315,332,1.064,333,0.677,334,1.747,335,1.713,336,1.044,337,2.291,338,2.361,339,0.664,340,0.704,341,0.704,342,0.664,343,0.704,344,0.704,345,0.664,346,0.704,347,0.704,348,0.651,349,0.704,350,0.704,351,0.651,352,0.704,353,0.704,354,0.664,355,0.664,356,0.704,357,0.704,358,0.664,359,0.664,360,1.085,361,0.664,362,0.704,363,0.704,364,0.677,365,0.704,366,0.704,367,0.677,368,0.704,369,0.704,370,0.677,371,0.704,372,0.677,373,0.704,374,0.664,375,0.704,376,0.704,377,0.677,378,0.704,379,0.704,380,0.664,381,0.704,382,0.704,383,0.651,384,0.651,385,0.704,386,0.704,387,0.664,388,0.704,389,0.704,390,0.664,391,0.704,392,0.704,393,0.664,394,0.704,395,0.704,396,0.664,397,0.664,398,0.664,399,0.704,400,0.704,401,0.677,402,2.145,403,0.704,404,0.704,405,0.638,406,0.704,407,0.704,408,0.638,409,0.704,410,0.704,411,0.614,412,0.704,413,1.367,414,0.638,415,0.704,416,0.651,417,0.58,418,0.704,419,0.651,420,0.664,421,0.704,422,0.704,423,0.626,424,0.651,425,0.677,2260,2.718]],["title/components/TableComponent.html",[27,0.437,511,1.213]],["body/components/TableComponent.html",[3,0.107,4,0.107,5,0.098,7,0.588,10,0.296,11,0.559,17,0.539,18,0.008,22,0.189,26,1.776,27,0.762,28,1.994,31,0.107,38,4.051,39,2.96,40,2.062,41,1.671,42,1.891,43,3.488,44,2.316,45,1.601,50,1.852,51,2.563,52,2.563,55,0.107,58,1.612,60,2.443,61,2.35,62,2.342,63,1.814,65,0.117,66,1.484,67,1.745,82,1.357,83,1.886,85,2.298,103,2.098,107,1.176,134,1.23,146,1.974,148,2.96,149,0.004,150,0.006,151,0.004,167,0.857,229,0.687,253,1.154,259,0.729,265,0.958,266,1.745,267,2.148,279,0.802,286,0.729,293,0.802,311,1.346,316,0.661,319,0.707,417,1.798,427,1.513,428,2.082,429,1.705,430,1.671,431,1.671,433,1.671,434,1.923,437,1.679,440,1.942,441,2.243,442,1.321,443,2.124,444,2.124,445,1.671,446,2.457,447,1.671,448,1.671,449,1.543,450,1.671,451,1.543,452,1.605,453,2.536,454,1.543,455,1.671,456,1.513,457,1.605,458,1.513,459,2.124,460,1.513,461,1.671,462,1.543,463,1.671,464,1.543,465,1.605,466,1.543,467,1.543,468,1.671,469,1.543,470,1.671,471,1.543,472,1.671,473,1.543,474,1.513,475,2.124,476,1.671,477,1.543,478,1.513,479,1.671,480,1.543,481,1.671,482,1.543,483,1.671,484,1.543,485,1.671,486,1.574,487,1.671,488,1.543,489,1.671,490,1.543,491,1.671,492,1.543,493,1.671,494,1.543,495,1.671,496,1.513,497,1.671,498,1.484,499,1.671,500,1.513,501,1.671,502,1.543,503,1.671,504,1.543,505,1.671,506,1.671,507,1.543,508,1.671,509,1.455,510,1.671,511,2.225,512,1.671,513,1.513,514,1.671,515,1.543,516,1.671,517,1.513,518,1.671,519,1.543,520,1.605,521,1.671,522,1.671,532,1.918,533,1.918,602,5.278,603,6.213,609,7.078,663,4.663,665,3.882,666,3.702,667,3.702,678,2.509,784,5.524,1252,4.666,1457,6.516,1537,3.882,1670,4.093,1683,5.088,1685,5.088,1983,4.663,2003,4.663,2012,5.088,2014,5.088,2015,5.088,2230,6.467,2261,5.088,2262,8.01,2263,7.286,2264,7.286,2265,8.428,2266,7.286,2267,7.286,2268,7.286,2269,5.732,2270,5.732,2271,5.732,2272,7.286,2273,5.732,2274,5.732,2275,5.732,2276,5.732,2277,5.732,2278,7.286,2279,5.732,2280,5.732,2281,5.732,2282,5.732,2283,5.732,2284,5.088,2285,5.732,2286,5.732,2287,7.286,2288,7.286,2289,7.286,2290,7.286,2291,7.286,2292,7.286,2293,7.286,2294,7.286,2295,7.286,2296,7.286,2297,7.286,2298,7.286,2299,8.428,2300,8.428,2301,8.428,2302,7.286,2303,7.286,2304,7.286]],["title/modules/TableModule.html",[540,1.424,2305,3.484]],["body/modules/TableModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,442,1.68,511,2.485,540,2.259,542,2.744,543,3.65,544,4.453,545,3.764,546,3.764,547,3.65,553,5.02,554,4.496,555,3.888,556,3.888,559,3.49,560,3.406,562,4.328,563,4.707,758,4.506,784,5.527,2103,5.71,2305,7.307,2306,6.47,2307,6.47,2308,6.47,2309,6.721,2310,7.29,2311,6.47]],["title/modules/TableRoutingModule.html",[540,1.424,2309,3.281]],["body/modules/TableRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.71,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.921,511,2.256,537,3.627,542,2.809,559,3.089,560,3.452,589,4.431,590,4.789,591,4.431,593,4.266,594,4.613,2309,6.101,2311,6.624,2312,7.463]],["title/interfaces/TeamIdPair.html",[0,0.542,47,1.079]],["body/interfaces/TeamIdPair.html",[0,0.505,2,1.288,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.329,12,1.437,13,1.409,14,1.583,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.641,47,1.243,48,0.616,49,0.605,55,0.185,56,1.364,57,1.007,58,1.509,59,1.007,65,0.192,76,1.531,91,0.667,107,0.56,117,1.657,119,1.831,123,1.465,125,1.465,127,1.465,130,1.777,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.653,155,0.653,156,2.336,159,2.328,160,2.459,161,1.553,162,2.11,163,2.112,164,1.854,165,1.795,166,1.553,169,2.358,170,0.641,171,1.723,172,1.109,173,1.067,174,1.088,175,1.088,176,1.088,177,1.026,178,1.026,179,0.692,180,0.692,181,1.088,182,1.088,183,1.088,184,1.088,185,1.088,186,1.088,187,1.088,188,1.088,189,1.088,190,1.409,191,1.088,192,1.088,193,1.088,194,1.088,195,1.088,196,1.067,197,0.679,198,2.371,199,1.109,200,1.965,201,1.69,202,1.69,203,2.245,204,1.088,205,1.088,206,1.723,207,1.088,208,1.927,209,1.088,210,0.706,211,2.054,212,1.493,213,0.706,214,0.692,215,1.067,216,0.706,217,1.553,218,1.523,219,1.067,220,1.553,221,2.112,222,2.112,223,1.965,224,1.553,225,1.69,226,1.523,227,1.523,228,1.088,229,0.704,230,1.109,231,1.109,232,1.37,233,1.37,234,1.37,235,1.088,236,1.109,237,1.109,238,1.523,239,1.067,240,1.523,241,1.067,242,1.088,243,1.109,244,1.109,245,1.088,246,1.523,247,1.409,248,1.965,249,1.903,250,1.523,251,1.723,252,1.088,253,1.552,254,1.088,255,0.706,256,1.523,257,1.757,258,1.067,259,0.771,260,0.95,261,0.628,262,1.899,263,0.692,264,0.666,265,0.901,266,1.657,267,1.007,268,1.026,269,1.318,270,0.897,271,0.692,272,1.067,273,1.69,274,0.692,275,1.067,276,1.723,277,0.692,278,0.679,279,0.826,280,1.344,281,1.046,282,1.623,283,2.13,284,1.088,285,1.088,286,0.771,287,1.088,288,1.088,289,1.564,290,1.502,291,1.088,292,1.088,293,0.901,294,1.007,295,1.523,296,1.088,297,0.679,298,1.046,299,1.067,300,1.292,301,1.088,302,1.088,303,1.318,304,0.706,305,1.088,306,1.088,307,1.088,308,1.088,309,1.088,310,1.088,311,1.409,312,1.067,313,0.679,314,1.502,315,1.22,316,0.494,317,0.666,318,0.706,319,1.023,320,1.318,321,1.795,322,1.318,323,1.292,324,1.318,325,1.067,326,1.067,327,1.067,328,1.067,329,1.318,330,1.318,331,1.318,332,1.067,333,0.679,334,1.748,335,1.714,336,0.666,337,2.292,338,2.362,339,0.666,340,0.706,341,0.706,342,0.666,343,0.706,344,0.706,345,0.666,346,0.706,347,0.706,348,0.653,349,0.706,350,0.706,351,0.653,352,0.706,353,0.706,354,0.666,355,0.666,356,0.706,357,0.706,358,0.666,359,0.666,360,1.088,361,0.666,362,0.706,363,0.706,364,0.679,365,0.706,366,0.706,367,0.679,368,0.706,369,0.706,370,0.679,371,0.706,372,0.679,373,0.706,374,0.666,375,0.706,376,0.706,377,0.679,378,0.706,379,0.706,380,0.666,381,0.706,382,0.706,383,0.653,384,0.653,385,0.706,386,0.706,387,0.666,388,0.706,389,0.706,390,0.666,391,0.706,392,0.706,393,0.666,394,0.706,395,0.706,396,0.666,397,0.666,398,0.666,399,0.706,400,0.706,401,0.679,402,2.147,403,0.706,404,0.706,405,0.641,406,0.706,407,0.706,408,0.641,409,0.706,410,0.706,411,0.616,412,0.706,413,1.37,414,0.641,415,0.706,416,0.653,417,0.582,418,0.706,419,0.653,420,0.666,421,0.706,422,0.706,423,0.628,424,0.653,425,0.679]],["title/injectables/TeamService.html",[32,2.451,152,0.202]],["body/injectables/TeamService.html",[3,0.117,4,0.117,5,0.107,10,0.324,11,0.591,14,1.58,17,0.533,18,0.008,21,0.991,22,0.182,31,0.117,32,4.639,43,3.631,44,2.53,45,1.78,51,2.8,52,2.8,55,0.144,58,1.678,65,0.157,76,1.959,78,3.44,82,1.434,83,2.252,91,1.199,111,4.492,112,2.382,114,2.81,115,2.638,129,3.855,130,1.462,134,1.407,135,3.452,138,2.751,139,2.382,146,2.871,149,0.005,150,0.006,151,0.005,152,0.338,154,1.31,157,1.1,158,1.057,163,1.844,167,0.829,203,1.471,229,0.718,239,1.917,240,1.59,241,1.917,283,1.809,319,0.773,321,1.997,334,1.166,335,1.144,380,2.124,384,2.206,387,2.249,420,2.249,437,1.774,440,2.004,465,2.157,532,2.083,533,2.083,637,3.34,810,5.601,811,5.621,812,5.155,816,5.155,846,5.838,868,3.718,1141,4.044,1210,5.838,1351,4.76,1715,6.835,1718,6.835,1720,7.927,1721,6.835,1964,5.558,1965,5.558,1966,6.835,1968,5.558,2025,6.835,2026,6.835,2168,7.927,2284,5.558,2313,5.558,2314,6.263,2315,7.7,2316,7.7,2317,7.7,2318,7.7,2319,6.263,2320,6.263,2321,6.263,2322,7.7,2323,6.263,2324,7.7,2325,7.7,2326,6.263,2327,7.7,2328,6.263,2329,7.7,2330,7.7,2331,7.7,2332,6.263,2333,6.263,2334,6.263,2335,6.263,2336,6.263,2337,6.263,2338,7.7,2339,6.263,2340,7.7,2341,6.263]],["title/components/TeamadminComponent.html",[27,0.437,513,1.213]],["body/components/TeamadminComponent.html",[3,0.115,4,0.115,5,0.104,7,0.628,10,0.316,11,0.583,17,0.53,18,0.008,21,0.867,22,0.185,27,0.786,28,2.055,31,0.115,32,5.014,33,3.954,40,3.382,41,1.785,42,2.02,50,1.978,53,3.265,54,2.473,55,0.115,60,2.45,61,2.356,62,2.389,63,1.891,65,0.125,66,1.585,67,1.819,82,1.414,83,2.137,85,2.325,88,3.584,103,2.149,112,2.359,114,2.063,115,1.937,129,3.066,130,1.163,135,2.535,138,2.02,139,2.17,149,0.005,150,0.006,151,0.005,157,1.075,158,1.033,163,1.466,167,0.851,229,0.681,238,2.095,259,0.76,265,0.674,279,0.977,286,0.76,293,1.009,294,1.939,316,0.706,383,2.067,423,1.989,427,1.616,428,2.17,429,1.821,430,1.785,431,1.785,433,1.785,434,2.005,437,1.75,440,1.75,441,1.715,442,1.411,443,2.214,444,2.214,445,1.785,446,2.516,447,1.785,448,1.785,449,1.648,450,1.785,451,1.648,452,1.715,453,2.587,454,1.648,455,1.785,456,1.616,457,1.715,458,1.616,459,2.214,460,1.616,461,1.785,462,1.648,463,1.785,464,1.648,465,1.715,466,1.648,467,1.648,468,1.785,469,1.648,470,1.785,471,1.648,472,1.785,473,1.648,474,1.616,475,2.214,476,1.785,477,1.648,478,1.616,479,1.785,480,1.648,481,1.785,482,1.648,483,1.785,484,1.648,485,1.785,486,1.681,487,1.785,488,1.648,489,1.785,490,1.648,491,1.785,492,1.648,493,1.785,494,1.648,495,1.785,496,1.616,497,1.785,498,1.585,499,1.785,500,1.616,501,1.785,502,1.648,503,1.785,504,1.648,505,1.785,506,1.785,507,1.648,508,1.785,509,1.554,510,1.785,511,1.616,512,1.785,513,2.278,514,1.785,515,1.648,516,1.785,517,1.616,518,1.785,519,1.648,520,1.715,521,1.785,522,1.785,530,4.076,532,1.819,533,1.819,534,4.901,538,3.635,794,6.178,835,6.178,846,5.758,2342,5.435,2343,8.255,2344,7.594,2345,7.594,2346,6.123,2347,7.594,2348,6.123,2349,7.594,2350,6.123,2351,6.123,2352,6.123,2353,6.123,2354,7.594,2355,6.123,2356,6.123,2357,6.123,2358,6.123,2359,7.594]],["title/guards/TeamadminGuard.html",[523,3.738,778,3.484]],["body/guards/TeamadminGuard.html",[3,0.135,4,0.135,5,0.123,10,0.372,17,0.5,18,0.008,22,0.186,31,0.135,43,3.853,44,2.908,55,0.135,65,0.147,67,1.724,82,1.341,145,3.644,146,2.882,149,0.006,150,0.007,151,0.006,152,0.367,167,0.821,229,0.661,299,2.203,334,1.341,335,1.315,437,1.928,440,1.928,525,5.856,527,7.545,528,7.637,529,5.14,530,4.302,532,2.004,533,2.004,534,4.969,537,3.498,538,4.274,778,6.345,804,5.14,810,4.969,2058,7.428,2360,6.389,2361,7.198,2362,7.198,2363,9.11,2364,9.11,2365,7.198,2366,7.198,2367,8.369]],["title/modules/TeamadminModule.html",[540,1.424,2368,3.484]],["body/modules/TeamadminModule.html",[3,0.137,4,0.137,5,0.124,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,442,1.681,513,2.485,540,2.261,542,2.747,543,3.654,544,4.455,545,3.768,546,3.768,547,3.654,553,5.021,554,4.499,555,3.892,556,3.892,559,3.492,560,3.408,562,4.333,563,4.712,758,4.511,794,5.937,2103,5.713,2368,7.308,2369,6.477,2370,6.477,2371,6.477,2372,6.723,2373,7.298,2374,6.477]],["title/modules/TeamadminRoutingModule.html",[540,1.424,2372,3.281]],["body/modules/TeamadminRoutingModule.html",[3,0.139,4,0.139,5,0.127,18,0.008,22,0.188,27,0.707,31,0.139,55,0.139,65,0.152,149,0.006,150,0.007,151,0.006,319,0.917,513,2.251,537,3.612,542,2.798,544,3.721,559,3.077,560,3.444,589,4.413,590,4.781,591,4.413,593,4.25,594,4.595,758,4.595,2103,5.034,2372,6.088,2374,6.597,2375,7.433]],["title/components/TeamsComponent.html",[27,0.437,515,1.237]],["body/components/TeamsComponent.html",[3,0.121,4,0.121,5,0.11,7,0.665,10,0.335,11,0.604,14,1.614,17,0.47,18,0.008,22,0.161,27,0.806,28,2.108,31,0.121,32,5.028,55,0.121,60,2.455,61,2.362,62,2.428,63,1.958,65,0.132,66,1.678,67,1.884,82,1.465,85,2.108,103,2.192,112,2.419,149,0.005,150,0.006,151,0.005,167,0.786,229,0.668,259,0.787,265,0.714,279,0.866,286,0.787,293,0.866,316,0.748,427,1.712,428,2.247,429,1.929,430,1.89,431,1.89,433,1.89,434,2.076,437,1.812,440,1.494,442,1.494,443,2.293,444,2.293,445,1.89,446,2.566,447,1.89,448,1.89,449,1.746,450,1.89,451,1.746,452,1.816,453,2.629,454,1.746,455,1.89,456,1.712,457,1.816,458,1.712,459,2.293,460,1.712,461,1.89,462,1.746,463,1.89,464,1.746,465,1.816,466,1.746,467,1.746,468,1.89,469,1.746,470,1.89,471,1.746,472,1.89,473,1.746,474,1.712,475,2.293,476,1.89,477,1.746,478,1.712,479,1.89,480,1.746,481,1.89,482,1.746,483,1.89,484,1.746,485,1.89,486,1.78,487,1.89,488,1.746,489,1.89,490,1.746,491,1.89,492,1.746,493,1.89,494,1.746,495,1.89,496,1.712,497,1.89,498,1.678,499,1.89,500,1.712,501,1.89,502,1.746,503,1.89,504,1.746,505,1.89,506,1.89,507,1.746,508,1.89,509,1.646,510,1.89,511,1.712,512,1.89,513,1.712,514,1.89,515,2.37,516,1.89,517,1.712,518,1.89,519,1.746,520,1.816,521,1.89,522,1.89,532,1.553,533,1.553,678,3.031,976,4.67,994,6.399,1195,5.275,1208,5.755,2376,5.755,2377,8.467,2378,7.866,2379,6.484,2380,6.484,2381,6.484,2382,7.866]],["title/components/TournamentComponent.html",[27,0.437,517,1.213]],["body/components/TournamentComponent.html",[3,0.104,4,0.104,5,0.094,7,0.919,10,0.286,11,0.547,13,2.155,17,0.542,18,0.008,21,0.874,22,0.183,27,0.75,28,1.961,31,0.104,38,3.994,39,2.857,41,1.613,43,3.748,44,2.235,45,1.051,48,1.88,49,1.844,50,1.787,51,3.521,52,2.473,55,0.133,60,2.439,61,2.346,62,2.317,63,1.773,65,0.113,66,1.432,67,1.706,82,1.327,83,2.153,85,1.961,89,5.625,91,1.109,103,2.071,107,1.462,134,0.934,145,2.409,146,1.905,148,3.678,149,0.004,150,0.006,151,0.004,167,0.858,229,0.696,253,1.114,259,0.713,265,0.609,275,1.377,278,1.773,279,0.784,286,0.713,289,1.25,293,0.784,298,1.739,316,0.638,319,0.683,427,1.46,428,2.035,429,1.646,430,1.613,431,1.613,433,1.613,434,1.88,437,1.641,440,1.983,441,2.206,442,1.275,443,2.076,444,2.076,445,1.613,446,2.425,447,1.613,448,1.613,449,1.489,450,1.613,451,1.489,452,1.55,453,2.509,454,1.489,455,1.613,456,1.46,457,1.55,458,1.46,459,2.076,460,1.46,461,1.613,462,1.489,463,1.613,464,1.489,465,1.55,466,1.489,467,1.489,468,1.613,469,1.489,470,1.613,471,1.489,472,1.613,473,1.489,474,1.46,475,2.076,476,1.613,477,1.489,478,1.46,479,1.613,480,1.489,481,1.613,482,1.489,483,1.613,484,1.489,485,1.613,486,1.519,487,1.613,488,1.489,489,1.613,490,1.489,491,1.613,492,1.489,493,1.613,494,1.489,495,1.613,496,1.46,497,1.613,498,1.432,499,1.613,500,1.46,501,1.613,502,1.489,503,1.613,504,1.489,505,1.613,506,1.613,507,1.489,508,1.613,509,1.404,510,1.613,511,1.46,512,1.613,513,1.46,514,1.613,515,1.489,516,1.613,517,2.196,518,1.613,519,1.489,520,1.55,521,1.613,522,1.613,532,1.992,533,1.992,627,2.348,628,6.322,636,3.42,637,2.951,638,4.195,678,3.294,838,7.291,1252,4.628,1272,3.747,1279,3.747,1351,3.42,1472,3.951,1537,3.747,1670,3.951,1743,6.992,1778,4.911,1780,4.911,1784,4.911,1790,4.911,1819,6.322,1828,5.401,1830,5.401,1851,6.322,2383,4.501,2384,7.877,2385,7.123,2386,7.877,2387,8.318,2388,7.123,2389,7.123,2390,5.533,2391,7.877,2392,7.123,2393,7.123,2394,5.533,2395,5.533,2396,5.533,2397,5.533,2398,8.318,2399,7.123,2400,5.533,2401,5.533,2402,5.533,2403,5.533,2404,5.533,2405,5.533,2406,5.533,2407,4.911,2408,5.533,2409,7.877,2410,5.533,2411,5.533,2412,5.533,2413,5.533,2414,5.533,2415,5.533,2416,5.533,2417,5.533,2418,7.123,2419,5.533,2420,7.123,2421,5.533,2422,5.533,2423,7.123,2424,7.123,2425,9.08,2426,7.123,2427,7.123,2428,7.123,2429,7.123,2430,7.123,2431,7.123]],["title/injectables/TournamentGQL.html",[49,1.019,152,0.202]],["body/injectables/TournamentGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.824,10,0.141,11,0.328,12,1.435,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.106,45,1.674,46,0.64,47,1.005,48,0.615,49,0.949,55,0.185,56,1.363,57,1.005,58,1.508,59,1.005,65,0.192,76,1.53,91,0.666,107,0.559,117,1.656,119,1.83,123,1.463,125,0.665,127,0.665,130,1.779,133,1.926,134,1.614,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.459,159,2.329,160,2.459,161,1.551,162,2.109,163,2.112,164,1.853,165,1.794,166,1.551,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.065,174,1.086,175,1.086,176,1.086,177,1.025,178,1.025,179,0.691,180,0.691,181,1.086,182,1.086,183,1.086,184,1.086,185,1.086,186,1.086,187,1.086,188,1.086,189,1.086,190,1.408,191,1.086,192,1.086,193,1.086,194,1.086,195,1.086,196,1.065,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.244,204,1.086,205,1.086,206,1.722,207,1.086,208,1.926,209,1.086,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.065,216,0.705,217,1.551,218,1.521,219,1.065,220,1.551,221,2.112,222,2.112,223,1.964,224,1.551,225,1.689,226,1.521,227,1.521,228,1.086,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.086,236,1.108,237,1.108,238,1.521,239,1.065,240,1.521,241,1.065,242,1.086,243,1.108,244,1.108,245,1.086,246,1.521,247,1.408,248,1.964,249,1.902,250,1.521,251,1.722,252,1.086,253,1.551,254,1.086,255,0.705,256,1.521,257,1.756,258,1.065,259,0.771,260,0.949,261,0.627,262,1.899,263,0.691,264,0.665,265,0.9,266,1.656,267,1.005,268,1.025,269,1.316,270,0.895,271,0.691,272,1.065,273,1.689,274,0.691,275,1.065,276,1.722,277,0.691,278,0.678,279,0.825,280,1.342,281,1.045,282,1.622,283,2.129,284,1.086,285,1.086,286,0.771,287,1.086,288,1.086,289,1.563,290,1.501,291,1.086,292,1.086,293,0.9,294,1.005,295,1.521,296,1.086,297,0.678,298,1.045,299,1.065,300,1.291,301,1.086,302,1.086,303,1.316,304,0.705,305,1.086,306,1.086,307,1.086,308,1.086,309,1.086,310,1.086,311,1.408,312,1.065,313,0.678,314,1.501,315,1.218,316,0.493,317,0.665,318,0.705,319,1.023,320,1.316,321,1.794,322,1.316,323,1.291,324,1.316,325,1.065,326,1.065,327,1.065,328,1.316,329,1.316,330,1.316,331,1.316,332,1.065,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.086,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.615,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,1.108,422,1.108,423,0.627,424,0.652,425,0.678,2432,2.723]],["title/modules/TournamentModule.html",[540,1.424,2433,3.484]],["body/modules/TournamentModule.html",[3,0.137,4,0.137,5,0.124,7,0.748,18,0.008,22,0.19,31,0.137,55,0.137,65,0.149,149,0.006,150,0.007,151,0.006,442,1.681,517,2.485,540,2.261,542,2.747,543,3.654,544,4.455,545,3.768,546,3.768,547,3.654,553,5.021,554,4.499,555,3.892,556,3.892,559,3.492,560,3.408,562,4.333,563,4.712,758,4.511,2103,5.713,2433,7.308,2434,6.477,2435,6.477,2436,6.477,2437,6.723,2438,7.298,2439,6.477]],["title/modules/TournamentRoutingModule.html",[540,1.424,2437,3.281]],["body/modules/TournamentRoutingModule.html",[3,0.14,4,0.14,5,0.127,18,0.008,22,0.183,27,0.709,31,0.14,55,0.14,65,0.152,149,0.006,150,0.007,151,0.006,319,0.92,517,2.254,537,3.623,542,2.806,544,3.732,559,3.086,560,3.45,589,4.426,590,4.787,591,4.426,593,4.262,594,4.608,2437,6.098,2439,6.616,2440,7.454]],["title/injectables/UpdatePitchContactGQL.html",[152,0.202,358,1.122]],["body/injectables/UpdatePitchContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.405,14,1.58,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.674,46,0.637,47,1.003,48,0.613,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.654,119,1.827,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.476,158,0.458,159,2.329,160,2.46,161,1.548,162,2.108,163,2.11,164,1.851,165,1.792,166,1.548,167,0.252,169,2.357,170,0.637,171,1.719,172,1.105,173,1.063,174,1.083,175,1.083,176,1.083,177,1.022,178,1.022,179,0.689,180,0.689,181,1.083,182,1.083,183,1.083,184,1.083,185,1.083,186,1.083,187,1.083,188,1.083,189,1.083,190,1.405,191,1.083,192,1.083,193,1.083,194,1.083,195,1.083,196,1.063,197,0.676,198,2.371,199,1.105,200,1.962,201,1.686,202,1.686,203,2.244,204,1.083,205,1.083,206,1.719,207,1.083,208,2.023,209,1.083,210,0.702,211,2.08,212,1.489,213,0.702,214,0.689,215,1.063,216,0.702,217,1.548,218,1.518,219,1.063,220,1.788,221,2.144,222,2.144,223,2.063,224,1.548,225,1.686,226,1.518,227,1.518,228,1.083,229,0.703,230,1.105,231,1.105,232,1.366,233,1.366,234,1.366,235,1.083,236,1.105,237,1.105,238,1.518,239,1.063,240,1.518,241,1.063,242,1.083,243,1.105,244,1.105,245,1.083,246,1.518,247,1.405,248,1.962,249,1.9,250,1.518,251,1.719,252,1.083,253,1.55,254,1.083,255,0.702,256,1.518,257,1.753,258,1.063,259,0.77,260,0.946,261,0.625,262,1.898,263,0.689,264,0.663,265,0.899,266,1.654,267,1.003,268,1.022,269,1.313,270,0.893,271,0.689,272,1.063,273,1.686,274,0.689,275,1.063,276,1.719,277,0.689,278,0.676,279,0.824,280,1.339,281,1.042,282,1.619,283,2.128,284,1.083,285,1.083,286,0.77,287,1.083,288,1.083,289,1.561,290,1.499,291,1.083,292,1.083,293,0.899,294,1.003,295,1.518,296,1.083,297,0.676,298,1.042,299,1.063,300,1.288,301,1.083,302,1.083,303,1.313,304,0.702,305,1.083,306,1.083,307,1.083,308,1.083,309,1.083,310,1.083,311,1.405,312,1.063,313,0.676,314,1.499,315,1.216,316,0.492,317,0.663,318,0.702,319,1.022,320,1.313,321,1.792,322,1.313,323,1.288,324,1.313,325,1.063,326,1.063,327,1.063,328,1.063,329,1.313,330,1.313,331,1.313,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.702,341,0.702,342,0.663,343,0.702,344,0.702,345,0.663,346,0.702,347,0.702,348,0.65,349,0.702,350,0.702,351,0.65,352,0.702,353,0.702,354,0.663,355,0.663,356,0.702,357,0.702,358,1.042,359,0.663,360,1.083,361,0.663,362,0.702,363,0.702,364,0.676,365,0.702,366,0.702,367,0.676,368,0.702,369,0.702,370,0.676,371,0.702,372,0.676,373,0.702,374,0.663,375,0.702,376,0.702,377,0.676,378,0.702,379,0.702,380,0.663,381,0.702,382,0.702,383,0.65,384,0.65,385,0.702,386,0.702,387,0.663,388,0.702,389,0.702,390,0.663,391,0.702,392,0.702,393,0.663,394,0.702,395,0.702,396,0.663,397,0.663,398,0.663,399,0.702,400,0.702,401,0.676,402,2.145,403,0.702,404,0.702,405,0.637,406,0.702,407,0.702,408,0.637,409,0.702,410,0.702,411,0.613,412,0.702,413,1.366,414,0.637,415,0.702,416,0.65,417,0.579,418,0.702,419,0.65,420,0.663,421,0.702,422,0.702,423,0.625,424,0.65,425,0.676,2441,2.714]],["title/injectables/UpdateTeamContactGQL.html",[152,0.202,383,1.101]],["body/injectables/UpdateTeamContactGQL.html",[0,0.504,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.328,12,1.433,13,1.405,14,1.58,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.104,45,1.674,46,0.637,47,1.003,48,0.613,49,0.602,55,0.185,56,1.361,57,1.003,58,1.507,59,1.003,65,0.192,76,1.528,91,0.665,107,0.557,117,1.654,119,1.827,123,1.461,125,0.663,127,0.663,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.413,153,0.65,154,0.568,155,0.65,156,2.342,157,0.476,158,0.458,159,2.329,160,2.46,161,1.548,162,2.108,163,2.144,164,1.851,165,1.792,166,1.548,167,0.252,169,2.357,170,0.637,171,1.719,172,1.105,173,1.063,174,1.083,175,1.083,176,1.083,177,1.022,178,1.022,179,0.689,180,0.689,181,1.083,182,1.083,183,1.083,184,1.083,185,1.083,186,1.083,187,1.083,188,1.083,189,1.083,190,1.405,191,1.083,192,1.083,193,1.083,194,1.083,195,1.083,196,1.063,197,0.676,198,2.371,199,1.105,200,1.962,201,1.686,202,1.686,203,2.244,204,1.083,205,1.083,206,1.719,207,1.083,208,1.924,209,1.083,210,0.702,211,2.08,212,1.489,213,0.702,214,0.689,215,1.063,216,0.702,217,1.548,218,1.518,219,1.063,220,1.548,221,2.144,222,2.144,223,2.063,224,1.548,225,1.686,226,1.518,227,1.518,228,1.083,229,0.703,230,1.105,231,1.105,232,1.366,233,1.366,234,1.366,235,1.083,236,1.105,237,1.105,238,1.753,239,1.063,240,1.518,241,1.063,242,1.083,243,1.105,244,1.105,245,1.083,246,1.518,247,1.405,248,1.962,249,1.9,250,1.518,251,1.719,252,1.083,253,1.55,254,1.083,255,0.702,256,1.518,257,1.753,258,1.063,259,0.77,260,0.946,261,0.625,262,1.898,263,0.689,264,0.663,265,0.899,266,1.654,267,1.003,268,1.022,269,1.313,270,0.893,271,0.689,272,1.063,273,1.686,274,0.689,275,1.063,276,1.719,277,0.689,278,0.676,279,0.824,280,1.339,281,1.042,282,1.619,283,2.128,284,1.083,285,1.083,286,0.77,287,1.083,288,1.083,289,1.561,290,1.499,291,1.083,292,1.083,293,0.899,294,1.003,295,1.518,296,1.083,297,0.676,298,1.042,299,1.063,300,1.288,301,1.083,302,1.083,303,1.313,304,0.702,305,1.083,306,1.083,307,1.083,308,1.083,309,1.083,310,1.083,311,1.405,312,1.063,313,0.676,314,1.499,315,1.216,316,0.492,317,0.663,318,0.702,319,1.022,320,1.313,321,1.792,322,1.313,323,1.288,324,1.313,325,1.063,326,1.063,327,1.063,328,1.063,329,1.313,330,1.313,331,1.313,332,1.063,333,0.676,334,1.747,335,1.713,336,0.663,337,2.291,338,2.361,339,0.663,340,0.702,341,0.702,342,0.663,343,0.702,344,0.702,345,0.663,346,0.702,347,0.702,348,0.65,349,0.702,350,0.702,351,0.65,352,0.702,353,0.702,354,0.663,355,0.663,356,0.702,357,0.702,358,0.663,359,0.663,360,1.083,361,0.663,362,0.702,363,0.702,364,0.676,365,0.702,366,0.702,367,0.676,368,0.702,369,0.702,370,0.676,371,0.702,372,0.676,373,0.702,374,0.663,375,0.702,376,0.702,377,0.676,378,0.702,379,0.702,380,0.663,381,0.702,382,0.702,383,1.022,384,0.65,385,0.702,386,0.702,387,0.663,388,0.702,389,0.702,390,0.663,391,0.702,392,0.702,393,0.663,394,0.702,395,0.702,396,0.663,397,0.663,398,0.663,399,0.702,400,0.702,401,0.676,402,2.145,403,0.702,404,0.702,405,0.637,406,0.702,407,0.702,408,0.637,409,0.702,410,0.702,411,0.613,412,0.702,413,1.366,414,0.637,415,0.702,416,0.65,417,0.579,418,0.702,419,0.65,420,0.663,421,0.702,422,0.702,423,0.625,424,0.65,425,0.676,2442,2.714]],["title/injectables/UpdateUserGQL.html",[152,0.202,397,1.122]],["body/injectables/UpdateUserGQL.html",[0,0.503,3,0.051,4,0.051,5,0.046,7,0.808,10,0.14,11,0.327,12,1.432,13,1.405,14,1.58,17,0.586,18,0.008,19,1.733,21,1.033,22,0.108,31,0.051,37,1.103,45,1.673,46,0.637,47,1.002,48,0.613,49,0.601,55,0.185,56,1.36,57,1.002,58,1.506,59,1.002,65,0.192,76,1.527,91,0.664,107,0.556,117,1.653,119,1.827,123,1.46,125,0.662,127,0.662,130,1.776,133,1.925,134,1.612,149,0.002,150,0.003,151,0.002,152,0.412,153,0.649,154,0.567,155,0.649,156,2.342,157,0.476,158,0.458,159,2.329,160,2.459,161,1.548,162,2.107,163,2.11,164,1.851,165,1.792,166,1.548,167,0.252,169,2.357,170,0.637,171,1.719,172,1.104,173,1.062,174,1.083,175,1.083,176,1.083,177,1.022,178,1.022,179,0.688,180,0.688,181,1.083,182,1.083,183,1.083,184,1.083,185,1.083,186,1.083,187,1.083,188,1.083,189,1.083,190,1.405,191,1.083,192,1.083,193,1.083,194,1.083,195,1.083,196,1.062,197,0.675,198,2.37,199,1.104,200,1.961,201,1.686,202,1.686,203,2.244,204,1.083,205,1.083,206,1.719,207,1.083,208,1.924,209,1.083,210,0.702,211,2.079,212,1.489,213,0.702,214,0.688,215,1.062,216,0.702,217,1.548,218,1.518,219,1.062,220,1.548,221,2.143,222,2.143,223,1.961,224,1.548,225,1.686,226,1.518,227,1.518,228,1.083,229,0.703,230,1.104,231,1.104,232,1.365,233,1.365,234,1.365,235,1.083,236,1.104,237,1.104,238,1.518,239,1.062,240,1.518,241,1.062,242,1.083,243,1.104,244,1.104,245,1.083,246,1.518,247,1.405,248,2.062,249,2.039,250,1.753,251,1.916,252,1.083,253,1.549,254,1.083,255,0.702,256,1.518,257,1.753,258,1.062,259,0.77,260,0.946,261,0.625,262,1.897,263,0.688,264,0.662,265,0.899,266,1.653,267,1.002,268,1.022,269,1.313,270,0.892,271,0.688,272,1.062,273,1.686,274,0.688,275,1.062,276,1.719,277,0.688,278,0.675,279,0.824,280,1.339,281,1.042,282,1.619,283,2.128,284,1.083,285,1.083,286,0.77,287,1.083,288,1.083,289,1.56,290,1.498,291,1.083,292,1.083,293,0.899,294,1.002,295,1.518,296,1.083,297,0.675,298,1.042,299,1.062,300,1.288,301,1.083,302,1.083,303,1.313,304,0.702,305,1.083,306,1.083,307,1.083,308,1.083,309,1.083,310,1.083,311,1.405,312,1.062,313,0.675,314,1.498,315,1.215,316,0.492,317,0.662,318,0.702,319,1.022,320,1.313,321,1.792,322,1.313,323,1.288,324,1.313,325,1.062,326,1.062,327,1.062,328,1.062,329,1.313,330,1.313,331,1.313,332,1.062,333,0.675,334,1.747,335,1.713,336,0.662,337,2.29,338,2.361,339,0.662,340,0.702,341,0.702,342,0.662,343,0.702,344,0.702,345,0.662,346,0.702,347,0.702,348,0.649,349,0.702,350,0.702,351,0.649,352,0.702,353,0.702,354,0.662,355,0.662,356,0.702,357,0.702,358,0.662,359,0.662,360,1.083,361,0.662,362,0.702,363,0.702,364,0.675,365,0.702,366,0.702,367,0.675,368,0.702,369,0.702,370,0.675,371,0.702,372,0.675,373,0.702,374,0.662,375,0.702,376,0.702,377,0.675,378,0.702,379,0.702,380,0.662,381,0.702,382,0.702,383,0.649,384,0.649,385,0.702,386,0.702,387,0.662,388,0.702,389,0.702,390,0.662,391,0.702,392,0.702,393,0.662,394,0.702,395,0.702,396,0.662,397,1.042,398,0.662,399,0.702,400,0.702,401,0.675,402,2.144,403,0.702,404,0.702,405,0.637,406,0.702,407,0.702,408,0.637,409,0.702,410,0.702,411,0.613,412,0.702,413,1.365,414,0.637,415,0.702,416,0.649,417,0.578,418,0.702,419,0.649,420,0.662,421,0.702,422,0.702,423,0.625,424,0.649,425,0.675,2443,2.711]],["title/injectables/UserGQL.html",[152,0.202,423,1.059]],["body/injectables/UserGQL.html",[0,0.505,3,0.051,4,0.051,5,0.046,7,0.809,10,0.141,11,0.328,12,1.436,13,1.408,14,1.582,17,0.586,18,0.008,19,1.734,21,1.033,22,0.108,31,0.051,37,1.107,45,1.675,46,0.64,47,1.006,48,0.616,49,0.604,55,0.185,56,1.363,57,1.006,58,1.509,59,1.006,65,0.192,76,1.531,91,0.667,107,0.559,117,1.657,119,1.83,123,1.464,125,0.665,127,0.665,130,1.779,133,1.926,134,1.613,149,0.002,150,0.003,151,0.002,152,0.413,153,0.652,154,0.57,155,0.652,156,2.343,157,0.478,158,0.46,159,2.329,160,2.459,161,1.552,162,2.109,163,2.112,164,1.853,165,1.795,166,1.552,167,0.253,169,2.358,170,0.64,171,1.722,172,1.108,173,1.066,174,1.087,175,1.087,176,1.087,177,1.025,178,1.025,179,0.691,180,0.691,181,1.087,182,1.087,183,1.087,184,1.087,185,1.087,186,1.087,187,1.087,188,1.087,189,1.087,190,1.408,191,1.087,192,1.087,193,1.087,194,1.087,195,1.087,196,1.066,197,0.678,198,2.371,199,1.108,200,1.964,201,1.689,202,1.689,203,2.245,204,1.087,205,1.087,206,1.722,207,1.087,208,1.926,209,1.087,210,0.705,211,2.054,212,1.492,213,0.705,214,0.691,215,1.066,216,0.705,217,1.552,218,1.522,219,1.066,220,1.552,221,2.112,222,2.112,223,1.964,224,1.552,225,1.689,226,1.522,227,1.522,228,1.087,229,0.704,230,1.108,231,1.108,232,1.369,233,1.369,234,1.369,235,1.087,236,1.108,237,1.108,238,1.522,239,1.066,240,1.522,241,1.066,242,1.087,243,1.108,244,1.108,245,1.087,246,1.522,247,1.408,248,1.964,249,1.902,250,1.522,251,1.722,252,1.087,253,1.552,254,1.087,255,0.705,256,1.522,257,1.756,258,1.066,259,0.771,260,0.949,261,0.628,262,1.899,263,0.691,264,0.665,265,0.9,266,1.657,267,1.006,268,1.025,269,1.317,270,0.896,271,0.691,272,1.066,273,1.689,274,0.691,275,1.066,276,1.722,277,0.691,278,0.678,279,0.869,280,1.522,281,1.045,282,1.622,283,2.129,284,1.087,285,1.087,286,0.771,287,1.087,288,1.087,289,1.563,290,1.501,291,1.087,292,1.087,293,0.9,294,1.006,295,1.522,296,1.087,297,0.678,298,1.045,299,1.066,300,1.291,301,1.087,302,1.087,303,1.317,304,0.705,305,1.087,306,1.087,307,1.087,308,1.087,309,1.087,310,1.087,311,1.408,312,1.066,313,0.678,314,1.501,315,1.219,316,0.494,317,0.665,318,0.705,319,1.023,320,1.317,321,1.795,322,1.317,323,1.291,324,1.317,325,1.066,326,1.066,327,1.066,328,1.066,329,1.492,330,1.317,331,1.317,332,1.066,333,0.678,334,1.748,335,1.714,336,0.665,337,2.291,338,2.362,339,0.665,340,0.705,341,0.705,342,0.665,343,0.705,344,0.705,345,0.665,346,0.705,347,0.705,348,0.652,349,0.705,350,0.705,351,0.652,352,0.705,353,0.705,354,0.665,355,0.665,356,0.705,357,0.705,358,0.665,359,0.665,360,1.087,361,0.665,362,0.705,363,0.705,364,0.678,365,0.705,366,0.705,367,0.678,368,0.705,369,0.705,370,0.678,371,0.705,372,0.678,373,0.705,374,0.665,375,0.705,376,0.705,377,0.678,378,0.705,379,0.705,380,0.665,381,0.705,382,0.705,383,0.652,384,0.652,385,0.705,386,0.705,387,0.665,388,0.705,389,0.705,390,0.665,391,0.705,392,0.705,393,0.665,394,0.705,395,0.705,396,0.665,397,0.665,398,0.665,399,0.705,400,0.705,401,0.678,402,2.146,403,0.705,404,0.705,405,0.64,406,0.705,407,0.705,408,0.64,409,0.705,410,0.705,411,0.616,412,0.705,413,1.369,414,0.64,415,0.705,416,0.652,417,0.581,418,0.705,419,0.652,420,0.665,421,0.705,422,0.705,423,0.986,424,0.652,425,0.678,2444,2.724]],["title/components/UserListComponent.html",[27,0.437,519,1.237]],["body/components/UserListComponent.html",[3,0.107,4,0.107,5,0.097,7,0.583,10,0.294,11,0.556,14,1.488,17,0.502,18,0.008,22,0.188,26,1.763,27,0.76,28,1.987,31,0.107,40,3.245,41,1.659,42,1.877,43,3.476,44,2.299,50,1.838,51,3.242,52,2.544,53,3.093,54,2.299,55,0.107,60,2.442,61,2.349,62,2.458,63,1.805,65,0.116,66,1.473,67,1.737,82,1.351,83,2.247,86,2.244,88,3.224,91,1.243,103,2.093,111,3.745,112,1.626,114,1.918,115,1.8,129,2.849,130,1.081,135,2.356,138,1.877,139,2.072,149,0.004,150,0.006,151,0.004,167,0.824,221,1.737,222,1.737,229,0.685,251,1.417,252,1.841,259,0.726,265,0.627,279,1.051,281,2.167,282,1.987,286,0.726,293,0.798,316,0.656,319,0.702,398,2.202,424,2.126,427,1.502,428,2.072,429,1.693,430,1.659,431,1.659,433,1.659,434,1.914,437,1.671,440,1.937,441,2.354,442,1.311,443,2.114,444,2.114,445,1.659,446,2.45,447,1.659,448,1.659,449,1.532,450,1.659,451,1.532,452,1.594,453,2.531,454,1.532,455,1.659,456,1.914,457,2.236,458,1.502,459,2.114,460,1.502,461,1.659,462,1.532,463,1.659,464,1.532,465,1.594,466,1.532,467,1.532,468,1.659,469,1.532,470,1.659,471,1.532,472,1.659,473,1.532,474,1.502,475,2.114,476,1.659,477,1.952,478,1.502,479,1.659,480,1.532,481,1.659,482,1.532,483,1.659,484,1.532,485,1.659,486,1.562,487,1.659,488,1.532,489,1.659,490,1.532,491,1.659,492,1.532,493,1.659,494,1.532,495,1.659,496,1.502,497,1.659,498,1.473,499,1.659,500,1.502,501,1.659,502,1.532,503,1.659,504,1.532,505,1.659,506,1.659,507,1.532,508,1.659,509,1.444,510,1.659,511,1.502,512,1.659,513,1.502,514,1.659,515,1.532,516,1.659,517,1.502,518,1.659,519,2.263,520,2.236,521,1.659,522,1.659,532,1.912,533,1.912,571,7.338,584,3.675,585,4.306,610,3.996,611,5.196,678,3.2,869,5.498,957,4.063,958,3.378,962,2.938,976,4.306,1185,4.911,1186,4.629,1291,4.911,1351,3.518,1673,4.063,1675,4.063,1704,4.314,1705,4.314,2445,8.006,2446,5.05,2447,7.982,2448,7.252,2449,8.405,2450,7.252,2451,5.69,2452,7.252,2453,5.69,2454,7.252,2455,5.69,2456,7.252,2457,5.69,2458,5.69,2459,5.69,2460,5.69,2461,5.69,2462,5.69,2463,5.69,2464,7.252,2465,8.405,2466,5.69,2467,5.69,2468,5.69,2469,5.69,2470,5.69,2471,7.252,2472,7.252,2473,7.252,2474,7.252]],["title/coverage.html",[2475,5.122]],["body/coverage.html",[0,1.106,1,3.576,5,0.085,6,5.69,7,0.879,8,5.082,9,5.69,17,0.299,18,0.008,20,3.392,27,0.927,32,2.671,38,2.181,46,1.176,47,1.176,48,1.132,49,1.11,53,1.843,66,1.296,78,1.929,148,5.125,149,0.006,150,0.005,151,0.004,152,0.431,153,1.199,155,2.352,171,1.247,259,0.668,265,0.881,279,0.735,286,0.801,293,0.735,320,1.247,321,1.199,322,1.247,323,1.223,324,1.247,325,1.247,326,1.247,327,1.247,328,1.247,329,1.247,330,1.247,331,1.247,332,1.247,336,1.223,339,1.223,342,1.223,345,1.223,348,1.199,351,1.199,354,1.223,355,1.223,358,1.223,359,1.223,361,1.223,364,1.247,367,1.247,370,1.247,372,1.247,374,1.223,377,1.247,380,1.223,383,1.199,384,1.199,387,1.223,390,1.223,393,1.223,396,1.223,397,1.223,398,1.223,401,1.247,405,1.176,408,1.176,411,1.132,414,1.176,416,1.199,417,1.068,419,1.199,420,1.223,423,1.154,424,1.199,427,1.322,432,4.445,449,1.348,451,1.348,454,1.348,456,1.322,458,1.322,460,1.322,462,1.348,464,1.348,466,1.348,467,1.348,469,1.348,471,1.348,473,1.348,474,1.322,477,1.348,478,1.322,480,1.348,482,1.348,484,1.348,486,1.375,488,1.348,490,1.348,492,1.348,494,1.348,496,1.322,498,1.296,500,1.322,502,1.348,504,1.348,507,1.348,509,1.271,511,1.322,513,1.322,515,1.348,517,1.322,519,1.348,523,5.428,524,3.576,526,4.445,530,2.365,568,5.358,571,4.074,574,3.797,580,4.074,582,5.714,584,4.309,599,4.445,602,2.863,612,3.392,613,3.234,614,3.096,631,6.068,633,5.059,638,3.797,725,3.797,740,5.428,766,5.923,772,4.074,776,4.074,778,3.797,784,3.797,797,3.797,798,5.428,821,5.69,849,3.797,851,3.392,870,3.797,902,4.445,903,3.797,904,5.536,931,4.445,957,4.765,958,3.962,960,3.797,967,5.428,971,3.797,979,4.445,980,4.074,981,4.445,995,4.445,1011,4.445,1012,3.576,1023,2.863,1072,4.445,1086,5.428,1087,4.074,1088,4.445,1120,5.69,1121,5.69,1129,3.797,1191,4.445,1242,4.445,1252,2.586,1292,4.445,1316,4.445,1339,4.445,1373,4.445,1451,5.428,1456,3.392,1471,3.797,1500,5.428,1519,4.074,1527,3.576,1528,5.69,1529,5.69,1533,3.576,1606,3.797,1607,5.428,1613,4.309,1614,5.358,1621,5.428,1622,5.428,1625,4.445,1686,4.445,1711,4.445,1735,5.428,1774,4.074,1831,4.445,1837,4.445,1940,4.445,1973,6.51,2004,4.074,2006,4.074,2008,4.074,2078,4.445,2106,4.445,2129,4.445,2147,4.445,2160,4.445,2161,4.445,2178,5.428,2198,4.074,2207,4.445,2261,4.445,2313,4.445,2342,4.445,2360,4.445,2376,4.445,2383,5.428,2445,4.445,2446,4.445,2475,4.074,2476,4.445,2477,5.008,2478,5.008,2479,9.783,2480,9.229,2481,9.674,2482,9.694,2483,6.673,2484,8.889,2485,8.889,2486,8.003,2487,8.003,2488,8.335,2489,5.923,2490,5.008,2491,4.445,2492,5.008,2493,8.335,2494,8.335,2495,5.008,2496,5.008,2497,5.008,2498,6.673,2499,5.008,2500,5.008,2501,5.008,2502,4.445,2503,4.445,2504,4.445,2505,4.445,2506,5.923,2507,4.445,2508,5.008]],["title/dependencies.html",[543,2.77,2509,3.826]],["body/dependencies.html",[18,0.008,26,2.083,31,0.126,35,4.155,36,4.155,37,1.406,41,2.507,42,2.217,44,3.247,139,1.921,149,0.005,150,0.006,151,0.005,190,2.227,283,1.579,314,2.196,315,1.981,537,3.267,543,3.365,545,3.471,637,3.585,742,7.134,743,6.539,749,5.966,750,5.966,756,3.471,758,4.155,851,4.552,866,5.468,867,6.539,1210,5.096,1291,4.552,1370,7.249,1371,5.468,1380,7.632,1381,5.966,1388,5.966,1390,5.096,1391,5.096,1392,6.094,1444,5.966,1477,5.468,1536,5.096,1959,5.966,2060,5.966,2475,5.468,2510,6.722,2511,9.482,2512,6.722,2513,8.038,2514,6.722,2515,8.038,2516,6.722,2517,6.722,2518,6.722,2519,6.722,2520,6.722,2521,6.722,2522,6.722,2523,6.722,2524,6.722,2525,6.722,2526,6.722,2527,6.722,2528,8.038,2529,6.722,2530,6.722,2531,6.722,2532,6.722,2533,8.038,2534,8.038,2535,8.038,2536,6.722,2537,6.722,2538,6.722,2539,6.722,2540,6.722,2541,6.722,2542,6.722,2543,6.722,2544,6.722,2545,6.722,2546,6.722,2547,6.722,2548,6.722,2549,6.722,2550,5.966,2551,6.722,2552,9.422,2553,9.345,2554,6.722,2555,6.722,2556,8.91,2557,6.722,2558,6.722,2559,6.722,2560,6.722,2561,6.722,2562,6.722,2563,6.722,2564,6.722,2565,6.722,2566,6.722,2567,6.722,2568,6.722,2569,6.722,2570,6.722,2571,6.722,2572,6.722,2573,6.722,2574,6.722,2575,6.722,2576,6.722,2577,6.722,2578,6.722,2579,6.722,2580,6.722,2581,6.722,2582,6.722,2583,6.722,2584,6.722,2585,6.722,2586,6.722,2587,6.722,2588,6.722,2589,6.722]],["title/miscellaneous/enumerations.html",[2590,2.365,2591,4.912]],["body/miscellaneous/enumerations.html",[10,0.389,18,0.007,149,0.006,150,0.007,151,0.006,155,1.803,158,1.583,173,2.138,174,2.18,175,2.18,176,2.18,177,2.057,178,2.057,179,1.912,180,1.912,2590,4.656,2591,6.684,2592,6.988]],["title/miscellaneous/functions.html",[2590,2.365,2593,4.912]],["body/miscellaneous/functions.html",[10,0.391,18,0.007,149,0.006,150,0.007,151,0.006,229,0.68,532,2.062,533,2.062,740,6.154,767,6.715,769,6.715,772,7.006,776,7.006,2590,4.677,2593,6.715,2594,8.612,2595,8.612]],["title/index.html",[10,0.198,2596,3.396,2597,3.396]],["body/index.html",[18,0.007,149,0.006,150,0.007,151,0.006,2476,6.773,2598,7.631,2599,8.654,2600,8.654,2601,7.631]],["title/modules.html",[542,2.37]],["body/modules.html",[18,0.007,149,0.006,150,0.007,151,0.006,541,5.491,542,2.726,551,5.171,552,5.171,553,3.862,721,4.904,731,5.491,737,5.171,738,5.171,739,4.904,743,7.86,1001,5.491,1005,5.171,1359,5.171,2036,5.491,2040,5.171,2097,5.491,2101,5.171,2305,5.491,2309,5.171,2368,5.491,2372,5.171,2433,5.491,2437,5.171,2602,9.661,2603,9.661,2604,9.825,2605,9.661,2606,9.661]],["title/overview.html",[2607,5.588]],["body/overview.html",[2,2.818,18,0.008,66,2.112,149,0.005,150,0.006,151,0.005,154,1.249,427,2.154,428,1.705,442,1.375,449,2.454,451,2.454,454,2.197,456,2.154,458,2.154,460,2.154,462,2.454,464,2.197,466,2.454,467,2.197,469,2.197,471,2.197,473,2.197,474,2.154,477,2.197,478,2.406,480,2.197,482,2.197,484,2.197,486,2.24,488,2.197,490,2.197,492,2.197,494,2.454,496,2.154,498,2.112,500,2.154,502,2.197,504,2.197,507,2.454,509,2.071,511,2.154,513,2.154,515,2.197,517,2.154,519,2.197,525,4.855,530,3.853,540,1.849,541,7.431,542,2.246,543,2.988,544,2.988,545,3.082,546,3.082,547,2.988,548,5.297,549,5.297,550,5.297,551,5.826,552,6.757,553,5.25,554,3.986,555,3.183,556,3.183,590,3.183,612,5.526,614,5.044,721,5.792,731,7.289,732,5.297,733,5.297,734,5.297,735,5.297,736,5.297,737,5.826,738,6.509,739,6.243,1001,7.175,1002,5.297,1003,5.297,1004,5.297,1005,5.826,1355,5.297,1356,5.297,1357,5.297,1358,5.297,1359,5.826,1365,5.297,1366,5.297,1434,4.855,2036,7.099,2037,5.297,2038,5.297,2039,5.297,2040,5.826,2097,6.989,2098,5.297,2099,5.297,2100,5.297,2101,5.826,2243,5.297,2244,5.297,2246,5.297,2305,6.989,2306,5.297,2307,5.297,2308,5.297,2309,5.826,2368,6.989,2369,5.297,2370,5.297,2371,5.297,2372,5.826,2433,6.989,2434,5.297,2435,5.297,2436,5.297,2437,5.826,2607,5.297,2608,7.474,2609,5.968,2610,5.968,2611,5.968]],["title/routes.html",[590,3.358]],["body/routes.html",[18,0.007,149,0.006,150,0.007,151,0.006,590,4.084]],["title/todo.html",[914,3.396,2596,3.396,2597,3.396]],["body/todo.html",[18,0.007,139,2.17,149,0.006,150,0.007,151,0.006,312,1.891,316,0.876,799,6.179,1934,6.742,2550,6.742,2612,7.596,2613,7.596,2614,7.596,2615,7.596,2616,7.596,2617,7.596,2618,7.596,2619,7.596,2620,7.596]],["title/miscellaneous/typealiases.html",[2590,2.365,2621,5.534]],["body/miscellaneous/typealiases.html",[7,0.726,10,0.283,14,1.803,16,7.08,17,0.592,18,0.006,21,0.87,37,1.734,45,1.574,56,1.481,57,1.662,58,1.824,59,1.662,76,1.662,91,1.102,107,1.452,130,1.84,133,2.031,149,0.004,150,0.006,151,0.004,155,1.312,160,2.5,169,2.023,170,1.662,181,1.796,182,1.796,183,1.796,184,1.796,185,1.796,186,1.796,187,1.796,188,1.796,189,1.796,190,1.662,191,1.796,192,1.796,193,1.796,194,1.796,195,1.796,196,1.762,253,1.425,254,1.796,258,1.762,259,0.708,260,1.569,262,1.948,263,1.39,265,0.912,266,1.985,267,1.662,269,1.762,270,1.481,271,1.39,273,1.728,274,1.39,276,1.762,277,1.39,278,1.364,280,1.796,281,1.728,282,1.762,283,2.276,286,0.708,290,1.631,293,0.912,294,1.662,297,1.762,298,1.728,300,1.728,303,1.762,1441,5.366,1614,3.911,1616,5.757,2590,3.386,2592,8.08,2622,5.478,2623,7.615]],["title/miscellaneous/variables.html",[133,1.136,2590,2.365]],["body/miscellaneous/variables.html",[7,0.833,10,0.306,14,1.526,17,0.574,18,0.008,19,1.439,21,0.975,45,1.776,94,3.821,133,1.214,134,1.595,149,0.007,150,0.006,151,0.005,155,1.417,157,1.714,158,1.648,159,2.318,164,1.39,165,1.78,201,1.445,202,1.445,206,1.473,211,1.713,221,1.78,222,1.78,223,1.473,225,1.445,229,0.694,248,1.473,253,1.496,256,1.502,257,1.502,259,0.813,262,1.89,265,0.818,266,1.417,273,1.445,276,1.473,279,0.818,283,2.23,284,1.502,285,1.502,286,0.853,287,1.502,288,1.502,289,1.927,290,1.713,291,1.502,292,1.502,293,0.987,295,1.887,296,1.502,299,1.473,300,1.445,301,1.502,302,1.502,303,1.473,305,1.502,306,1.502,307,1.502,308,1.502,309,1.502,310,1.502,311,1.746,312,1.473,320,2.123,321,2.179,322,2.023,323,1.985,324,2.123,325,1.851,326,1.851,327,1.851,328,1.851,329,1.851,330,1.851,331,2.023,332,1.851,631,6.977,638,5.636,775,4.547,821,4.486,851,5.035,870,5.636,871,4.814,891,5.673,1387,7.568,1500,4.814,1519,6.047,1613,4.8,1614,4.225,1615,5.636,1619,5.636,1621,4.814,1622,6.047,1735,4.814,1774,6.612,1973,4.814,2004,6.047,2005,5.252,2006,6.047,2007,5.252,2008,6.047,2009,5.252,2178,4.814,2198,6.047,2199,5.252,2383,4.814,2407,5.252,2489,5.252,2491,6.598,2502,5.252,2503,5.252,2504,5.252,2505,5.252,2506,5.252,2507,6.598,2590,3.658,2592,7.722,2623,5.252,2624,5.917,2625,7.434,2626,5.917,2627,5.917,2628,5.917,2629,5.917,2630,8.128,2631,5.917,2632,5.917,2633,5.917,2634,5.917,2635,5.917,2636,5.917,2637,5.917,2638,5.917,2639,8.526,2640,8.526,2641,5.917]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":148,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["0.1.1",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":707,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.1",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["0.4.13",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":720,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8.29",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["0.9.16",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":111,"title":{"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/UserListComponent.html":{}}}],["1.0.17",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["1.1.10",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["1.14.7",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["10px",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.1",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["11.20.1",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["14.1.1",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2611,"title":{},"body":{"overview.html":{}}}],["15px",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":708,"title":{},"body":{"components/AppComponent.html":{}}}],["2",{"_index":1434,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["2.5.1",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":2608,"title":{},"body":{"overview.html":{}}}],["25",{"_index":692,"title":{},"body":{"components/AppComponent.html":{}}}],["255",{"_index":927,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["25px",{"_index":690,"title":{},"body":{"components/AppComponent.html":{}}}],["2em",{"_index":1904,"title":{},"body":{"components/MatchComponent.html":{}}}],["2px",{"_index":714,"title":{},"body":{"components/AppComponent.html":{}}}],["3.0.1",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["3.3.1",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["3.30.19",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["304701",{"_index":711,"title":{},"body":{"components/AppComponent.html":{}}}],["33",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2609,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1770,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["4.0.0",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1418,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["441313",{"_index":718,"title":{},"body":{"components/AppComponent.html":{}}}],["5.0.2",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":704,"title":{},"body":{"components/AppComponent.html":{}}}],["53",{"_index":2610,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["6000",{"_index":2122,"title":{},"body":{"injectables/NotificationService.html":{}}}],["7.0.0",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["7.2.9",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":709,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":186,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["89ff00",{"_index":713,"title":{},"body":{"components/AppComponent.html":{}}}],["8ch",{"_index":1315,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["9px",{"_index":712,"title":{},"body":{"components/AppComponent.html":{}}}],["__schema",{"_index":1615,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["__typename",{"_index":203,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["_currentseason",{"_index":2179,"title":{},"body":{"injectables/SeasonService.html":{}}}],["_subscriptionclient",{"_index":1452,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["a.email.tolowercase",{"_index":2462,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.label.tolowercase",{"_index":2139,"title":{},"body":{"injectables/PitchService.html":{}}}],["a.length",{"_index":1601,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a.name.tolowercase",{"_index":2025,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{}}}],["a.number",{"_index":1790,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["a.occurred_at",{"_index":1352,"title":{},"body":{"components/EventsComponent.html":{}}}],["a.state.tolocalelowercase",{"_index":2236,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["a[i",{"_index":1604,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["a[j",{"_index":1605,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["ab",{"_index":1935,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["abff00",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["acc.concat(val",{"_index":1596,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["access_time",{"_index":1188,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchComponent.html":{}}}],["access_token",{"_index":871,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"miscellaneous/variables.html":{}}}],["access_token_key",{"_index":870,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":829,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["accesstoken",{"_index":822,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["activatedroute",{"_index":2082,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["activatedroutesnapshot",{"_index":2363,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["actual_component",{"_index":522,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["add",{"_index":1291,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["addkickoffdatetopitch",{"_index":1909,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["addkickoffdatetopitch(offset",{"_index":1549,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["addmatchdata",{"_index":1,"title":{"interfaces/AddMatchData.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["addnewteam",{"_index":1715,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addnewteam(teamname",{"_index":1718,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["addpenaltygql",{"_index":1130,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["addrankingpenalty",{"_index":161,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addrankingpenaltygql",{"_index":153,"title":{"injectables/AddRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addteam",{"_index":1158,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["addteam(hometeam",{"_index":104,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["addteamtoseason",{"_index":230,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason($season_id",{"_index":365,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseason(season_id",{"_index":366,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["addteamtoseasongql",{"_index":364,"title":{"injectables/AddTeamToSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["addtypename",{"_index":1442,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["adm",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":178,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'name",{"_index":448,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["admin.component",{"_index":561,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{}}}],["admin.component.css",{"_index":435,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":436,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.guard",{"_index":592,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["admincomponent",{"_index":427,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminguard",{"_index":524,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminmodule",{"_index":541,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{},"overview.html":{}}}],["adminroutingmodule",{"_index":551,"title":{"modules/AdminRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["adressautocomplete",{"_index":1013,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["afterwarelink",{"_index":1401,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["alert",{"_index":2126,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alert(`${matchday.id",{"_index":1583,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["aliases",{"_index":2622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all_matchdays",{"_index":2029,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["all_teams",{"_index":2030,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["allpitches",{"_index":269,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasons",{"_index":273,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allseasons.fragment",{"_index":274,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allseasonsfragment",{"_index":326,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["allseasonslist",{"_index":272,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["allseasonslist.allseasons",{"_index":2193,"title":{},"body":{"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{}}}],["allseasonslistgql",{"_index":419,"title":{"injectables/AllSeasonsListGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["allteams",{"_index":76,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["allteamsgql",{"_index":420,"title":{"injectables/AllTeamsGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentlist",{"_index":275,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["alltournamentlist.alltournaments",{"_index":2398,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournamentlistgql",{"_index":48,"title":{"injectables/AllTournamentListGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["alltournamentqgl",{"_index":2391,"title":{},"body":{"components/TournamentComponent.html":{}}}],["alltournaments",{"_index":276,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alltournaments.fragment",{"_index":277,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["alltournamentsfragment",{"_index":327,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alltournamentsgql",{"_index":1750,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["alltournamentsqgl",{"_index":84,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["allusers",{"_index":282,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["allusersgql",{"_index":424,"title":{"injectables/AllUsersGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["aname",{"_index":2240,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["angular",{"_index":315,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["angular/common/locales/de",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/NewpasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":26,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/MaterialModule.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/material/button",{"_index":2050,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":2054,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":2052,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":2056,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2048,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2046,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":537,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"interfaces/LoginContext.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":2325,"title":{},"body":{"injectables/TeamService.html":{}}}],["api/graphql",{"_index":868,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["apollo",{"_index":314,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{}}}],["apollo.mutation",{"_index":338,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.query",{"_index":402,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["apollo.subscription",{"_index":1618,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["apollolink",{"_index":1383,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollolink((operation",{"_index":1402,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["apollomodule",{"_index":1368,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":61,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["app.component",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":600,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":780,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":449,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appcoremodule",{"_index":721,"title":{"modules/AppCoreModule.html":{}},"body":{"modules/AppCoreModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodule",{"_index":731,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":737,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsettings",{"_index":803,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["appsettings.service",{"_index":1382,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["appsettingsmodel",{"_index":797,"title":{"interfaces/AppsettingsModel.html":{}},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["appsettingsservice",{"_index":613,"title":{"injectables/AppsettingsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/GraphqlService.html":{},"coverage.html":{}}}],["args",{"_index":1444,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["array",{"_index":79,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{}}}],["array(gamecount",{"_index":1796,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["astate",{"_index":2235,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["async",{"_index":112,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["auth",{"_index":1423,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticateduser",{"_index":280,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["authentication.service",{"_index":1385,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authenticationservice",{"_index":530,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{},"overview.html":{}}}],["authheader",{"_index":1425,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["authservice",{"_index":534,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlService.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["authservice.user.first_name",{"_index":2094,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["authservice.user.first_name[0",{"_index":679,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice.user.last_name[0",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":697,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{}}}],["available",{"_index":2606,"title":{},"body":{"modules.html":{}}}],["availablelang",{"_index":1501,"title":{},"body":{"injectables/I18Service.html":{}}}],["await",{"_index":115,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["b",{"_index":1351,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["b.email.tolowercase",{"_index":2463,"title":{},"body":{"components/UserListComponent.html":{}}}],["b.label.tolowercase",{"_index":2140,"title":{},"body":{"injectables/PitchService.html":{}}}],["b.name.tolowercase",{"_index":2026,"title":{},"body":{"components/MatchplanComponent.html":{},"injectables/TeamService.html":{}}}],["b.state.tolocalelowercase",{"_index":2238,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["background",{"_index":699,"title":{},"body":{"components/AppComponent.html":{}}}],["base64",{"_index":866,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["base64.encode(context.username.tolowercase",{"_index":879,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["base64.encode(this.user.email.tolowercase",{"_index":897,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["based",{"_index":1437,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["basic",{"_index":878,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bearer",{"_index":1428,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["behaviorsubject",{"_index":2196,"title":{},"body":{"injectables/SeasonService.html":{}}}],["behaviorsubject(this._currentseason",{"_index":2197,"title":{},"body":{"injectables/SeasonService.html":{}}}],["beta.23",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["bname",{"_index":2239,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["boolean",{"_index":145,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["boolean(this.accesstoken",{"_index":874,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["bootstrap",{"_index":545,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":688,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":1420,"title":{},"body":{"injectables/GraphqlService.html":{},"components/ManagetournamentComponent.html":{}}}],["browse",{"_index":2604,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["bstate",{"_index":2237,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["button.add_user",{"_index":1239,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.back",{"_index":1064,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.cancel",{"_index":928,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.cancel_match",{"_index":929,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["button.cancel_result",{"_index":1313,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["button.change_password",{"_index":685,"title":{},"body":{"components/AppComponent.html":{}}}],["button.close",{"_index":978,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["button.create_pitch",{"_index":1065,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["button.create_tournament",{"_index":1824,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["button.edit_pitch",{"_index":1901,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_result",{"_index":1900,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.edit_time",{"_index":1902,"title":{},"body":{"components/MatchComponent.html":{}}}],["button.login",{"_index":677,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["button.logout",{"_index":686,"title":{},"body":{"components/AppComponent.html":{}}}],["button.next",{"_index":1062,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["button.no",{"_index":965,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["button.ok",{"_index":956,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["button.save",{"_index":1110,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["button.send_user_mail",{"_index":1241,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.set_time",{"_index":1331,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["button.start_round",{"_index":1190,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["button.update_user",{"_index":1240,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["button.yes",{"_index":966,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["c1",{"_index":2190,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c1.id",{"_index":2205,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2",{"_index":2188,"title":{},"body":{"injectables/SeasonService.html":{}}}],["c2.id",{"_index":2206,"title":{},"body":{"injectables/SeasonService.html":{}}}],["cache",{"_index":1380,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["cacheredirects",{"_index":1443,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["calls",{"_index":2324,"title":{},"body":{"injectables/TeamService.html":{}}}],["canactivate",{"_index":527,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canactivate(next",{"_index":2362,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["cancel",{"_index":452,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["cancel_match",{"_index":923,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancellation_reason",{"_index":288,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelled_at",{"_index":287,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["cancelmatch",{"_index":209,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch($match_id",{"_index":346,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(match_id",{"_index":347,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["cancelmatch(reason",{"_index":909,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["cancelmatchdialogcomponent",{"_index":451,"title":{"components/CancelMatchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cancelmatchgql",{"_index":345,"title":{"injectables/CancelMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["canload",{"_index":528,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{}}}],["canplay",{"_index":1538,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["card",{"_index":1903,"title":{},"body":{"components/MatchComponent.html":{}}}],["case",{"_index":1417,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["catch",{"_index":138,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["changedetectorref",{"_index":1032,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{}}}],["changelang",{"_index":1503,"title":{},"body":{"injectables/I18Service.html":{}}}],["changelang(lang",{"_index":1507,"title":{},"body":{"injectables/I18Service.html":{}}}],["changepassword",{"_index":823,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{}}}],["changepassword'},{'name",{"_index":455,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["changepassword(newpassword",{"_index":840,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changepassword.component.css",{"_index":932,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepassword.component.html",{"_index":933,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["changepasswordcomponent",{"_index":454,"title":{"components/ChangepasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["changepasswordqgl",{"_index":836,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["changeuserpassword",{"_index":216,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["changeuserpassword(new_password",{"_index":353,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["character",{"_index":187,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["checknewpitchname",{"_index":1019,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["class",{"_index":65,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["cleanup",{"_index":2619,"title":{},"body":{"todo.html":{}}}],["client",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["cluster_adminmodule",{"_index":548,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_declarations",{"_index":549,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_imports",{"_index":550,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule",{"_index":1002,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_declarations",{"_index":1003,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_contactlistmodule_imports",{"_index":1004,"title":{},"body":{"modules/ContactlistModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":1355,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_declarations",{"_index":1356,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":1358,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_imports",{"_index":1357,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":1365,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":1366,"title":{},"body":{"modules/GraphQLModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule",{"_index":2037,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_declarations",{"_index":2038,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_matchplanmodule_imports",{"_index":2039,"title":{},"body":{"modules/MatchplanModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule",{"_index":2098,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_declarations",{"_index":2099,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_newpasswordmodule_imports",{"_index":2100,"title":{},"body":{"modules/NewpasswordModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2243,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2244,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2246,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2245,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_tablemodule",{"_index":2306,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_declarations",{"_index":2307,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":2308,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule",{"_index":2369,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_declarations",{"_index":2370,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_teamadminmodule_imports",{"_index":2371,"title":{},"body":{"modules/TeamadminModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule",{"_index":2434,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_declarations",{"_index":2435,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["cluster_tournamentmodule_imports",{"_index":2436,"title":{},"body":{"modules/TournamentModule.html":{},"overview.html":{}}}],["codacy",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["code",{"_index":2550,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["codegen",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["color",{"_index":700,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["command",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["commonmodule",{"_index":2103,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{}}}],["component",{"_index":27,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminRoutingModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsRoutingModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":447,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["components",{"_index":428,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["components/admin#adminmodule",{"_index":793,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/admin/admin.guard",{"_index":777,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/changepassword/changepassword.component",{"_index":630,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/contactlist#contactlistmodule",{"_index":792,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":629,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["components/matchplan#matchplanmodule",{"_index":787,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/newpassword#newpasswordmodule",{"_index":790,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/shared/snackbar/snackbar.component",{"_index":762,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{}}}],["components/table#tablemodule",{"_index":786,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin#teamadminmodule",{"_index":795,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/teamadmin/teamadmin.guard",{"_index":779,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament#tournamentmodule",{"_index":788,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/tournament/tournament.component",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["conceded_goals",{"_index":310,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":457,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["confirm_tilte",{"_index":963,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["confirmdialog",{"_index":1818,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialog.afterclosed().subscribe",{"_index":1820,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["confirmdialogcomponent",{"_index":456,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmdialogcomponentdata",{"_index":960,"title":{"interfaces/ConfirmDialogComponentData.html":{}},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"coverage.html":{}}}],["connect",{"_index":1454,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["connected",{"_index":1453,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.error('iwas",{"_index":1590,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.error(error",{"_index":1282,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{}}}],["console.log",{"_index":1414,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["console.log('connected",{"_index":1480,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(error",{"_index":808,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["console.log(message.data",{"_index":1488,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["console.log(penalties",{"_index":2286,"title":{},"body":{"components/TableComponent.html":{}}}],["const",{"_index":319,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"modules/TeamadminRoutingModule.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["constructor",{"_index":82,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["constructor(allseasonslistgql",{"_index":2182,"title":{},"body":{"injectables/SeasonService.html":{}}}],["constructor(alltournamentsqgl",{"_index":1162,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["constructor(allusersgql",{"_index":2451,"title":{},"body":{"components/UserListComponent.html":{}}}],["constructor(apollo",{"_index":1375,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["constructor(authservice",{"_index":529,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(createteamql",{"_index":2320,"title":{},"body":{"injectables/TeamService.html":{}}}],["constructor(data",{"_index":959,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/SnackbarComponent.html":{}}}],["constructor(dialog",{"_index":1749,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["constructor(dialogref",{"_index":970,"title":{},"body":{"components/ContactComponent.html":{},"components/RenameTeamComponent.html":{}}}],["constructor(formbuilder",{"_index":1021,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(httpclient",{"_index":817,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["constructor(i18service",{"_index":2390,"title":{},"body":{"components/TournamentComponent.html":{}}}],["constructor(latesteventsgql",{"_index":1342,"title":{},"body":{"components/EventsComponent.html":{}}}],["constructor(match",{"_index":907,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["constructor(pitch",{"_index":1111,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["constructor(pitchesgql",{"_index":2130,"title":{},"body":{"injectables/PitchService.html":{}}}],["constructor(pitchservice",{"_index":1691,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["constructor(private",{"_index":804,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/I18Service.html":{},"guards/TeamadminGuard.html":{}}}],["constructor(rankinggql",{"_index":1657,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["constructor(redis",{"_index":1455,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["constructor(router",{"_index":833,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(seasonservice",{"_index":1983,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["constructor(snackbar",{"_index":2111,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructor(submitresultgql",{"_index":1945,"title":{},"body":{"injectables/MatchService.html":{}}}],["constructor(teamservice",{"_index":1195,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(translateservice",{"_index":1505,"title":{},"body":{"injectables/I18Service.html":{}}}],["constructor(translationservice",{"_index":1073,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["constructor(userqgl",{"_index":2346,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["contact",{"_index":293,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":459,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contact.component",{"_index":2254,"title":{},"body":{"modules/SharedModule.html":{}}}],["contact.component.css",{"_index":968,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.html",{"_index":969,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditContactComponent.html":{}}}],["contact.component.ts",{"_index":1088,"title":{},"body":{"components/EditContactComponent.html":{},"coverage.html":{}}}],["contact.component.ts:14",{"_index":1095,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:16",{"_index":1097,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:18",{"_index":1094,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:24",{"_index":1105,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:27",{"_index":1100,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.component.ts:36",{"_index":1103,"title":{},"body":{"components/EditContactComponent.html":{}}}],["contact.email",{"_index":993,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.first_name",{"_index":988,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.fragment",{"_index":294,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["contact.last_name",{"_index":989,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact.phone",{"_index":991,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact/contact.component",{"_index":1874,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["contact/edit",{"_index":1087,"title":{},"body":{"components/EditContactComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["contact_mail",{"_index":992,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contact_phone",{"_index":990,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["contactchanged",{"_index":1093,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{}}}],["contactchanged(contact",{"_index":1113,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["contactcomponent",{"_index":458,"title":{"components/ContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactcomponentdata",{"_index":971,"title":{"interfaces/ContactComponentData.html":{}},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["contactfragment",{"_index":320,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contactlist",{"_index":996,"title":{},"body":{"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{}}}],["contactlist'},{'name",{"_index":461,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["contactlist.component",{"_index":1007,"title":{},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{}}}],["contactlist.component.css",{"_index":997,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlist.component.html",{"_index":998,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["contactlistcomponent",{"_index":460,"title":{"components/ContactlistComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactlistmodule",{"_index":1001,"title":{"modules/ContactlistModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules.html":{},"overview.html":{}}}],["contactlistroutingmodule",{"_index":1005,"title":{"modules/ContactlistRoutingModule.html":{}},"body":{"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersoncomponent",{"_index":462,"title":{"components/ContactPersonComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contacts",{"_index":791,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["context",{"_index":851,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["context.password",{"_index":880,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["cordova",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["core.module",{"_index":1363,"title":{},"body":{"modules/EventsModule.html":{},"modules/MatchplanModule.html":{}}}],["core.module.ts",{"_index":723,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["coverage",{"_index":2475,"title":{"coverage.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["create",{"_index":465,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["createapollolink",{"_index":1374,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["created_at",{"_index":295,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["createform",{"_index":1630,"title":{},"body":{"components/LoginComponent.html":{}}}],["creatematchesforseason",{"_index":232,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseason(season_id",{"_index":371,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["creatematchesforseasongql",{"_index":370,"title":{"injectables/CreateMatchesForSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createnewpitch",{"_index":1020,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"injectables/PitchService.html":{}}}],["createnewpitch(pitch",{"_index":2132,"title":{},"body":{"injectables/PitchService.html":{}}}],["createnewtournament",{"_index":1744,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewtournament(name",{"_index":1752,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["createnewuser",{"_index":2449,"title":{},"body":{"components/UserListComponent.html":{}}}],["createpitch",{"_index":224,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createpitchdialogcomponent",{"_index":464,"title":{"components/CreatePitchDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createpitchgql",{"_index":359,"title":{"injectables/CreatePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createround",{"_index":113,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createroundgql",{"_index":87,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["createseason",{"_index":228,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason($id",{"_index":362,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(id",{"_index":363,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createseason(seasonname",{"_index":2184,"title":{},"body":{"injectables/SeasonService.html":{}}}],["createseasongql",{"_index":361,"title":{"injectables/CreateSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteam",{"_index":237,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam($id",{"_index":381,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteam(id",{"_index":382,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createteamgql",{"_index":380,"title":{"injectables/CreateTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createteamql",{"_index":2322,"title":{},"body":{"injectables/TeamService.html":{}}}],["createtournament",{"_index":242,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament($id",{"_index":391,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournament(id",{"_index":392,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentgql",{"_index":390,"title":{"injectables/CreateTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createtournamentround",{"_index":243,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createtournamentroundgql",{"_index":46,"title":{"injectables/CreateTournamentRoundGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["createuser",{"_index":246,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["createusergql",{"_index":396,"title":{"injectables/CreateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["currentlang",{"_index":1504,"title":{},"body":{"injectables/I18Service.html":{}}}],["currentseason",{"_index":2180,"title":{},"body":{"injectables/SeasonService.html":{}}}],["currentseasonchanged",{"_index":2212,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["currentseasonchanged(event",{"_index":2220,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["customowldatetimeintl",{"_index":725,"title":{"injectables/CustomOwlDateTimeIntl.html":{}},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["d').todate",{"_index":1576,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["d.team.name",{"_index":1933,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["danger",{"_index":2116,"title":{},"body":{"injectables/NotificationService.html":{}}}],["data",{"_index":91,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["data.allpitches.sort((a",{"_index":2138,"title":{},"body":{"injectables/PitchService.html":{}}}],["data.allseasons.filter(s",{"_index":2231,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["data.allteams.sort((a",{"_index":2331,"title":{},"body":{"injectables/TeamService.html":{}}}],["data.alltournaments",{"_index":1780,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["data.allusers.sort((a",{"_index":2461,"title":{},"body":{"components/UserListComponent.html":{}}}],["data.dates",{"_index":98,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.from",{"_index":100,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.dates.to",{"_index":102,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.find(x",{"_index":1800,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["data.latestevents.sort((a",{"_index":1350,"title":{},"body":{"components/EventsComponent.html":{}}}],["data.message",{"_index":964,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/SnackbarComponent.html":{}}}],["data.pitch.label",{"_index":977,"title":{},"body":{"components/ContactComponent.html":{}}}],["data.round",{"_index":1182,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["data.season",{"_index":1671,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/MatchplanComponent.html":{}}}],["data.season.match_days.find(x",{"_index":2027,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams",{"_index":2023,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.find(x",{"_index":2028,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.season.teams.sort((a",{"_index":2024,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["data.teams",{"_index":96,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["data.title",{"_index":2258,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["data.tournament",{"_index":2417,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds",{"_index":2418,"title":{},"body":{"components/TournamentComponent.html":{}}}],["data.tournament.rounds.sort((a",{"_index":2419,"title":{},"body":{"components/TournamentComponent.html":{}}}],["date",{"_index":56,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["date(list[0].kickofftime).getutchours",{"_index":1578,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(list[0].kickofftime).getutcminutes",{"_index":1580,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date(r.end_date",{"_index":1805,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date(r.start_date",{"_index":1804,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["date(this.newroundplandatefrom).todatestring",{"_index":120,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["date(this.newroundplandateto).todatestring",{"_index":121,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["date.setutchours(new",{"_index":1577,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.setutcminutes(new",{"_index":1579,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date.toisostring",{"_index":1581,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'fulldate':'':i18service.currentlang",{"_index":1894,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:'medium':'':i18service.currentlang",{"_index":1683,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:'short':'':i18service.currentlang",{"_index":1334,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:'shortdate':'':i18service.currentlang",{"_index":1828,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:'shorttime':'':i18service.currentlang",{"_index":1895,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'fulldate\\':\\'\\':i18service.currentlang",{"_index":1905,"title":{},"body":{"components/MatchComponent.html":{}}}],["date:\\'medium\\':\\'\\':i18service.currentlang",{"_index":1685,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/TableComponent.html":{}}}],["date:\\'short\\':\\'\\':i18service.currentlang",{"_index":1336,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date:\\'shortdate\\':\\'\\':i18service.currentlang",{"_index":1830,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TournamentComponent.html":{}}}],["date:\\'shorttime\\':\\'\\':i18service.currentlang",{"_index":1906,"title":{},"body":{"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["date_period",{"_index":119,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dateperiod",{"_index":171,"title":{"interfaces/DatePeriod.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["dates",{"_index":12,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["datetime",{"_index":37,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppCoreModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"modules/SharedModule.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["datetimeadapter",{"_index":34,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(lang",{"_index":95,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["datetimeadapter.setlocale(this.i18service.currentlang",{"_index":92,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["daysoffset",{"_index":1530,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["de",{"_index":1510,"title":{},"body":{"injectables/I18Service.html":{}}}],["declarations",{"_index":544,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{}}}],["decorators",{"_index":627,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"components/TournamentComponent.html":{}}}],["default",{"_index":157,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["defaultduration",{"_index":2107,"title":{},"body":{"injectables/NotificationService.html":{}}}],["defined",{"_index":167,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["delete",{"_index":1185,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["deletepitch",{"_index":219,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch($pitch_id",{"_index":356,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitch",{"_index":1694,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["deletepitch(pitch_id",{"_index":357,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletepitch(pitchid",{"_index":2134,"title":{},"body":{"injectables/PitchService.html":{}}}],["deletepitchgql",{"_index":355,"title":{"injectables/DeletePitchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteteam",{"_index":241,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam($team_id",{"_index":388,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteam(team",{"_index":1721,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["deleteteam(team_id",{"_index":389,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteteamgql",{"_index":387,"title":{"injectables/DeleteTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deletetournament",{"_index":245,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament($tournament_id",{"_index":394,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournament_id",{"_index":395,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deletetournament(tournamentid",{"_index":1754,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["deletetournamentgql",{"_index":393,"title":{"injectables/DeleteTournamentGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["deleteuser",{"_index":252,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["deleteuser($user_id",{"_index":399,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteuser(user",{"_index":2454,"title":{},"body":{"components/UserListComponent.html":{}}}],["deleteuser(user_id",{"_index":400,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["deleteusergql",{"_index":398,"title":{"injectables/DeleteUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dependencies",{"_index":543,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":773,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":2314,"title":{},"body":{"injectables/TeamService.html":{}}}],["design",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["deutsch",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["dialog",{"_index":610,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialog'},{'name",{"_index":453,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["dialog.component",{"_index":585,"title":{},"body":{"modules/AdminModule.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{}}}],["dialog.component.css",{"_index":905,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.html",{"_index":906,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts",{"_index":904,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:116",{"_index":1201,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1112,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":908,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1114,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":913,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":912,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1029,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":961,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1207,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1031,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1024,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1203,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":911,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1204,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1197,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":910,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1205,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1027,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1206,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:46",{"_index":1026,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":1025,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":1200,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":1198,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog.component.ts:91",{"_index":1202,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["dialog/cancel",{"_index":903,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/confirm",{"_index":958,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialog/create",{"_index":1012,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/edit",{"_index":584,"title":{},"body":{"modules/AdminModule.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagepitchesComponent.html":{},"modules/SharedModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":86,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":1675,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1813,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["dialogs",{"_index":2618,"title":{},"body":{"todo.html":{}}}],["directive",{"_index":445,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["directives",{"_index":521,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["display",{"_index":2616,"title":{},"body":{"todo.html":{}}}],["displaypitch",{"_index":1248,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["displaypitch(pitch",{"_index":1254,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["document",{"_index":156,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["document.body.appendchild(tag",{"_index":661,"title":{},"body":{"components/AppComponent.html":{}}}],["document.createelement('script",{"_index":653,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('googelmapsscript",{"_index":651,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2476,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documents",{"_index":197,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["dom",{"_index":430,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["draws",{"_index":307,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["duration",{"_index":2118,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dynamic",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["e.daysoffset",{"_index":1932,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.kickofftime",{"_index":1931,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["e.pitch.label",{"_index":1930,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["edit",{"_index":62,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["edit_round",{"_index":1181,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["edit_team_contact_info_text",{"_index":2359,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["editcontactcomponent",{"_index":466,"title":{"components/EditContactComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatch.pitch",{"_index":1243,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch'},{'name",{"_index":468,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.pitch.component.css",{"_index":1244,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.pitch.component.html",{"_index":1245,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["editmatch.result.component.css",{"_index":1294,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.result.component.html",{"_index":1295,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatch.time",{"_index":1317,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time'},{'name",{"_index":472,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatch.time.component.css",{"_index":1318,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch.time.component.html",{"_index":1319,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["editmatch/editmatch.pitch.component",{"_index":1877,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.result.component",{"_index":1875,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatch/editmatch.time.component",{"_index":1876,"title":{},"body":{"components/MatchComponent.html":{},"modules/SharedModule.html":{}}}],["editmatchpitchcomponent",{"_index":467,"title":{"components/EditmatchPitchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchresult",{"_index":1293,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["editmatchresult'},{'name",{"_index":470,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["editmatchresultcomponent",{"_index":469,"title":{"components/EditmatchResultComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmatchtimecomponent",{"_index":471,"title":{"components/EditmatchTimeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editpitchcontact",{"_index":1690,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontact(pitch",{"_index":1696,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["editpitchcontactdialogcomponent",{"_index":473,"title":{"components/EditPitchContactDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponent",{"_index":474,"title":{"components/EditRankingPenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editrankingpenaltycomponentdata",{"_index":1129,"title":{"interfaces/EditRankingPenaltyComponentData.html":{}},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"coverage.html":{}}}],["editround",{"_index":1745,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["editround(round",{"_index":1756,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["edittournamentroundcomponent",{"_index":66,"title":{"components/EditTournamentRoundComponent.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":2450,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituser(user",{"_index":2456,"title":{},"body":{"components/UserListComponent.html":{}}}],["edituserdialogcomponent",{"_index":477,"title":{"components/EditUserDialogComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["element",{"_index":444,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["email",{"_index":211,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["emailformcontrol",{"_index":1089,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitchanges",{"_index":1840,"title":{},"body":{"components/MatchComponent.html":{}}}],["emitcontactchanged",{"_index":1090,"title":{},"body":{"components/EditContactComponent.html":{}}}],["emitcontactchanged(firstname",{"_index":1098,"title":{},"body":{"components/EditContactComponent.html":{}}}],["empty",{"_index":1773,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["en",{"_index":1511,"title":{},"body":{"injectables/I18Service.html":{}}}],["end",{"_index":425,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["end_date",{"_index":257,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ended",{"_index":176,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["endseason",{"_index":236,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason($season_id",{"_index":378,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseason(season_id",{"_index":379,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["endseasongql",{"_index":377,"title":{"injectables/EndSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["englisch",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["entrycomponents",{"_index":558,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["enum",{"_index":172,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["enumerations",{"_index":2591,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":631,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.persistcache",{"_index":1446,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["err",{"_index":899,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["error",{"_index":139,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{},"todo.html":{}}}],["error('empty",{"_index":2336,"title":{},"body":{"injectables/TeamService.html":{}}}],["errorhandler",{"_index":1408,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errorhandler.concat(afterwarelink).concat(auth).concat(http",{"_index":1429,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["errors.enter_valid_email",{"_index":1236,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["errors.enter_valid_password",{"_index":953,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["errors.password_token_invalid",{"_index":2096,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["errors.pitch_exist",{"_index":1060,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["errors.username_password_wrong",{"_index":955,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["event",{"_index":253,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["event($id",{"_index":403,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event(id",{"_index":404,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["event.fragment",{"_index":254,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["event.occurred_at",{"_index":1353,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.seasonid",{"_index":2014,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["event.tournamentid",{"_index":2413,"title":{},"body":{"components/TournamentComponent.html":{}}}],["event.type",{"_index":1354,"title":{},"body":{"components/EventsComponent.html":{}}}],["event.value",{"_index":142,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"interfaces/RoundTeam.html":{}}}],["eventemitter",{"_index":1096,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["eventfragment",{"_index":330,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventgql",{"_index":401,"title":{"injectables/EventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["events",{"_index":576,"title":{},"body":{"modules/AdminModule.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{}}}],["events'},{'name",{"_index":479,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["events.component",{"_index":1362,"title":{},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{}}}],["events.component.css",{"_index":1340,"title":{},"body":{"components/EventsComponent.html":{}}}],["events.component.html",{"_index":1341,"title":{},"body":{"components/EventsComponent.html":{}}}],["eventscomponent",{"_index":478,"title":{"components/EventsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["eventsgql",{"_index":1458,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["eventsmodule",{"_index":552,"title":{"modules/EventsModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsroutingmodule",{"_index":1359,"title":{"modules/EventsRoutingModule.html":{}},"body":{"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["everything",{"_index":2317,"title":{},"body":{"injectables/TeamService.html":{}}}],["example",{"_index":2319,"title":{},"body":{"injectables/TeamService.html":{}}}],["exec",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["export",{"_index":55,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["exports",{"_index":547,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["extends",{"_index":337,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["f00",{"_index":717,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":891,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"miscellaneous/variables.html":{}}}],["fetchpolicy",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["filter_list",{"_index":2031,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteractive",{"_index":1982,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filteredpitches",{"_index":1246,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["filtermatchdays",{"_index":1979,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatchdays(matchdays",{"_index":1985,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches",{"_index":1980,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filtermatches(matches",{"_index":1987,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["filterstates",{"_index":2213,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["finale",{"_index":2427,"title":{},"body":{"components/TournamentComponent.html":{}}}],["firefox",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["first_name",{"_index":221,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["first_name_required",{"_index":1237,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["firstname",{"_index":1101,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["fix",{"_index":2613,"title":{},"body":{"todo.html":{}}}],["flex",{"_index":2035,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["flexlayoutmodule",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":360,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["forgot_password",{"_index":1652,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":193,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":1022,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formcontrol",{"_index":939,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["formgroup",{"_index":1264,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["formsmodule",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["forward",{"_index":1403,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["forward(operation).map(response",{"_index":1404,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["fragment",{"_index":283,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fragmentname",{"_index":1966,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["fragments",{"_index":318,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["free",{"_index":192,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["full",{"_index":783,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["function",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":2593,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gamecount",{"_index":1794,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["generator",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["genrounds",{"_index":1746,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["getcachekey",{"_index":1445,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getcurrentlang",{"_index":1515,"title":{},"body":{"injectables/I18Service.html":{}}}],["getfilteractive",{"_index":2001,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["getisadmin",{"_index":861,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisauthenticated",{"_index":859,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getisteamadmin",{"_index":863,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getmaindefinition",{"_index":1394,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmaindefinition(query",{"_index":1439,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["getmatchdaylength",{"_index":1928,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["getpenaltyforteam",{"_index":2264,"title":{},"body":{"components/TableComponent.html":{}}}],["getpenaltyforteam(penalties",{"_index":2268,"title":{},"body":{"components/TableComponent.html":{}}}],["getranking",{"_index":2265,"title":{},"body":{"components/TableComponent.html":{}}}],["getsubscriptionclient",{"_index":1465,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["getting",{"_index":2596,"title":{"index.html":{},"todo.html":{}},"body":{}}],["github",{"_index":2612,"title":{},"body":{"todo.html":{}}}],["googelmapsscript",{"_index":660,"title":{},"body":{"components/AppComponent.html":{}}}],["google.maps.places.autocomplete",{"_index":1030,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["google.maps.places.autocomplete(this.adressautocomplete.nativeelement",{"_index":1039,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["googlemapsapikey",{"_index":799,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"todo.html":{}}}],["googlemapsjs",{"_index":650,"title":{},"body":{"components/AppComponent.html":{}}}],["gql",{"_index":159,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":2605,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":190,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["graphql.module",{"_index":763,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":1409,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlerrors.map",{"_index":1412,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["graphqlmodule",{"_index":738,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":612,"title":{"injectables/GraphqlService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlsubscriptionservice",{"_index":614,"title":{"injectables/GraphqlSubscriptionService.html":{}},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{},"overview.html":{}}}],["graphqlurl",{"_index":800,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["graphqlwsurl",{"_index":801,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["green",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["guard",{"_index":523,"title":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":525,"title":{},"body":{"guards/AdminGuard.html":{},"guards/TeamadminGuard.html":{},"overview.html":{}}}],["guest",{"_index":75,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["guest_score",{"_index":202,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team",{"_index":285,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["guest_team_id",{"_index":127,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["guestscore",{"_index":1474,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["guestteam",{"_index":59,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["halbfinale",{"_index":2426,"title":{},"body":{"components/TournamentComponent.html":{}}}],["hammerjs",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["handlegetmatches",{"_index":1981,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["headers",{"_index":876,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["headers.append('authorization",{"_index":1427,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('authorization",{"_index":1426,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["headers.get('x",{"_index":1407,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["height",{"_index":689,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["hermes",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["hi",{"_index":2093,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["hide_played",{"_index":2005,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["hide_played_key",{"_index":2004,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hide_played_matches",{"_index":2032,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["hideifplayed",{"_index":1849,"title":{},"body":{"components/MatchComponent.html":{}}}],["hideplayed",{"_index":1976,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["home",{"_index":73,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["home_score",{"_index":201,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team",{"_index":284,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["home_team_id",{"_index":125,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["homescore",{"_index":1473,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{}}}],["hometeam",{"_index":57,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["html",{"_index":443,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["http",{"_index":1371,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["httpclient",{"_index":802,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["httpclientmodule",{"_index":752,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":865,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["httplink",{"_index":1376,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["httplinkmodule",{"_index":1369,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://maps.googleapis.com/maps/api/js?key",{"_index":655,"title":{},"body":{"components/AppComponent.html":{}}}],["https://robertkitzing.github.io/liga",{"_index":2601,"title":{},"body":{"index.html":{}}}],["human",{"_index":194,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["i18n/de",{"_index":1517,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18n/en",{"_index":1518,"title":{},"body":{"injectables/I18Service.html":{}}}],["i18service",{"_index":38,"title":{"injectables/I18Service.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["i18servicefactory",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["i18servicefactory(provider",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icons",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":134,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":2615,"title":{},"body":{"todo.html":{}}}],["implements",{"_index":67,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["imports",{"_index":559,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["init",{"_index":805,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/I18Service.html":{}}}],["inject",{"_index":29,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/ISnackBarData.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SnackbarComponent.html":{}}}],["inject(mat_dialog_data",{"_index":90,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["inject(mat_snack_bar_data",{"_index":1612,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["injectables",{"_index":154,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"overview.html":{}}}],["inmemory",{"_index":1381,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["inmemorycache",{"_index":1379,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["input",{"_index":987,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputs",{"_index":984,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/EditContactComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["inputsize",{"_index":1314,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["inset",{"_index":710,"title":{},"body":{"components/AppComponent.html":{}}}],["int",{"_index":166,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"interfaces/ConfirmDialogComponentData.html":{},"interfaces/ContactComponentData.html":{},"interfaces/DatePeriod.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"interfaces/RoundTeam.html":{},"interfaces/TeamIdPair.html":{},"overview.html":{}}}],["introspection",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["introspectionresultdata",{"_index":1613,"title":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{}},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ipossiblekickoffs",{"_index":1527,"title":{"interfaces/IPossibleKickoffs.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["isadmin",{"_index":831,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isauthenticated",{"_index":830,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isemailvalidorempty",{"_index":1091,"title":{},"body":{"components/EditContactComponent.html":{}}}],["isemailvalidorempty(mail",{"_index":1102,"title":{},"body":{"components/EditContactComponent.html":{}}}],["isguestwinner",{"_index":1841,"title":{},"body":{"components/MatchComponent.html":{}}}],["ishomewinner",{"_index":1842,"title":{},"body":{"components/MatchComponent.html":{}}}],["ismatchplayed",{"_index":1943,"title":{},"body":{"injectables/MatchService.html":{}}}],["ismatchplayed(match",{"_index":1948,"title":{},"body":{"injectables/MatchService.html":{}}}],["isnackbardata",{"_index":1606,"title":{"interfaces/ISnackBarData.html":{}},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["isnumber",{"_index":1843,"title":{},"body":{"components/MatchComponent.html":{}}}],["isnumber(val",{"_index":1860,"title":{},"body":{"components/MatchComponent.html":{}}}],["isroundvalid",{"_index":144,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["isteamadmin",{"_index":832,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isteamadminforteam",{"_index":824,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isteamadminforteam(teamid",{"_index":844,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["isvalidresult",{"_index":1944,"title":{},"body":{"injectables/MatchService.html":{}}}],["isvalidresult(score",{"_index":1950,"title":{},"body":{"injectables/MatchService.html":{}}}],["iteamcanplayatdate",{"_index":1533,"title":{"interfaces/ITeamCanPlayAtDate.html":{}},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["j",{"_index":1602,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["jquery",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":867,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"dependencies.html":{}}}],["jslint",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.possiblekickoffs",{"_index":1563,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["json.parse(message.data.redisevent.payload",{"_index":1493,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["karma",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":1449,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["kickoff",{"_index":206,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["kickoffset",{"_index":1321,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickoffset(event",{"_index":1323,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["kickofftime",{"_index":1531,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["kind",{"_index":1438,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["konnte",{"_index":1586,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["label",{"_index":225,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":94,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/I18Service.html":{},"interfaces/RoundTeam.html":{},"miscellaneous/variables.html":{}}}],["lang_key",{"_index":1519,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["last_name",{"_index":222,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/variables.html":{}}}],["last_name_required",{"_index":1238,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["last_updated_at",{"_index":2303,"title":{},"body":{"components/TableComponent.html":{}}}],["lastname",{"_index":1099,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["latestevent",{"_index":255,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latestevent($start_date",{"_index":406,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventgql",{"_index":405,"title":{"injectables/LatestEventGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["latestevents",{"_index":258,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["latestevents(start_date",{"_index":407,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["latesteventsgql",{"_index":1344,"title":{},"body":{"components/EventsComponent.html":{}}}],["latitude",{"_index":227,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["launcher",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":1431,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["led",{"_index":687,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":442,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["length",{"_index":2061,"title":{},"body":{"modules/MaterialModule.html":{}}}],["libraries=places",{"_index":656,"title":{},"body":{"components/AppComponent.html":{}}}],["liga",{"_index":2598,"title":{},"body":{"index.html":{}}}],["line",{"_index":2060,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["line:max",{"_index":2059,"title":{},"body":{"modules/MaterialModule.html":{}}}],["link",{"_index":1370,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["list",{"_index":520,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["list.component",{"_index":572,"title":{},"body":{"modules/AdminModule.html":{}}}],["list.component.css",{"_index":2447,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.html",{"_index":2448,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":2446,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":2452,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:28",{"_index":2458,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":2453,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":2457,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":2455,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.filter(x",{"_index":1570,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list/user",{"_index":571,"title":{},"body":{"modules/AdminModule.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list[0",{"_index":1572,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].index",{"_index":1582,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["list[0].pitch",{"_index":1574,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["literal",{"_index":16,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"components/ManagetournamentComponent.html":{},"miscellaneous/typealiases.html":{}}}],["load/save",{"_index":2316,"title":{},"body":{"injectables/TeamService.html":{}}}],["loadalltournaments",{"_index":1747,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["loadappsettings",{"_index":809,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["loadappsettingsfactory",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadappsettingsfactory(provider",{"_index":769,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["loadchildren",{"_index":785,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["loadgooglemapsscript",{"_index":604,"title":{},"body":{"components/AppComponent.html":{}}}],["loading",{"_index":2614,"title":{},"body":{"todo.html":{}}}],["loadpenalties",{"_index":1653,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["loaduser",{"_index":825,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localede",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":636,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/TournamentComponent.html":{}}}],["localstorage(access_token_key",{"_index":855,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["localstorage(hide_played_key",{"_index":1991,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(lang_key",{"_index":1513,"title":{},"body":{"injectables/I18Service.html":{}}}],["localstorage(manage_tournament_key",{"_index":1766,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["localstorage(selected_matchday_key",{"_index":1997,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_season_key",{"_index":2194,"title":{},"body":{"injectables/SeasonService.html":{}}}],["localstorage(selected_team_key",{"_index":1999,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["localstorage(selected_tournament_key",{"_index":628,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{}}}],["localstorageservice",{"_index":838,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TournamentComponent.html":{}}}],["locatematch",{"_index":207,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch($match_id",{"_index":343,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(match_id",{"_index":344,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["locatematch(matchid",{"_index":1953,"title":{},"body":{"injectables/MatchService.html":{}}}],["locatematchgql",{"_index":342,"title":{"injectables/LocateMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["locatematchqgl",{"_index":1946,"title":{},"body":{"injectables/MatchService.html":{}}}],["location",{"_index":2153,"title":{},"body":{"components/PitchesComponent.html":{}}}],["location_latitude",{"_index":292,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_longitude",{"_index":291,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["location_off",{"_index":1284,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["location_on",{"_index":1288,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{},"components/PitchesComponent.html":{}}}],["locations",{"_index":1413,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["login",{"_index":1626,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":481,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["login.component.css",{"_index":1627,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1628,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginasync",{"_index":826,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginasync(context",{"_index":848,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["logincomponent",{"_index":480,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":849,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{}}}],["loginform",{"_index":1629,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["logout",{"_index":827,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["longitude",{"_index":226,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["losses",{"_index":308,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["mail",{"_index":1104,"title":{},"body":{"components/EditContactComponent.html":{}}}],["manage",{"_index":483,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manage_season_id_key",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manage_season_key",{"_index":2491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["manage_tournament_key",{"_index":1774,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managepenaltycomponent",{"_index":482,"title":{"components/ManagePenaltyComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managepitches",{"_index":1687,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches'},{'name",{"_index":485,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managepitches.component.css",{"_index":1688,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches.component.html",{"_index":1689,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["managepitches/managepitches.component",{"_index":578,"title":{},"body":{"modules/AdminModule.html":{}}}],["managepitchescomponent",{"_index":484,"title":{"components/ManagepitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manager",{"_index":2599,"title":{},"body":{"index.html":{}}}],["manageseason",{"_index":1542,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["manageseason'},{'name",{"_index":487,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageseason/manage",{"_index":579,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/manageseason.component",{"_index":564,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseason/match",{"_index":567,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageseasoncomponent",{"_index":486,"title":{},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manageseasonid",{"_index":1656,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["manageteams",{"_index":1712,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams'},{'name",{"_index":489,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageteams.component.css",{"_index":1713,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams.component.html",{"_index":1714,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["manageteams/manageteams.component",{"_index":577,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteams/rename",{"_index":573,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageteamscomponent",{"_index":488,"title":{"components/ManageteamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournament",{"_index":1736,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament'},{'name",{"_index":491,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["managetournament.component.css",{"_index":1737,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament.component.html",{"_index":1738,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournament/edit",{"_index":586,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournament/managetournament.component",{"_index":566,"title":{},"body":{"modules/AdminModule.html":{}}}],["managetournamentcomponent",{"_index":490,"title":{"components/ManagetournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managetournamentid",{"_index":1739,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentroundcount",{"_index":1740,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["managetournamentrounds",{"_index":1741,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["manageusers",{"_index":1832,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers'},{'name",{"_index":493,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["manageusers.component.css",{"_index":1833,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers.component.html",{"_index":1834,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["manageusers/edit",{"_index":583,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/manageusers.component",{"_index":565,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageusers/user",{"_index":570,"title":{},"body":{"modules/AdminModule.html":{}}}],["manageuserscomponent",{"_index":492,"title":{"components/ManageusersComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":51,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["map((data",{"_index":1798,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["map((result",{"_index":2280,"title":{},"body":{"components/TableComponent.html":{}}}],["map(({data",{"_index":2330,"title":{},"body":{"injectables/TeamService.html":{}}}],["map(value",{"_index":1271,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["map(x",{"_index":1275,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["margin",{"_index":693,"title":{},"body":{"components/AppComponent.html":{}}}],["mat_dialog_data",{"_index":24,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["mat_snack_bar_data",{"_index":1609,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":761,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompletemodule",{"_index":2065,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":2049,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":2077,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":259,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["match'},{'name",{"_index":495,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["match($id",{"_index":409,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match(id",{"_index":410,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match.cancellation_reason",{"_index":1899,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.cancelled_at",{"_index":1898,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.css",{"_index":1838,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.component.html",{"_index":1839,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.fragment",{"_index":260,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["match.guest_score",{"_index":1893,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.guest_team.id).canplay",{"_index":1571,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.guest_team.name",{"_index":925,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_score",{"_index":1891,"title":{},"body":{"components/MatchComponent.html":{}}}],["match.home_team.id).canplay",{"_index":1569,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.home_team.name",{"_index":924,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.kickoff",{"_index":1333,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch",{"_index":1573,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["match.pitch.label",{"_index":1287,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["match.pitch?.label",{"_index":1939,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["match/match.component",{"_index":2248,"title":{},"body":{"modules/SharedModule.html":{}}}],["match:${matchid",{"_index":1967,"title":{},"body":{"injectables/MatchService.html":{}}}],["match_canceled_at",{"_index":1897,"title":{},"body":{"components/MatchComponent.html":{}}}],["match_day_id",{"_index":234,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["match_days",{"_index":296,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["match_id",{"_index":200,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchcomponent",{"_index":494,"title":{"components/MatchComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchday",{"_index":289,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["matchday.end_date",{"_index":1938,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.fragment",{"_index":298,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchday.matches.foreach",{"_index":1564,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchday.number",{"_index":1936,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchday.start_date",{"_index":1937,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{}}}],["matchdayfragment",{"_index":324,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchdaylength",{"_index":1546,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchdays",{"_index":297,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["matchdays.filter(x",{"_index":2017,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcher",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":290,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches.filter(x",{"_index":2018,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matches.foreach",{"_index":1597,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchesgql",{"_index":1977,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matcheventpayload",{"_index":1471,"title":{"interfaces/MatchEventPayload.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["matchfragment",{"_index":323,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchgql",{"_index":408,"title":{"injectables/MatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchid",{"_index":1472,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"components/TournamentComponent.html":{}}}],["matching",{"_index":150,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchkickoff",{"_index":1320,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"injectables/MatchService.html":{}}}],["matchkickoff.toisostring",{"_index":1969,"title":{},"body":{"injectables/MatchService.html":{}}}],["matchplan",{"_index":261,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"modules/AppRoutingModule.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan'},{'name",{"_index":497,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["matchplan($id",{"_index":412,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["matchplan.component",{"_index":2042,"title":{},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{}}}],["matchplan.component.css",{"_index":1974,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.component.html",{"_index":1975,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["matchplan.season",{"_index":1543,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["matchplancomponent",{"_index":496,"title":{"components/MatchplanComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchplangql",{"_index":411,"title":{"injectables/MatchPlanGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["matchplanmodule",{"_index":2036,"title":{"modules/MatchplanModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules.html":{},"overview.html":{}}}],["matchplanroutingmodule",{"_index":2040,"title":{"modules/MatchplanRoutingModule.html":{}},"body":{"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["matchqgl",{"_index":1459,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["matchschedulingcomponent",{"_index":498,"title":{"components/MatchSchedulingComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservc",{"_index":916,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["matchservice",{"_index":1252,"title":{"injectables/MatchService.html":{}},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{}}}],["matchupdated",{"_index":1851,"title":{},"body":{"components/MatchComponent.html":{},"components/TournamentComponent.html":{}}}],["matchupdated(matchid",{"_index":2393,"title":{},"body":{"components/TournamentComponent.html":{}}}],["matdatepickermodule",{"_index":2069,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":611,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/UserListComponent.html":{}}}],["matdialogmodule",{"_index":2062,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":23,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{}}}],["matdividermodule",{"_index":2053,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["material.module",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["materialmodule",{"_index":739,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["math.ceil(this.startteamcount",{"_index":1792,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["math.floor(math.random",{"_index":1603,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["maticonmodule",{"_index":2051,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":2064,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":2068,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":2067,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodule",{"_index":2070,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":2073,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":2076,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselect",{"_index":1137,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["matselectchange",{"_index":25,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{}}}],["matselectmodule",{"_index":2055,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodule",{"_index":2047,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodule",{"_index":2074,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":2075,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":609,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{},"components/TableComponent.html":{}}}],["matsnackbarmodule",{"_index":2072,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":2063,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":2066,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":2045,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":2071,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maybe",{"_index":169,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["memberof",{"_index":2334,"title":{},"body":{"injectables/TeamService.html":{}}}],["menu.admin",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.contacts",{"_index":674,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.matchplan",{"_index":672,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.table",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.team_admin",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.tournament",{"_index":673,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":962,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/ISnackBarData.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/UserListComponent.html":{}}}],["message.data",{"_index":1487,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["message.data.redisevent.type.split",{"_index":1491,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["metadata",{"_index":433,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["methods",{"_index":437,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["miscellaneous",{"_index":2590,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":540,"title":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["modules",{"_index":542,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1536,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"dependencies.html":{}}}],["momentjs",{"_index":1535,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["momentjs(matchday.start_date).add(list[0].daysoffset",{"_index":1575,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["move",{"_index":915,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["msgtype",{"_index":1490,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["msgtype[0",{"_index":1494,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["mt.end_date",{"_index":1829,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.number",{"_index":1826,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["mt.start_date",{"_index":1827,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["multi",{"_index":774,"title":{},"body":{"modules/AppModule.html":{}}}],["mutation",{"_index":160,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":229,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":198,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["nbsp",{"_index":1186,"title":{},"body":{"components/EditTournamentRoundComponent.html":{},"components/MatchplanComponent.html":{},"components/UserListComponent.html":{}}}],["nbsp;:&nbsp",{"_index":1892,"title":{},"body":{"components/MatchComponent.html":{}}}],["network",{"_index":667,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["networkerror",{"_index":1410,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['status",{"_index":1416,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["networkerror['statustext",{"_index":1422,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/TeamService.html":{},"coverage.html":{}}}],["new_kickoff_time",{"_index":1335,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["new_name",{"_index":240,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_password",{"_index":215,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["new_pitch",{"_index":1289,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["new_pitch_adress",{"_index":1063,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_pitch_label",{"_index":1059,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["new_tournament_round",{"_index":1825,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["newelement",{"_index":1550,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch",{"_index":1247,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["newmatchpitch.value.label",{"_index":1290,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["newname",{"_index":2168,"title":{},"body":{"components/RenameTeamComponent.html":{},"injectables/TeamService.html":{}}}],["newpassword",{"_index":789,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{}}}],["newpassword'},{'name",{"_index":501,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["newpassword.component",{"_index":2104,"title":{},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{}}}],["newpassword.component.css",{"_index":2079,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpassword.component.html",{"_index":2080,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["newpasswordcomponent",{"_index":500,"title":{"components/NewpasswordComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newpasswordmodule",{"_index":2097,"title":{"modules/NewpasswordModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules.html":{},"overview.html":{}}}],["newpasswordroutingmodule",{"_index":2101,"title":{"modules/NewpasswordRoutingModule.html":{}},"body":{"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["newpitch",{"_index":1014,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchformcontrol",{"_index":1015,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchlabelexist",{"_index":1016,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplace",{"_index":1037,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newpitchplaceformgroup",{"_index":1017,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["newroundplandatefrom",{"_index":80,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["newroundplandateto",{"_index":81,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["next",{"_index":2058,"title":{},"body":{"modules/MaterialModule.html":{},"guards/TeamadminGuard.html":{}}}],["ng",{"_index":35,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["ngmodule",{"_index":560,"title":{},"body":{"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["ngonchanges",{"_index":1548,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["ngoninit",{"_index":103,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["nicht",{"_index":1587,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["no_contact_set",{"_index":994,"title":{},"body":{"components/ContactPersonComponent.html":{},"components/PitchesComponent.html":{},"components/TeamsComponent.html":{}}}],["no_ptich_set",{"_index":1285,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["no_time_set",{"_index":1896,"title":{},"body":{"components/MatchComponent.html":{}}}],["no_tournament_rounds_yet",{"_index":2423,"title":{},"body":{"components/TournamentComponent.html":{}}}],["notification.service",{"_index":1397,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["notificationservice",{"_index":53,"title":{"injectables/NotificationService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["notify",{"_index":88,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/GraphqlService.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["nswag",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":107,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchResultComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":43,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["occurred_at",{"_index":301,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["occurredat",{"_index":1617,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{}}}],["offset",{"_index":1552,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["old_kickoff_time",{"_index":1332,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["old_pitch",{"_index":1286,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["oldpassword",{"_index":841,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ChangepasswordComponent.html":{},"interfaces/LoginContext.html":{}}}],["oldpasswordwrong",{"_index":934,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["onchanges",{"_index":1534,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["onchangeteamselect",{"_index":1193,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onchangeteamselect(event",{"_index":1199,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["onerror",{"_index":1396,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["oninit",{"_index":28,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["onlangselect",{"_index":605,"title":{},"body":{"components/AppComponent.html":{}}}],["onlangselect(lang",{"_index":618,"title":{},"body":{"components/AppComponent.html":{}}}],["only'}).topromise",{"_index":1498,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["onpitchselect",{"_index":1249,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onpitchselect(pitch",{"_index":1258,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["onsaveclicked",{"_index":1250,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{}}}],["ontournamentselected",{"_index":1748,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["opencancelmatchdialog",{"_index":1844,"title":{},"body":{"components/MatchComponent.html":{}}}],["openchangepassworddialog",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["opencontactmodal",{"_index":1845,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditdialog",{"_index":1654,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["openeditdialog(round",{"_index":1762,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["openeditdialog(season",{"_index":1662,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["openeditpitchdialog",{"_index":1846,"title":{},"body":{"components/MatchComponent.html":{}}}],["openeditresultdialog",{"_index":1847,"title":{},"body":{"components/MatchComponent.html":{}}}],["openedittimedialog",{"_index":1848,"title":{},"body":{"components/MatchComponent.html":{}}}],["openlogindialog",{"_index":607,"title":{},"body":{"components/AppComponent.html":{}}}],["openpenaltydialog",{"_index":2266,"title":{},"body":{"components/TableComponent.html":{}}}],["openpenaltydialog(penalties",{"_index":2272,"title":{},"body":{"components/TableComponent.html":{}}}],["openrenameteamdialog",{"_index":1716,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["openrenameteamdialog(team",{"_index":1724,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["operation",{"_index":1411,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operation.getcontext",{"_index":1405,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operation.operationname",{"_index":1419,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["operationdefinition",{"_index":1440,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["optional",{"_index":533,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":556,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["output",{"_index":1107,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["outputs",{"_index":1092,"title":{},"body":{"components/EditContactComponent.html":{},"components/MatchComponent.html":{},"components/SeasonchooserComponent.html":{}}}],["overview",{"_index":2607,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimeintl",{"_index":724,"title":{},"body":{"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{}}}],["owldatetimemodule",{"_index":2250,"title":{},"body":{"modules/SharedModule.html":{}}}],["owlnativedatetimemodule",{"_index":2251,"title":{},"body":{"modules/SharedModule.html":{}}}],["p",{"_index":2230,"title":{},"body":{"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["p.label",{"_index":1054,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["p.length",{"_index":2285,"title":{},"body":{"components/TableComponent.html":{}}}],["p.sort((a",{"_index":2234,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["package",{"_index":2509,"title":{"dependencies.html":{}},"body":{}}],["panelclass",{"_index":1811,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/NotificationService.html":{}}}],["param",{"_index":2333,"title":{},"body":{"injectables/TeamService.html":{}}}],["parameters",{"_index":532,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":2089,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["params['token",{"_index":2090,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["passt",{"_index":1591,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["password",{"_index":247,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["password_forgot_text",{"_index":2095,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["password_required",{"_index":1651,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["passwordchange",{"_index":214,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchange($new_password",{"_index":352,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordchangegql",{"_index":351,"title":{"injectables/PasswordChangeGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["passwordforgot",{"_index":1631,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordforgot(email",{"_index":1636,"title":{},"body":{"components/LoginComponent.html":{}}}],["passwordreset",{"_index":210,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordreset($email",{"_index":349,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["passwordresetgql",{"_index":348,"title":{"injectables/PasswordResetGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["path",{"_index":593,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"injectables/GraphqlService.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["pathmatch",{"_index":782,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":1492,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{}}}],["payload.matchid",{"_index":1496,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["penalties",{"_index":266,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["penalties.filter(t",{"_index":2282,"title":{},"body":{"components/TableComponent.html":{}}}],["penalty",{"_index":311,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["penalty'},{'name",{"_index":475,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["penalty.component",{"_index":581,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.css",{"_index":1122,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.html",{"_index":1123,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts",{"_index":1121,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty.component.ts:19",{"_index":1139,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:21",{"_index":1136,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:23",{"_index":1135,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:24",{"_index":1131,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:27",{"_index":1134,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:33",{"_index":1661,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:36",{"_index":1132,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:37",{"_index":1660,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:41",{"_index":1659,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:45",{"_index":1133,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{}}}],["penalty.component.ts:47",{"_index":1663,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.component.ts:56",{"_index":1665,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.created_at",{"_index":1682,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.fragment",{"_index":267,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["penalty.id",{"_index":1677,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.points",{"_index":1684,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.reason",{"_index":1681,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty.team.name",{"_index":1680,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["penalty/edit",{"_index":582,"title":{},"body":{"modules/AdminModule.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penalty/manage",{"_index":580,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["penaltyfragment",{"_index":331,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["penaltypoints",{"_index":1124,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["penaltyreason",{"_index":1125,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["perm_contact_calendar",{"_index":1710,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/MatchComponent.html":{}}}],["persist",{"_index":1388,"title":{},"body":{"injectables/GraphqlService.html":{},"dependencies.html":{}}}],["persistcache",{"_index":1387,"title":{},"body":{"injectables/GraphqlService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":681,"title":{},"body":{"components/AppComponent.html":{},"components/ContactPersonComponent.html":{}}}],["person'},{'name",{"_index":463,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["person.component",{"_index":2253,"title":{},"body":{"modules/SharedModule.html":{}}}],["person.component.css",{"_index":982,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.html",{"_index":983,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts",{"_index":981,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["person.component.ts:11",{"_index":985,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person.component.ts:15",{"_index":986,"title":{},"body":{"components/ContactPersonComponent.html":{}}}],["person/contact",{"_index":980,"title":{},"body":{"components/ContactPersonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["phone",{"_index":223,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":36,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["pitch",{"_index":286,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pitch.fragment",{"_index":270,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["pitch.id",{"_index":1972,"title":{},"body":{"injectables/MatchService.html":{}}}],["pitch.label",{"_index":1119,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{}}}],["pitch.location_latitude",{"_index":2146,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch.location_longitude",{"_index":2145,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitch_contact",{"_index":2154,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitch_id",{"_index":208,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitch_required",{"_index":1061,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitches",{"_index":268,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"modules/ContactlistModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["pitches'},{'name",{"_index":503,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["pitches.component.css",{"_index":2148,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.component.html",{"_index":2149,"title":{},"body":{"components/PitchesComponent.html":{}}}],["pitches.find(p",{"_index":1053,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchescomponent",{"_index":502,"title":{"components/PitchesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pitchesgql",{"_index":416,"title":{"injectables/PitchesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagepitchesComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["pitchexist",{"_index":1056,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["pitchfragment",{"_index":322,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pitchid",{"_index":2136,"title":{},"body":{"injectables/PitchService.html":{}}}],["pitchservice",{"_index":1023,"title":{"injectables/PitchService.html":{}},"body":{"components/CreatePitchDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagepitchesComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"coverage.html":{}}}],["place",{"_index":1041,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lat",{"_index":1044,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["place.geometry.location.lng",{"_index":1046,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["places",{"_index":1018,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["plan_date_from",{"_index":1187,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plan_date_to",{"_index":1189,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["plandatefrom",{"_index":71,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["plandateto",{"_index":69,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["points",{"_index":165,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["pos.conceded_goals",{"_index":2300,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.draws",{"_index":2297,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.losses",{"_index":2298,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.matches",{"_index":2295,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.number",{"_index":2293,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.points",{"_index":2301,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.scored_goals",{"_index":2299,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.team.name",{"_index":2294,"title":{},"body":{"components/TableComponent.html":{}}}],["pos.wins",{"_index":2296,"title":{},"body":{"components/TableComponent.html":{}}}],["positions",{"_index":303,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["possiblekickoffs",{"_index":1544,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possiblekickoffs.filter(x",{"_index":1566,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["possibletypes",{"_index":1620,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{}}}],["preparation",{"_index":174,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["private",{"_index":83,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["production",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":175,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":810,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["provide",{"_index":729,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{}}}],["providedin",{"_index":334,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["provider",{"_index":2595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider.init",{"_index":768,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":546,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["public",{"_index":85,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{}}}],["query",{"_index":130,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["queueing",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["r",{"_index":1799,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["r.matches.map(y",{"_index":1801,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["radius",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["ranking",{"_index":265,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ranking($id",{"_index":418,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["ranking.fragment",{"_index":271,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["ranking.updated_at",{"_index":2304,"title":{},"body":{"components/TableComponent.html":{}}}],["ranking_penalty_id",{"_index":218,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingfragment",{"_index":332,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rankinggql",{"_index":417,"title":{"injectables/RankingGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchplanComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rankingpenalty",{"_index":312,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["rankingposition",{"_index":304,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["rankingqgl",{"_index":1457,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/TableComponent.html":{}}}],["reactiveformsmodule",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["readable",{"_index":195,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["reason",{"_index":164,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["reason.value.length",{"_index":926,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["reconnect",{"_index":1432,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["reconnectionattempts",{"_index":1433,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["red",{"_index":716,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["redesign",{"_index":2617,"title":{},"body":{"todo.html":{}}}],["redirectto",{"_index":781,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redis",{"_index":1461,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["redisevent",{"_index":1616,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["rediseventgql",{"_index":1456,"title":{"injectables/RedisEventGQL.html":{}},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/MatchEventPayload.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{}}}],["refetch",{"_index":2015,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["refetchqueries",{"_index":129,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["refresh",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["registerlocaledata",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":765,"title":{},"body":{"modules/AppModule.html":{}}}],["reject",{"_index":812,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(err",{"_index":900,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["reject(error",{"_index":816,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["reject(new",{"_index":2335,"title":{},"body":{"injectables/TeamService.html":{}}}],["related",{"_index":2318,"title":{},"body":{"injectables/TeamService.html":{}}}],["remove",{"_index":1934,"title":{},"body":{"components/MatchSchedulingComponent.html":{},"todo.html":{}}}],["remove_red_eye",{"_index":954,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{}}}],["removepair",{"_index":1910,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["removepair(index",{"_index":1555,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["removepenaltiesgql",{"_index":1658,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty",{"_index":1655,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removepenalty(penalty",{"_index":1664,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["removerankingpenalty",{"_index":217,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removerankingpenaltygql",{"_index":354,"title":{"injectables/RemoveRankingPenaltyGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["removeteam",{"_index":1159,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["removeteam(index",{"_index":109,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["removeteamfromseason",{"_index":231,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason($season_id",{"_index":368,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseason(season_id",{"_index":369,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["removeteamfromseasongql",{"_index":367,"title":{"injectables/RemoveTeamFromSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["rename",{"_index":505,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["renameteam",{"_index":239,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam($team_id",{"_index":385,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(newname",{"_index":2166,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["renameteam(team_id",{"_index":386,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["renameteam(teamid",{"_index":2327,"title":{},"body":{"injectables/TeamService.html":{}}}],["renameteamcomponent",{"_index":504,"title":{"components/RenameTeamComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renameteamgql",{"_index":384,"title":{"injectables/RenameTeamGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["represent",{"_index":191,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["represented",{"_index":184,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":182,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["require",{"_index":2507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1646,"title":{},"body":{"components/LoginComponent.html":{}}}],["res",{"_index":814,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["reschedulematchday",{"_index":233,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchday(match_day_id",{"_index":373,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["reschedulematchdaygql",{"_index":372,"title":{"injectables/RescheduleMatchDayGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["reset",{"_index":555,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}],["resetpasswordqgl",{"_index":837,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve",{"_index":811,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["resolve(res",{"_index":815,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["resolve(result.data.authenticateduser",{"_index":886,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["resolve(true",{"_index":883,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["response",{"_index":898,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GraphqlService.html":{},"interfaces/LoginContext.html":{}}}],["result",{"_index":149,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.data.authenticateduser",{"_index":882,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["result.data.season.ranking",{"_index":2281,"title":{},"body":{"components/TableComponent.html":{}}}],["result.data.tournament",{"_index":1785,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds",{"_index":1786,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.length",{"_index":1788,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.data.tournament.rounds.sort((a",{"_index":1789,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["result.ts",{"_index":1622,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":151,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":146,"title":{},"body":{"interfaces/AddMatchData.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{}}}],["returns",{"_index":440,"title":{},"body":{"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["rgba(0",{"_index":706,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":719,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":695,"title":{},"body":{"components/AppComponent.html":{}}}],["rimraf",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":248,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":335,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["root'},{'name",{"_index":450,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round",{"_index":13,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["round'},{'name",{"_index":476,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["round.component",{"_index":587,"title":{},"body":{"modules/AdminModule.html":{},"components/ManagetournamentComponent.html":{}}}],["round.component.html",{"_index":64,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["round.component.ts",{"_index":9,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["round.component.ts:111",{"_index":1169,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:115",{"_index":1170,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:119",{"_index":1166,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:28",{"_index":1178,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:29",{"_index":1177,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:31",{"_index":1175,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:32",{"_index":1174,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:34",{"_index":1171,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:36",{"_index":1179,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:37",{"_index":1176,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:38",{"_index":1163,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:42",{"_index":1173,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:43",{"_index":1180,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:50",{"_index":1172,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:66",{"_index":1167,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:69",{"_index":1164,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:81",{"_index":1168,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.component.ts:85",{"_index":1165,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["round.end_date",{"_index":2429,"title":{},"body":{"components/TournamentComponent.html":{}}}],["round.number",{"_index":2425,"title":{},"body":{"components/TournamentComponent.html":{}}}],["round.start_date",{"_index":2428,"title":{},"body":{"components/TournamentComponent.html":{}}}],["round/edit",{"_index":8,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AdminModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["rounds",{"_index":300,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["roundteam",{"_index":20,"title":{"interfaces/RoundTeam.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["roundteams",{"_index":77,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["router",{"_index":834,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["routermodule",{"_index":591,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":594,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":796,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":2364,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["routes",{"_index":590,"title":{"routes.html":{}},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":562,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["routing.module.ts",{"_index":589,"title":{},"body":{"modules/AdminRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactlistRoutingModule.html":{},"modules/EventsRoutingModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/NewpasswordRoutingModule.html":{},"modules/TableRoutingModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["rxjs",{"_index":44,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"guards/TeamadminGuard.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":52,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["s.state",{"_index":2233,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["save",{"_index":1078,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"components/MatchSchedulingComponent.html":{},"components/RenameTeamComponent.html":{}}}],["savecontact",{"_index":2345,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savecontact(teamid",{"_index":2349,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["savematches",{"_index":1592,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["savepenalty",{"_index":1128,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["scalar",{"_index":181,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["schedulematch",{"_index":205,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch($match_id",{"_index":340,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(match_id",{"_index":341,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["schedulematch(matchid",{"_index":1955,"title":{},"body":{"injectables/MatchService.html":{}}}],["schedulematches",{"_index":1559,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["schedulematchgql",{"_index":339,"title":{"injectables/ScheduleMatchGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["scheduling",{"_index":1539,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling'},{'name",{"_index":499,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["scheduling.component",{"_index":569,"title":{},"body":{"modules/AdminModule.html":{}}}],["scheduling.component.css",{"_index":1541,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.html",{"_index":1540,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts",{"_index":1529,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["scheduling.component.ts:115",{"_index":1919,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:129",{"_index":1921,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:31",{"_index":1913,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:33",{"_index":1926,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:34",{"_index":1922,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:35",{"_index":1924,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:36",{"_index":1927,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:38",{"_index":1929,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:40",{"_index":1912,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:43",{"_index":1925,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:45",{"_index":1923,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:48",{"_index":1917,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:60",{"_index":1916,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:63",{"_index":1915,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:67",{"_index":1914,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:80",{"_index":1918,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling.component.ts:84",{"_index":1920,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["scheduling/match",{"_index":568,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["score",{"_index":1952,"title":{},"body":{"injectables/MatchService.html":{}}}],["scored_goals",{"_index":309,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":1812,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{}}}],["season",{"_index":262,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["season(id",{"_index":413,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["season.fragment",{"_index":263,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["season.name",{"_index":2241,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season.service",{"_index":1470,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["season.state",{"_index":2242,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["season_id",{"_index":162,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonchanged",{"_index":2214,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser",{"_index":2208,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser'},{'name",{"_index":508,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["seasonchooser.component.css",{"_index":2209,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser.component.html",{"_index":2210,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonchooser/seasonchooser.component",{"_index":2249,"title":{},"body":{"modules/SharedModule.html":{}}}],["seasonchoosercomponent",{"_index":507,"title":{"components/SeasonchooserComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seasoncompare",{"_index":2181,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasoncompare(c1",{"_index":2187,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonfragment",{"_index":325,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["seasonid",{"_index":1850,"title":{},"body":{"components/MatchComponent.html":{},"injectables/SeasonService.html":{}}}],["seasonlist",{"_index":2211,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonmatchupdated",{"_index":1941,"title":{},"body":{"injectables/MatchService.html":{}}}],["seasonname",{"_index":2186,"title":{},"body":{"injectables/SeasonService.html":{}}}],["seasonpenalties",{"_index":264,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties($id",{"_index":415,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["seasonpenalties.season",{"_index":1142,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["seasonpenaltiesgql",{"_index":414,"title":{"injectables/SeasonPenaltiesGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["seasonservice",{"_index":602,"title":{"injectables/SeasonService.html":{}},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"coverage.html":{}}}],["seasonstate",{"_index":173,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["seasonstate.ended",{"_index":2217,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["seasonstate.progress",{"_index":2216,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["selected_matchday",{"_index":2007,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_matchday_key",{"_index":2006,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_season",{"_index":2199,"title":{},"body":{"injectables/SeasonService.html":{},"miscellaneous/variables.html":{}}}],["selected_season_key",{"_index":2198,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_team",{"_index":2009,"title":{},"body":{"components/MatchplanComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_team_key",{"_index":2008,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament",{"_index":2407,"title":{},"body":{"components/TournamentComponent.html":{},"miscellaneous/variables.html":{}}}],["selected_tournament_key",{"_index":638,"title":{},"body":{"components/AppComponent.html":{},"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedmatchdayid",{"_index":1978,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["selectedteamid",{"_index":1126,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["selectedtournament",{"_index":2386,"title":{},"body":{"components/TournamentComponent.html":{}}}],["selector",{"_index":60,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["sendpasswordmail",{"_index":828,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sendpasswordmail(email",{"_index":853,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["sendpasswordresetmail",{"_index":213,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendpasswordresetmail(email",{"_index":350,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["sendusermail",{"_index":1194,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["sequences",{"_index":188,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":2315,"title":{},"body":{"injectables/TeamService.html":{}}}],["services",{"_index":333,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["services/appsettings.service",{"_index":640,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/authentication.service",{"_index":538,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/LoginComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{}}}],["services/graphql",{"_index":1372,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["services/graphql.service",{"_index":641,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{}}}],["services/i18.service",{"_index":39,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["services/match.service",{"_index":1268,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/MatchComponent.html":{}}}],["services/pitch.service",{"_index":1267,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/PitchesComponent.html":{}}}],["services/season.service",{"_index":2003,"title":{},"body":{"components/MatchplanComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{}}}],["services/team.service",{"_index":33,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{}}}],["set",{"_index":1477,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["set('authorization",{"_index":877,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["setcontext",{"_index":1386,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setcontext((_",{"_index":1424,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["setplandatefrom",{"_index":1160,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandatefrom(event",{"_index":141,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setplandateto",{"_index":1161,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["setplandateto(event",{"_index":143,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["setsubscriptionclient(value",{"_index":1467,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["settournamentround",{"_index":244,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["shadow",{"_index":705,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/confirm",{"_index":1703,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["shared/create",{"_index":1702,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/edit",{"_index":1701,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["shared/shared.module",{"_index":563,"title":{},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{}}}],["sharedmodule",{"_index":553,"title":{"modules/SharedModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["showcreatenewpitch",{"_index":1251,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["showerrornotification",{"_index":2108,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerrornotification(title",{"_index":2113,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification",{"_index":2109,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification(title",{"_index":2115,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification",{"_index":2110,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccessnotification(title",{"_index":2120,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shuffle",{"_index":1911,"title":{},"body":{"components/MatchSchedulingComponent.html":{}}}],["shuffle(a",{"_index":1600,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["snackbar",{"_index":603,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{}}}],["snackbar'},{'name",{"_index":510,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["snackbar.component.css",{"_index":1611,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar.component.html",{"_index":1610,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{}}}],["snackbar/snackbar.component",{"_index":2252,"title":{},"body":{"modules/SharedModule.html":{}}}],["snackbarcomponent",{"_index":509,"title":{"components/SnackbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/ISnackBarData.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sort_index",{"_index":305,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"guards/AdminGuard.html":{},"modules/AdminModule.html":{},"modules/AdminRoutingModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"modules/ContactlistRoutingModule.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"modules/EventsModule.html":{},"modules/EventsRoutingModule.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"modules/MatchplanModule.html":{},"modules/MatchplanRoutingModule.html":{},"modules/MaterialModule.html":{},"components/NewpasswordComponent.html":{},"modules/NewpasswordModule.html":{},"modules/NewpasswordRoutingModule.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"modules/SharedModule.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["spacer",{"_index":2034,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["spec\\.ts",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiel",{"_index":1585,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["spieltag",{"_index":1584,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["split",{"_index":1384,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/.../app.module.ts",{"_index":2594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../authentication.service.ts",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.local.ts",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.app.ts",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graphql.ts",{"_index":2592,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../graphqlsubs.ts",{"_index":2623,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../i18.service.ts",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../introspection",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../manageseason.component.ts",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../managetournament.component.ts",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../matchplan.component.ts",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../season.service.ts",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tournament.component.ts",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/graphql",{"_index":50,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["src/api/graphql.ts",{"_index":155,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphql.ts:1061",{"_index":2260,"title":{},"body":{"injectables/SubmitResultGQL.html":{}}}],["src/api/graphql.ts:1082",{"_index":2176,"title":{},"body":{"injectables/ScheduleMatchGQL.html":{}}}],["src/api/graphql.ts:1095",{"_index":1624,"title":{},"body":{"injectables/LocateMatchGQL.html":{}}}],["src/api/graphql.ts:1108",{"_index":930,"title":{},"body":{"injectables/CancelMatchGQL.html":{}}}],["src/api/graphql.ts:1121",{"_index":2128,"title":{},"body":{"injectables/PasswordResetGQL.html":{}}}],["src/api/graphql.ts:1134",{"_index":2127,"title":{},"body":{"injectables/PasswordChangeGQL.html":{}}}],["src/api/graphql.ts:1147",{"_index":168,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1172",{"_index":2158,"title":{},"body":{"injectables/RemoveRankingPenaltyGQL.html":{}}}],["src/api/graphql.ts:1191",{"_index":1082,"title":{},"body":{"injectables/DeletePitchGQL.html":{}}}],["src/api/graphql.ts:1204",{"_index":2441,"title":{},"body":{"injectables/UpdatePitchContactGQL.html":{}}}],["src/api/graphql.ts:1229",{"_index":1066,"title":{},"body":{"injectables/CreatePitchGQL.html":{}}}],["src/api/graphql.ts:1252",{"_index":1067,"title":{},"body":{"injectables/CreateSeasonGQL.html":{}}}],["src/api/graphql.ts:1265",{"_index":426,"title":{},"body":{"injectables/AddTeamToSeasonGQL.html":{}}}],["src/api/graphql.ts:1278",{"_index":2159,"title":{},"body":{"injectables/RemoveTeamFromSeasonGQL.html":{}}}],["src/api/graphql.ts:1291",{"_index":1010,"title":{},"body":{"injectables/CreateMatchesForSeasonGQL.html":{}}}],["src/api/graphql.ts:1307",{"_index":2175,"title":{},"body":{"injectables/RescheduleMatchDayGQL.html":{}}}],["src/api/graphql.ts:1323",{"_index":2259,"title":{},"body":{"injectables/StartSeasonGQL.html":{}}}],["src/api/graphql.ts:1336",{"_index":1337,"title":{},"body":{"injectables/EndSeasonGQL.html":{}}}],["src/api/graphql.ts:1349",{"_index":1068,"title":{},"body":{"injectables/CreateTeamGQL.html":{}}}],["src/api/graphql.ts:1362",{"_index":2442,"title":{},"body":{"injectables/UpdateTeamContactGQL.html":{}}}],["src/api/graphql.ts:1387",{"_index":2174,"title":{},"body":{"injectables/RenameTeamGQL.html":{}}}],["src/api/graphql.ts:1400",{"_index":1083,"title":{},"body":{"injectables/DeleteTeamGQL.html":{}}}],["src/api/graphql.ts:1413",{"_index":1069,"title":{},"body":{"injectables/CreateTournamentGQL.html":{}}}],["src/api/graphql.ts:1426",{"_index":1070,"title":{},"body":{"injectables/CreateTournamentRoundGQL.html":{}}}],["src/api/graphql.ts:1449",{"_index":1084,"title":{},"body":{"injectables/DeleteTournamentGQL.html":{}}}],["src/api/graphql.ts:1462",{"_index":1071,"title":{},"body":{"injectables/CreateUserGQL.html":{}}}],["src/api/graphql.ts:1491",{"_index":2443,"title":{},"body":{"injectables/UpdateUserGQL.html":{}}}],["src/api/graphql.ts:1518",{"_index":1085,"title":{},"body":{"injectables/DeleteUserGQL.html":{}}}],["src/api/graphql.ts:1528",{"_index":1338,"title":{},"body":{"injectables/EventGQL.html":{}}}],["src/api/graphql.ts:1545",{"_index":1623,"title":{},"body":{"injectables/LatestEventGQL.html":{}}}],["src/api/graphql.ts:1559",{"_index":1907,"title":{},"body":{"injectables/MatchGQL.html":{}}}],["src/api/graphql.ts:1576",{"_index":1908,"title":{},"body":{"injectables/MatchPlanGQL.html":{}}}],["src/api/graphql.ts:1593",{"_index":2177,"title":{},"body":{"injectables/SeasonPenaltiesGQL.html":{}}}],["src/api/graphql.ts:1616",{"_index":2155,"title":{},"body":{"injectables/PitchesGQL.html":{}}}],["src/api/graphql.ts:1630",{"_index":2156,"title":{},"body":{"injectables/RankingGQL.html":{}}}],["src/api/graphql.ts:1647",{"_index":595,"title":{},"body":{"injectables/AllSeasonsListGQL.html":{}}}],["src/api/graphql.ts:1664",{"_index":596,"title":{},"body":{"injectables/AllTeamsGQL.html":{}}}],["src/api/graphql.ts:1681",{"_index":597,"title":{},"body":{"injectables/AllTournamentListGQL.html":{}}}],["src/api/graphql.ts:1698",{"_index":2432,"title":{},"body":{"injectables/TournamentGQL.html":{}}}],["src/api/graphql.ts:1712",{"_index":2444,"title":{},"body":{"injectables/UserGQL.html":{}}}],["src/api/graphql.ts:1729",{"_index":598,"title":{},"body":{"injectables/AllUsersGQL.html":{}}}],["src/api/graphqlsubs",{"_index":1469,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["src/api/graphqlsubs.ts",{"_index":1614,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/api/graphqlsubs.ts:52",{"_index":2157,"title":{},"body":{"injectables/RedisEventGQL.html":{}}}],["src/api/introspection",{"_index":1621,"title":{},"body":{"interfaces/IntrospectionResultData-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":722,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppRoutingModule.html":{},"modules/EventsModule.html":{}}}],["src/app/app.component.ts",{"_index":599,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:24",{"_index":615,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":623,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":624,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":626,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":625,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":617,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":621,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":620,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":616,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":619,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":622,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/admin/admin",{"_index":588,"title":{},"body":{"modules/AdminRoutingModule.html":{}}}],["src/app/components/admin/admin.component.ts",{"_index":432,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:14",{"_index":439,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:9",{"_index":438,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.guard.ts",{"_index":526,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.guard.ts:15",{"_index":535,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:19",{"_index":536,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.guard.ts:8",{"_index":531,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/components/admin/admin.module.ts",{"_index":557,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/app/components/admin/events/events",{"_index":1364,"title":{},"body":{"modules/EventsRoutingModule.html":{}}}],["src/app/components/admin/events/events.component.ts",{"_index":1339,"title":{},"body":{"components/EventsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/events/events.component.ts:15",{"_index":1343,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:19",{"_index":1346,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.component.ts:22",{"_index":1345,"title":{},"body":{"components/EventsComponent.html":{}}}],["src/app/components/admin/events/events.module.ts",{"_index":1360,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts",{"_index":1686,"title":{},"body":{"components/ManagepitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:18",{"_index":1692,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:21",{"_index":1699,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:27",{"_index":1698,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:31",{"_index":1695,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:50",{"_index":1693,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/managepitches/managepitches.component.ts:54",{"_index":1697,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["src/app/components/admin/manageseason/manage",{"_index":1120,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageseason/manageseason.component.ts",{"_index":2489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/manageseason/match",{"_index":1528,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts",{"_index":1711,"title":{},"body":{"components/ManageteamsComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:15",{"_index":1717,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:18",{"_index":1727,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:19",{"_index":1726,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:26",{"_index":1723,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:29",{"_index":1719,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:38",{"_index":1722,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/manageteams.component.ts:55",{"_index":1725,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["src/app/components/admin/manageteams/rename",{"_index":2160,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/edit",{"_index":6,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{},"coverage.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts",{"_index":1735,"title":{},"body":{"components/ManagetournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:128",{"_index":1763,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:140",{"_index":1755,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:22",{"_index":1772,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:24",{"_index":1767,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:25",{"_index":1768,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:26",{"_index":1771,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:27",{"_index":1769,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:28",{"_index":1751,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:31",{"_index":1764,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:38",{"_index":1765,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:41",{"_index":1760,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:48",{"_index":1759,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:54",{"_index":1753,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:66",{"_index":1761,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:85",{"_index":1758,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/managetournament/managetournament.component.ts:96",{"_index":1757,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["src/app/components/admin/manageusers/edit",{"_index":1191,"title":{},"body":{"components/EditUserDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts",{"_index":1831,"title":{},"body":{"components/ManageusersComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:14",{"_index":1836,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/manageusers.component.ts:8",{"_index":1835,"title":{},"body":{"components/ManageusersComponent.html":{}}}],["src/app/components/admin/manageusers/user",{"_index":2445,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts",{"_index":931,"title":{},"body":{"components/ChangepasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:15",{"_index":940,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:16",{"_index":941,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:17",{"_index":935,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:23",{"_index":938,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:25",{"_index":937,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/changepassword/changepassword.component.ts:35",{"_index":936,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["src/app/components/contactlist/contactlist",{"_index":1009,"title":{},"body":{"modules/ContactlistRoutingModule.html":{}}}],["src/app/components/contactlist/contactlist.component.ts",{"_index":995,"title":{},"body":{"components/ContactlistComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:12",{"_index":1000,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.component.ts:8",{"_index":999,"title":{},"body":{"components/ContactlistComponent.html":{}}}],["src/app/components/contactlist/contactlist.module.ts",{"_index":1006,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts",{"_index":2147,"title":{},"body":{"components/PitchesComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:12",{"_index":2152,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:15",{"_index":2151,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/pitches/pitches.component.ts:9",{"_index":2150,"title":{},"body":{"components/PitchesComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts",{"_index":2376,"title":{},"body":{"components/TeamsComponent.html":{},"coverage.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:12",{"_index":2381,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:15",{"_index":2380,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/contactlist/teams/teams.component.ts:9",{"_index":2379,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1625,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:15",{"_index":1639,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:16",{"_index":1632,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1638,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":1635,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1633,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":1634,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":1637,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/matchplan/matchplan",{"_index":2043,"title":{},"body":{"modules/MatchplanRoutingModule.html":{}}}],["src/app/components/matchplan/matchplan.component.ts",{"_index":1973,"title":{},"body":{"components/MatchplanComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:21",{"_index":1994,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:23",{"_index":1992,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:25",{"_index":1998,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:27",{"_index":2000,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:29",{"_index":2002,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:31",{"_index":1984,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:34",{"_index":1996,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:35",{"_index":1993,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:36",{"_index":1995,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:41",{"_index":1990,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:52",{"_index":1986,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:58",{"_index":1988,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.component.ts:66",{"_index":1989,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["src/app/components/matchplan/matchplan.module.ts",{"_index":2041,"title":{},"body":{"modules/MatchplanModule.html":{}}}],["src/app/components/newpassword/newpassword",{"_index":2105,"title":{},"body":{"modules/NewpasswordRoutingModule.html":{}}}],["src/app/components/newpassword/newpassword.component.ts",{"_index":2078,"title":{},"body":{"components/NewpasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:15",{"_index":2087,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:16",{"_index":2083,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:19",{"_index":2086,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:30",{"_index":2084,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.component.ts:46",{"_index":2085,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["src/app/components/newpassword/newpassword.module.ts",{"_index":2102,"title":{},"body":{"modules/NewpasswordModule.html":{}}}],["src/app/components/shared/cancel",{"_index":902,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/confirm",{"_index":957,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ManagePenaltyComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact",{"_index":979,"title":{},"body":{"components/ContactPersonComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts",{"_index":967,"title":{},"body":{"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"coverage.html":{}}}],["src/app/components/shared/contact/contact.component.ts:14",{"_index":972,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:17",{"_index":975,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:18",{"_index":974,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/contact/contact.component.ts:20",{"_index":973,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/components/shared/create",{"_index":1011,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/edit",{"_index":1086,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts",{"_index":1242,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:18",{"_index":1263,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:19",{"_index":1253,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:22",{"_index":1262,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:30",{"_index":1257,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:42",{"_index":1255,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:46",{"_index":1259,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:50",{"_index":1260,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.pitch.component.ts:59",{"_index":1261,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts",{"_index":1292,"title":{},"body":{"components/EditmatchResultComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:15",{"_index":1299,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:16",{"_index":1296,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:19",{"_index":1300,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:22",{"_index":1301,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:23",{"_index":1302,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:29",{"_index":1297,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.result.component.ts:33",{"_index":1298,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts",{"_index":1316,"title":{},"body":{"components/EditmatchTimeComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:16",{"_index":1322,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:19",{"_index":1328,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:22",{"_index":1327,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:34",{"_index":1325,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:37",{"_index":1324,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/editmatch/editmatch.time.component.ts:41",{"_index":1326,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["src/app/components/shared/match/match.component.ts",{"_index":1837,"title":{},"body":{"components/MatchComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/match/match.component.ts:101",{"_index":1863,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:114",{"_index":1859,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:118",{"_index":1858,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:122",{"_index":1861,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:22",{"_index":1855,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:23",{"_index":1856,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:24",{"_index":1854,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:25",{"_index":1853,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:27",{"_index":1852,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:30",{"_index":1869,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:31",{"_index":1868,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:32",{"_index":1870,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:33",{"_index":1872,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:34",{"_index":1871,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:35",{"_index":1873,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:38",{"_index":1862,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:41",{"_index":1866,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:53",{"_index":1857,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:62",{"_index":1865,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:75",{"_index":1867,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/match/match.component.ts:88",{"_index":1864,"title":{},"body":{"components/MatchComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts",{"_index":2207,"title":{},"body":{"components/SeasonchooserComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:14",{"_index":2218,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:15",{"_index":2223,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:16",{"_index":2224,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:17",{"_index":2219,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:19",{"_index":2215,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:22",{"_index":2225,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:26",{"_index":2222,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/seasonchooser/seasonchooser.component.ts:61",{"_index":2221,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["src/app/components/shared/shared.module",{"_index":1361,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/app/components/shared/shared.module.ts",{"_index":2247,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts",{"_index":1607,"title":{},"body":{"interfaces/ISnackBarData.html":{},"components/SnackbarComponent.html":{},"coverage.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:13",{"_index":2255,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:16",{"_index":2257,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/shared/snackbar/snackbar.component.ts:21",{"_index":2256,"title":{},"body":{"components/SnackbarComponent.html":{}}}],["src/app/components/table/table",{"_index":2312,"title":{},"body":{"modules/TableRoutingModule.html":{}}}],["src/app/components/table/table.component.ts",{"_index":2261,"title":{},"body":{"components/TableComponent.html":{},"coverage.html":{}}}],["src/app/components/table/table.component.ts:18",{"_index":2267,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:21",{"_index":2275,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:22",{"_index":2274,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:23",{"_index":2276,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:29",{"_index":2271,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:40",{"_index":2270,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:46",{"_index":2269,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.component.ts:51",{"_index":2273,"title":{},"body":{"components/TableComponent.html":{}}}],["src/app/components/table/table.module.ts",{"_index":2310,"title":{},"body":{"modules/TableModule.html":{}}}],["src/app/components/teamadmin/teamadmin",{"_index":2375,"title":{},"body":{"modules/TeamadminRoutingModule.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts",{"_index":2342,"title":{},"body":{"components/TeamadminComponent.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:15",{"_index":2347,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:20",{"_index":2352,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:22",{"_index":2351,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:23",{"_index":2353,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:26",{"_index":2348,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.component.ts:29",{"_index":2350,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts",{"_index":2360,"title":{},"body":{"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:15",{"_index":2366,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:19",{"_index":2365,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.guard.ts:9",{"_index":2361,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["src/app/components/teamadmin/teamadmin.module.ts",{"_index":2373,"title":{},"body":{"modules/TeamadminModule.html":{}}}],["src/app/components/tournament/tournament",{"_index":2440,"title":{},"body":{"modules/TournamentRoutingModule.html":{}}}],["src/app/components/tournament/tournament.component.ts",{"_index":2383,"title":{},"body":{"components/TournamentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tournament/tournament.component.ts:18",{"_index":2406,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:19",{"_index":2405,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:21",{"_index":2392,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:24",{"_index":2404,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:31",{"_index":2395,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:50",{"_index":2394,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:53",{"_index":2396,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:69",{"_index":2400,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.component.ts:73",{"_index":2403,"title":{},"body":{"components/TournamentComponent.html":{}}}],["src/app/components/tournament/tournament.module.ts",{"_index":2438,"title":{},"body":{"modules/TournamentModule.html":{}}}],["src/app/graphql.module.ts",{"_index":1367,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/app/material.module.ts",{"_index":2044,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/services/appsettings.service.ts",{"_index":798,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"coverage.html":{}}}],["src/app/services/appsettings.service.ts:15",{"_index":818,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:19",{"_index":819,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/appsettings.service.ts:27",{"_index":820,"title":{},"body":{"injectables/AppsettingsService.html":{}}}],["src/app/services/authentication.service",{"_index":1209,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["src/app/services/authentication.service.ts",{"_index":821,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:120",{"_index":854,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:21",{"_index":858,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:23",{"_index":856,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:25",{"_index":860,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:27",{"_index":839,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:38",{"_index":850,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:63",{"_index":847,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:78",{"_index":852,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:84",{"_index":862,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:88",{"_index":864,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:92",{"_index":845,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:96",{"_index":842,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/graphql",{"_index":633,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts",{"_index":1373,"title":{},"body":{"injectables/GraphqlService.html":{},"coverage.html":{}}}],["src/app/services/graphql.service.ts:23",{"_index":1377,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/graphql.service.ts:36",{"_index":1378,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["src/app/services/i18.service",{"_index":1347,"title":{},"body":{"components/EventsComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{}}}],["src/app/services/i18.service.ts",{"_index":1500,"title":{},"body":{"injectables/I18Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/i18.service.ts:14",{"_index":1512,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:16",{"_index":1514,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:18",{"_index":1516,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:20",{"_index":1506,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:25",{"_index":1509,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18.service.ts:37",{"_index":1508,"title":{},"body":{"injectables/I18Service.html":{}}}],["src/app/services/i18n/customowldatetimeintl",{"_index":726,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts",{"_index":1072,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"coverage.html":{}}}],["src/app/services/i18n/customowldatetimeintl.ts:6",{"_index":1074,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["src/app/services/match.service",{"_index":1537,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["src/app/services/match.service.ts",{"_index":1940,"title":{},"body":{"injectables/MatchService.html":{},"coverage.html":{}}}],["src/app/services/match.service.ts:10",{"_index":1960,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:11",{"_index":1947,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:112",{"_index":1954,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:19",{"_index":1949,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:23",{"_index":1951,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:27",{"_index":1958,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/match.service.ts:68",{"_index":1956,"title":{},"body":{"injectables/MatchService.html":{}}}],["src/app/services/notification.service",{"_index":54,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["src/app/services/notification.service.ts",{"_index":2106,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/services/notification.service.ts:10",{"_index":2112,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:16",{"_index":2121,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:20",{"_index":2114,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:24",{"_index":2119,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/pitch.service",{"_index":1033,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["src/app/services/pitch.service.ts",{"_index":2129,"title":{},"body":{"injectables/PitchService.html":{},"coverage.html":{}}}],["src/app/services/pitch.service.ts:12",{"_index":2141,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:14",{"_index":2131,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:23",{"_index":2135,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/pitch.service.ts:45",{"_index":2133,"title":{},"body":{"injectables/PitchService.html":{}}}],["src/app/services/season.service",{"_index":635,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{}}}],["src/app/services/season.service.ts",{"_index":2178,"title":{},"body":{"injectables/SeasonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/season.service.ts:14",{"_index":2195,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:16",{"_index":2183,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:32",{"_index":2185,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:57",{"_index":2192,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/season.service.ts:81",{"_index":2189,"title":{},"body":{"injectables/SeasonService.html":{}}}],["src/app/services/team.service",{"_index":1208,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/TeamsComponent.html":{}}}],["src/app/services/team.service.ts",{"_index":2313,"title":{},"body":{"injectables/TeamService.html":{},"coverage.html":{}}}],["src/app/services/team.service.ts:102",{"_index":2326,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:17",{"_index":2332,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:19",{"_index":2321,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:35",{"_index":2323,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/services/team.service.ts:61",{"_index":2328,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/environments/environment",{"_index":632,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["src/environments/environment.app.local.ts",{"_index":2502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.app.ts",{"_index":2503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":313,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["start_date",{"_index":256,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":2597,"title":{"index.html":{},"todo.html":{}},"body":{}}],["startgamecount",{"_index":1791,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startmatchday",{"_index":1545,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["startseason",{"_index":235,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason($id",{"_index":375,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(season_id",{"_index":376,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["startseason(seasonid",{"_index":2191,"title":{},"body":{"injectables/SeasonService.html":{}}}],["startseasongql",{"_index":374,"title":{"injectables/StartSeasonGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["startteamcount",{"_index":1742,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["startwith",{"_index":1265,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["state",{"_index":299,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"guards/TeamadminGuard.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["storage",{"_index":1447,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["store",{"_index":637,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/I18Service.html":{},"interfaces/LoginContext.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"dependencies.html":{}}}],["store.readfragment",{"_index":1965,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["store.writefragment",{"_index":1968,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["storedlang",{"_index":1502,"title":{},"body":{"injectables/I18Service.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":429,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["styleurls",{"_index":434,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["subject",{"_index":1959,"title":{},"body":{"injectables/MatchService.html":{},"dependencies.html":{}}}],["submit",{"_index":2081,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["submitmatchresult",{"_index":204,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitmatchresult(matchid",{"_index":1957,"title":{},"body":{"injectables/MatchService.html":{}}}],["submitresult",{"_index":199,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["submitresultgql",{"_index":336,"title":{"injectables/SubmitResultGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/MatchService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["subscribe",{"_index":881,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/MatchService.html":{},"injectables/SeasonService.html":{}}}],["subscription",{"_index":1441,"title":{},"body":{"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.service",{"_index":634,"title":{},"body":{"components/AppComponent.html":{},"modules/GraphQLModule.html":{},"injectables/GraphqlService.html":{}}}],["subscription.service.ts",{"_index":1451,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"coverage.html":{}}}],["subscription.service.ts:19",{"_index":1464,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:21",{"_index":1463,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:22",{"_index":1466,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:25",{"_index":1468,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:59",{"_index":1460,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscription.service.ts:71",{"_index":1462,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{}}}],["subscriptionclient",{"_index":1389,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptionclient(value",{"_index":1478,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["subscriptions",{"_index":1390,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["success",{"_index":2117,"title":{},"body":{"injectables/NotificationService.html":{}}}],["super",{"_index":1076,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["support",{"_index":2602,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":2603,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1415,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["switchmapto",{"_index":1266,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["switchmapto(this.pitchservice.allpitches",{"_index":1274,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["t",{"_index":170,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlService.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["t.dates",{"_index":1809,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["t.guestteam.id",{"_index":128,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.hometeam.id",{"_index":126,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["t.id",{"_index":895,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["t.team.id",{"_index":2283,"title":{},"body":{"components/TableComponent.html":{}}}],["t.teams",{"_index":1808,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["t1",{"_index":2401,"title":{},"body":{"components/TournamentComponent.html":{}}}],["t2",{"_index":2399,"title":{},"body":{"components/TournamentComponent.html":{}}}],["table",{"_index":784,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":512,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["table.component",{"_index":2311,"title":{},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{}}}],["table.component.html",{"_index":2263,"title":{},"body":{"components/TableComponent.html":{}}}],["table.component.scss",{"_index":2262,"title":{},"body":{"components/TableComponent.html":{}}}],["table.games",{"_index":2289,"title":{},"body":{"components/TableComponent.html":{}}}],["table.place",{"_index":2287,"title":{},"body":{"components/TableComponent.html":{}}}],["table.points",{"_index":2292,"title":{},"body":{"components/TableComponent.html":{}}}],["table.team",{"_index":2288,"title":{},"body":{"components/TableComponent.html":{}}}],["table.tore:tore",{"_index":2291,"title":{},"body":{"components/TableComponent.html":{}}}],["table.win_draw_lost",{"_index":2290,"title":{},"body":{"components/TableComponent.html":{}}}],["tablecomponent",{"_index":511,"title":{"components/TableComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablemodule",{"_index":2305,"title":{"modules/TableModule.html":{}},"body":{"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tableroutingmodule",{"_index":2309,"title":{"modules/TableRoutingModule.html":{}},"body":{"modules/TableModule.html":{},"modules/TableRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":317,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tag.id",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.src",{"_index":654,"title":{},"body":{"components/AppComponent.html":{}}}],["tag.type",{"_index":657,"title":{},"body":{"components/AppComponent.html":{}}}],["target_path",{"_index":212,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team",{"_index":45,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["team'},{'name",{"_index":506,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["team.component",{"_index":575,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{}}}],["team.component.css",{"_index":2162,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.html",{"_index":2163,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts",{"_index":2161,"title":{},"body":{"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team.component.ts:13",{"_index":2164,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:16",{"_index":2169,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:20",{"_index":2170,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:23",{"_index":2165,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.component.ts:27",{"_index":2167,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["team.fragment",{"_index":58,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManageteamsComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["team.id",{"_index":2284,"title":{},"body":{"components/TableComponent.html":{},"injectables/TeamService.html":{}}}],["team.name",{"_index":976,"title":{},"body":{"components/ContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/MatchplanComponent.html":{},"components/RenameTeamComponent.html":{},"components/TeamsComponent.html":{},"components/UserListComponent.html":{}}}],["team/rename",{"_index":574,"title":{},"body":{"modules/AdminModule.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"coverage.html":{}}}],["team:${teamid",{"_index":2340,"title":{},"body":{"injectables/TeamService.html":{}}}],["team_contact",{"_index":2382,"title":{},"body":{"components/TeamsComponent.html":{}}}],["team_id",{"_index":163,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_id_pairs",{"_index":123,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_ids",{"_index":249,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["team_manager",{"_index":180,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamadmin",{"_index":794,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{}}}],["teamadmin'},{'name",{"_index":514,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teamadmin.component",{"_index":2374,"title":{},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{}}}],["teamadmin.component.css",{"_index":2343,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmin.component.html",{"_index":2344,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["teamadmincomponent",{"_index":513,"title":{"components/TeamadminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamadminguard",{"_index":778,"title":{"guards/TeamadminGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/TeamadminGuard.html":{},"coverage.html":{}}}],["teamadminmodule",{"_index":2368,"title":{"modules/TeamadminModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules.html":{},"overview.html":{}}}],["teamadminroutingmodule",{"_index":2372,"title":{"modules/TeamadminRoutingModule.html":{}},"body":{"modules/TeamadminModule.html":{},"modules/TeamadminRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["teamfragment",{"_index":321,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamid",{"_index":846,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{}}}],["teamidpair",{"_index":47,"title":{"interfaces/TeamIdPair.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["teammanager",{"_index":179,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["teamname",{"_index":1720,"title":{},"body":{"components/ManageteamsComponent.html":{},"injectables/TeamService.html":{}}}],["teams",{"_index":14,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teams'},{'name",{"_index":516,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["teams.component.css",{"_index":2377,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.html",{"_index":2378,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.subscribe",{"_index":1806,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["teams/teams.component",{"_index":1008,"title":{},"body":{"modules/ContactlistModule.html":{}}}],["teamscanplay",{"_index":1532,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["teamscomponent",{"_index":515,"title":{"components/TeamsComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"modules/ContactlistModule.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["teamselect",{"_index":1127,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["teamservice",{"_index":32,"title":{"injectables/TeamService.html":{}},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/ManageteamsComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"coverage.html":{}}}],["template",{"_index":316,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"todo.html":{}}}],["templateref",{"_index":1700,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["templateurl",{"_index":63,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["terminiert",{"_index":1588,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["testing",{"_index":2620,"title":{},"body":{"todo.html":{}}}],["text",{"_index":196,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["text/javascript",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["textual",{"_index":183,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["thing",{"_index":1705,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this._currentseason",{"_index":2201,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this._subscriptionclient",{"_index":1476,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":2088,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.addpenaltygql.mutate",{"_index":1151,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.allseasonslistgql.document",{"_index":2203,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.allseasonslistgql.watch().valuechanges.pipe",{"_index":2229,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.allteamsgql.document",{"_index":2338,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.allteamsgql.watch().valuechanges.pipe",{"_index":2329,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.alltournamentqgl.watch().valuechanges.pipe",{"_index":2408,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.alltournamentsgql.document",{"_index":1782,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsgql.watch().valuechanges.pipe",{"_index":1779,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.alltournamentsqgl.document",{"_index":131,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.allusers",{"_index":2459,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.document",{"_index":2468,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.allusersgql.watch().valuechanges.pipe",{"_index":2460,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.apollo.create",{"_index":1450,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettings",{"_index":806,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.appsettingsservice.appsettings.googlemapsapikey",{"_index":652,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsettingsservice.appsettings.graphqlurl",{"_index":1400,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.appsettingsservice.appsettings.graphqlwsurl",{"_index":643,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{}}}],["this.authenticationservice.loginasync(this.loginform.value",{"_index":1643,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.sendpasswordmail(email",{"_index":1648,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.accesstoken",{"_index":645,"title":{},"body":{"components/AppComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.loginform.value.password",{"_index":2092,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.authservice.changepassword(this.newpassword.value",{"_index":947,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.authservice.isadmin",{"_index":539,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.authservice.isteamadmin",{"_index":2367,"title":{},"body":{"guards/TeamadminGuard.html":{}}}],["this.authservice.loaduser",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.logout",{"_index":950,"title":{},"body":{"components/ChangepasswordComponent.html":{},"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["this.authservice.sendpasswordmail(this.email.value.tolowercase",{"_index":1233,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.authservice.user",{"_index":2354,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.cancelbtnlabel",{"_index":1081,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.cancelmatchgql.mutate",{"_index":917,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.changelang(this.storedlang",{"_index":1525,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.changepasswordqgl.mutate",{"_index":896,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.connected",{"_index":1481,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.contactchanged.emit",{"_index":1108,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.createform",{"_index":1640,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.createpitchgql.mutate",{"_index":2144,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.createroundgql.mutate",{"_index":116,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.createseasongql.mutate",{"_index":2202,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.createteamql.mutate",{"_index":2337,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.createtournament.mutate",{"_index":1781,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.createusergql.mutate",{"_index":1221,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.currentseason.subscribe",{"_index":2200,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.data.penalty",{"_index":1143,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.id",{"_index":1152,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.points",{"_index":1147,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.reason",{"_index":1149,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.penalty.team.id",{"_index":1145,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.round",{"_index":122,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.data.season.id",{"_index":1153,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.data.tournamentid",{"_index":118,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.defaultduration",{"_index":2125,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.deletepitchgql.mutate",{"_index":2142,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.deleteteamgql.mutate",{"_index":2341,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.deletetournamentgql.mutate",{"_index":1821,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.deleteusergql.mutate",{"_index":2466,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(cancelmatchdialogcomponent",{"_index":1890,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(changepasswordcomponent",{"_index":649,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1673,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.dialog.open(contactcomponent",{"_index":1887,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(createpitchdialogcomponent",{"_index":1283,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editmatchpitchcomponent",{"_index":1885,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchresultcomponent",{"_index":1878,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editmatchtimecomponent",{"_index":1886,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.dialog.open(editpitchcontactdialogcomponent",{"_index":1709,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.dialog.open(editrankingpenaltycomponent",{"_index":1672,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.dialog.open(edittournamentroundcomponent",{"_index":1810,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.dialog.open(edituserdialogcomponent",{"_index":2464,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.dialog.open(logincomponent",{"_index":648,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dialog.open(renameteamcomponent",{"_index":1734,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.dialogref.close",{"_index":921,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/RenameTeamComponent.html":{}}}],["this.dialogref.close(true",{"_index":137,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.email",{"_index":1211,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.setvalue(this.user.email",{"_index":1215,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.email.value.tolowercase",{"_index":1222,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.emailformcontrol.valid",{"_index":1109,"title":{},"body":{"components/EditContactComponent.html":{}}}],["this.emitchanges",{"_index":1880,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.error",{"_index":1642,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.eventsgql.fetch(null",{"_index":1489,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.filteredpitches",{"_index":1269,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.filterstates.some(x",{"_index":2232,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.firstname",{"_index":1212,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.setvalue(this.user.first_name",{"_index":1216,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.firstname.value",{"_index":1224,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.formbuilder.group",{"_index":1036,"title":{},"body":{"components/CreatePitchDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.getranking",{"_index":2277,"title":{},"body":{"components/TableComponent.html":{}}}],["this.graphqlservice.createapollolink",{"_index":642,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.connect",{"_index":644,"title":{},"body":{"components/AppComponent.html":{}}}],["this.graphqlsubscriptionservice.subscriptionclient",{"_index":1430,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.guest.value",{"_index":108,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.guest_score",{"_index":1305,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.handlegetmatches",{"_index":2011,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.hideplayed",{"_index":2010,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.home.value",{"_index":106,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.home_score",{"_index":1303,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.httpclient.get('./appsettings.json",{"_index":813,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.httplink.create",{"_index":1398,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.i18service.changelang(lang",{"_index":662,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isteamadmin",{"_index":893,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.isvalidresult(match.guest_score",{"_index":1962,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.isvalidresult(match.home_score",{"_index":1961,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.lastname",{"_index":1213,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.setvalue(this.user.last_name",{"_index":1217,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.lastname.value",{"_index":1225,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.latestevents",{"_index":1348,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.latesteventsgql.watch().valuechanges.pipe",{"_index":1349,"title":{},"body":{"components/EventsComponent.html":{}}}],["this.loadalltournaments",{"_index":1775,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadappsettings",{"_index":807,"title":{},"body":{"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{}}}],["this.loadgooglemapsscript",{"_index":647,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadmatches(this.tournament.id",{"_index":1814,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.loadpenalties",{"_index":1666,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.localstorageservice.remove(access_token_key",{"_index":887,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.localstorageservice.remove(selected_tournament_key",{"_index":2410,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.locatematchqgl.mutate",{"_index":1971,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.loginform",{"_index":1641,"title":{},"body":{"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.loginform.controls.password.disable",{"_index":1649,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.seterrors",{"_index":1647,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.setvalue",{"_index":1644,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.seterrors",{"_index":1645,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":884,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.manageseason.match_days.filter",{"_index":1560,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days.map(x",{"_index":1593,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.match_days[0].matches.length",{"_index":1547,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseason.teams.map(x",{"_index":1553,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.manageseasonid",{"_index":1669,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.managetournamentid",{"_index":1776,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentroundcount",{"_index":1787,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds",{"_index":1783,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.managetournamentrounds.pipe",{"_index":1797,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.match",{"_index":1879,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.guest_score",{"_index":1306,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["this.match.guest_team",{"_index":1889,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.home_score",{"_index":1304,"title":{},"body":{"components/EditmatchResultComponent.html":{},"components/MatchComponent.html":{}}}],["this.match.home_team",{"_index":1888,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.match.id",{"_index":918,"title":{},"body":{"components/CancelMatchDialogComponent.html":{},"components/MatchComponent.html":{}}}],["this.match.pitch",{"_index":1280,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"components/MatchComponent.html":{}}}],["this.matchesgql",{"_index":2021,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchkickoff",{"_index":1329,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchplangql.document",{"_index":919,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.matchplangql.fetch",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["this.matchplangql.fetch({id",{"_index":1497,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchplangql.watch",{"_index":2022,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.matchqgl.fetch",{"_index":1495,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.matchservice.isvalidresult(this.guest_score",{"_index":1308,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.isvalidresult(this.home_score",{"_index":1307,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.locatematch(match.id",{"_index":1598,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.locatematch(this.match.id",{"_index":1281,"title":{},"body":{"components/EditmatchPitchComponent.html":{}}}],["this.matchservice.schedulematch(match.id",{"_index":1599,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.matchservice.schedulematch(this.match.id",{"_index":1330,"title":{},"body":{"components/EditmatchTimeComponent.html":{}}}],["this.matchservice.seasonmatchupdated.next",{"_index":1883,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.seasonmatchupdated.subscribe",{"_index":2012,"title":{},"body":{"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.matchservice.submitmatchresult(this.match.id",{"_index":1309,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.next",{"_index":1882,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.matchservice.tournamentmatchupdated.subscribe",{"_index":2412,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated(event.matchid",{"_index":2414,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.matchupdated.emit(this.match.id",{"_index":1881,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.newmatchpitch.value",{"_index":1276,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newmatchpitch.valuechanges.pipe",{"_index":1270,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.newpassword",{"_index":943,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.newpitch",{"_index":1048,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_latitude",{"_index":1043,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitch.location_longitude",{"_index":1045,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol",{"_index":1034,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors",{"_index":1055,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.seterrors(null",{"_index":1057,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.updatevalueandvalidity",{"_index":1058,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchformcontrol.value",{"_index":1049,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newpitchplaceformgroup",{"_index":1035,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.newroundplandatefrom",{"_index":99,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.newroundplandateto",{"_index":101,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('cancel_match_error",{"_index":922,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_pitch_error",{"_index":1051,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_team_error",{"_index":1730,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_tournament__round_error",{"_index":140,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('create_user_error",{"_index":1228,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_pitch_error",{"_index":1708,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_team_error",{"_index":1733,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_tournament_error",{"_index":1823,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('delete_user_error",{"_index":2470,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('edit_result_error",{"_index":1311,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('enter_valid_result",{"_index":1312,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('password_changed_error",{"_index":952,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('penalty_error",{"_index":1157,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('remove_penalty_error",{"_index":1679,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('rename_team_error",{"_index":2173,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('send_new_password_mail_error",{"_index":1235,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('team_contact_save_error",{"_index":2358,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showerrornotification(this.translateservice.instant('update_user_error",{"_index":1232,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showerrornotification(this.translationservice.instant('unknown_network_error",{"_index":1421,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('cancel_match_success",{"_index":920,"title":{},"body":{"components/CancelMatchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_pitch_success",{"_index":1050,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_team_success",{"_index":1729,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_tournament_round_success",{"_index":136,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('create_user_success",{"_index":1227,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_pitch_sucess",{"_index":1707,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_team_success",{"_index":1732,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_tournament_success",{"_index":1822,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('delete_user_success",{"_index":2469,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('edit_result_success",{"_index":1310,"title":{},"body":{"components/EditmatchResultComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('password_changed_success",{"_index":951,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/NewpasswordComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('penalty_saved",{"_index":1156,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_error",{"_index":1118,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('pitch_contact_save_success",{"_index":1117,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('remove_penalty_success",{"_index":1678,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('rename_team_success",{"_index":2172,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('send_new_password_mail_success",{"_index":1234,"title":{},"body":{"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('team_contact_save_success",{"_index":2357,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.notify.showsuccessnotification(this.translateservice.instant('update_user_success",{"_index":1231,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.oldpassword",{"_index":946,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpassword.value",{"_index":948,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.oldpasswordwrong",{"_index":949,"title":{},"body":{"components/ChangepasswordComponent.html":{}}}],["this.ontournamentselected",{"_index":1777,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.openeditdialog(round",{"_index":1807,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.password",{"_index":1214,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.password.value",{"_index":1223,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.penalties",{"_index":1667,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.penaltypoints",{"_index":1146,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.penaltyreason",{"_index":1148,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.pitch.id",{"_index":1116,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.pitchesgql.document",{"_index":2143,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchesgql.watch().valuechanges.pipe",{"_index":2137,"title":{},"body":{"injectables/PitchService.html":{}}}],["this.pitchservice.allpitches.subscribe",{"_index":1052,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.createnewpitch",{"_index":1047,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.pitchservice.deletepitch(pitch.id",{"_index":1706,"title":{},"body":{"components/ManagepitchesComponent.html":{}}}],["this.places",{"_index":1038,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.addlistener('place_changed",{"_index":1040,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.places.getplace",{"_index":1042,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["this.possiblekickoffs",{"_index":1556,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.filter(x",{"_index":1557,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.length",{"_index":1551,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.possiblekickoffs.push(newelement",{"_index":1554,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.ranking.fetch",{"_index":664,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ranking.watch",{"_index":2278,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankinggql.document",{"_index":1155,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.rankinggql.watch",{"_index":2013,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.rankingqgl",{"_index":2279,"title":{},"body":{"components/TableComponent.html":{}}}],["this.rankingqgl.fetch({id",{"_index":1499,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.redis.subscribe().subscribe",{"_index":1486,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.removepenaltiesgql.mutate",{"_index":1676,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.renameteamgql.mutate",{"_index":2339,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.resetpasswordqgl.mutate",{"_index":901,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.rounds",{"_index":1793,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.rounds.push(array.from(new",{"_index":1795,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.roundteams",{"_index":97,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.length",{"_index":147,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.map((t",{"_index":124,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.push",{"_index":105,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.roundteams.splice(index",{"_index":110,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.router.navigatebyurl",{"_index":888,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.schedulematchgql.mutate",{"_index":1970,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.season",{"_index":2227,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonid",{"_index":1884,"title":{},"body":{"components/MatchComponent.html":{}}}],["this.seasonlist",{"_index":2228,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.seasonpenaltiesgql.document",{"_index":1154,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagePenaltyComponent.html":{}}}],["this.seasonpenaltiesgql.watch",{"_index":1668,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.seasonservice.currentseason.getvalue",{"_index":663,"title":{},"body":{"components/AppComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.getvalue().id",{"_index":665,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{}}}],["this.seasonservice.currentseason.subscribe",{"_index":2226,"title":{},"body":{"components/SeasonchooserComponent.html":{}}}],["this.selectedmatchdayid",{"_index":2016,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["this.selectedteamid",{"_index":1144,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/MatchplanComponent.html":{}}}],["this.selectedtournament",{"_index":2409,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.selectedtournament.id",{"_index":2416,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.setbtnlabel",{"_index":1079,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.shownotification(title",{"_index":2123,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.shuffle(possiblekickoffs",{"_index":1565,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.snackbar.openfromcomponent(snackbarcomponent",{"_index":2124,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.startmatchday).foreach",{"_index":1562,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["this.startseasongql.mutate",{"_index":2204,"title":{},"body":{"injectables/SeasonService.html":{}}}],["this.storedlang",{"_index":1523,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.submitresultgql.mutate",{"_index":1963,"title":{},"body":{"injectables/MatchService.html":{}}}],["this.subscriptionclient.onconnected",{"_index":1479,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onconnecting",{"_index":1482,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onerror",{"_index":1483,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnected",{"_index":1484,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.subscriptionclient.onreconnecting",{"_index":1485,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["this.teamselect.setdisabledstate(true",{"_index":1150,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["this.teamservice.addnewteam(teamname",{"_index":1728,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.deleteteam(team",{"_index":1731,"title":{},"body":{"components/ManageteamsComponent.html":{}}}],["this.teamservice.renameteam(this.team.id",{"_index":2171,"title":{},"body":{"components/RenameTeamComponent.html":{}}}],["this.token",{"_index":2091,"title":{},"body":{"components/NewpasswordComponent.html":{}}}],["this.tournament",{"_index":2415,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentchanged",{"_index":2411,"title":{},"body":{"components/TournamentComponent.html":{}}}],["this.tournamentgql.fetch",{"_index":670,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tournamentid",{"_index":669,"title":{},"body":{"components/AppComponent.html":{},"components/MatchComponent.html":{}}}],["this.tournamentqgl.document",{"_index":132,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.tournamentqgl.watch",{"_index":1784,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments",{"_index":1778,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["this.tournaments.subscribe",{"_index":1815,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1520,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.getbrowserlang",{"_index":1524,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.instant('confirm_delete",{"_index":1704,"title":{},"body":{"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/UserListComponent.html":{}}}],["this.translateservice.instant('confirm_delete_penalty",{"_index":1674,"title":{},"body":{"components/ManagePenaltyComponent.html":{}}}],["this.translateservice.onlangchange.subscribe",{"_index":93,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchTimeComponent.html":{},"interfaces/RoundTeam.html":{}}}],["this.translateservice.settranslation('de",{"_index":1521,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.settranslation('en",{"_index":1522,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translateservice.use(lang",{"_index":1526,"title":{},"body":{"injectables/I18Service.html":{}}}],["this.translationservice.get('button.cancel').subscribe",{"_index":1080,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.translationservice.get('button.save').subscribe",{"_index":1077,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{}}}],["this.updatepitchcontactgql.mutate",{"_index":1115,"title":{},"body":{"components/EditPitchContactDialogComponent.html":{}}}],["this.updateteamcontact.mutate",{"_index":2355,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.updateusergql.mutate",{"_index":1229,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user",{"_index":873,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.id",{"_index":1230,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.user.role",{"_index":889,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.find(t",{"_index":894,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.user.teams.map(t",{"_index":1220,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userqgl.document",{"_index":2356,"title":{},"body":{"components/TeamadminComponent.html":{}}}],["this.userqgl.fetch",{"_index":875,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userqgl.fetch().subscribe",{"_index":885,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["this.userrole",{"_index":1218,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.usersgql.document",{"_index":1226,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["this.userteamlist",{"_index":1219,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["title",{"_index":1608,"title":{},"body":{"interfaces/ISnackBarData.html":{},"injectables/NotificationService.html":{},"components/SnackbarComponent.html":{}}}],["todo",{"_index":914,"title":{"todo.html":{}},"body":{"components/CancelMatchDialogComponent.html":{}}}],["token",{"_index":1406,"title":{},"body":{"injectables/GraphqlService.html":{},"components/NewpasswordComponent.html":{}}}],["topromise",{"_index":135,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"injectables/GraphqlSubscriptionService.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchService.html":{},"injectables/PitchService.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tournament",{"_index":7,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"modules/TournamentModule.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tournament'},{'name",{"_index":518,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["tournament($id",{"_index":421,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament(id",{"_index":422,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournament.component",{"_index":2439,"title":{},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{}}}],["tournament.component.html",{"_index":2385,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.component.less",{"_index":2384,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournament.fragment",{"_index":278,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["tournament.name",{"_index":1819,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournament_id",{"_index":117,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["tournamentchanged",{"_index":2387,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare",{"_index":2388,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcompare(t1",{"_index":2397,"title":{},"body":{"components/TournamentComponent.html":{}}}],["tournamentcomponent",{"_index":517,"title":{"components/TournamentComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tournamentfragment",{"_index":328,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tournamentgql",{"_index":49,"title":{"injectables/TournamentGQL.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["tournamentid",{"_index":15,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/AppComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/RoundTeam.html":{}}}],["tournamentmatchupdated",{"_index":1942,"title":{},"body":{"injectables/MatchService.html":{}}}],["tournamentmodule",{"_index":2433,"title":{"modules/TournamentModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules.html":{},"overview.html":{}}}],["tournamentqgl",{"_index":89,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"components/ManagetournamentComponent.html":{},"interfaces/RoundTeam.html":{},"components/TournamentComponent.html":{}}}],["tournamentroutingmodule",{"_index":2437,"title":{"modules/TournamentRoutingModule.html":{}},"body":{"modules/TournamentModule.html":{},"modules/TournamentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["tournaments",{"_index":1743,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/TournamentComponent.html":{}}}],["tournaments.find(x",{"_index":1816,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["translate",{"_index":678,"title":{},"body":{"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TableComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"interfaces/AddMatchData.html":{},"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"modules/SharedModule.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["translate:{matchday",{"_index":2033,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["translatemodule",{"_index":727,"title":{},"body":{"modules/AppCoreModule.html":{},"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":728,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["translatemodule.forroot",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/GraphqlService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/NewpasswordComponent.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["translationservice",{"_index":1075,"title":{},"body":{"injectables/CustomOwlDateTimeIntl.html":{},"injectables/GraphqlService.html":{}}}],["transport",{"_index":1391,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["tree",{"_index":431,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":775,"title":{},"body":{"modules/AppModule.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"interfaces/MatchEventPayload.html":{},"components/MatchSchedulingComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":114,"title":{},"body":{"interfaces/AddMatchData.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/NewpasswordComponent.html":{},"injectables/PitchService.html":{},"components/RenameTeamComponent.html":{},"interfaces/RoundTeam.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"components/UserListComponent.html":{}}}],["tslint:disable",{"_index":2057,"title":{},"body":{"modules/MaterialModule.html":{}}}],["tupel.guestteam.name",{"_index":1184,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["tupel.hometeam.name",{"_index":1183,"title":{},"body":{"components/EditTournamentRoundComponent.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"guards/AdminGuard.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"interfaces/AppsettingsModel.html":{},"injectables/AppsettingsService.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"interfaces/ConfirmDialogComponentData.html":{},"components/ContactComponent.html":{},"interfaces/ContactComponentData.html":{},"components/ContactPersonComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/CustomOwlDateTimeIntl.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ISnackBarData.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"guards/TeamadminGuard.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2621,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1272,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/TournamentComponent.html":{}}}],["types",{"_index":1619,"title":{},"body":{"interfaces/IntrospectionResultData.html":{},"interfaces/IntrospectionResultData-1.html":{},"injectables/RedisEventGQL.html":{},"miscellaneous/variables.html":{}}}],["types/googlemaps",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":2600,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1256,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["update",{"_index":1964,"title":{},"body":{"injectables/MatchService.html":{},"injectables/TeamService.html":{}}}],["updated_at",{"_index":302,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["updatepitchcontact",{"_index":220,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updatepitchcontactgql",{"_index":358,"title":{"injectables/UpdatePitchContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditPitchContactDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateteamcontact",{"_index":238,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateteamcontactgql",{"_index":383,"title":{"injectables/UpdateTeamContactGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["updateuser",{"_index":250,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{}}}],["updateusergql",{"_index":397,"title":{"injectables/UpdateUserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["uri",{"_index":1399,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["useclass",{"_index":730,"title":{},"body":{"modules/AppCoreModule.html":{}}}],["used",{"_index":189,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["useexisting",{"_index":872,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["usefactory",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":279,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"components/AdminComponent.html":{},"modules/AdminModule.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"components/EventsComponent.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"components/PitchesComponent.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"components/RenameTeamComponent.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"components/TableComponent.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.authenticateduser",{"_index":857,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{}}}],["user.email",{"_index":2465,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.first_name",{"_index":2472,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.fragment",{"_index":281,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["user.id",{"_index":2467,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.last_name",{"_index":2473,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":2474,"title":{},"body":{"components/UserListComponent.html":{}}}],["user_id",{"_index":251,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"components/UserListComponent.html":{}}}],["user_role",{"_index":2471,"title":{},"body":{"components/UserListComponent.html":{}}}],["userfragment",{"_index":329,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usergql",{"_index":423,"title":{"injectables/UserGQL.html":{}},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"coverage.html":{}}}],["userid",{"_index":1475,"title":{},"body":{"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{}}}],["userlistcomponent",{"_index":519,"title":{"components/UserListComponent.html":{}},"body":{"components/AdminComponent.html":{},"modules/AdminModule.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":869,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/UserListComponent.html":{}}}],["username_required",{"_index":1650,"title":{},"body":{"components/LoginComponent.html":{}}}],["userqgl",{"_index":835,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/LoginContext.html":{},"components/TeamadminComponent.html":{}}}],["userrole",{"_index":177,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditUserDialogComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"interfaces/LoginContext.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":890,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["userrole.teammanager",{"_index":892,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditUserDialogComponent.html":{},"interfaces/LoginContext.html":{}}}],["usersgql",{"_index":1196,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["userteamlist",{"_index":1192,"title":{},"body":{"components/EditUserDialogComponent.html":{}}}],["utf",{"_index":185,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{}}}],["utilities",{"_index":1395,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["uuid",{"_index":1210,"title":{},"body":{"components/EditUserDialogComponent.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":1141,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditUserDialogComponent.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{},"injectables/SeasonService.html":{},"injectables/TeamService.html":{}}}],["uuidv4",{"_index":1140,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/ManagetournamentComponent.html":{},"injectables/PitchService.html":{}}}],["val",{"_index":1595,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["validators",{"_index":942,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["validators.email",{"_index":1106,"title":{},"body":{"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.minlength(6",{"_index":945,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/EditUserDialogComponent.html":{}}}],["validators.required",{"_index":944,"title":{},"body":{"components/ChangepasswordComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/NewpasswordComponent.html":{}}}],["value",{"_index":158,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/AuthenticationService.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"components/CreatePitchDialogComponent.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditContactComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagetournamentComponent.html":{},"interfaces/MatchEventPayload.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"components/MatchSchedulingComponent.html":{},"injectables/MatchService.html":{},"components/MatchplanComponent.html":{},"injectables/NotificationService.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchService.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/SeasonService.html":{},"components/SeasonchooserComponent.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"injectables/TeamService.html":{},"components/TeamadminComponent.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.label",{"_index":1273,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["valuechanges.pipe",{"_index":1670,"title":{},"body":{"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{},"components/TableComponent.html":{},"components/TournamentComponent.html":{}}}],["var",{"_index":446,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/ManageusersComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"components/PitchesComponent.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TeamsComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["variable",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":133,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/AddMatchData.html":{},"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"components/CancelMatchDialogComponent.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"interfaces/IntrospectionResultData.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"components/ManagePenaltyComponent.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RedisEventGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"interfaces/RoundTeam.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["viertelfinale",{"_index":2424,"title":{},"body":{"components/TournamentComponent.html":{}}}],["viewchild",{"_index":30,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditmatchPitchComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('adressautocomplete",{"_index":1028,"title":{},"body":{"components/CreatePitchDialogComponent.html":{}}}],["viewchild('guest",{"_index":74,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('home",{"_index":72,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandatefrom",{"_index":70,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('plandateto",{"_index":68,"title":{},"body":{"interfaces/AddMatchData.html":{},"components/EditTournamentRoundComponent.html":{},"interfaces/RoundTeam.html":{}}}],["viewchild('teamselect",{"_index":1138,"title":{},"body":{"components/EditRankingPenaltyComponent.html":{},"interfaces/EditRankingPenaltyComponentData.html":{}}}],["void",{"_index":441,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CancelMatchDialogComponent.html":{},"components/ChangepasswordComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/ContactComponent.html":{},"components/ContactPersonComponent.html":{},"components/ContactlistComponent.html":{},"components/CreatePitchDialogComponent.html":{},"components/EditContactComponent.html":{},"components/EditPitchContactDialogComponent.html":{},"components/EditRankingPenaltyComponent.html":{},"components/EditTournamentRoundComponent.html":{},"components/EditUserDialogComponent.html":{},"components/EditmatchPitchComponent.html":{},"components/EditmatchResultComponent.html":{},"components/EditmatchTimeComponent.html":{},"components/EventsComponent.html":{},"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"injectables/I18Service.html":{},"components/LoginComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagepitchesComponent.html":{},"components/ManageteamsComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchComponent.html":{},"components/MatchSchedulingComponent.html":{},"components/MatchplanComponent.html":{},"components/NewpasswordComponent.html":{},"injectables/NotificationService.html":{},"components/RenameTeamComponent.html":{},"components/SeasonchooserComponent.html":{},"components/SnackbarComponent.html":{},"components/TableComponent.html":{},"components/TeamadminComponent.html":{},"components/TournamentComponent.html":{},"components/UserListComponent.html":{}}}],["warning",{"_index":2302,"title":{},"body":{"components/TableComponent.html":{}}}],["websocketlink",{"_index":1393,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websocketlink(this.graphqlsubscriptionservice.subscriptionclient",{"_index":1436,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["websockets",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["webstoragemodule",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["werden",{"_index":1589,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["width",{"_index":691,"title":{},"body":{"components/AppComponent.html":{},"components/EditmatchResultComponent.html":{}}}],["window.localstorage",{"_index":1448,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["winner?.name",{"_index":2431,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winner_of_round",{"_index":2430,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerofround",{"_index":2389,"title":{},"body":{"components/TournamentComponent.html":{}}}],["winnerofround(round",{"_index":2402,"title":{},"body":{"components/TournamentComponent.html":{}}}],["wins",{"_index":306,"title":{},"body":{"injectables/AddRankingPenaltyGQL.html":{},"injectables/AddTeamToSeasonGQL.html":{},"injectables/AllSeasonsListGQL.html":{},"injectables/AllTeamsGQL.html":{},"injectables/AllTournamentListGQL.html":{},"injectables/AllUsersGQL.html":{},"injectables/CancelMatchGQL.html":{},"injectables/CreateMatchesForSeasonGQL.html":{},"injectables/CreatePitchGQL.html":{},"injectables/CreateSeasonGQL.html":{},"injectables/CreateTeamGQL.html":{},"injectables/CreateTournamentGQL.html":{},"injectables/CreateTournamentRoundGQL.html":{},"injectables/CreateUserGQL.html":{},"interfaces/DatePeriod.html":{},"injectables/DeletePitchGQL.html":{},"injectables/DeleteTeamGQL.html":{},"injectables/DeleteTournamentGQL.html":{},"injectables/DeleteUserGQL.html":{},"injectables/EndSeasonGQL.html":{},"injectables/EventGQL.html":{},"injectables/LatestEventGQL.html":{},"injectables/LocateMatchGQL.html":{},"injectables/MatchGQL.html":{},"injectables/MatchPlanGQL.html":{},"injectables/PasswordChangeGQL.html":{},"injectables/PasswordResetGQL.html":{},"injectables/PitchesGQL.html":{},"injectables/RankingGQL.html":{},"injectables/RemoveRankingPenaltyGQL.html":{},"injectables/RemoveTeamFromSeasonGQL.html":{},"injectables/RenameTeamGQL.html":{},"injectables/RescheduleMatchDayGQL.html":{},"injectables/ScheduleMatchGQL.html":{},"injectables/SeasonPenaltiesGQL.html":{},"injectables/StartSeasonGQL.html":{},"injectables/SubmitResultGQL.html":{},"interfaces/TeamIdPair.html":{},"injectables/TournamentGQL.html":{},"injectables/UpdatePitchContactGQL.html":{},"injectables/UpdateTeamContactGQL.html":{},"injectables/UpdateUserGQL.html":{},"injectables/UserGQL.html":{},"miscellaneous/variables.html":{}}}],["ws",{"_index":1392,"title":{},"body":{"injectables/GraphqlService.html":{},"injectables/GraphqlSubscriptionService.html":{},"interfaces/MatchEventPayload.html":{},"dependencies.html":{}}}],["wsclient",{"_index":1435,"title":{},"body":{"injectables/GraphqlService.html":{}}}],["x",{"_index":1279,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{},"components/SeasonchooserComponent.html":{},"components/TournamentComponent.html":{}}}],["x.filter(y",{"_index":1277,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.guest_score",{"_index":2421,"title":{},"body":{"components/TournamentComponent.html":{}}}],["x.guest_team.id",{"_index":2019,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.home_score",{"_index":2420,"title":{},"body":{"components/TournamentComponent.html":{}}}],["x.home_team",{"_index":2422,"title":{},"body":{"components/TournamentComponent.html":{}}}],["x.home_team.id",{"_index":2020,"title":{},"body":{"components/MatchplanComponent.html":{}}}],["x.id",{"_index":1817,"title":{},"body":{"components/ManagetournamentComponent.html":{},"components/MatchplanComponent.html":{}}}],["x.index",{"_index":1558,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.matches).reduce((acc",{"_index":1594,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.number",{"_index":1561,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{}}}],["x.teamscanplay.find(y",{"_index":1567,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.guest_team",{"_index":1803,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.home_team",{"_index":1802,"title":{},"body":{"components/ManagetournamentComponent.html":{}}}],["y.label.tolowercase().includes(this.newmatchpitch.value.tolowercase",{"_index":1278,"title":{},"body":{"components/EditmatchPitchComponent.html":{},"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["y.team.id",{"_index":1568,"title":{},"body":{"interfaces/IPossibleKickoffs.html":{},"interfaces/ITeamCanPlayAtDate.html":{},"components/MatchSchedulingComponent.html":{}}}],["yes",{"_index":843,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/EditmatchPitchComponent.html":{},"components/ManagePenaltyComponent.html":{},"components/ManagetournamentComponent.html":{},"components/MatchSchedulingComponent.html":{},"injectables/NotificationService.html":{}}}],["zip",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":554,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/ContactlistModule.html":{},"modules/EventsModule.html":{},"modules/GraphQLModule.html":{},"modules/MatchplanModule.html":{},"modules/NewpasswordModule.html":{},"modules/SharedModule.html":{},"modules/TableModule.html":{},"modules/TeamadminModule.html":{},"modules/TournamentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddMatchData.html":{"url":"interfaces/AddMatchData.html","title":"interface - AddMatchData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddMatchData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dates\n                                \n                                \n                                        round\n                                \n                                \n                                        teams\n                                \n                                \n                                        tournamentId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dates\n                                    \n                                \n                                \n                                    \n                                        dates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        round\n                                    \n                                \n                                \n                                    \n                                        round:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:         RoundTeam[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoundTeam[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tournamentId\n                                    \n                                \n                                \n                                    \n                                        tournamentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddRankingPenaltyGQL.html":{"url":"injectables/AddRankingPenaltyGQL.html","title":"injectable - AddRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1147\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddTeamToSeasonGQL.html":{"url":"injectables/AddTeamToSeasonGQL.html","title":"injectable - AddTeamToSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddTeamToSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1265\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/admin/admin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/admin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanLoad, CanActivate {\n  constructor(\n    private authService: AuthenticationService\n  ) {\n\n  }\n\n  canActivate() {\n    return this.authService.isAdmin;\n  }\n\n  canLoad() {\n    return this.authService.isAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminComponent\n                        \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            ManagePenaltyComponent\n                        \n                        \n                            ManagepitchesComponent\n                        \n                        \n                            ManageseasonComponent\n                        \n                        \n                            ManageteamsComponent\n                        \n                        \n                            ManagetournamentComponent\n                        \n                        \n                            ManageusersComponent\n                        \n                        \n                            MatchSchedulingComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                        \n                            UserListComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditRankingPenaltyComponent\n                        \n                        \n                            EditTournamentRoundComponent\n                        \n                        \n                            EditUserDialogComponent\n                        \n                        \n                            RenameTeamComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminRoutingModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AdminComponent } from './admin.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { ManageseasonComponent } from './manageseason/manageseason.component';\nimport { ManageusersComponent } from './manageusers/manageusers.component';\nimport { ManagetournamentComponent } from './managetournament/managetournament.component';\nimport { MatchSchedulingComponent } from './manageseason/match-scheduling/match-scheduling.component';\nimport { UserListComponent } from './manageusers/user-list/user-list.component';\nimport { RenameTeamComponent } from './manageteams/rename-team/rename-team.component';\nimport { EventsModule } from './events';\nimport { ManageteamsComponent } from './manageteams/manageteams.component';\nimport { ManagepitchesComponent } from './managepitches/managepitches.component';\nimport { ManagePenaltyComponent } from './manageseason/manage-penalty/manage-penalty.component';\nimport { EditRankingPenaltyComponent } from './manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component';\nimport { EditUserDialogComponent } from './manageusers/edit-user-dialog/edit-user-dialog.component';\nimport { EditTournamentRoundComponent } from './managetournament/edit-tournament-round/edit-tournament-round.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AdminRoutingModule,\n    EventsModule\n  ],\n  declarations: [\n    AdminComponent,\n    ManageteamsComponent,\n    ManageseasonComponent,\n    ManageusersComponent,\n    ManagetournamentComponent,\n    EditTournamentRoundComponent,\n    MatchSchedulingComponent,\n    UserListComponent,\n    RenameTeamComponent,\n    ManagepitchesComponent,\n    ManagePenaltyComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ],\n  entryComponents: [\n    EditTournamentRoundComponent,\n    RenameTeamComponent,\n    EditRankingPenaltyComponent,\n    EditUserDialogComponent\n  ]\n})\nexport class AdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminRoutingModule.html":{"url":"modules/AdminRoutingModule.html","title":"module - AdminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/admin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { AdminGuard } from './admin.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AdminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllSeasonsListGQL.html":{"url":"injectables/AllSeasonsListGQL.html","title":"injectable - AllSeasonsListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllSeasonsListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1647\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTeamsGQL.html":{"url":"injectables/AllTeamsGQL.html","title":"injectable - AllTeamsGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTeamsGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1664\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllTournamentListGQL.html":{"url":"injectables/AllTournamentListGQL.html","title":"injectable - AllTournamentListGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllTournamentListGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1681\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AllUsersGQL.html":{"url":"injectables/AllUsersGQL.html","title":"injectable - AllUsersGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AllUsersGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1729\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadGoogleMapsScript\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onLangSelect\n                            \n                            \n                                openChangePasswordDialog\n                            \n                            \n                                openLoginDialog\n                            \n                            \n                                    Async\n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, i18Service: I18Service, snackBar: MatSnackBar, dialog: MatDialog, ranking: RankingGQL, matchPlanGQL: MatchPlanGQL, tournamentGQL: TournamentGQL, seasonService: SeasonService, graphqlService: GraphqlService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentGQL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlService\n                                                  \n                                                        \n                                                                        GraphqlService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadGoogleMapsScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadGoogleMapsScript()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLangSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonLangSelect(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openChangePasswordDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenChangePasswordDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openLoginDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\nimport { environment } from 'src/environments/environment';\nimport { I18Service } from './services/i18.service';\nimport { GraphqlSubscriptionService } from 'src/app/services/graphql-subscription.service';\nimport { RankingGQL, MatchPlanGQL, TournamentGQL } from 'src/api/graphql';\nimport { SeasonService } from 'src/app/services/season.service';\nimport { LocalStorage } from 'ngx-store';\nimport { SELECTED_TOURNAMENT_KEY } from './components/tournament/tournament.component';\nimport { AppsettingsService } from './services/appsettings.service';\nimport { Apollo } from 'apollo-angular';\nimport { GraphqlService } from './services/graphql.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) tournamentId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private dialog: MatDialog,\n    private ranking: RankingGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private tournamentGQL: TournamentGQL,\n    public seasonService: SeasonService,\n    private graphqlService: GraphqlService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService) {\n  }\n  async ngOnInit() {\n\n    this.graphqlService.createApolloLink();\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n      this.graphqlSubscriptionService.connect();\n    }\n\n    if (this.authService.accessToken) {\n      this.authService.loadUser();\n    }\n    this.loadGoogleMapsScript();\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginComponent);\n  }\n\n  openChangePasswordDialog() {\n    this.dialog.open(ChangepasswordComponent);\n  }\n\n  loadGoogleMapsScript() {\n    const googleMapsJS = document.getElementById('googelmapsscript');\n    if (!googleMapsJS && this.appsettingsService.appsettings.googleMapsApiKey) {\n      const tag = document.createElement('script');\n      tag.src = 'https://maps.googleapis.com/maps/api/js?key=' + this.appsettingsService.appsettings.googleMapsApiKey + '&libraries=places';\n      tag.type = 'text/javascript';\n      tag.id = 'googelmapsscript';\n      document.body.appendChild(tag);\n    }\n  }\n\n  onLangSelect(lang: string) {\n    this.i18Service.changeLang(lang);\n  }\n\n  async refresh() {\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.ranking.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.seasonService.currentSeason.getValue()) {\n      await this.matchPlanGQL.fetch({ id: this.seasonService.currentSeason.getValue().id }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n    if (this.tournamentId) {\n      await this.tournamentGQL.fetch({ id: this.tournamentId }, { fetchPolicy: 'network-only' }).toPromise();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n    \n      \n        MENU.TABLE\n      \n      \n        MENU.MATCHPLAN\n      \n      \n        MENU.TOURNAMENT\n      \n      \n        MENU.CONTACTS\n      \n      \n        MENU.TEAM_ADMIN\n      \n      \n        MENU.ADMIN\n      \n    \n    \n      \n        \n       -->\n      \n        {{ 'BUTTON.LOGIN' | translate }}\n      \n      \n        {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}\n        person\n      \n      \n        language\n      \n      \n        \n          refresh\n        \n      \n    \n  \n\n\n  \n\n\n  \n    \n      Deutsch\n      Englisch\n    \n  \n\n\n  \n    \n      \n    \n    \n    {{ 'BUTTON.CHANGE_PASSWORD' | translate }}\n  \n  {{ 'BUTTON.LOGOUT' | translate }}\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .led-box {\n    height: 25px;\n    width: 25%;\n    margin: 10px 0;\n    float: right;\n  }\n  .led-green {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #ABFF00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;\n  }\n  .led-red {\n    margin: 0 auto;\n    width: 15px;\n    height: 15px;\n    background-color: #F00;\n    border-radius: 50%;\n    box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    MENU.TABLE                    MENU.MATCHPLAN                    MENU.TOURNAMENT                    MENU.CONTACTS                    MENU.TEAM_ADMIN                    MENU.ADMIN                                   -->              {{ \\'BUTTON.LOGIN\\' | translate }}                    {{ authService.user.first_name[0] }}.{{ authService.user.last_name[0] }}        person                    language                              refresh                                  Deutsch      Englisch                              {{ \\'BUTTON.CHANGE_PASSWORD\\' | translate }}    {{ \\'BUTTON.LOGOUT\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppCoreModule.html":{"url":"modules/AppCoreModule.html","title":"module - AppCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppCoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-core.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { CustomOwlDateTimeIntl } from 'src/app/services/i18n/customowldatetimeintl';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    TranslateModule.forChild()\n  ],\n  providers: [\n    {\n      provide: OwlDateTimeIntl,\n      useClass: CustomOwlDateTimeIntl\n    }\n  ]\n})\nexport class AppCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ChangepasswordComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { I18Service } from './services/i18.service';\nimport { ChangepasswordComponent } from './components/changepassword/changepassword.component';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeDe from '@angular/common/locales/de';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material';\nimport { SnackbarComponent } from './components/shared/snackbar/snackbar.component';\nimport { GraphQLModule } from './graphql.module';\nimport { AuthenticationService } from './services/authentication.service';\nimport { WebStorageModule } from 'ngx-store';\nimport { AppsettingsService } from './services/appsettings.service';\n\nregisterLocaleData(localeDe);\n\nexport function i18ServiceFactory(provider: I18Service) {\n  return () => provider.init();\n}\n\nexport function loadAppsettingsFactory(provider: AppsettingsService) {\n  return () => provider.init();\n}\n\n\n@NgModule({\n  entryComponents: [\n    LoginComponent,\n    ChangepasswordComponent,\n    SnackbarComponent\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChangepasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    WebStorageModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthenticationService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: i18ServiceFactory,\n      deps: [I18Service], multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: loadAppsettingsFactory,\n      deps: [AppsettingsService], multi: true\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './components/admin/admin.guard';\nimport { TeamadminGuard } from './components/teamadmin/teamadmin.guard';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: '',\n    redirectTo: 'matchplan',\n    pathMatch: 'full'\n  },\n  {\n    path: 'table',\n    loadChildren: './components/table#TableModule'\n  },\n  {\n    path: 'matchplan',\n    loadChildren: './components/matchplan#MatchplanModule'\n  },\n  {\n    path: 'tournament',\n    loadChildren: './components/tournament#TournamentModule'\n  },\n  {\n    path: 'newpassword',\n    loadChildren: './components/newpassword#NewpasswordModule',\n  },\n  {\n    path: 'contacts',\n    loadChildren: './components/contactlist#ContactlistModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  },\n  {\n    path: 'admin',\n    loadChildren: './components/admin#AdminModule',\n    canLoad: [AdminGuard],\n    canActivate: [AdminGuard]\n  },\n  {\n    path: 'teamadmin',\n    loadChildren: './components/teamadmin#TeamadminModule',\n    canLoad: [TeamadminGuard],\n    canActivate: [TeamadminGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(APP_ROUTES)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppsettingsModel.html":{"url":"interfaces/AppsettingsModel.html","title":"interface - AppsettingsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppsettingsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        googleMapsApiKey\n                                \n                                \n                                        graphqlUrl\n                                \n                                \n                                        graphqlWsUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        googleMapsApiKey\n                                    \n                                \n                                \n                                    \n                                        googleMapsApiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphqlWsUrl\n                                    \n                                \n                                \n                                    \n                                        graphqlWsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppsettingsService.html":{"url":"injectables/AppsettingsService.html","title":"injectable - AppsettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppsettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/appsettings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appsettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                loadAppsettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettings\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/appsettings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appsettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AppsettingsModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/appsettings.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface AppsettingsModel {\n  googleMapsApiKey: string;\n  graphqlUrl: string;\n  graphqlWsUrl: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppsettingsService {\n\n  appsettings: AppsettingsModel;\n\n  constructor(private httpClient: HttpClient) { }\n\n  async init() {\n    try {\n      this.appsettings = await this.loadAppsettings();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadAppsettings(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.httpClient.get('./appsettings.json')\n          .toPromise()\n          .then(\n            (res) => {\n              resolve(res);\n            }\n          ).catch(\n            (error) => {\n              reject(error);\n            }\n          );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Public\n                                isTeamAdminForTeam\n                            \n                            \n                                    Async\n                                loadUser\n                            \n                            \n                                    Async\n                                loginAsync\n                            \n                            \n                                logout\n                            \n                            \n                                sendPasswordMail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isAuthenticated\n                                \n                                \n                                    isAdmin\n                                \n                                \n                                    isTeamAdmin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userQGL: UserGQL, changePasswordQGL: PasswordChangeGQL, resetPasswordQGL: PasswordResetGQL, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changePasswordQGL\n                                                  \n                                                        \n                                                                        PasswordChangeGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resetPasswordQGL\n                                                  \n                                                        \n                                                                        PasswordResetGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string, oldPassword?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTeamAdminForTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeamAdminForTeam(teamId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginAsync(context: LoginContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                LoginContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendPasswordMail\n                        \n                        \n                    \n                \n            \n            \n                \nsendPasswordMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/authentication.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(ACCESS_TOKEN_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User.AuthenticatedUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isAuthenticated\n                    \n                \n\n                \n                    \n                        getisAuthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isAdmin\n                    \n                \n\n                \n                    \n                        getisAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTeamAdmin\n                    \n                \n\n                \n                    \n                        getisTeamAdmin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/authentication.service.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers:\n              new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)}`)\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject(err);\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelMatchDialogComponent.html":{"url":"components/CancelMatchDialogComponent.html","title":"component - CancelMatchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelMatchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cancel-match-dialog\n            \n\n            \n                styleUrls\n                ./cancel-match-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cancel-match-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                match\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancelMatch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dialogRef: MatDialogRef, cancelMatchGQL: CancelMatchGQL, translateService: TranslateService, notify: NotificationService, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cancelMatchGQL\n                                                  \n                                                        \n                                                                        CancelMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            cancelMatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelMatch(reason: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { Match, CancelMatchGQL, MatchPlanGQL } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { SeasonService } from 'src/app/services/season.service';\n\n@Component({\n  selector: 'app-cancel-match-dialog',\n  templateUrl: './cancel-match-dialog.component.html',\n  styleUrls: ['./cancel-match-dialog.component.css']\n})\nexport class CancelMatchDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    public dialogRef: MatDialogRef,\n    private cancelMatchGQL: CancelMatchGQL,\n    private translateService: TranslateService,\n    private notify: NotificationService,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async cancelMatch(reason: string) {\n    // TODO: move to MatchServc\n    try {\n      await this.cancelMatchGQL.mutate({\n        match_id: this.match.id,\n        reason: reason\n      }, {\n          refetchQueries: [\n            {\n              query: this.matchPlanGQL.document,\n              variables: { id: this.seasonService.currentSeason.getValue().id}\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CANCEL_MATCH_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CANCEL_MATCH_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'CANCEL_MATCH' | translate }}\n    \n    \n      {{ match.home_team.name}} - {{ match.guest_team.name}}\n    \n  \n\n\n  \n    \n    {{reason.value.length}} / 255\n  \n\n\n  {{ 'BUTTON.CANCEL' | translate }} \n  {{ 'BUTTON.CANCEL_MATCH' | translate }} \n\n    \n\n    \n                \n                    ./cancel-match-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'CANCEL_MATCH\\' | translate }}              {{ match.home_team.name}} - {{ match.guest_team.name}}                {{reason.value.length}} / 255    {{ \\'BUTTON.CANCEL\\' | translate }}   {{ \\'BUTTON.CANCEL_MATCH\\' | translate }} '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelMatchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CancelMatchGQL.html":{"url":"injectables/CancelMatchGQL.html","title":"injectable - CancelMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CancelMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1108\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangepasswordComponent.html":{"url":"components/ChangepasswordComponent.html","title":"component - ChangepasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChangepasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/changepassword/changepassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-changepassword\n            \n\n            \n                styleUrls\n                ./changepassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./changepassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newPassword\n                            \n                            \n                                oldPassword\n                            \n                            \n                                oldPasswordWrong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, notify: NotificationService, translateService: TranslateService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/changepassword/changepassword.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changePassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/changepassword/changepassword.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oldPasswordWrong\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/changepassword/changepassword.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html',\n  styleUrls: ['./changepassword.component.css']\n})\nexport class ChangepasswordComponent implements OnInit {\n\n  newPassword: FormControl;\n  oldPassword: FormControl;\n  oldPasswordWrong: boolean;\n\n  constructor(\n      private authService: AuthenticationService,\n      private notify: NotificationService,\n      private translateService: TranslateService,\n      public dialogRef: MatDialogRef) { }\n\n  ngOnInit() {\n      this.newPassword = new FormControl('', [\n          Validators.required,\n          Validators.minLength(6)\n      ]);\n      this.oldPassword = new FormControl('', [\n          Validators.required\n      ]);\n  }\n\n  async changePassword() {\n      try {\n        await this.authService.changePassword(this.newPassword.value, this.oldPassword.value);\n        this.oldPasswordWrong = false;\n        this.authService.logout();\n        this.notify.showSuccessNotification(this.translateService.instant('PASSWORD_CHANGED_SUCCESS'));\n        this.dialogRef.close();\n      } catch (error) {\n          this.notify.showErrorNotification(this.translateService.instant('PASSWORD_CHANGED_ERROR'), error);\n          this.oldPasswordWrong = true;\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'ERRORS.USERNAME_PASSWORD_WRONG' | translate }}\n        \n    \n    \n        \n            \n                \n                {{ 'ERRORS.ENTER_VALID_PASSWORD' | translate}}\n                \n                    remove_red_eye\n                \n            \n        \n    \n    \n        \n            {{ 'BUTTON.OK'\n                | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./changepassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'ERRORS.USERNAME_PASSWORD_WRONG\\' | translate }}                                                                    {{ \\'ERRORS.ENTER_VALID_PASSWORD\\' | translate}}                                    remove_red_eye                                                                {{ \\'BUTTON.OK\\'                | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangepasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n            \n                styleUrls\n                ./confirm-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ConfirmDialogComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ConfirmDialogComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfirmDialogComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/confirm-dialog/confirm-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ 'CONFIRM_TILTE' | translate }}\n\n\n  {{ data.message }}\n\n\n  \n    {{ 'BUTTON.NO' | translate }}\n  \n  \n      {{ 'BUTTON.YES' | translate }}\n  \n\n    \n\n    \n                \n                    ./confirm-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'CONFIRM_TILTE\\' | translate }}  {{ data.message }}      {{ \\'BUTTON.NO\\' | translate }}          {{ \\'BUTTON.YES\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmDialogComponentData.html":{"url":"interfaces/ConfirmDialogComponentData.html","title":"interface - ConfirmDialogComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmDialogComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface ConfirmDialogComponentData {\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComponentData,\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact/contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ContactComponentData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact/contact.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ContactComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact/contact.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContactComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/contact/contact.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         {{ 'CONTACT' | translate }}\n\n  \n    \n      {{ team.name }}\n    \n    \n      \n    \n  \n  \n    \n      {{ data.pitch.label }}\n    \n    \n      \n    \n  \n\n\n  {{ 'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'CONTACT\\' | translate }}            {{ team.name }}                                {{ data.pitch.label }}                      {{ \\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactComponentData.html":{"url":"interfaces/ContactComponentData.html","title":"interface - ContactComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/contact/contact.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        pitch\n                                \n                                \n                                        teams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teams\n                                    \n                                \n                                \n                                    \n                                        teams:     Team.Fragment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, Pitch } from 'src/api/graphql';\n\ninterface ContactComponentData {\n  teams: Team.Fragment[];\n  pitch: Pitch.Fragment;\n}\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ContactComponentData) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPersonComponent.html":{"url":"components/ContactPersonComponent.html","title":"component - ContactPersonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPersonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/contact-person/contact-person.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-person\n            \n\n            \n                styleUrls\n                ./contact-person.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact-person.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/contact-person/contact-person.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Contact } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-contact-person',\n  templateUrl: './contact-person.component.html',\n  styleUrls: ['./contact-person.component.css']\n})\nexport class ContactPersonComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        person\n      \n    \n    \n      {{contact.first_name}} {{contact.last_name}}\n    \n  \n  \n    \n      \n        contact_phone\n      \n    \n    \n      {{contact.phone}}\n    \n  \n  \n    \n      \n        contact_mail\n      \n    \n    \n      {{contact.email}}\n    \n  \n\n\n  {{ 'NO_CONTACT_SET' | translate}}\n\n    \n\n    \n                \n                    ./contact-person.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person                    {{contact.first_name}} {{contact.last_name}}                          contact_phone                    {{contact.phone}}                          contact_mail                    {{contact.email}}        {{ \\'NO_CONTACT_SET\\' | translate}}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPersonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactlistComponent.html":{"url":"components/ContactlistComponent.html","title":"component - ContactlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/contactlist.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contactlist\n            \n\n            \n                styleUrls\n                ./contactlist.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contactlist.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/contactlist.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/contactlist.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contactlist',\n  templateUrl: './contactlist.component.html',\n  styleUrls: ['./contactlist.component.css']\n})\nexport class ContactlistComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./contactlist.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistModule.html":{"url":"modules/ContactlistModule.html","title":"module - ContactlistModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactlistComponent\n                        \n                        \n                            PitchesComponent\n                        \n                        \n                            TeamsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactlistRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ContactlistComponent } from './contactlist.component';\nimport { PitchesComponent } from './pitches';\nimport { ContactlistRoutingModule } from './contactlist-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamsComponent } from './teams/teams.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    ContactlistRoutingModule\n  ],\n  declarations: [\n    ContactlistComponent,\n    PitchesComponent,\n    TeamsComponent\n  ]\n})\nexport class ContactlistModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactlistRoutingModule.html":{"url":"modules/ContactlistRoutingModule.html","title":"module - ContactlistRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactlistRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/contactlist/contactlist-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactlistComponent } from './contactlist.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactlistComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class ContactlistRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateMatchesForSeasonGQL.html":{"url":"injectables/CreateMatchesForSeasonGQL.html","title":"injectable - CreateMatchesForSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateMatchesForSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1291\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreatePitchDialogComponent.html":{"url":"components/CreatePitchDialogComponent.html","title":"component - CreatePitchDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreatePitchDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-pitch-dialog\n            \n\n            \n                styleUrls\n                ./create-pitch-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-pitch-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adressAutoComplete\n                            \n                            \n                                newPitch\n                            \n                            \n                                newPitchFormControl\n                            \n                            \n                                newPitchLabelExist\n                            \n                            \n                                newPitchPlaceFormGroup\n                            \n                            \n                                places\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNewPitchName\n                            \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, dialogRef: MatDialogRef, pitchService: PitchService, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkNewPitchName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckNewPitchName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            adressAutoComplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('adressAutoComplete')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchLabelExist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPitchPlaceFormGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            places\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     google.maps.places.Autocomplete\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Pitch } from 'src/api/graphql';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-create-pitch-dialog',\n  templateUrl: './create-pitch-dialog.component.html',\n  styleUrls: ['./create-pitch-dialog.component.css']\n})\nexport class CreatePitchDialogComponent implements OnInit {\n\n  newPitchFormControl: FormControl;\n  newPitch = {};\n  newPitchPlaceFormGroup: any;\n  newPitchLabelExist: boolean;\n\n  places: google.maps.places.Autocomplete;\n  @ViewChild('adressAutoComplete') adressAutoComplete: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef,\n    private pitchService: PitchService,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n    this.newPitchFormControl = new FormControl('', Validators.required);\n    this.newPitchPlaceFormGroup = this.formBuilder.group({\n      newpitchplace: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    this.places = new google.maps.places.Autocomplete(this.adressAutoComplete.nativeElement);\n    this.places.addListener('place_changed', () => {\n      const place = this.places.getPlace();\n      this.newPitch.location_latitude = place.geometry.location.lat();\n      this.newPitch.location_longitude = place.geometry.location.lng();\n    });\n  }\n  \n  async createNewPitch() {\n    try {\n      await this.pitchService.createNewPitch({\n        ...this.newPitch,\n        label: this.newPitchFormControl.value\n      });\n      this.dialogRef.close();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_PITCH_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_PITCH_ERROR'), error);\n    }\n  }\n  checkNewPitchName() {\n    this.pitchService.allPitches.subscribe(\n      (pitches) => {\n        const pitch = pitches.find(p => p.label === this.newPitchFormControl.value);\n        if (pitch) {\n          this.newPitchFormControl.setErrors({ pitchexist: true });\n        } else {\n          this.newPitchFormControl.setErrors(null);\n          this.newPitchFormControl.updateValueAndValidity();\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ 'NEW_PITCH_LABEL' | translate }}\n    \n      \n      \n        ERRORS.PITCH_EXIST\n      \n      PITCH_REQUIRED\n      \n    \n    \n      \n    \n    \n      \n        {{'BUTTON.NEXT' | translate}}\n      \n    \n  \n  \n    \n      {{ 'NEW_PITCH_ADRESS' | translate}}\n      \n        \n      \n      \n        \n          {{'BUTTON.BACK' | translate}}\n        \n        \n          {{'BUTTON.CREATE_PITCH' | translate}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./create-pitch-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'NEW_PITCH_LABEL\\' | translate }}                        ERRORS.PITCH_EXIST            PITCH_REQUIRED                                          {{\\'BUTTON.NEXT\\' | translate}}                        {{ \\'NEW_PITCH_ADRESS\\' | translate}}                                            {{\\'BUTTON.BACK\\' | translate}}                          {{\\'BUTTON.CREATE_PITCH\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreatePitchDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreatePitchGQL.html":{"url":"injectables/CreatePitchGQL.html","title":"injectable - CreatePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreatePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1229\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateSeasonGQL.html":{"url":"injectables/CreateSeasonGQL.html","title":"injectable - CreateSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1252\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTeamGQL.html":{"url":"injectables/CreateTeamGQL.html","title":"injectable - CreateTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1349\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentGQL.html":{"url":"injectables/CreateTournamentGQL.html","title":"injectable - CreateTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1413\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateTournamentRoundGQL.html":{"url":"injectables/CreateTournamentRoundGQL.html","title":"injectable - CreateTournamentRoundGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateTournamentRoundGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1426\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserGQL.html":{"url":"injectables/CreateUserGQL.html","title":"injectable - CreateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1462\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomOwlDateTimeIntl.html":{"url":"injectables/CustomOwlDateTimeIntl.html","title":"injectable - CustomOwlDateTimeIntl","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomOwlDateTimeIntl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n/customowldatetimeintl.ts\n        \n\n\n            \n                Extends\n            \n            \n                    OwlDateTimeIntl\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n/customowldatetimeintl.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { OwlDateTimeIntl } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class CustomOwlDateTimeIntl extends OwlDateTimeIntl {\n  constructor(private translationService: TranslateService) {\n    super();\n    this.translationService.get('BUTTON.SAVE').subscribe(\n      (save) => {\n        this.setBtnLabel = save;\n      }\n    );\n    this.translationService.get('BUTTON.CANCEL').subscribe(\n      (cancel) => {\n        this.cancelBtnLabel = cancel;\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePeriod.html":{"url":"interfaces/DatePeriod.html","title":"interface - DatePeriod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatePeriod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeletePitchGQL.html":{"url":"injectables/DeletePitchGQL.html","title":"injectable - DeletePitchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeletePitchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1191\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTeamGQL.html":{"url":"injectables/DeleteTeamGQL.html","title":"injectable - DeleteTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1400\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteTournamentGQL.html":{"url":"injectables/DeleteTournamentGQL.html","title":"injectable - DeleteTournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteTournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1449\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteUserGQL.html":{"url":"injectables/DeleteUserGQL.html","title":"injectable - DeleteUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1518\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditContactComponent.html":{"url":"components/EditContactComponent.html","title":"component - EditContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-contact/edit-contact.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-contact\n            \n\n            \n                styleUrls\n                ./edit-contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitContactChanged\n                            \n                            \n                                isEmailValidOrEmpty\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                contactChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contact\n                    \n                \n                \n                    \n                        Type :     Contact.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        contactChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitContactChanged\n                        \n                        \n                    \n                \n            \n            \n                \nemitContactChanged(firstName: string, lastName: string, email: string, phone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEmailValidOrEmpty\n                        \n                        \n                    \n                \n            \n            \n                \nisEmailValidOrEmpty(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl('', [Validators.email, Validators.required])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-contact/edit-contact.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { UserGQL, UpdateTeamContactGQL, Contact } from 'src/api/graphql';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n\n  @Input() contact: Contact.Fragment;\n\n  @Output() contactChanged = new EventEmitter();\n\n  emailFormControl: FormControl = new FormControl('', [Validators.email, Validators.required]);\n\n  constructor(\n\n  ) { }\n\n  ngOnInit() {\n  }\n\n  emitContactChanged(firstName: string, lastName: string, email: string, phone: string) {\n    this.contactChanged.emit({\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      phone: phone\n    });\n  }\n\n  isEmailValidOrEmpty(mail: string) {\n    return mail ? this.emailFormControl.valid : true;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        {{ 'BUTTON.SAVE' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-contact.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                    {{ \\'BUTTON.SAVE\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditPitchContactDialogComponent.html":{"url":"components/EditPitchContactDialogComponent.html","title":"component - EditPitchContactDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditPitchContactDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-pitch-contact-dialog\n            \n\n            \n                styleUrls\n                ./edit-pitch-contact-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-pitch-contact-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                contactChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitch: Pitch.Fragment, notify: NotificationService, dialogRef: MatDialogRef, translateService: TranslateService, updatePitchContactGQL: UpdatePitchContactGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitch\n                                                  \n                                                        \n                                                                    Pitch.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updatePitchContactGQL\n                                                  \n                                                        \n                                                                        UpdatePitchContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            contactChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    contactChanged(contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Pitch.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { Pitch, Contact, UpdatePitchContactGQL } from 'src/api/graphql';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-edit-pitch-contact-dialog',\n  templateUrl: './edit-pitch-contact-dialog.component.html',\n  styleUrls: ['./edit-pitch-contact-dialog.component.css']\n})\nexport class EditPitchContactDialogComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public pitch: Pitch.Fragment,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private updatePitchContactGQL: UpdatePitchContactGQL\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async contactChanged(contact: Contact.Fragment) {\n    try {\n      await this.updatePitchContactGQL.mutate(\n        {\n          pitch_id: this.pitch.id,\n          ...contact\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showSuccessNotification(this.translateService.instant('PITCH_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        {{pitch.label}}\n\n  \n\n    \n\n    \n                \n                    ./edit-pitch-contact-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{pitch.label}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditPitchContactDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditRankingPenaltyComponent.html":{"url":"components/EditRankingPenaltyComponent.html","title":"component - EditRankingPenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditRankingPenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-ranking-penalty\n            \n\n            \n                styleUrls\n                ./edit-ranking-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-ranking-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                penaltyPoints\n                            \n                            \n                                penaltyReason\n                            \n                            \n                                selectedTeamId\n                            \n                            \n                                teamSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                savePenalty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: EditRankingPenaltyComponentData, addPenaltyGQL: AddRankingPenaltyGQL, dialogRef: MatDialogRef, notify: NotificationService, seasonPenaltiesGQL: SeasonPenaltiesGQL, translateService: TranslateService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        EditRankingPenaltyComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addPenaltyGQL\n                                                  \n                                                        \n                                                                        AddRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            savePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePenalty()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditRankingPenaltyComponentData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penaltyReason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teamSelect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSelect\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('teamSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ team.name }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n  {{ 'BUTTON.SAVE' | translate }}\n\n    \n\n    \n                \n                    ./edit-ranking-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ team.name }}                                                                                                {{ \\'BUTTON.SAVE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditRankingPenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditRankingPenaltyComponentData.html":{"url":"interfaces/EditRankingPenaltyComponentData.html","title":"interface - EditRankingPenaltyComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditRankingPenaltyComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        penalty\n                                \n                                \n                                        season\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        penalty\n                                    \n                                \n                                \n                                    \n                                        penalty:     Penalty.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Penalty.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        season\n                                    \n                                \n                                \n                                    \n                                        season:     SeasonPenalties.Season\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SeasonPenalties.Season\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatSelect, MatDialogRef } from '@angular/material';\nimport { Penalty, SeasonPenalties, AddRankingPenaltyGQL, SeasonPenaltiesGQL, RankingGQL } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as uuidv4 from 'uuid/v4';\n\ninterface EditRankingPenaltyComponentData {\n  season: SeasonPenalties.Season;\n  penalty: Penalty.Fragment;\n}\n@Component({\n  selector: 'app-edit-ranking-penalty',\n  templateUrl: './edit-ranking-penalty.component.html',\n  styleUrls: ['./edit-ranking-penalty.component.css']\n})\nexport class EditRankingPenaltyComponent implements OnInit {\n\n  @ViewChild('teamSelect') teamSelect: MatSelect;\n\n  selectedTeamId: string;\n\n  penaltyPoints: number;\n  penaltyReason: string;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: EditRankingPenaltyComponentData,\n    private addPenaltyGQL: AddRankingPenaltyGQL,\n    private dialogRef: MatDialogRef,\n    private notify: NotificationService,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private translateService: TranslateService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.data.penalty) {\n      this.selectedTeamId = this.data.penalty.team.id;\n      this.penaltyPoints = this.data.penalty.points;\n      this.penaltyReason = this.data.penalty.reason;\n      this.teamSelect.setDisabledState(true);\n    }\n  }\n\n  async savePenalty() {\n    try {\n      await this.addPenaltyGQL.mutate({\n        id: this.data.penalty ? this.data.penalty.id : uuidv4(),\n        season_id: this.data.season.id,\n        team_id: this.selectedTeamId,\n        points: this.penaltyPoints,\n        reason: this.penaltyReason\n      }, {\n          refetchQueries: [\n            {\n              query: this.seasonPenaltiesGQL.document,\n              variables: { id: this.data.season.id }\n            },\n            {\n              query: this.rankingGQL.document,\n              variables: { id: this.data.season.id }\n            }\n          ]\n        }).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('PENALTY_SAVED'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PENALTY_ERROR'), error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTournamentRoundComponent.html":{"url":"components/EditTournamentRoundComponent.html","title":"component - EditTournamentRoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditTournamentRoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-tournament-round\n            \n\n\n\n\n            \n                templateUrl\n                edit-tournament-round.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                guest\n                            \n                            \n                                home\n                            \n                            \n                                newRoundPlanDateFrom\n                            \n                            \n                                newRoundPlanDateTo\n                            \n                            \n                                planDateFrom\n                            \n                            \n                                planDateTo\n                            \n                            \n                                roundTeams\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeam\n                            \n                            \n                                    Async\n                                createRound\n                            \n                            \n                                isRoundValid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeTeam\n                            \n                            \n                                setPlanDateFrom\n                            \n                            \n                                setPlanDateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allTournamentsQGL: AllTournamentListGQL, dialogRef: MatDialogRef, teamService: TeamService, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, createRoundGQL: CreateTournamentRoundGQL, notify: NotificationService, tournamentQGL: TournamentGQL, data: AddMatchData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allTournamentsQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createRoundGQL\n                                                  \n                                                        \n                                                                        CreateTournamentRoundGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        AddMatchData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    homeTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestTeam\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createRound\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createRound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRoundValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRoundValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTeam\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTeam(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateFrom\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateFrom(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlanDateTo\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlanDateTo(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddMatchData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('guest')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('home')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newRoundPlanDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateFrom\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateFrom')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            planDateTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('planDateTo')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roundTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RoundTeam[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n    \n         {{ 'EDIT_ROUND' | translate:{ round: data.round } }}\n\n  \n    \n      {{ tupel.homeTeam.name }}\n    \n    \n      -\n    \n    \n      {{ tupel.guestTeam.name }}\n    \n    \n      \n        \n          delete\n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      -\n    \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ 'PLAN_DATE_FROM'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n    \n      {{ 'PLAN_DATE_TO'| translate}}:\n    \n    \n      \n    \n    \n      \n        \n          access_time\n        \n      \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.START_ROUND' | translate }}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' {{ \\'EDIT_ROUND\\' | translate:{ round: data.round } }}            {{ tupel.homeTeam.name }}              -              {{ tupel.guestTeam.name }}                                delete                                                              {{team.name}}                                      -                                            {{team.name}}                                                         {{ \\'PLAN_DATE_FROM\\'| translate}}:                                              access_time                                  {{ \\'PLAN_DATE_TO\\'| translate}}:                                              access_time                                {{ \\'BUTTON.START_ROUND\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTournamentRoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditUserDialogComponent.html":{"url":"components/EditUserDialogComponent.html","title":"component - EditUserDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditUserDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-user-dialog\n            \n\n            \n                styleUrls\n                ./edit-user-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-user-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                userRole\n                            \n                            \n                                UserRole\n                            \n                            \n                                userTeamList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeTeamSelect\n                            \n                            \n                                    Async\n                                sendUsermail\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, translateService: TranslateService, authService: AuthenticationService, createUserGQL: CreateUserGQL, usersGQL: AllUsersGQL, notify: NotificationService, dialogRef: MatDialogRef, updateUserGQL: UpdateUserGQL, user: User.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createUserGQL\n                                                  \n                                                        \n                                                                        CreateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateUserGQL\n                                                  \n                                                        \n                                                                        UpdateUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeTeamSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeTeamSelect(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendUsermail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUsermail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserRole\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userTeamList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { UserRole, CreateUserGQL, AllUsersGQL, User, UpdateUserGQL } from 'src/api/graphql';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TeamService } from 'src/app/services/team.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { MatSelectChange, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport * as uuid from 'uuid/v4';\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.css']\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  userTeamList: string[] = new Array();\n\n  userRole: UserRole;\n\n  UserRole = UserRole;\n\n  email: FormControl;\n  firstName: FormControl;\n  lastName: FormControl;\n  password: FormControl;\n\n  constructor(\n    public teamService: TeamService,\n    private translateService: TranslateService,\n    private authService: AuthenticationService,\n    private createUserGQL: CreateUserGQL,\n    private usersGQL: AllUsersGQL,\n    private notify: NotificationService,\n    private dialogRef: MatDialogRef,\n    private updateUserGQL: UpdateUserGQL,\n    @Inject(MAT_DIALOG_DATA) public user: User.Fragment,\n  ) {\n    this.email = new FormControl('', [Validators.required, Validators.email]);\n    this.firstName = new FormControl('', [Validators.required]);\n    this.lastName = new FormControl('', [Validators.required]);\n    if (!this.user) {\n      this.password = new FormControl('', [\n        Validators.required,\n        Validators.minLength(6)\n      ]);\n    }\n    if (this.user) {\n      this.email.setValue(this.user.email);\n      this.firstName.setValue(this.user.first_name);\n      this.lastName.setValue(this.user.last_name);\n      this.userRole = this.user.role;\n      this.userTeamList = this.user.teams.map(t => t.id);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onChangeTeamSelect(event: MatSelectChange) {\n    this.userTeamList = event.value;\n  }\n\n  async createUser() {\n    try {\n      await this.createUserGQL.mutate(\n        {\n          id: uuid(),\n          email: this.email.value.toLowerCase(),\n          password: this.password.value,\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_USER_ERROR'), error);\n    }\n  }\n\n  async updateUser() {\n    try {\n      await this.updateUserGQL.mutate(\n        {\n          user_id: this.user.id,\n          email: this.email.value.toLowerCase(),\n          first_name: this.firstName.value,\n          last_name: this.lastName.value,\n          team_ids: this.userTeamList,\n          role: this.userRole\n        }, {\n          refetchQueries: [\n            {\n              query: this.usersGQL.document\n            }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('UPDATE_USER_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('UPDATE_USER_ERROR'), error);\n    }\n  }\n\n  async sendUsermail() {\n    try {\n      await this.authService.sendPasswordMail(this.email.value.toLowerCase());\n      this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_EMAIL\n      \n    \n  \n  \n    \n      \n        \n        FIRST_NAME_REQUIRED\n      \n      \n        \n        LAST_NAME_REQUIRED\n      \n    \n  \n  \n    \n      \n        \n        ERRORS.ENTER_VALID_PASSWORD\n      \n    \n  \n  \n    \n      \n        \n          \n            {{ UserRole.Admin }}\n          \n          \n            {{ UserRole.TeamManager }}\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            {{team.name}}\n          \n        \n      \n    \n  \n\n\n  \n    {{ 'BUTTON.ADD_USER' | translate}}\n  \n  \n  {{ 'BUTTON.UPDATE_USER' | translate}}\n\n  \n    {{ 'BUTTON.SEND_USER_MAIL' | translate}}\n  \n\n    \n\n    \n                \n                    ./edit-user-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            ERRORS.ENTER_VALID_EMAIL                                        FIRST_NAME_REQUIRED                            LAST_NAME_REQUIRED                                        ERRORS.ENTER_VALID_PASSWORD                                                      {{ UserRole.Admin }}                                {{ UserRole.TeamManager }}                                                                        {{team.name}}                                    {{ \\'BUTTON.ADD_USER\\' | translate}}      {{ \\'BUTTON.UPDATE_USER\\' | translate}}      {{ \\'BUTTON.SEND_USER_MAIL\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditUserDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchPitchComponent.html":{"url":"components/EditmatchPitchComponent.html","title":"component - EditmatchPitchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchPitchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.pitch.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.pitch\n            \n\n            \n                styleUrls\n                ./editmatch.pitch.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.pitch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                newMatchPitch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayPitch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPitchSelect\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                            \n                                showCreateNewPitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, pitchService: PitchService, matchService: MatchService, dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPitchSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonPitchSelect(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showCreateNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \nshowCreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.pitch.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { map, startWith, switchMapTo } from 'rxjs/operators';\nimport { PitchService } from '../../../services/pitch.service';\nimport { Match, Pitch } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { CreatePitchDialogComponent } from '../create-pitch-dialog/create-pitch-dialog.component';\n\n@Component({\n  selector: 'app-editmatch.pitch',\n  templateUrl: './editmatch.pitch.component.html',\n  styleUrls: ['./editmatch.pitch.component.css']\n})\nexport class EditmatchPitchComponent implements OnInit {\n\n  newMatchPitch: FormControl = new FormControl();\n  filteredPitches: Observable;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private pitchService: PitchService,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    private dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  onPitchSelect(pitch: Pitch.Fragment) {\n    this.match.pitch = pitch;\n  }\n\n  async onSaveClicked() {\n    try {\n      await this.matchService.locateMatch(this.match.id, this.newMatchPitch.value);\n      this.dialogRef.close(true);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  showCreateNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n            location_off\n          \n          {{ 'NO_PTICH_SET' | translate }}\n        \n        \n          {{ 'OLD_PITCH' | translate }}:\n          \n            {{ match.pitch.label }}\n            \n              location_on\n            \n          \n        \n        \n          {{ 'NEW_PITCH' | translate}}:\n          \n            {{ newMatchPitch.value.label }}\n            \n              location_on\n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      \n        \n          {{ 'BUTTON.CREATE_PITCH' | translate}}\n          \n            add\n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.pitch.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                           location_off                    {{ \\'NO_PTICH_SET\\' | translate }}                          {{ \\'OLD_PITCH\\' | translate }}:                      {{ match.pitch.label }}                          location_on                                                {{ \\'NEW_PITCH\\' | translate}}:                      {{ newMatchPitch.value.label }}                          location_on                                                                                        {{ pitch.label }}                                                        {{ \\'BUTTON.CREATE_PITCH\\' | translate}}                      add                                    {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchPitchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchResultComponent.html":{"url":"components/EditmatchResultComponent.html","title":"component - EditmatchResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatchresult\n            \n\n            \n                styleUrls\n                ./editmatch.result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                guest_score\n                            \n                            \n                                home_score\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, matchService: MatchService, dialogRef: MatDialogRef, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            guest_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            home_score\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.result.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { MatchService } from '../../../services/match.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-editmatchresult',\n  templateUrl: './editmatch.result.component.html',\n  styleUrls: ['./editmatch.result.component.css']\n})\nexport class EditmatchResultComponent implements OnInit {\n\n  home_score: number;\n  guest_score: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    private matchService: MatchService,\n    private dialogRef: MatDialogRef,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) {\n    this.home_score = this.match.home_score;\n    this.guest_score = this.match.guest_score;\n  }\n\n  ngOnInit() {\n\n  }\n\n  async onSaveClicked() {\n    if (this.matchService.isValidResult(this.home_score) && this.matchService.isValidResult(this.guest_score)) {\n      try {\n        await this.matchService.submitMatchResult(this.match.id, this.home_score, this.guest_score);\n        this.notify.showSuccessNotification(this.translateService.instant('EDIT_RESULT_SUCCESS'));\n        this.dialogRef.close(true);\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('EDIT_RESULT_ERROR'), error);\n      }\n    } else {\n      this.notify.showErrorNotification(this.translateService.instant('ENTER_VALID_RESULT'));\n    }\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL_RESULT' | translate}} -->\n    {{ 'BUTTON.CANCEL' | translate}}\n    {{ 'BUTTON.SAVE' | translate}}\n  \n\n    \n\n    \n                \n                    ./editmatch.result.component.css\n                \n                .inputsize {\n    width: 8ch;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                                                                                               {{ \\'BUTTON.CANCEL_RESULT\\' | translate}} -->    {{ \\'BUTTON.CANCEL\\' | translate}}    {{ \\'BUTTON.SAVE\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditmatchTimeComponent.html":{"url":"components/EditmatchTimeComponent.html","title":"component - EditmatchTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditmatchTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/editmatch/editmatch.time.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editmatch.time\n            \n\n            \n                styleUrls\n                ./editmatch.time.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editmatch.time.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                match\n                            \n                            \n                                matchKickoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                kickoffSet\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSaveClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(match: Match.Fragment, dateTimeAdapter: DateTimeAdapter, translateService: TranslateService, i18Service: I18Service, dialogRef: MatDialogRef, matchService: MatchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        match\n                                                  \n                                                        \n                                                                    Match.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateTimeAdapter\n                                                  \n                                                        \n                                                                    DateTimeAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            kickoffSet\n                        \n                        \n                    \n                \n            \n            \n                \nkickoffSet(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSaveClicked\n                        \n                        \n                    \n                \n            \n            \n                \nonSaveClicked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            match\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Match.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matchKickoff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/editmatch/editmatch.time.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { TranslateService } from '@ngx-translate/core';\nimport { I18Service } from '../../../services/i18.service';\nimport { MatchService } from '../../../services/match.service';\nimport { Match } from 'src/api/graphql';\n\n@Component({\n  selector: 'app-editmatch.time',\n  templateUrl: './editmatch.time.component.html',\n  styleUrls: ['./editmatch.time.component.css']\n})\nexport class EditmatchTimeComponent implements OnInit {\n\n  matchKickoff: Date;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public match: Match.Fragment,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    public i18Service: I18Service,\n    private dialogRef: MatDialogRef,\n    private matchService: MatchService\n  ) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  kickoffSet(event: any) {\n    this.matchKickoff = event.value;\n  }\n\n  onSaveClicked() {\n    this.matchService.scheduleMatch(this.match.id, this.matchKickoff)\n      .then(\n        () => {\n          this.dialogRef.close(true);\n        }\n      )\n      .catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n  }\n}\n\n    \n\n    \n        \n   {{ match.home_team.name }} - {{ match.guest_team.name }} \n  \n    \n      \n        \n          {{ 'BUTTON.SET_TIME' | translate }}\n          \n        \n      \n      \n        \n          {{ 'OLD_KICKOFF_TIME' | translate}}:\n        \n        \n          {{ match.kickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n      \n        \n          {{ 'NEW_KICKOFF_TIME' | translate}}:\n        \n        \n          \n          {{ matchKickoff | date:'short':'':i18Service.currentLang }}\n        \n      \n    \n  \n  \n    {{ 'BUTTON.CANCEL' | translate }}\n    {{ 'BUTTON.SAVE' | translate }}\n  \n\n    \n\n    \n                \n                    ./editmatch.time.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ match.home_team.name }} - {{ match.guest_team.name }}                               {{ \\'BUTTON.SET_TIME\\' | translate }}                                                {{ \\'OLD_KICKOFF_TIME\\' | translate}}:                          {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                                      {{ \\'NEW_KICKOFF_TIME\\' | translate}}:                                    {{ matchKickoff | date:\\'short\\':\\'\\':i18Service.currentLang }}                          {{ \\'BUTTON.CANCEL\\' | translate }}    {{ \\'BUTTON.SAVE\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditmatchTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EndSeasonGQL.html":{"url":"injectables/EndSeasonGQL.html","title":"injectable - EndSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EndSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1336\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventGQL.html":{"url":"injectables/EventGQL.html","title":"injectable - EventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1528\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EventsComponent.html":{"url":"components/EventsComponent.html","title":"component - EventsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EventsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/events/events.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-events\n            \n\n            \n                styleUrls\n                ./events.component.css\n            \n\n\n\n            \n                templateUrl\n                ./events.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                latestEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(latestEventsGQL: LatestEventGQL, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        latestEventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/events/events.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latestEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/events/events.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { LatestEventGQL, Event } from 'src/api/graphql';\nimport { I18Service } from 'src/app/services/i18.service';\n\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  latestEvents: Observable;\n\n  constructor(\n    private latestEventsGQL: LatestEventGQL,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.latestEvents = this.latestEventsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.latestEvents.sort((a, b) => a.occurred_at \n    \n\n    \n        \n  \n    \n      {{ event.occurred_at | date:'short':'':i18Service.currentLang}}\n    \n    \n      {{ event.type }}\n    \n  \n\n    \n\n    \n                \n                    ./events.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ event.occurred_at | date:\\'short\\':\\'\\':i18Service.currentLang}}              {{ event.type }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EventsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nEventsComponent\n\nEventsComponent\n\n\n\nEventsModule\n\nEventsModule\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            EventsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { SharedModule } from 'src/app/components/shared/shared.module';\nimport { EventsComponent } from './events.component';\nimport { AppCoreModule } from 'src/app/app-core.module';\n\n@NgModule({\n  imports: [\n    EventsRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    EventsComponent\n  ],\n  exports: [\n    EventsComponent\n  ]\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsRoutingModule.html":{"url":"modules/EventsRoutingModule.html","title":"module - EventsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/admin/events/events-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class EventsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\n\nGraphqlService\n\nGraphqlService\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlService\n                        \n                        \n                            GraphqlSubscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ApolloModule } from 'apollo-angular';\nimport { HttpLinkModule } from 'apollo-angular-link-http';\nimport { GraphqlService } from './services/graphql.service';\nimport { GraphqlSubscriptionService } from './services/graphql-subscription.service';\n\n@NgModule({\n  exports: [\n    ApolloModule,\n    HttpLinkModule\n  ],\n  providers: [\n    GraphqlSubscriptionService,\n    GraphqlService\n  ],\n})\nexport class GraphQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlService.html":{"url":"injectables/GraphqlService.html","title":"injectable - GraphqlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createApolloLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apollo: Apollo, httpLink: HttpLink, authService: AuthenticationService, appsettingsService: AppsettingsService, graphqlSubscriptionService: GraphqlSubscriptionService, notify: NotificationService, translationService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpLink\n                                                  \n                                                        \n                                                                    HttpLink\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appsettingsService\n                                                  \n                                                        \n                                                                        AppsettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphqlSubscriptionService\n                                                  \n                                                        \n                                                                        GraphqlSubscriptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createApolloLink\n                        \n                        \n                    \n                \n            \n            \n                \ncreateApolloLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AppsettingsService } from './appsettings.service';\nimport { ApolloLink, split } from 'apollo-link';\nimport { AuthenticationService } from './authentication.service';\nimport { setContext } from 'apollo-link-context';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { persistCache } from 'apollo-cache-persist';\nimport { GraphqlSubscriptionService } from './graphql-subscription.service';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\nimport { NotificationService } from './notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlService {\n\n  constructor(\n    private apollo: Apollo,\n    private httpLink: HttpLink,\n    private authService: AuthenticationService,\n    private appsettingsService: AppsettingsService,\n    private graphqlSubscriptionService: GraphqlSubscriptionService,\n    private notify: NotificationService,\n    private translationService: TranslateService\n  ) {\n  }\n\n  createApolloLink() {\n    const http = this.httpLink.create({ uri: this.appsettingsService.appsettings.graphqlUrl });\n\n    const afterwareLink = new ApolloLink((operation, forward) => {\n      return forward(operation).map(response => {\n        const { response: { headers } } = operation.getContext();\n        if (headers) {\n          const token = headers.get('x-token');\n          if (token) {\n            this.authService.accessToken = token;\n          }\n        }\n        return response;\n      });\n    });\n\n    const errorHandler = onError(({ graphQLErrors, networkError, operation }) => {\n      if (graphQLErrors) {\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}`,\n          ),\n        );\n      }\n      if (networkError) {\n        switch (networkError['status']) {\n          case 401:\n            if (operation.operationName !== 'PasswordChange') {\n              this.authService.logout();\n            }\n            break;\n          default:\n            this.notify.showErrorNotification(this.translationService.instant('UNKNOWN_NETWORK_ERROR'), networkError['statusText']);\n        }\n      }\n    });\n\n    const auth = setContext((_, { headers }) => {\n      if (!headers) {\n        headers = new HttpHeaders();\n      }\n      const authHeader = headers.get('Authorization');\n      if (authHeader) {\n        return {\n          headers: headers\n        };\n      }\n      const token = this.authService.accessToken;\n      if (token) {\n        return {\n          headers: headers.get('Authorization') ? null : headers.append('Authorization', `Bearer ${token}`)\n        };\n      } else {\n        return {};\n      }\n    });\n\n    let link = errorHandler.concat(afterwareLink).concat(auth).concat(http);\n    if (this.appsettingsService.appsettings.graphqlWsUrl) {\n\n      this.graphqlSubscriptionService.subscriptionClient = new SubscriptionClient(\n        this.appsettingsService.appsettings.graphqlWsUrl,\n        {\n          lazy: true,\n          reconnect: true,\n          reconnectionAttempts: 2\n        });\n      const wsClient = new WebSocketLink(this.graphqlSubscriptionService.subscriptionClient);\n\n      link = split(\n        // split based on operation type\n        ({ query }) => {\n          const { kind, operation } = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        },\n        wsClient,\n        link,\n      );\n    }\n    const cache = new InMemoryCache(\n      {\n        addTypename: true,\n        cacheRedirects: {\n          Query: {\n            allSeasons: (t, args, { getCacheKey }) => {\n              return getCacheKey({ __typename: 'Season' });\n            }\n          },\n        }\n      }\n    );\n    if (environment.persistCache) {\n      persistCache({\n        cache,\n        storage: window.localStorage,\n        key: 'graphql-cache'\n      });\n    }\n    this.apollo.create({\n      link: link,\n      cache: cache\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlSubscriptionService.html":{"url":"injectables/GraphqlSubscriptionService.html","title":"injectable - GraphqlSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptionClient\n                            \n                            \n                                    Public\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptionClient\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redis: RedisEventGQL, rankingQGL: RankingGQL, eventsGQL: LatestEventGQL, matchQGL: MatchGQL, matchPlanGQL: MatchPlanGQL, seasonService: SeasonService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/graphql-subscription.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                        RedisEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingQGL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsGQL\n                                                  \n                                                        \n                                                                        LatestEventGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchQGL\n                                                  \n                                                        \n                                                                        MatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/graphql-subscription.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptionClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubscriptionClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/graphql-subscription.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptionClient\n                    \n                \n\n                \n                    \n                        getsubscriptionClient()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:22\n                                \n                            \n\n                \n                    \n                        setsubscriptionClient(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/graphql-subscription.service.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18Service.html":{"url":"injectables/I18Service.html","title":"injectable - I18Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLang\n                            \n                            \n                                storedLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLang\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLang\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeLang\n                        \n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['de', 'en']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storedLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(LANG_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLang\n                    \n                \n\n                \n                    \n                        getcurrentLang()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18.service.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as de from './i18n/de';\nimport * as en from './i18n/en';\nimport { LocalStorage } from 'ngx-store';\n\nconst LANG_KEY = 'LANG';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18Service {\n\n  public availableLang: string[] = ['de', 'en'];\n\n  @LocalStorage(LANG_KEY) storedLang: string;\n\n  public get currentLang(): string {\n    return this.translateService.currentLang;\n  }\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  init() {\n    this.translateService.setTranslation('de', de);\n    this.translateService.setTranslation('en', en);\n    if (!this.storedLang) {\n      this.storedLang = this.translateService.getBrowserLang();\n    }\n    if (!this.storedLang) {\n      this.storedLang = 'de';\n    }\n    this.changeLang(this.storedLang);\n  }\n\n  changeLang(lang: string) {\n    this.translateService.use(lang);\n    this.storedLang = lang;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPossibleKickoffs.html":{"url":"interfaces/IPossibleKickoffs.html","title":"interface - IPossibleKickoffs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPossibleKickoffs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        daysOffset\n                                \n                                \n                                        index\n                                \n                                \n                                        kickoffTime\n                                \n                                \n                                        pitch\n                                \n                                \n                                        teamsCanPlay\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        daysOffset\n                                    \n                                \n                                \n                                    \n                                        daysOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kickoffTime\n                                    \n                                \n                                \n                                    \n                                        kickoffTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pitch\n                                    \n                                \n                                \n                                    \n                                        pitch:     Pitch.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pitch.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamsCanPlay\n                                    \n                                \n                                \n                                    \n                                        teamsCanPlay:         ITeamCanPlayAtDate[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITeamCanPlayAtDate[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISnackBarData.html":{"url":"interfaces/ISnackBarData.html","title":"interface - ISnackBarData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISnackBarData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shared/snackbar/snackbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamCanPlayAtDate.html":{"url":"interfaces/ITeamCanPlayAtDate.html","title":"interface - ITeamCanPlayAtDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeamCanPlayAtDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canPlay\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canPlay\n                                    \n                                \n                                \n                                    \n                                        canPlay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData.html":{"url":"interfaces/IntrospectionResultData.html","title":"interface - IntrospectionResultData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntrospectionResultData-1.html":{"url":"interfaces/IntrospectionResultData-1.html","title":"interface - IntrospectionResultData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntrospectionResultData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/introspection-result.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        __schema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __schema\n                                    \n                                \n                                \n                                    \n                                        __schema:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatestEventGQL.html":{"url":"injectables/LatestEventGQL.html","title":"injectable - LatestEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LatestEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1545\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocateMatchGQL.html":{"url":"injectables/LocateMatchGQL.html","title":"injectable - LocateMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocateMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1095\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                passwordForgot\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authenticationService: AuthenticationService, dialogRef: MatDialogRef, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            passwordForgot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordForgot(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MatDialogRef } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  error: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    public dialogRef: MatDialogRef,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async login() {\n    try {\n      this.error = false;\n      await this.authenticationService.loginAsync(this.loginForm.value);\n      this.dialogRef.close();\n    } catch (error) {\n      this.error = true;\n      this.loginForm.controls.password.setValue('');\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.setErrors({ required: true });\n    }\n  }\n\n  async passwordForgot(email: string) {\n    if (email) {\n      try {\n        await this.authenticationService.sendPasswordMail(email);\n        this.notify.showSuccessNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_SUCCESS'));\n      } catch (error) {\n        this.notify.showErrorNotification(this.translateService.instant('SEND_NEW_PASSWORD_MAIL_ERROR'), error);\n      }\n    } else {\n      this.loginForm.controls.username.setErrors({ required: true });\n      this.loginForm.controls.password.disable();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n            USERNAME_REQUIRED\n          \n        \n      \n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n          \n            remove_red_eye\n          \n        \n      \n    \n  \n  \n    \n      {{ 'FORGOT_PASSWORD' | translate}}\n    \n    \n      {{ 'BUTTON.LOGIN' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .login-error {\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    USERNAME_REQUIRED                                                                              PASSWORD_REQUIRED                                remove_red_eye                                          {{ \\'FORGOT_PASSWORD\\' | translate}}              {{ \\'BUTTON.LOGIN\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Base64 } from 'js-base64';\nimport { Router } from '@angular/router';\nimport { UserGQL, User, UserRole, PasswordChangeGQL, PasswordResetGQL } from '../../api/graphql';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n}\n\nconst ACCESS_TOKEN_KEY = 'ACCESS_TOKEN';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: AuthenticationService\n})\nexport class AuthenticationService {\n\n  user: User.AuthenticatedUser;\n\n  @LocalStorage(ACCESS_TOKEN_KEY) accessToken: string = null;\n\n  public get isAuthenticated(): boolean {\n    return this.user && Boolean(this.accessToken);\n  }\n\n  constructor(\n    private router: Router,\n    private userQGL: UserGQL,\n    private changePasswordQGL: PasswordChangeGQL,\n    private resetPasswordQGL: PasswordResetGQL,\n    private localStorageService: LocalStorageService\n  ) {\n  }\n\n  async loginAsync(context: LoginContext): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch(\n          null,\n          {\n            fetchPolicy: 'network-only',\n            context: {\n              headers: new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(context.username.toLowerCase() + ':' + context.password)}`)\n            }\n          }\n        ).subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(true);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n\n      });\n  }\n\n  async loadUser(): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.userQGL.fetch().subscribe(\n          (result) => {\n            this.user = result.data.authenticatedUser;\n            resolve(result.data.authenticatedUser);\n          },\n          (error) => {\n            this.logout();\n            reject(error);\n          });\n      });\n  }\n\n  logout() {\n    this.localStorageService.remove(ACCESS_TOKEN_KEY);\n    this.user = null;\n    this.router.navigateByUrl('');\n  }\n\n  public get isAdmin() {\n    return this.user ? this.user.role === UserRole.Admin : false;\n  }\n\n  public get isTeamAdmin() {\n    return this.user ? this.user.role === UserRole.TeamManager : false;\n  }\n\n  public isTeamAdminForTeam(teamId: string) {\n    return this.isTeamAdmin && this.user.teams.find(t => t.id === teamId);\n  }\n\n  changePassword(newPassword: string, oldPassword?: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.changePasswordQGL.mutate(\n          {\n            new_password: newPassword\n          },\n          {\n            context: {\n              headers:\n              new HttpHeaders()\n                .set('Authorization', `Basic ${Base64.encode(this.user.email.toLowerCase() + ':' + oldPassword)}`)\n            }\n          }\n        ).subscribe(\n          (response) => {\n            resolve();\n          }, err => {\n            reject(err);\n          });\n      }\n    );\n  }\n\n  sendPasswordMail(email: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.resetPasswordQGL.mutate(\n          {\n            email: email,\n            target_path: 'newpassword'\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagePenaltyComponent.html":{"url":"components/ManagePenaltyComponent.html","title":"component - ManagePenaltyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagePenaltyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manage-penalty\n            \n\n            \n                styleUrls\n                ./manage-penalty.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manage-penalty.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                penalties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPenalties\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEditDialog\n                            \n                            \n                                    Async\n                                removePenalty\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeasonId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rankingGQL: RankingGQL, seasonPenaltiesGQL: SeasonPenaltiesGQL, removePenaltiesGQL: RemoveRankingPenaltyGQL, i18Service: I18Service, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seasonPenaltiesGQL\n                                                  \n                                                        \n                                                                        SeasonPenaltiesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removePenaltiesGQL\n                                                  \n                                                        \n                                                                        RemoveRankingPenaltyGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPenalties\n                        \n                        \n                    \n                \n            \n            \n                \nloadPenalties()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    season\n                                    \n                                            SeasonPenalties.Season\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removePenalty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removePenalty(penalty: Penalty.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalty\n                                    \n                                            Penalty.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            penalties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { SeasonPenaltiesGQL, SeasonPenalties, Penalty, RemoveRankingPenaltyGQL, RankingGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditRankingPenaltyComponent } from './edit-ranking-penalty/edit-ranking-penalty.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manage-penalty',\n  templateUrl: './manage-penalty.component.html',\n  styleUrls: ['./manage-penalty.component.css']\n})\nexport class ManagePenaltyComponent implements OnInit, OnChanges {\n\n  @Input() manageSeasonId: string;\n\n  penalties: Observable;\n\n  constructor(\n    private rankingGQL: RankingGQL,\n    private seasonPenaltiesGQL: SeasonPenaltiesGQL,\n    private removePenaltiesGQL: RemoveRankingPenaltyGQL,\n    public i18Service: I18Service,\n    private dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.loadPenalties();\n  }\n\n  ngOnChanges() {\n    this.loadPenalties();\n  }\n\n  loadPenalties() {\n    this.penalties = this.seasonPenaltiesGQL.watch({ id: this.manageSeasonId }).valueChanges.pipe(\n      map(({ data }) => data.season)\n    );\n  }\n\n  openEditDialog(season: SeasonPenalties.Season, penalty?: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(EditRankingPenaltyComponent, {\n      data: {\n        season: season,\n        penalty: penalty\n      }\n    });\n  }\n\n  async removePenalty(penalty: Penalty.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE_PENALTY')\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.removePenaltiesGQL.mutate({\n              ranking_penalty_id: penalty.id,\n              season_id: this.manageSeasonId\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.seasonPenaltiesGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  },\n                  {\n                    query: this.rankingGQL.document,\n                    variables: { id: this.manageSeasonId }\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('REMOVE_PENALTY_SUCCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('REMOVE_PENALTY_ERROR'), error);\n          }\n        }\n      });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'TEAM' | translate }}\n            \n            \n                {{ 'REASON' | translate }}\n            \n            \n                {{ 'DATE' | translate }}\n            \n            \n                {{ 'POINTS' | translate }}\n            \n            \n                \n                    \n                        add\n                    \n                \n            \n        \n        \n            \n                {{ penalty.team.name }}\n            \n            \n                {{ penalty.reason }}\n            \n            \n                {{ penalty.created_at | date:'medium':'':i18Service.currentLang }}\n            \n            \n                {{ penalty.points }}\n            \n            \n                \n                    \n                        edit\n                    \n                 -->\n                \n                    \n                        delete\n                    \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n    \n                \n                    ./manage-penalty.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'TEAM\\' | translate }}                                        {{ \\'REASON\\' | translate }}                                        {{ \\'DATE\\' | translate }}                                        {{ \\'POINTS\\' | translate }}                                                                                    add                                                                                            {{ penalty.team.name }}                                        {{ penalty.reason }}                                        {{ penalty.created_at | date:\\'medium\\':\\'\\':i18Service.currentLang }}                                        {{ penalty.points }}                                                                                    edit                                     -->                                                            delete                                                                            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagePenaltyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagepitchesComponent.html":{"url":"components/ManagepitchesComponent.html","title":"component - ManagepitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagepitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managepitches/managepitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managepitches\n            \n\n            \n                styleUrls\n                ./managepitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managepitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewPitch\n                            \n                            \n                                deletePitch\n                            \n                            \n                                editPitchContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, dialog: MatDialog, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managepitches/managepitches.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewPitch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPitchContact\n                        \n                        \n                    \n                \n            \n            \n                \neditPitchContact(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managepitches/managepitches.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Pitch, PitchesGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { PitchService } from 'src/app/services/pitch.service';\nimport { MatDialog } from '@angular/material';\nimport { EditPitchContactDialogComponent } from '../../shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from '../../shared/create-pitch-dialog/create-pitch-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-managepitches',\n  templateUrl: './managepitches.component.html',\n  styleUrls: ['./managepitches.component.css']\n})\nexport class ManagepitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService,\n    private dialog: MatDialog,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  deletePitch(pitch: Pitch.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: pitch.label })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.pitchService.deletePitch(pitch.id);\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_PITCH_SUCESS'));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_PITCH_ERROR'), error);\n          }\n        }\n      });\n  }\n\n  createNewPitch() {\n    this.dialog.open(CreatePitchDialogComponent);\n  }\n\n  editPitchContact(pitch: Pitch.Fragment) {\n    this.dialog.open(EditPitchContactDialogComponent,\n      {\n        data: pitch\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'PITCH' | translate }}\n      \n      \n        {{ 'CONTACT' | translate }}\n      \n      \n        \n          \n            add\n          \n        \n      \n    \n    \n      \n        location_on\n        \n          {{ pitch.label }}\n        \n      \n      \n        \n          \n        \n      \n      \n        \n          \n            perm_contact_calendar\n          \n        \n        \n          \n            delete\n          \n        \n      \n      \n    \n  \n  \n      \n    \n\n\n    \n\n    \n                \n                    ./managepitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PITCH\\' | translate }}                    {{ \\'CONTACT\\' | translate }}                                          add                                              location_on                  {{ pitch.label }}                                                                                        perm_contact_calendar                                                delete                                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagepitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageteamsComponent.html":{"url":"components/ManageteamsComponent.html","title":"component - ManageteamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageteamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/manageteams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageteams\n            \n\n            \n                styleUrls\n                ./manageteams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageteams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openRenameTeamDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, dialog: MatDialog, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/manageteams.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openRenameTeamDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenRenameTeamDialog(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/manageteams.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from 'src/api/graphql';\nimport { MatDialog } from '@angular/material';\nimport { RenameTeamComponent } from './rename-team/rename-team.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-manageteams',\n  templateUrl: './manageteams.component.html',\n  styleUrls: ['./manageteams.component.css']\n})\nexport class ManageteamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService,\n    public dialog: MatDialog,\n    private notify: NotificationService,\n    private translateService: TranslateService\n  ) {\n\n  }\n\n  async ngOnInit() {\n  }\n\n  async addNewTeam(teamName: string) {\n    try {\n      await this.teamService.addNewTeam(teamName);\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TEAM_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TEAM_ERROR'), error);\n    }\n  }\n\n  deleteTeam(team: Team.Fragment) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: team.name })\n      }\n    });\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        try {\n          await this.teamService.deleteTeam(team);\n          this.notify.showSuccessNotification(this.translateService.instant('DELETE_TEAM_SUCCESS'));\n        } catch (error) {\n          this.notify.showErrorNotification(this.translateService.instant('DELETE_TEAM_ERROR'), error);\n        }\n      });\n  }\n\n  openRenameTeamDialog(team: Team.Fragment) {\n    this.dialog.open(RenameTeamComponent, { data: team });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{team.name}}\n    \n    \n      \n        \n          edit\n        \n      \n      \n          \n            delete\n          \n        \n    \n  \n\n    \n\n    \n                \n                    ./manageteams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          add                                {{team.name}}                                edit                                          delete                        '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageteamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagetournamentComponent.html":{"url":"components/ManagetournamentComponent.html","title":"component - ManagetournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagetournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/managetournament/managetournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-managetournament\n            \n\n            \n                styleUrls\n                ./managetournament.component.css\n            \n\n\n\n            \n                templateUrl\n                ./managetournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                manageTournamentId\n                            \n                            \n                                manageTournamentRoundCount\n                            \n                            \n                                manageTournamentRounds\n                            \n                            \n                                rounds\n                            \n                            \n                                startTeamCount\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewTournament\n                            \n                            \n                                deleteTournament\n                            \n                            \n                                editRound\n                            \n                            \n                                genRounds\n                            \n                            \n                                    Private\n                                loadAllTournaments\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onTournamentSelected\n                            \n                            \n                                    Private\n                                openEditDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, allTournamentsGQL: AllTournamentListGQL, tournamentQGL: TournamentGQL, createTournament: CreateTournamentGQL, translateService: TranslateService, deleteTournamentGQL: DeleteTournamentGQL, notify: NotificationService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentsGQL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createTournament\n                                                  \n                                                        \n                                                                        CreateTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTournamentGQL\n                                                  \n                                                        \n                                                                        DeleteTournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewTournament\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewTournament(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTournament\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTournament(tournamentId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tournamentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editRound\n                        \n                        \n                    \n                \n            \n            \n                \neditRound(round: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genRounds\n                        \n                        \n                    \n                \n            \n            \n                \ngenRounds()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllTournaments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllTournaments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onTournamentSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTournamentSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openEditDialog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openEditDialog(round: number, teams?: RoundTeam[], dates?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    teams\n                                    \n                                                RoundTeam[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dates\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(MANAGE_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRoundCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageTournamentRounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rounds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[][]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTeamCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/managetournament/managetournament.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, MatchDay, CreateTournamentGQL, DeleteTournamentGQL } from '../../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable, empty } from 'rxjs';\nimport * as uuidv4 from 'uuid/v4';\nimport { ConfirmDialogComponent } from '../../shared/confirm-dialog/confirm-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LocalStorage } from 'ngx-store';\nimport { RoundTeam, EditTournamentRoundComponent } from './edit-tournament-round/edit-tournament-round.component';\nimport { I18Service } from 'src/app/services/i18.service';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nconst MANAGE_TOURNAMENT_KEY = 'MANAGE_TOURNAMENT_KEY';\n@Component({\n  selector: 'app-managetournament',\n  templateUrl: './managetournament.component.html',\n  styleUrls: ['./managetournament.component.css']\n})\nexport class ManagetournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  @LocalStorage(MANAGE_TOURNAMENT_KEY)\n  manageTournamentId: string = null;\n  manageTournamentRounds: Observable;\n  startTeamCount = 4;\n  rounds: number[][];\n  manageTournamentRoundCount: number;\n\n  constructor(\n    public dialog: MatDialog,\n    private allTournamentsGQL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private createTournament: CreateTournamentGQL,\n    private translateService: TranslateService,\n    private deleteTournamentGQL: DeleteTournamentGQL,\n    private notify: NotificationService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.loadAllTournaments();\n    if (this.manageTournamentId) {\n      this.onTournamentSelected();\n    }\n  }\n\n  private loadAllTournaments() {\n    this.tournaments = this.allTournamentsGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n  }\n\n  async createNewTournament(name: string) {\n    await this.createTournament.mutate({\n      id: uuidv4(),\n      name: name\n    },\n      {\n        refetchQueries: [\n          { query: this.allTournamentsGQL.document }\n        ]\n      }).toPromise();\n  }\n\n  async onTournamentSelected() {\n    this.manageTournamentRounds = this.tournamentQGL.watch(\n      {\n        id: this.manageTournamentId\n      }\n    ).valueChanges.pipe(\n      map(\n        (result) => {\n          if (result.data.tournament && result.data.tournament.rounds) {\n            this.manageTournamentRoundCount = result.data.tournament.rounds.length + 1;\n            return result.data.tournament.rounds.sort((a, b) => a.number ();\n          }\n        })\n    );\n  }\n\n  genRounds() {\n    const startGameCount = Math.ceil(this.startTeamCount / 2);\n    this.rounds = new Array();\n    for (let gameCount = startGameCount; gameCount >= 1; gameCount = (gameCount / 2)) {\n      this.rounds.push(Array.from(new Array(gameCount), (val, index) => index + 1));\n      if (gameCount % 2 !== 0 && gameCount !== 1) {\n        break;\n      }\n    }\n  }\n\n  editRound(round: number) {\n    if (round  {\n          if (confirm) {\n            const teams: Observable = this.manageTournamentRounds.pipe(\n              map((data) => {\n                const r = data.find(x => x.number === round);\n                return {\n                  teams: r.matches.map(y => ({ homeTeam: y.home_team, guestTeam: y.guest_team })),\n                  dates: { from: new Date(r.start_date), to: new Date(r.end_date) }\n                };\n              })\n            );\n            teams.subscribe(\n              (t) => {\n                this.openEditDialog(round, t.teams, t.dates);\n              }\n            );\n          }\n        }\n      );\n    } else {\n      this.openEditDialog(round);\n    }\n  }\n\n  private openEditDialog(round: number, teams?: RoundTeam[], dates?: { from: Date, to: Date }) {\n    const dialogRef = this.dialog.open(EditTournamentRoundComponent, {\n      data: { round: round, tournamentId: this.manageTournamentId, teams: teams, dates: dates },\n      panelClass: 'my-full-screen-dialog'\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        // this.loadMatches(this.tournament.id);\n      }\n    });\n  }\n\n  deleteTournament(tournamentId: string) {\n    this.tournaments.subscribe(\n      (tournaments) => {\n        const tournament = tournaments.find(x => x.id === tournamentId);\n        if (!tournament) {\n          return;\n        }\n        const confirmDialog = this.dialog.open(ConfirmDialogComponent, {\n          data: {\n            message: this.translateService.instant('CONFIRM_DELETE', { thing: tournament.name })\n          }\n        });\n        confirmDialog.afterClosed().subscribe(\n          async (confirm) => {\n            if (confirm) {\n              try {\n                await this.deleteTournamentGQL.mutate({\n                  tournament_id: tournamentId\n                }, {\n                  refetchQueries: [\n                    { query: this.allTournamentsGQL.document}\n                  ]\n                }).toPromise();\n                this.notify.showSuccessNotification(this.translateService.instant('DELETE_TOURNAMENT_SUCCESS'));\n                delete this.manageTournamentRounds;\n              } catch (error) {\n                this.notify.showErrorNotification(this.translateService.instant('DELETE_TOURNAMENT_ERROR'), error);\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      {{ 'BUTTON.CREATE_TOURNAMENT'\n        | translate}}\n    \n  \n  \n    \n      \n        \n          {{ 'NEW_TOURNAMENT_ROUND' | translate }}\n        \n      \n      \n        \n          \n            delete\n          \n        \n      \n    \n    \n      \n        \n          {{ mt.number }}. {{ 'ROUND' | translate }} ({{ mt.start_date | date:'shortDate':'':i18Service.currentLang}} -\n          {{ mt.end_date | date:'shortDate':'':i18Service.currentLang}})\n          \n            \n              edit\n            \n          \n        \n        \n          \n            {{ match.home_team.name }} - {{ match.guest_team.name }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./managetournament.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ tournament.name }}                                                                  {{ \\'BUTTON.CREATE_TOURNAMENT\\'        | translate}}                                    {{ \\'NEW_TOURNAMENT_ROUND\\' | translate }}                                                  delete                                                        {{ mt.number }}. {{ \\'ROUND\\' | translate }} ({{ mt.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}} -          {{ mt.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                                    edit                                                            {{ match.home_team.name }} - {{ match.guest_team.name }}                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagetournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageusersComponent.html":{"url":"components/ManageusersComponent.html","title":"component - ManageusersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageusersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/manageusers.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manageusers\n            \n\n            \n                styleUrls\n                ./manageusers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./manageusers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/manageusers.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/manageusers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manageusers',\n  templateUrl: './manageusers.component.html',\n  styleUrls: ['./manageusers.component.css']\n})\nexport class ManageusersComponent implements OnInit {\n\n  constructor(\n  ) {\n  }\n\n  async ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./manageusers.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageusersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchComponent.html":{"url":"components/MatchComponent.html","title":"component - MatchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/match/match.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match\n            \n\n            \n                styleUrls\n                ./match.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchService\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitChanges\n                            \n                            \n                                isGuestWinner\n                            \n                            \n                                isHomeWinner\n                            \n                            \n                                isNumber\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCancelMatchDialog\n                            \n                            \n                                openContactModal\n                            \n                            \n                                openEditPitchDialog\n                            \n                            \n                                openEditResultDialog\n                            \n                            \n                                openEditTimeDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideIfPlayed\n                            \n                            \n                                match\n                            \n                            \n                                seasonId\n                            \n                            \n                                tournamentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, authService: AuthenticationService, i18Service: I18Service, notify: NotificationService, matchService: MatchService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideIfPlayed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        match\n                    \n                \n                \n                    \n                        Type :     Match.Fragment\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        seasonId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        tournamentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        matchUpdated\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isGuestWinner\n                        \n                        \n                    \n                \n            \n            \n                \nisGuestWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHomeWinner\n                        \n                        \n                    \n                \n            \n            \n                \nisHomeWinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNumber\n                        \n                        \n                    \n                \n            \n            \n                \nisNumber(val)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCancelMatchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenCancelMatchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openContactModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenContactModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditPitchDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditPitchDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditResultDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditResultDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditTimeDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditTimeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/match/match.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/match/match.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContactComponent } from '../contact/contact.component';\nimport { MatDialog } from '@angular/material';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { EditmatchResultComponent } from '../editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from '../editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from '../editmatch/editmatch.pitch.component';\nimport { I18Service } from '../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Match } from 'src/api/graphql';\nimport { MatchService } from '../../../services/match.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { CancelMatchDialogComponent } from '../cancel-match-dialog/cancel-match-dialog.component';\n\n@Component({\n  selector: 'app-match',\n  templateUrl: './match.component.html',\n  styleUrls: ['./match.component.css']\n})\nexport class MatchComponent implements OnInit {\n\n  @Input() seasonId: string;\n  @Input() tournamentId: string;\n  @Input() match: Match.Fragment;\n  @Input() hideIfPlayed: boolean;\n\n  @Output() matchUpdated = new EventEmitter();\n\n  constructor(\n    public dialog: MatDialog,\n    public authService: AuthenticationService,\n    public i18Service: I18Service,\n    public notify: NotificationService,\n    public matchService: MatchService,\n    public translateService: TranslateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  openEditResultDialog() {\n    const dialogRef = this.dialog.open(EditmatchResultComponent, {\n      data: this.match\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  private emitChanges() {\n    this.matchUpdated.emit(this.match.id);\n    if (this.tournamentId) {\n      this.matchService.tournamentMatchUpdated.next({ tournamentId: this.tournamentId, matchId: this.match.id });\n    } else {\n      this.matchService.seasonMatchUpdated.next({ seasonId: this.seasonId, matchId: this.match.id });\n    }\n  }\n\n  openEditPitchDialog() {\n    const dialogRef = this.dialog.open(EditmatchPitchComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openEditTimeDialog() {\n    const dialogRef = this.dialog.open(EditmatchTimeComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  openContactModal() {\n    this.dialog.open(ContactComponent, {\n      data: {\n        teams: [\n          this.match.home_team,\n          this.match.guest_team\n        ],\n        pitch: this.match.pitch\n      },\n      panelClass: 'my-full-screen-dialog'\n    });\n  }\n\n  openCancelMatchDialog() {\n    const dialogRef = this.dialog.open(CancelMatchDialogComponent, {\n      data: this.match, panelClass: 'my-full-screen-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.emitChanges();\n        }\n      });\n  }\n\n  isHomeWinner(): boolean {\n    return this.tournamentId && this.match.home_score > this.match.guest_score;\n  }\n\n  isGuestWinner(): boolean {\n    return this.tournamentId && this.match.home_score \n    \n\n    \n        \n    \n        \n    \n    \n        \n            \n                \n                    {{ match.home_team.name }}\n                \n                \n                    {{ match.home_score\n                        }}&nbsp;:&nbsp;{{ match.guest_score }}\n                    -&nbsp;:&nbsp;-\n                \n                \n                    {{ match.guest_team.name }}\n                \n            \n            \n                \n                    \n                        access_time\n                    \n                    \n                        \n                            {{ match.kickoff | date:'fullDate':'':i18Service.currentLang }}, \n                            {{ match.kickoff | date:'shortTime':'':i18Service.currentLang }}\n                        \n                        {{ 'NO_TIME_SET' | translate }}\n                    \n                    \n                        location_off\n                        location_on\n                    \n                    \n                        {{ 'NO_PTICH_SET' | translate }}\n                    \n                    \n                        \n                            {{ match.pitch.label }}\n                        \n                    \n                \n                \n                    \n                        {{ 'MATCH_CANCELED_AT' | translate }} {{ match.cancelled_at | date:'short':'':i18Service.currentLang }}\n                    \n                    \n                        {{ match.cancellation_reason }}\n                    \n                \n            \n            \n                \n                    \n                        \n                            perm_contact_calendar\n                        \n                    \n                \n                \n                    \n                        edit\n                    \n                \n            \n        \n    \n\n\n    \n        {{ 'BUTTON.EDIT_RESULT' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_PITCH' | translate }}\n    \n    \n        {{ 'BUTTON.EDIT_TIME' | translate }}\n    \n    \n        {{ 'BUTTON.CANCEL_MATCH' | translate }}\n    \n\n    \n\n    \n                \n                    ./match.component.css\n                \n                .card-text {\n    height: 2em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ match.home_team.name }}                                                    {{ match.home_score                        }} : {{ match.guest_score }}                    - : -                                                    {{ match.guest_team.name }}                                                                                                    access_time                                                                                            {{ match.kickoff | date:\\'fullDate\\':\\'\\':i18Service.currentLang }},                             {{ match.kickoff | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}                                                {{ \\'NO_TIME_SET\\' | translate }}                                                                location_off                        location_on                                                                {{ \\'NO_PTICH_SET\\' | translate }}                                                                                            {{ match.pitch.label }}                                                                                                                        {{ \\'MATCH_CANCELED_AT\\' | translate }} {{ match.cancelled_at | date:\\'short\\':\\'\\':i18Service.currentLang }}                                                                {{ match.cancellation_reason }}                                                                                                                                                    perm_contact_calendar                                                                                                                        edit                                                                        {{ \\'BUTTON.EDIT_RESULT\\' | translate }}                {{ \\'BUTTON.EDIT_PITCH\\' | translate }}                {{ \\'BUTTON.EDIT_TIME\\' | translate }}                {{ \\'BUTTON.CANCEL_MATCH\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MatchEventPayload.html":{"url":"interfaces/MatchEventPayload.html","title":"interface - MatchEventPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MatchEventPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/graphql-subscription.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestScore\n                                \n                                \n                                        homeScore\n                                \n                                \n                                        matchId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestScore\n                                    \n                                \n                                \n                                    \n                                        guestScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeScore\n                                    \n                                \n                                \n                                    \n                                        homeScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchId\n                                    \n                                \n                                \n                                    \n                                        matchId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RedisEventGQL } from 'src/api/graphqlsubs';\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\nimport { RankingGQL, LatestEventGQL, MatchPlanGQL, MatchGQL } from '../../api/graphql';\nimport { SeasonService } from './season.service';\n\nexport interface MatchEventPayload {\n  matchId: string;\n  homeScore: number;\n  guestScore: number;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphqlSubscriptionService {\n\n  public connected: boolean;\n\n  private _subscriptionClient: SubscriptionClient;\n  public get subscriptionClient(): SubscriptionClient {\n    return this._subscriptionClient;\n  }\n  public set subscriptionClient(value: SubscriptionClient) {\n    this._subscriptionClient = value;\n    if (value) {\n      this.subscriptionClient.onConnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onConnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onError(\n        (error) => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n      this.subscriptionClient.onReconnected(\n        () => {\n          console.log('connected');\n          this.connected = true;\n        }\n      );\n      this.subscriptionClient.onReconnecting(\n        () => {\n          console.log('connected', false);\n          this.connected = false;\n        }\n      );\n    }\n  }\n\n  constructor(\n    private redis: RedisEventGQL,\n    private rankingQGL: RankingGQL,\n    private eventsGQL: LatestEventGQL,\n    private matchQGL: MatchGQL,\n    private matchPlanGQL: MatchPlanGQL,\n    private seasonService: SeasonService\n  ) {\n  }\n\n  connect() {\n    this.redis.subscribe().subscribe(\n      async (message) => {\n        if (message.data) {\n          console.log(message.data);\n          // await this.eventsGQL.fetch(null, {\n          //   fetchPolicy: 'network-only'\n          // }).toPromise();\n          const msgType: string[] = message.data.redisevent.type.split(':');\n          const payload: MatchEventPayload = JSON.parse(message.data.redisevent.payload);\n          if (msgType[0] === 'match') {\n            // await this.matchQGL.fetch({ id: payload.matchId }).toPromise();\n            await this.matchPlanGQL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n            await this.rankingQGL.fetch({id: this.seasonService.currentSeason.getValue().id}, { fetchPolicy: 'network-only'}).toPromise();\n          }\n        }\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchGQL.html":{"url":"injectables/MatchGQL.html","title":"injectable - MatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1559\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchPlanGQL.html":{"url":"injectables/MatchPlanGQL.html","title":"injectable - MatchPlanGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchPlanGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1576\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchSchedulingComponent.html":{"url":"components/MatchSchedulingComponent.html","title":"component - MatchSchedulingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchSchedulingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-match-scheduling\n            \n\n            \n                styleUrls\n                ./match-scheduling.component.css\n            \n\n\n\n            \n                templateUrl\n                ./match-scheduling.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredPitches\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                newMatchPitch\n                            \n                            \n                                    Public\n                                pitchService\n                            \n                            \n                                possibleKickoffs\n                            \n                            \n                                startmatchDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addKickoffDateToPitch\n                            \n                            \n                                displayPitch\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removePair\n                            \n                            \n                                saveMatches\n                            \n                            \n                                scheduleMatches\n                            \n                            \n                                shuffle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                manageSeason\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    matchDayLength\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService, matchService: MatchService, i18Service: I18Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        manageSeason\n                    \n                \n                \n                    \n                        Type :     MatchPlan.Season\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addKickoffDateToPitch\n                        \n                        \n                    \n                \n            \n            \n                \naddKickoffDateToPitch(offset: number, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayPitch\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayPitch(pitch?: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removePair\n                        \n                        \n                    \n                \n            \n            \n                \nremovePair(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveMatches\n                        \n                        \n                    \n                \n            \n            \n                \nsaveMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatches\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            shuffle\n                        \n                        \n                    \n                \n            \n            \n                \nshuffle(a)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newMatchPitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormControl\n\n                        \n                    \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            possibleKickoffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPossibleKickoffs[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startmatchDay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        matchDayLength\n                    \n                \n\n                \n                    \n                        getmatchDayLength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { PitchService } from '../../../../services/pitch.service';\nimport { FormControl } from '@angular/forms';\nimport { startWith, map, switchMapTo } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { I18Service } from '../../../../services/i18.service';\nimport * as momentjs from 'moment';\nimport { MatchPlan, Pitch, Team } from 'src/api/graphql';\nimport { MatchService } from 'src/app/services/match.service';\n\ninterface IPossibleKickoffs {\n  index: number;\n  kickoffTime: Date;\n  daysOffset: number;\n  pitch: Pitch.Fragment;\n  teamsCanPlay: ITeamCanPlayAtDate[];\n}\n\ninterface ITeamCanPlayAtDate {\n  team: Team.Fragment;\n  canPlay: boolean;\n}\n\n@Component({\n  selector: 'app-match-scheduling',\n  templateUrl: './match-scheduling.component.html',\n  styleUrls: ['./match-scheduling.component.css']\n})\nexport class MatchSchedulingComponent implements OnInit, OnChanges {\n\n  @Input() manageSeason: MatchPlan.Season;\n\n  possibleKickoffs: IPossibleKickoffs[] = new Array();\n  filteredPitches: Observable;\n  newMatchPitch: FormControl = new FormControl();\n  startmatchDay = 0;\n\n  get matchDayLength(): number {\n    return this.manageSeason.match_days[0].matches.length;\n  }\n\n  constructor(\n    public pitchService: PitchService,\n    private matchService: MatchService,\n    public i18Service: I18Service\n  ) { }\n\n  ngOnInit() {\n    this.filteredPitches = this.newMatchPitch.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      switchMapTo(this.pitchService.allPitches),\n      map(x => {\n        return (this.newMatchPitch.value && (typeof this.newMatchPitch.value === 'string')) ?\n          x.filter(y => y.label.toLowerCase().includes(this.newMatchPitch.value.toLowerCase())) : x;\n      })\n    );\n  }\n\n  ngOnChanges() {\n  }\n\n  displayPitch(pitch?: Pitch.Fragment): string | undefined {\n    return pitch ? pitch.label : undefined;\n  }\n\n  addKickoffDateToPitch(offset: number, event: any) {\n    if (this.newMatchPitch.value) {\n      const newElement: IPossibleKickoffs = {\n        index: this.possibleKickoffs.length,\n        pitch: this.newMatchPitch.value,\n        kickoffTime: event.value,\n        daysOffset: +offset,\n        teamsCanPlay: this.manageSeason.teams.map(x => { team: x, canPlay: true })\n      };\n      this.possibleKickoffs.push(newElement);\n    }\n  }\n\n  removePair(index: number) {\n    this.possibleKickoffs = this.possibleKickoffs.filter(x => x.index !== +index);\n  }\n\n  scheduleMatches() {\n\n    this.manageSeason.match_days.filter( x => x.number >= this.startmatchDay).forEach(\n      (matchDay) => {\n        let possibleKickoffs: IPossibleKickoffs[] = JSON.parse(JSON.stringify(this.possibleKickoffs));\n        matchDay.matches.forEach(\n          (match) => {\n            if (possibleKickoffs) {\n              possibleKickoffs = this.shuffle(possibleKickoffs);\n              let list = possibleKickoffs.filter(x => x.teamsCanPlay.find(y => y.team.id === match.home_team.id).canPlay);\n              list = list.filter(x => x.teamsCanPlay.find(y => y.team.id === match.guest_team.id).canPlay);\n              if (list[0]) {\n                if (!match.pitch && !match.kickoff) {\n                  match.pitch = list[0].pitch;\n                  const date = momentjs(matchDay.start_date).add(list[0].daysOffset, 'd').toDate();\n                  date.setUTCHours(new Date(list[0].kickoffTime).getUTCHours());\n                  date.setUTCMinutes(new Date(list[0].kickoffTime).getUTCMinutes());\n                  match.kickoff = date.toISOString();\n                }\n                possibleKickoffs = possibleKickoffs.filter(x => x.index !== list[0].index);\n              } else {\n                alert(`${matchDay.id}. Spieltag - Spiel ${match.home_team.name} - ${match.guest_team.name} konnte nicht terminiert werden`);\n                console.error('iwas passt nicht');\n              }\n            }\n          }\n        );\n      }\n    );\n  }\n\n  saveMatches() {\n    const matches = this.manageSeason.match_days.map(x => x.matches).reduce((acc, val) => acc.concat(val), []);\n    matches.forEach(\n      async (match) => {\n        try {\n          await this.matchService.locateMatch(match.id, match.pitch);\n          await this.matchService.scheduleMatch(match.id, match.kickoff);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    );\n  }\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n}\n\n    \n\n    \n        \n  Pitches\n  \n    \n      \n        \n        \n          \n            {{ pitch.label }}\n          \n        \n      \n    \n    \n      OFFSET: \n    \n    \n      \n      {{ 'BUTTON.SET_TIME' | translate }}\n      \n    \n    \n      scheduleMatches\n    \n  \n  \n    \n      {{ e.pitch.label }}\n    \n    \n      {{ e.kickoffTime | date:'shortTime':'':i18Service.currentLang }}\n    \n    \n      OFFSET: {{ e.daysOffset}}\n    \n    \n      \n        \n          {{ d.team.name }}\n        \n        \n          \n        \n      \n    \n    \n      Remove\n    \n  \n  \n    \n      ab Spieltag:\n    \n    \n      \n        \n          {{ matchDay.number }}\n        \n      \n    \n  \n  \n    \n      \n        {{ 'MATCHDAY' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:'shortDate':'':i18Service.currentLang}}\n          - {{ matchDay.end_date | date:'shortDate':'':i18Service.currentLang}})\n      \n    \n    \n      \n        {{ match.home_team.name }} - {{ match.guest_team.name }}\n      \n      \n        {{ match.kickoff | date:'short':'':i18Service.currentLang}}\n      \n      \n        ({{ match.pitch?.label }})\n      \n    \n  \n  \n    \n      save\n    \n  \n\n    \n\n    \n                \n                    ./match-scheduling.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Pitches                                                  {{ pitch.label }}                                      OFFSET:                     {{ \\'BUTTON.SET_TIME\\' | translate }}                    scheduleMatches                  {{ e.pitch.label }}              {{ e.kickoffTime | date:\\'shortTime\\':\\'\\':i18Service.currentLang }}              OFFSET: {{ e.daysOffset}}                                {{ d.team.name }}                                                      Remove                  ab Spieltag:                                {{ matchDay.number }}                                        {{ \\'MATCHDAY\\' | translate:{ matchDay: matchDay.number } }} ({{ matchDay.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}}          - {{ matchDay.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}})                            {{ match.home_team.name }} - {{ match.guest_team.name }}                    {{ match.kickoff | date:\\'short\\':\\'\\':i18Service.currentLang}}                    ({{ match.pitch?.label }})                        save      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchSchedulingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchService.html":{"url":"injectables/MatchService.html","title":"injectable - MatchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/match.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                seasonMatchUpdated\n                            \n                            \n                                tournamentMatchUpdated\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isMatchPlayed\n                            \n                            \n                                    Public\n                                isValidResult\n                            \n                            \n                                locateMatch\n                            \n                            \n                                scheduleMatch\n                            \n                            \n                                submitMatchResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submitResultGQL: SubmitResultGQL, scheduleMatchGQL: ScheduleMatchGQL, locateMatchQGL: LocateMatchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submitResultGQL\n                                                  \n                                                        \n                                                                        SubmitResultGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scheduleMatchGQL\n                                                  \n                                                        \n                                                                        ScheduleMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locateMatchQGL\n                                                  \n                                                        \n                                                                        LocateMatchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMatchPlayed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPlayed(match: Match.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                            Match.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isValidResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidResult(score: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            locateMatch\n                        \n                        \n                    \n                \n            \n            \n                \nlocateMatch(matchId: string, pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scheduleMatch\n                        \n                        \n                    \n                \n            \n            \n                \nscheduleMatch(matchId: string, matchKickoff: Date | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchKickoff\n                                    \n                                                Date | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitMatchResult(matchId: string, homeScore: number, guestScore: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/match.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    homeScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    guestScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournamentMatchUpdated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/match.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SubmitResultGQL, MatchFragment, ScheduleMatchGQL, LocateMatchGQL, Match, Pitch } from '../../api/graphql';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchService {\n\n  seasonMatchUpdated = new Subject();\n  tournamentMatchUpdated = new Subject();\n\n  constructor(\n    private submitResultGQL: SubmitResultGQL,\n    private scheduleMatchGQL: ScheduleMatchGQL,\n    private locateMatchQGL: LocateMatchGQL,\n  ) { }\n\n  public isMatchPlayed(match: Match.Fragment): boolean {\n    return this.isValidResult(match.home_score) && this.isValidResult(match.guest_score);\n  }\n\n  public isValidResult(score: number): boolean {\n    return typeof score === 'number' && score >= 0;\n  }\n\n  submitMatchResult(matchId: string, homeScore: number, guestScore: number): Promise {\n    const result = { home_score: homeScore, guest_score: guestScore };\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.submitResultGQL.mutate(\n            {\n              match_id: matchId,\n              ...result\n            },\n            {\n              update: (store, { data }) => {\n                const match: any = store.readFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Match',\n                    fragment: MatchFragment,\n                    id: `Match:${matchId}`,\n                    data: {\n                      __typename: 'Match',\n                      ...match,\n                      ...result\n                    }\n                  }\n                );\n              }\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n  }\n\n  scheduleMatch(matchId: string, matchKickoff: Date | string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        const kickoff = typeof matchKickoff === 'string' ? matchKickoff : matchKickoff.toISOString();\n        this.scheduleMatchGQL.mutate(\n          {\n            match_id: matchId,\n            kickoff: kickoff\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    kickoff: matchKickoff\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  locateMatch(matchId: string, pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.locateMatchQGL.mutate(\n          {\n            match_id: matchId,\n            pitch_id: pitch.id\n          },\n          {\n            update: (store, { data }) => {\n              const match: any = store.readFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`\n                }\n              );\n              store.writeFragment(\n                {\n                  fragmentName: 'Match',\n                  fragment: MatchFragment,\n                  id: `Match:${matchId}`,\n                  data: {\n                    __typename: 'Match',\n                    ...match,\n                    pitch: pitch\n                  }\n                }\n              );\n            }\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatchplanComponent.html":{"url":"components/MatchplanComponent.html","title":"component - MatchplanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatchplanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matchplan/matchplan.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matchplan\n            \n\n            \n                styleUrls\n                ./matchplan.component.css\n            \n\n\n\n            \n                templateUrl\n                ./matchplan.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hidePlayed\n                            \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                    Public\n                                matchesGQL\n                            \n                            \n                                    Public\n                                matchPlanGQL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                selectedMatchDayId\n                            \n                            \n                                selectedTeamId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMatchDays\n                            \n                            \n                                filterMatches\n                            \n                            \n                                handleGetMatches\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filterActive\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, matchPlanGQL: MatchPlanGQL, matchService: MatchService, rankingGQL: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/matchplan/matchplan.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchPlanGQL\n                                                  \n                                                        \n                                                                        MatchPlanGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingGQL\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatchDays\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatchDays(matchDays: MatchDay.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchDays\n                                    \n                                            MatchDay.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatchDay.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterMatches\n                        \n                        \n                    \n                \n            \n            \n                \nfilterMatches(matches: Match.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                            Match.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Match.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleGetMatches\n                        \n                        \n                    \n                \n            \n            \n                \nhandleGetMatches()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/matchplan/matchplan.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePlayed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(HIDE_PLAYED_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchesGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchPlanGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatchPlanGQL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMatchDayId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_MATCHDAY_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTeamId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0'\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TEAM_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filterActive\n                    \n                \n\n                \n                    \n                        getfilterActive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/matchplan/matchplan.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { I18Service } from '../../services/i18.service';\nimport { Observable } from 'rxjs';\nimport { MatchPlanGQL, MatchPlan, Match, MatchDay, RankingGQL, MatchGQL } from '../../../api/graphql';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nconst HIDE_PLAYED_KEY = 'HIDE_PLAYED';\nconst SELECTED_MATCHDAY_KEY = 'SELECTED_MATCHDAY';\nconst SELECTED_TEAM_KEY = 'SELECTED_TEAM';\n\n@Component({\n  selector: 'app-matchplan',\n  templateUrl: './matchplan.component.html',\n  styleUrls: ['./matchplan.component.css']\n})\nexport class MatchplanComponent implements OnInit {\n\n  public matchesGQL: Observable;\n\n  @LocalStorage(HIDE_PLAYED_KEY) hidePlayed: boolean;\n\n  @LocalStorage(SELECTED_MATCHDAY_KEY) selectedMatchDayId = '0';\n\n  @LocalStorage(SELECTED_TEAM_KEY) selectedTeamId = '0';\n\n  public get filterActive(): boolean {\n    return this.hidePlayed;\n  }\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public matchPlanGQL: MatchPlanGQL,\n    private matchService: MatchService,\n    private rankingGQL: RankingGQL\n  ) { }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.handleGetMatches();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.rankingGQL.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  filterMatchDays(matchDays: MatchDay.Fragment[]): MatchDay.Fragment[] {\n\n    return this.selectedMatchDayId !== '0' ? matchDays.filter(x => x.id === this.selectedMatchDayId) : matchDays;\n\n  }\n\n  filterMatches(matches: Match.Fragment[]): Match.Fragment[] {\n\n    return this.selectedTeamId !== '0' ?\n      matches.filter(x => x.guest_team.id === this.selectedTeamId || x.home_team.id === this.selectedTeamId) :\n      matches;\n\n  }\n\n  handleGetMatches() {\n    this.matchesGQL = this.matchPlanGQL.watch(\n      { id: this.seasonService.currentSeason.getValue().id } ).valueChanges.pipe(\n      map(\n        ({ data }) => {\n          data.season.teams = data.season.teams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1);\n          if (this.selectedMatchDayId && !data.season.match_days.find(x => x.id === this.selectedMatchDayId)) {\n            this.selectedMatchDayId = '0';\n          }\n          if (this.selectedTeamId && !data.season.teams.find(x => x.id === this.selectedTeamId)) {\n            this.selectedTeamId = '0';\n          }\n          return data.season;\n        }\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      \n        \n          \n            \n              {{ 'ALL_MATCHDAYS' | translate }}\n            \n            \n              {{ matchDay.number }}\n              \n                {{ matchDay.number }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ 'ALL_TEAMS' | translate }}\n            \n            \n              {{ team.name }}\n            \n          \n        \n      \n      \n        \n          filter_list\n          filter_list\n        \n        \n          \n            {{ 'HIDE_PLAYED_MATCHES' | translate }}\n          \n        \n      \n    \n  \n  \n    \n        \n          {{ 'MATCHDAY' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:'shortDate':'':i18Service.currentLang }}&nbsp;-&nbsp;{{ matchDay.end_date| date:'shortDate':'':i18Service.currentLang }})\n        \n        \n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./matchplan.component.css\n                \n                .spacer {\n    flex: 1 1 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ \\'ALL_MATCHDAYS\\' | translate }}                                      {{ matchDay.number }}                              {{ matchDay.number }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                                                                                    {{ \\'ALL_TEAMS\\' | translate }}                                      {{ team.name }}                                                            filter_list          filter_list                                      {{ \\'HIDE_PLAYED_MATCHES\\' | translate }}                                                      {{ \\'MATCHDAY\\' | translate:{matchDay: matchDay.number} }} ({{ matchDay.start_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }} - {{ matchDay.end_date| date:\\'shortDate\\':\\'\\':i18Service.currentLang }})                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatchplanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanModule.html":{"url":"modules/MatchplanModule.html","title":"module - MatchplanModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MatchplanComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppCoreModule\n                        \n                        \n                            MatchplanRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatchplanComponent } from './matchplan.component';\nimport { MatchplanRoutingModule } from './matchplan-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AppCoreModule } from '../../app-core.module';\n\n@NgModule({\n  imports: [\n    MatchplanRoutingModule,\n    SharedModule,\n    AppCoreModule\n  ],\n  declarations: [\n    MatchplanComponent\n  ]\n})\nexport class MatchplanModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatchplanRoutingModule.html":{"url":"modules/MatchplanRoutingModule.html","title":"module - MatchplanRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MatchplanRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/matchplan/matchplan-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatchplanComponent } from './matchplan.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MatchplanComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MatchplanRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgModule } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { MatDialogModule, MatStepperModule, MatInputModule, MatAutocompleteModule, MatTabsModule, MatMenuModule, MatListModule, MatDatepickerModule, MatNativeDateModule, MatTooltipModule, MatSnackBarModule, MatProgressBarModule, MatSliderModule, MatSlideToggleModule, MatProgressSpinnerModule, MatCardModule } from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatCardModule,\n        MatDividerModule,\n        MatIconModule,\n        MatSelectModule,\n        MatProgressSpinnerModule,\n        MatSlideToggleModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatDialogModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatSnackBarModule,\n        MatMenuModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatListModule,\n        MatTooltipModule,\n        MatAutocompleteModule\n    ],\n    exports: [\n        MatCardModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatNativeDateModule,\n        MatDividerModule,\n        MatSnackBarModule,\n        MatProgressBarModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatAutocompleteModule,\n        MatIconModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        MatStepperModule,\n        MatInputModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatListModule,\n        MatProgressSpinnerModule\n    ],\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewpasswordComponent.html":{"url":"components/NewpasswordComponent.html","title":"component - NewpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newpassword/newpassword.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-newpassword\n            \n\n            \n                styleUrls\n                ./newpassword.component.css\n            \n\n\n\n            \n                templateUrl\n                ./newpassword.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                loginForm\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, activatedRoute: ActivatedRoute, formBuilder: FormBuilder, translateService: TranslateService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/newpassword/newpassword.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/newpassword/newpassword.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NotificationService } from 'src/app/services/notification.service';\n\n@Component({\n  selector: 'app-newpassword',\n  templateUrl: './newpassword.component.html',\n  styleUrls: ['./newpassword.component.css']\n})\nexport class NewpasswordComponent implements OnInit {\n\n  loginForm: FormGroup;\n  token: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private translateService: TranslateService,\n    private notify: NotificationService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe(\n      async (params) => {\n        if (params['token']) {\n          this.authService.accessToken = params['token'];\n          const user = await this.authService.loadUser();\n          if (user) {\n            this.token = params['token'];\n          } else {\n            this.authService.logout();\n          }\n        }\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      await this.authService.changePassword(this.loginForm.value.password);\n      this.authService.logout();\n      this.notify.showSuccessNotification(this.translateService.instant('PASSWORD_CHANGED_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('PASSWORD_CHANGED_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n       Hi {{ authService.user.first_name }} !\n    \n    \n      PASSWORD_FORGOT_TEXT\n    \n    \n      \n        \n          \n          \n            PASSWORD_REQUIRED\n          \n        \n      \n      \n        \n          {{ 'BUTTON.OK' | translate }}\n        \n      \n    \n  \n  \n    \n      \n        ERRORS.PASSWORD_TOKEN_INVALID\n      \n    \n  \n\n    \n\n    \n                \n                    ./newpassword.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Hi {{ authService.user.first_name }} !              PASSWORD_FORGOT_TEXT                                                      PASSWORD_REQUIRED                                                {{ \\'BUTTON.OK\\' | translate }}                                        ERRORS.PASSWORD_TOKEN_INVALID            '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordModule.html":{"url":"modules/NewpasswordModule.html","title":"module - NewpasswordModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NewpasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NewpasswordRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewpasswordComponent } from './newpassword.component';\nimport { NewpasswordRoutingModule } from './newpassword-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NewpasswordRoutingModule,\n    SharedModule\n  ],\n  declarations: [\n    NewpasswordComponent\n  ]\n})\nexport class NewpasswordModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewpasswordRoutingModule.html":{"url":"modules/NewpasswordRoutingModule.html","title":"module - NewpasswordRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    NewpasswordRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/newpassword/newpassword-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewpasswordComponent } from './newpassword.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewpasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class NewpasswordRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultDuration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorNotification\n                            \n                            \n                                    Private\n                                showNotification\n                            \n                            \n                                showSuccessNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showNotification(title: string, message: string, type: \"danger\" | \"success\", duration?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            \"danger\" | \"success\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessNotification(title: string, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultDuration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 6000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { SnackbarComponent } from '../components/shared/snackbar/snackbar.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  defaultDuration = 6000;\n\n  constructor(\n    private snackBar: MatSnackBar\n  ) { }\n\n  showSuccessNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'success');\n  }\n\n  showErrorNotification(title: string, message?: string) {\n    this.showNotification(title, message, 'danger');\n  }\n\n  private showNotification(title: string, message: string, type: 'danger' | 'success', duration?: number) {\n    this.snackBar.openFromComponent(SnackbarComponent, {\n      data: {\n        title: title,\n        message: message\n      },\n      duration: duration || this.defaultDuration,\n      panelClass: ['alert', `alert-${type}`]\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordChangeGQL.html":{"url":"injectables/PasswordChangeGQL.html","title":"injectable - PasswordChangeGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordChangeGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1134\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetGQL.html":{"url":"injectables/PasswordResetGQL.html","title":"injectable - PasswordResetGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1121\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchService.html":{"url":"injectables/PitchService.html","title":"injectable - PitchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/pitch.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allPitches\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewPitch\n                            \n                            \n                                    Async\n                                deletePitch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchesGQL: PitchesGQL, createPitchGQL: CreatePitchGQL, deletePitchGQL: DeletePitchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/pitch.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchesGQL\n                                                  \n                                                        \n                                                                        PitchesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createPitchGQL\n                                                  \n                                                        \n                                                                        CreatePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deletePitchGQL\n                                                  \n                                                        \n                                                                        DeletePitchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewPitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewPitch(pitch: Pitch.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitch\n                                    \n                                            Pitch.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePitch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePitch(pitchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/pitch.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pitchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allPitches\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/pitch.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pitch, PitchesGQL, CreatePitchGQL, DeletePitchGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuidv4 from 'uuid/v4';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitchService {\n\n  allPitches: Observable = this.pitchesGQL.watch().valueChanges.pipe(\n    map(({ data }) => data.allPitches.sort((a, b) => a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private pitchesGQL: PitchesGQL,\n    private createPitchGQL: CreatePitchGQL,\n    private deletePitchGQL: DeletePitchGQL\n  ) {\n  }\n\n  async deletePitch(pitchId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deletePitchGQL.mutate({\n            pitch_id: pitchId\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  async createNewPitch(pitch: Pitch.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.createPitchGQL.mutate({\n            id: uuidv4(),\n            label: pitch.label,\n            longitude: pitch.location_longitude,\n            latitude: pitch.location_latitude\n          },\n            {\n              refetchQueries: [\n                {\n                  query: this.pitchesGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PitchesComponent.html":{"url":"components/PitchesComponent.html","title":"component - PitchesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PitchesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/pitches/pitches.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pitches\n            \n\n            \n                styleUrls\n                ./pitches.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pitches.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pitchService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pitchService: PitchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/pitches/pitches.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pitchService\n                                                  \n                                                        \n                                                                        PitchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pitchService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PitchService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/pitches/pitches.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PitchService } from '../../../services/pitch.service';\n\n@Component({\n  selector: 'app-pitches',\n  templateUrl: './pitches.component.html',\n  styleUrls: ['./pitches.component.css']\n})\nexport class PitchesComponent implements OnInit {\n\n  constructor(\n    public pitchService: PitchService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{ pitch.label}}\n          \n          \n            \n              \n                \n                  {{ 'LOCATION' | translate }}\n                \n                \n                  \n                    \n                      location_on\n                    \n                    {{ pitch.label }}\n                  \n                \n              \n              \n                \n                  {{ 'PITCH_CONTACT' | translate }}\n                \n                \n                  \n                    \n                  \n                  \n                    {{ 'NO_CONTACT_SET' | translate}}\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./pitches.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{ pitch.label}}                                                                                {{ \\'LOCATION\\' | translate }}                                                                                            location_on                                        {{ pitch.label }}                                                                                                {{ \\'PITCH_CONTACT\\' | translate }}                                                                                                                              {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PitchesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PitchesGQL.html":{"url":"injectables/PitchesGQL.html","title":"injectable - PitchesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PitchesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1616\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingGQL.html":{"url":"injectables/RankingGQL.html","title":"injectable - RankingGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RankingGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1630\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisEventGQL.html":{"url":"injectables/RedisEventGQL.html","title":"injectable - RedisEventGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RedisEventGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphqlsubs.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphqlsubs.ts:52\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport type DateTime = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace RedisEvent {\n  export type Variables = {};\n\n  export type Subscription = {\n    __typename?: \"Subscription\";\n\n    redisevent: Maybe;\n  };\n\n  export type Redisevent = {\n    __typename?: \"RedisEvent\";\n\n    id: string;\n\n    occurredAt: DateTime;\n\n    payload: Maybe;\n\n    type: Maybe;\n  };\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RedisEventGQL extends Apollo.Subscription {\n  document: any = gql`\n    subscription RedisEvent {\n      redisevent {\n        id\n        occurredAt\n        payload\n        type\n      }\n    }\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\nexport interface IntrospectionResultData {\n  __schema: {\n    types: {\n      kind: string;\n      name: string;\n      possibleTypes: {\n        name: string;\n      }[];\n    }[];\n  };\n}\n\nconst result: IntrospectionResultData = {\n  __schema: {\n    types: []\n  }\n};\n\nexport default result;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveRankingPenaltyGQL.html":{"url":"injectables/RemoveRankingPenaltyGQL.html","title":"injectable - RemoveRankingPenaltyGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveRankingPenaltyGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1172\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RemoveTeamFromSeasonGQL.html":{"url":"injectables/RemoveTeamFromSeasonGQL.html","title":"injectable - RemoveTeamFromSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RemoveTeamFromSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1278\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RenameTeamComponent.html":{"url":"components/RenameTeamComponent.html","title":"component - RenameTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RenameTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rename-team\n            \n\n            \n                styleUrls\n                ./rename-team.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rename-team.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, teamService: TeamService, notify: NotificationService, translateService: TranslateService, team: Team.Fragment)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        team\n                                                  \n                                                        \n                                                                    Team.Fragment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renameTeam(newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            team\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Team.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageteams/rename-team/rename-team.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team, RenameTeamGQL, TeamFragment } from 'src/api/graphql';\nimport { TeamService } from '../../../../services/team.service';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-rename-team',\n  templateUrl: './rename-team.component.html',\n  styleUrls: ['./rename-team.component.css']\n})\nexport class RenameTeamComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private teamService: TeamService,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public team: Team.Fragment\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n  async renameTeam(newName: string) {\n    try {\n      await this.teamService.renameTeam(this.team.id, newName);\n      this.notify.showSuccessNotification(this.translateService.instant('RENAME_TEAM_SUCCESS'));\n      this.dialogRef.close();\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('RENAME_TEAM_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ 'TEAM' | translate }} {{team.name}}\n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n          save\n        \n      \n    \n  \n\n\n  {{'BUTTON.CLOSE' | translate }}\n\n    \n\n    \n                \n                    ./rename-team.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'TEAM\\' | translate }} {{team.name}}                                                          save                      {{\\'BUTTON.CLOSE\\' | translate }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RenameTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RenameTeamGQL.html":{"url":"injectables/RenameTeamGQL.html","title":"injectable - RenameTeamGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RenameTeamGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1387\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RescheduleMatchDayGQL.html":{"url":"injectables/RescheduleMatchDayGQL.html","title":"injectable - RescheduleMatchDayGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RescheduleMatchDayGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1307\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoundTeam.html":{"url":"interfaces/RoundTeam.html","title":"interface - RoundTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RoundTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guestTeam\n                                \n                                \n                                        homeTeam\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guestTeam\n                                    \n                                \n                                \n                                    \n                                        guestTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeam\n                                    \n                                \n                                \n                                    \n                                        homeTeam:     Team.Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Team.Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MatDialogRef, MAT_DIALOG_DATA, MatSelectChange } from '@angular/material';\nimport { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { TeamService } from '../../../../services/team.service';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { I18Service } from '../../../../services/i18.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { Team, CreateTournamentRoundGQL, TeamIdPair, AllTournamentListGQL, TournamentGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from 'src/app/services/notification.service';\n\nexport interface AddMatchData {\n  round: number;\n  tournamentId: string;\n  teams: RoundTeam[];\n  dates: {from: Date, to: Date};\n}\nexport interface RoundTeam {\n  homeTeam: Team.Fragment;\n  guestTeam: Team.Fragment;\n}\n@Component({\n  selector: 'app-edit-tournament-round',\n  templateUrl: 'edit-tournament-round.component.html'\n})\nexport class EditTournamentRoundComponent implements OnInit {\n\n  @ViewChild('planDateTo') planDateTo;\n  @ViewChild('planDateFrom') planDateFrom;\n\n  @ViewChild('home') home;\n  @ViewChild('guest') guest;\n\n  allTeams: Observable;\n\n  roundTeams: RoundTeam[] = new Array();\n  newRoundPlanDateFrom: Date;\n  newRoundPlanDateTo: Date;\n\n  constructor(\n    private allTournamentsQGL: AllTournamentListGQL,\n    public dialogRef: MatDialogRef,\n    public teamService: TeamService,\n    dateTimeAdapter: DateTimeAdapter,\n    private translateService: TranslateService,\n    private i18Service: I18Service,\n    private createRoundGQL: CreateTournamentRoundGQL,\n    private notify: NotificationService,\n    private tournamentQGL: TournamentGQL,\n    @Inject(MAT_DIALOG_DATA) public data: AddMatchData) {\n    dateTimeAdapter.setLocale(this.i18Service.currentLang);\n    this.translateService.onLangChange.subscribe(\n      (lang) => {\n        dateTimeAdapter.setLocale(lang);\n      }\n    );\n    if (data.teams) {\n      this.roundTeams = data.teams;\n    }\n    if (data.dates) {\n      this.newRoundPlanDateFrom = data.dates.from;\n      this.newRoundPlanDateTo = data.dates.to;\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  addTeam(homeTeam: Team.Fragment, guestTeam: Team.Fragment) {\n\n    if (homeTeam && guestTeam && homeTeam !== guestTeam) {\n      this.roundTeams.push({\n        homeTeam: homeTeam,\n        guestTeam: guestTeam\n      });\n      this.home.value = null;\n      this.guest.value = null;\n    }\n  }\n\n  removeTeam(index: number) {\n    this.roundTeams.splice(index, 1);\n  }\n\n  async createRound() {\n    try {\n      await this.createRoundGQL.mutate(\n        {\n          tournament_id: this.data.tournamentId,\n          date_period: {\n            from: new Date(this.newRoundPlanDateFrom).toDateString(),\n            to: new Date(this.newRoundPlanDateTo).toDateString()\n          },\n          round: this.data.round,\n          team_id_pairs: this.roundTeams.map((t) => ({ home_team_id: t.homeTeam.id, guest_team_id: t.guestTeam.id }))\n        },\n        {\n          refetchQueries: [\n            {query: this.allTournamentsQGL.document},\n            {query: this.tournamentQGL.document, variables: {id: this.data.tournamentId}}\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('CREATE_TOURNAMENT_ROUND_SUCCESS'));\n      this.dialogRef.close(true);\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('CREATE_TOURNAMENT__ROUND_ERROR'), error);\n    }\n  }\n\n  setPlanDateFrom(event: any) {\n    this.newRoundPlanDateFrom = event.value;\n  }\n\n  setPlanDateTo(event: any) {\n    this.newRoundPlanDateTo = event.value;\n  }\n\n  isRoundValid(): boolean {\n    return this.newRoundPlanDateFrom && this.newRoundPlanDateTo && this.roundTeams.length > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleMatchGQL.html":{"url":"injectables/ScheduleMatchGQL.html","title":"injectable - ScheduleMatchGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleMatchGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1082\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonPenaltiesGQL.html":{"url":"injectables/SeasonPenaltiesGQL.html","title":"injectable - SeasonPenaltiesGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonPenaltiesGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1593\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeasonService.html":{"url":"injectables/SeasonService.html","title":"injectable - SeasonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeasonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/season.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _currentSeason\n                            \n                            \n                                currentSeason\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createSeason\n                            \n                            \n                                seasonCompare\n                            \n                            \n                                    Async\n                                startSeason\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(allSeasonsListGQL: AllSeasonsListGQL, startSeasonGQL: StartSeasonGQL, createSeasonGQL: CreateSeasonGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startSeasonGQL\n                                                  \n                                                        \n                                                                        StartSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createSeasonGQL\n                                                  \n                                                        \n                                                                        CreateSeasonGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeason(seasonName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            seasonCompare\n                        \n                        \n                    \n                \n            \n            \n                \nseasonCompare(c1: any, c2: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startSeason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startSeason(seasonId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/season.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    seasonId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_SEASON_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSeason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this._currentSeason)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/season.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AllSeasonsList, AllSeasonsListGQL, CreateSeasonGQL, StartSeasonGQL } from '../../api/graphql';\nimport * as uuid from 'uuid/v4';\nimport { LocalStorage } from 'ngx-store';\n\nconst SELECTED_SEASON_KEY = 'SELECTED_SEASON';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeasonService {\n\n  @LocalStorage(SELECTED_SEASON_KEY) _currentSeason: AllSeasonsList.AllSeasons;\n\n  currentSeason: BehaviorSubject = new BehaviorSubject(this._currentSeason);\n\n  constructor(\n    private allSeasonsListGQL: AllSeasonsListGQL,\n    private startSeasonGQL: StartSeasonGQL,\n    private createSeasonGQL: CreateSeasonGQL\n  ) {\n    this.currentSeason.subscribe(\n      (season) => {\n        if (season) {\n          this._currentSeason = season;\n        }\n      }\n    );\n  }\n\n  public async createSeason(seasonName: string): Promise {\n    return new Promise(\n      (resolve, reject) => {\n        this.createSeasonGQL.mutate(\n          {\n            id: uuid(),\n            name: seasonName\n          },\n          {\n            refetchQueries: [\n              { query: this.allSeasonsListGQL.document }\n            ]\n          }\n        ).subscribe(\n          () => {\n            resolve();\n          },\n          (error) => {\n            reject(error);\n          }\n        );\n      }\n    );\n  }\n\n  async startSeason(seasonId: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.startSeasonGQL.mutate(\n            {\n              id: seasonId\n            },\n            {\n              refetchQueries: [\n                {\n                  query: this.allSeasonsListGQL.document\n                }\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  seasonCompare(c1: any, c2: any) {\n    return c1 && c2 && c1.id === c2.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonchooserComponent.html":{"url":"components/SeasonchooserComponent.html","title":"component - SeasonchooserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SeasonchooserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/seasonchooser/seasonchooser.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonchooser\n            \n\n            \n                styleUrls\n                ./seasonchooser.component.css\n            \n\n\n\n            \n                templateUrl\n                ./seasonchooser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                season\n                            \n                            \n                                seasonList\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                SeasonState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentSeasonChanged\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                seasonChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, allSeasonsListGQL: AllSeasonsListGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allSeasonsListGQL\n                                                  \n                                                        \n                                                                        AllSeasonsListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterStates\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [SeasonState.Progress, SeasonState.Ended]\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        seasonChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            currentSeasonChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncurrentSeasonChanged(event: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            season\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AllSeasonsList.AllSeasons\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seasonList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SeasonState\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/seasonchooser/seasonchooser.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { SeasonService } from '../../../services/season.service';\nimport { MatSelectChange } from '@angular/material';\nimport { AllSeasonsList, SeasonState, AllSeasonsListGQL } from 'src/api/graphql';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-seasonchooser',\n  templateUrl: './seasonchooser.component.html',\n  styleUrls: ['./seasonchooser.component.css']\n})\nexport class SeasonchooserComponent implements OnInit {\n\n  @Input() filterStates: Array = [SeasonState.Progress, SeasonState.Ended];\n  season: AllSeasonsList.AllSeasons;\n  seasonList: Observable;\n  @Output() seasonChanged: EventEmitter = new EventEmitter();\n\n  SeasonState = SeasonState;\n\n  constructor(\n    public seasonService: SeasonService,\n    private allSeasonsListGQL: AllSeasonsListGQL\n  ) { }\n\n  ngOnInit() {\n    this.seasonService.currentSeason.subscribe(\n      (season) => {\n        this.season = season;\n      }\n    );\n    this.seasonList = this.allSeasonsListGQL.watch().valueChanges.pipe(\n      map(\n        ({ data }) => {\n          let p = data.allSeasons.filter(s => this.filterStates.some(x => x === s.state));\n          p = p.sort((a, b) => {\n\n            const aState = a.state.toLocaleLowerCase();\n            const bState = b.state.toLocaleLowerCase();\n            if (aState > bState) {\n              return -1;\n            }\n            if (aState  bName) {\n              return 1;\n            }\n            if (aName \n    \n\n    \n        \n  \n    \n      {{ season.name }} {{ season.state !== SeasonState.Progress ? ('(' + ('SeasonState.' + season.state | translate) + ')') : ''  }}\n    \n  \n\n    \n\n    \n                \n                    ./seasonchooser.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ season.name }} {{ season.state !== SeasonState.Progress ? (\\'(\\' + (\\'SeasonState.\\' + season.state | translate) + \\')\\') : \\'\\'  }}      '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonchooserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            SeasonchooserComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            CreatePitchDialogComponent\n                        \n                        \n                            EditPitchContactDialogComponent\n                        \n                        \n                            EditmatchPitchComponent\n                        \n                        \n                            EditmatchResultComponent\n                        \n                        \n                            EditmatchTimeComponent\n                        \n                        \n                            SnackbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CancelMatchDialogComponent\n                        \n                        \n                            ContactPersonComponent\n                        \n                        \n                            EditContactComponent\n                        \n                        \n                            MatchComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            SeasonchooserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatchComponent } from './match/match.component';\nimport { MaterialModule } from '../../material.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SeasonchooserComponent } from './seasonchooser/seasonchooser.component';\nimport { EditmatchResultComponent } from './editmatch/editmatch.result.component';\nimport { EditmatchTimeComponent } from './editmatch/editmatch.time.component';\nimport { EditmatchPitchComponent } from './editmatch/editmatch.pitch.component';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ContactPersonComponent } from './contact-person/contact-person.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\nimport { EditPitchContactDialogComponent } from './edit-pitch-contact-dialog/edit-pitch-contact-dialog.component';\nimport { CreatePitchDialogComponent } from './create-pitch-dialog/create-pitch-dialog.component';\nimport { CancelMatchDialogComponent } from './cancel-match-dialog/cancel-match-dialog.component';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    TranslateModule\n  ],\n  entryComponents: [\n    ContactComponent,\n    EditmatchResultComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  declarations: [\n    MatchComponent,\n    ContactComponent,\n    EditmatchResultComponent,\n    SeasonchooserComponent,\n    EditmatchTimeComponent,\n    EditmatchPitchComponent,\n    SnackbarComponent,\n    ContactPersonComponent,\n    EditContactComponent,\n    EditPitchContactDialogComponent,\n    CreatePitchDialogComponent,\n    CancelMatchDialogComponent,\n    ConfirmDialogComponent\n  ],\n  exports: [\n    CommonModule,\n    MatchComponent,\n    ReactiveFormsModule,\n    ContactPersonComponent,\n    TranslateModule,\n    FormsModule,\n    SeasonchooserComponent,\n    MaterialModule,\n    OwlDateTimeModule,\n    EditContactComponent,\n    OwlNativeDateTimeModule,\n    CancelMatchDialogComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SnackbarComponent.html":{"url":"components/SnackbarComponent.html","title":"component - SnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shared/snackbar/snackbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-snackbar\n            \n\n            \n                styleUrls\n                ./snackbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./snackbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ISnackBarData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shared/snackbar/snackbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ISnackBarData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ISnackBarData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_SNACK_BAR_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/shared/snackbar/snackbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material';\n\nexport interface ISnackBarData {\n  title: string;\n  message: string;\n}\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_SNACK_BAR_DATA) public data: ISnackBarData\n  ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  {{ data.title }}\n\n\n    {{ data.message }}\n\n\n    \n\n    \n                \n                    ./snackbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.title }}    {{ data.message }}'\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StartSeasonGQL.html":{"url":"injectables/StartSeasonGQL.html","title":"injectable - StartSeasonGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StartSeasonGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1323\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmitResultGQL.html":{"url":"injectables/SubmitResultGQL.html","title":"injectable - SubmitResultGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmitResultGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1061\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TableComponent.html":{"url":"components/TableComponent.html","title":"component - TableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/table/table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-table\n            \n\n            \n                styleUrls\n                ./table.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                rankingQGL\n                            \n                            \n                                    Public\n                                seasonService\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPenaltyForTeam\n                            \n                            \n                                getRanking\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openPenaltyDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(seasonService: SeasonService, i18Service: I18Service, snackBar: MatSnackBar, matchService: MatchService, ranking: RankingGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seasonService\n                                                  \n                                                        \n                                                                        SeasonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ranking\n                                                  \n                                                        \n                                                                        RankingGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPenaltyForTeam\n                        \n                        \n                    \n                \n            \n            \n                \ngetPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Penalty.Fragment[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRanking\n                        \n                        \n                    \n                \n            \n            \n                \ngetRanking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPenaltyDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenPenaltyDialog(penalties: Penalty.Fragment[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/table/table.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    penalties\n                                    \n                                            Penalty.Fragment[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rankingQGL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seasonService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SeasonService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/table/table.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SeasonService } from '../../services/season.service';\nimport { Ranking, RankingGQL, Team, Penalty } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { I18Service } from '../../services/i18.service';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatchService } from 'src/app/services/match.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  rankingQGL: Observable;\n\n  constructor(\n    public seasonService: SeasonService,\n    public i18Service: I18Service,\n    public snackBar: MatSnackBar,\n    private matchService: MatchService,\n    private ranking: RankingGQL\n  ) {\n  }\n\n  ngOnInit() {\n    if (this.seasonService.currentSeason.getValue()) {\n      this.getRanking();\n    }\n    this.matchService.seasonMatchUpdated.subscribe(\n      (event) => {\n        this.ranking.watch({ id: event.seasonId }, { fetchPolicy: 'network-only' }).refetch();\n      }\n    );\n  }\n\n  getRanking() {\n    this.rankingQGL = this.ranking.watch({ id: this.seasonService.currentSeason.getValue().id }).valueChanges.pipe(\n      map((result) => result.data.season.ranking)\n    );\n  }\n\n  getPenaltyForTeam(penalties: Penalty.Fragment[], team: Team.Fragment): Penalty.Fragment[] {\n    const p = penalties.filter(t => t.team.id === team.id);\n    return p.length === 0 ? null : p;\n  }\n\n  openPenaltyDialog(penalties: Penalty.Fragment[]) {\n    console.log(penalties);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      \n        \n          \n            TABLE.PLACE\n            TABLE.TEAM\n            TABLE.GAMES\n            TABLE.WIN_DRAW_LOST\n            TABLE.TORE:TORE\n            TABLE.POINTS\n          \n        \n        \n          \n            \n              {{ pos.number }}\n              {{ pos.team.name }}\n              {{ pos.matches }}\n              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}\n              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})\n              \n                \n                  {{ pos.points }}\n                \n              \n              \n                \n                  {{ pos.points }}\n                    \n                      warning\n                    \n                \n              \n            \n          \n        \n      \n      \n        {{ 'LAST_UPDATED_AT' | translate }}: ({{ ranking.updated_at | date:'medium':'':i18Service.currentLang}})\n      \n    \n  \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./table.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            TABLE.PLACE            TABLE.TEAM            TABLE.GAMES            TABLE.WIN_DRAW_LOST            TABLE.TORE:TORE            TABLE.POINTS                                                              {{ pos.number }}              {{ pos.team.name }}              {{ pos.matches }}              {{ pos.wins }}:{{ pos.draws }}:{{ pos.losses }}              {{ pos.scored_goals }}:{{ pos.conceded_goals }} ({{ pos.scored_goals - pos.conceded_goals }})                                                {{ pos.points }}                                                                              {{ pos.points }}                                          warning                                                                                                    {{ \\'LAST_UPDATED_AT\\' | translate }}: ({{ ranking.updated_at | date:\\'medium\\':\\'\\':i18Service.currentLang}})                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\n\nTableComponent\n\nTableComponent\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TableComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TableRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableRoutingModule } from './table-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TableRoutingModule\n  ],\n  declarations: [\n    TableComponent\n  ]\n})\nexport class TableModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableRoutingModule.html":{"url":"modules/TableRoutingModule.html","title":"module - TableRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TableRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/table/table-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TableComponent } from './table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TableComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ]\n})\nexport class TableRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamIdPair.html":{"url":"interfaces/TeamIdPair.html","title":"interface - TeamIdPair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeamIdPair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        guest_team_id\n                                \n                                \n                                        home_team_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        guest_team_id\n                                    \n                                \n                                \n                                    \n                                        guest_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        home_team_id\n                                    \n                                \n                                \n                                    \n                                        home_team_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/team.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to load/save everything related to Teams\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                renameTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createTeamQL: CreateTeamGQL, allTeamsGQL: AllTeamsGQL, renameTeamGQL: RenameTeamGQL, deleteTeamGQL: DeleteTeamGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/team.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createTeamQL\n                                                  \n                                                        \n                                                                        CreateTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTeamsGQL\n                                                  \n                                                        \n                                                                        AllTeamsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameTeamGQL\n                                                  \n                                                        \n                                                                        RenameTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteTeamGQL\n                                                  \n                                                        \n                                                                        DeleteTeamGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewTeam\n                        \n                        \n                    \n                \n            \n            \n                \naddNewTeam(teamName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:35\n                \n            \n\n\n            \n                \n                    Calls the API to create a new Team\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteTeam\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteTeam(team: Team.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    team\n                                    \n                                            Team.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameTeam\n                        \n                        \n                    \n                \n            \n            \n                \nrenameTeam(teamId: string, newName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/team.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTeams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/team.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CreateTeamGQL, Team, AllTeamsGQL, RenameTeamGQL, TeamFragment, DeleteTeamGQL } from '../../api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as uuid from 'uuid/v4';\n\n/**\n * Service to load/save everything related to Teams\n * @export\n * @class TeamService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  allTeams: Observable = this.allTeamsGQL.watch().valueChanges.pipe(\n    map(({data}) => data.allTeams.sort((a, b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1))\n  );\n\n  constructor(\n    private createTeamQL: CreateTeamGQL,\n    private allTeamsGQL: AllTeamsGQL,\n    private renameTeamGQL: RenameTeamGQL,\n    private deleteTeamGQL: DeleteTeamGQL\n  ) {\n  }\n\n  /**\n   * Calls the API to create a new Team\n   * @param {string} teamName\n   * @returns {Promise}\n   * @memberof TeamService\n   */\n  addNewTeam(teamName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!teamName) {\n          reject(new Error('Empty Teamname'));\n        }\n        try {\n          await this.createTeamQL.mutate(\n            {\n              id: uuid(),\n              name: teamName\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  renameTeam(teamId: string, newName: string): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.renameTeamGQL.mutate(\n            {\n              team_id: teamId,\n              new_name: newName\n            },\n            {\n              update: (store, { data }) => {\n                const team: any = store.readFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`\n                  }\n                );\n                store.writeFragment(\n                  {\n                    fragmentName: 'Team',\n                    fragment: TeamFragment,\n                    id: `Team:${teamId}`,\n                    data: {\n                      __typename: 'Team',\n                      ...team,\n                      name: newName\n                    }\n                  }\n                );\n              },\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n\n  deleteTeam(team: Team.Fragment): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        try {\n          await this.deleteTeamGQL.mutate(\n            {\n              team_id: team.id\n            },\n            {\n              refetchQueries: [\n                {query: this.allTeamsGQL.document}\n              ]\n            }\n          ).toPromise();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamadminComponent.html":{"url":"components/TeamadminComponent.html","title":"component - TeamadminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamadminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/teamadmin/teamadmin.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teamadmin\n            \n\n            \n                styleUrls\n                ./teamadmin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teamadmin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notify\n                            \n                            \n                                    Public\n                                teamService\n                            \n                            \n                                    Public\n                                translateService\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                saveContact\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userQGL: UserGQL, authService: AuthenticationService, teamService: TeamService, updateTeamContact: UpdateTeamContactGQL, notify: NotificationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userQGL\n                                                  \n                                                        \n                                                                        UserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateTeamContact\n                                                  \n                                                        \n                                                                        UpdateTeamContactGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveContact\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveContact(teamId: string, contact: Contact.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contact\n                                    \n                                            Contact.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.authService.user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/teamadmin/teamadmin.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TeamService } from '../../services/team.service';\nimport { UpdateTeamContactGQL, UserGQL, Contact } from 'src/api/graphql';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-teamadmin',\n  templateUrl: './teamadmin.component.html',\n  styleUrls: ['./teamadmin.component.css']\n})\nexport class TeamadminComponent implements OnInit {\n\n  user = this.authService.user;\n\n  constructor(\n    private userQGL: UserGQL,\n    private authService: AuthenticationService,\n    public teamService: TeamService,\n    private updateTeamContact: UpdateTeamContactGQL,\n    public notify: NotificationService,\n    public translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async saveContact(teamId: string, contact: Contact.Fragment) {\n    try {\n      await this.updateTeamContact.mutate(\n        {\n          team_id: teamId,\n          ...contact\n        },\n        {\n          refetchQueries: [\n            { query: this.userQGL.document }\n          ]\n        }\n      ).toPromise();\n      this.notify.showSuccessNotification(this.translateService.instant('TEAM_CONTACT_SAVE_SUCCESS'));\n    } catch (error) {\n      this.notify.showErrorNotification(this.translateService.instant('TEAM_CONTACT_SAVE_ERROR'), error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              EDIT_TEAM_CONTACT_INFO_TEXT\n                \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./teamadmin.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        EDIT_TEAM_CONTACT_INFO_TEXT                                                          '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamadminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TeamadminGuard.html":{"url":"guards/TeamadminGuard.html","title":"guard - TeamadminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TeamadminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                canLoad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/teamadmin/teamadmin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canLoad\n                        \n                        \n                    \n                \n            \n            \n                \ncanLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/teamadmin/teamadmin.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamadminGuard implements CanActivate, CanLoad {\n\n  constructor(private authService: AuthenticationService) {\n\n  }\n\n  canLoad() {\n    return this.authService.isTeamAdmin;\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n\n    return this.authService.isTeamAdmin;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminModule.html":{"url":"modules/TeamadminModule.html","title":"module - TeamadminModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TeamadminComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TeamadminRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamadminComponent } from './teamadmin.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TeamadminRoutingModule } from './teamadmin-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TeamadminRoutingModule\n  ],\n  declarations: [TeamadminComponent]\n})\nexport class TeamadminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamadminRoutingModule.html":{"url":"modules/TeamadminRoutingModule.html","title":"module - TeamadminRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TeamadminRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/teamadmin/teamadmin-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TeamadminComponent } from './teamadmin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamadminComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TeamadminRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contactlist/teams/teams.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                styleUrls\n                ./teams.component.css\n            \n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                teamService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contactlist/teams/teams.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contactlist/teams/teams.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            teamService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contactlist/teams/teams.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-teams',\n  templateUrl: './teams.component.html',\n  styleUrls: ['./teams.component.css']\n})\nexport class TeamsComponent implements OnInit {\n\n  constructor(\n    public teamService: TeamService\n  ) { }\n\n  async ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n              {{ team.name}}\n            \n            \n              \n                \n                  \n                    {{ 'TEAM_CONTACT' | translate }}\n                  \n                  \n                    \n                      \n                    \n                    \n                      {{ 'NO_CONTACT_SET' | translate}}\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./teams.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{ team.name}}                                                                                            {{ \\'TEAM_CONTACT\\' | translate }}                                                                                                                                            {{ \\'NO_CONTACT_SET\\' | translate}}                                                                                                              '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TournamentComponent.html":{"url":"components/TournamentComponent.html","title":"component - TournamentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TournamentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tournament/tournament.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tournament\n            \n\n            \n                styleUrls\n                ./tournament.component.less\n            \n\n\n\n            \n                templateUrl\n                ./tournament.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                i18Service\n                            \n                            \n                                selectedTournament\n                            \n                            \n                                tournament\n                            \n                            \n                                tournaments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matchUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tournamentChanged\n                            \n                            \n                                tournamentCompare\n                            \n                            \n                                winnerOfRound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(i18Service: I18Service, allTournamentQGL: AllTournamentListGQL, tournamentQGL: TournamentGQL, matchService: MatchService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18Service\n                                                  \n                                                        \n                                                                        I18Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        allTournamentQGL\n                                                  \n                                                        \n                                                                        AllTournamentListGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tournamentQGL\n                                                  \n                                                        \n                                                                        TournamentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                        MatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                    LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matchUpdated\n                        \n                        \n                    \n                \n            \n            \n                \nmatchUpdated(matchId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tournamentCompare\n                        \n                        \n                    \n                \n            \n            \n                \ntournamentCompare(t1: AllTournamentList.AllTournaments, t2: AllTournamentList.AllTournaments)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    t1\n                                    \n                                            AllTournamentList.AllTournaments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    t2\n                                    \n                                            AllTournamentList.AllTournaments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            winnerOfRound\n                        \n                        \n                    \n                \n            \n            \n                \nwinnerOfRound(round: MatchDay.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tournament/tournament.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    round\n                                    \n                                            MatchDay.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     [] | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            i18Service\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         I18Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tournament.Fragment\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @LocalStorage(SELECTED_TOURNAMENT_KEY)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournament\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tournaments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tournament/tournament.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { I18Service } from '../../services/i18.service';\nimport { AllTournamentListGQL, AllTournamentList, TournamentGQL, Tournament, Team, MatchDay } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LocalStorage, LocalStorageService } from 'ngx-store';\nimport { MatchService } from 'src/app/services/match.service';\n\nexport const SELECTED_TOURNAMENT_KEY = 'SELECTED_TOURNAMENT';\n\n@Component({\n  selector: 'app-tournament',\n  templateUrl: './tournament.component.html',\n  styleUrls: ['./tournament.component.less']\n})\nexport class TournamentComponent implements OnInit {\n\n  tournaments: Observable;\n  tournament: Observable;\n\n  @LocalStorage(SELECTED_TOURNAMENT_KEY) selectedTournament: Tournament.Fragment;\n\n  constructor(\n    public i18Service: I18Service,\n    private allTournamentQGL: AllTournamentListGQL,\n    private tournamentQGL: TournamentGQL,\n    private matchService: MatchService,\n    private localStorageService: LocalStorageService\n  ) { }\n\n  ngOnInit() {\n    this.tournaments = this.allTournamentQGL.watch().valueChanges.pipe(\n      map(({ data }) => data.allTournaments)\n    );\n    if (typeof this.selectedTournament === 'string') {\n      this.localStorageService.remove(SELECTED_TOURNAMENT_KEY);\n    }\n    if (this.selectedTournament) {\n      this.tournamentChanged();\n    }\n    this.matchService.tournamentMatchUpdated.subscribe(\n      (event) => {\n        if (event.tournamentId === this.selectedTournament) {\n          this.matchUpdated(event.matchId);\n        }\n      }\n    );\n  }\n\n  matchUpdated(matchId: string) {\n  }\n\n  tournamentChanged() {\n\n    this.tournament = this.tournamentQGL.watch(\n      {\n        id: this.selectedTournament.id\n      }\n    ).valueChanges.pipe(\n      map(({ data }) => {\n        if (data.tournament && data.tournament.rounds) {\n          data.tournament.rounds = data.tournament.rounds.sort((a, b) => a.number  {\n      if (x.home_score > x.guest_score) {\n        return x.home_team;\n      } else if (x.home_score  x != null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n        \n          \n            {{ tournament.name }}\n          \n        \n      \n    \n  \n  \n    \n      {{ 'NO_TOURNAMENT_ROUNDS_YET' | translate}}\n    \n    \n      \n        \n          {{ 'VIERTELFINALE' | translate }} ({{ round.number }}. {{ 'ROUND' | translate }})\n          {{ 'HALBFINALE' | translate }} ({{ round.number }}. {{ 'ROUND' | translate }})\n          {{ 'FINALE' | translate }} ({{ round.number }}. {{ 'ROUND' | translate }})\n          {{ round.number }}. {{ 'ROUND' | translate }}\n        \n        {{ round.start_date | date:'shortDate':'':i18Service.currentLang}} - {{ round.end_date | date:'shortDate':'':i18Service.currentLang}}\n      \n      \n         0\">\n          \n            {{ 'WINNER_OF_ROUND' | translate }}\n          \n          \n            \n              {{ winner?.name }}\n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./tournament.component.less\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ tournament.name }}                                          {{ \\'NO_TOURNAMENT_ROUNDS_YET\\' | translate}}                                {{ \\'VIERTELFINALE\\' | translate }} ({{ round.number }}. {{ \\'ROUND\\' | translate }})          {{ \\'HALBFINALE\\' | translate }} ({{ round.number }}. {{ \\'ROUND\\' | translate }})          {{ \\'FINALE\\' | translate }} ({{ round.number }}. {{ \\'ROUND\\' | translate }})          {{ round.number }}. {{ \\'ROUND\\' | translate }}                {{ round.start_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}} - {{ round.end_date | date:\\'shortDate\\':\\'\\':i18Service.currentLang}}                     0\">                      {{ \\'WINNER_OF_ROUND\\' | translate }}                                              {{ winner?.name }}                                                                                '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TournamentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TournamentGQL.html":{"url":"injectables/TournamentGQL.html","title":"injectable - TournamentGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TournamentGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1698\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentModule.html":{"url":"modules/TournamentModule.html","title":"module - TournamentModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TournamentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            TournamentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TournamentComponent } from './tournament.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { TournamentRoutingModule } from './tournament-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TournamentRoutingModule,\n    SharedModule\n  ],\n  declarations: [TournamentComponent]\n})\nexport class TournamentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TournamentRoutingModule.html":{"url":"modules/TournamentRoutingModule.html","title":"module - TournamentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TournamentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/tournament/tournament-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TournamentComponent } from './tournament.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TournamentComponent\n  }\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  declarations: []\n})\nexport class TournamentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdatePitchContactGQL.html":{"url":"injectables/UpdatePitchContactGQL.html","title":"injectable - UpdatePitchContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdatePitchContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1204\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateTeamContactGQL.html":{"url":"injectables/UpdateTeamContactGQL.html","title":"injectable - UpdateTeamContactGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateTeamContactGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1362\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpdateUserGQL.html":{"url":"injectables/UpdateUserGQL.html","title":"injectable - UpdateUserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UpdateUserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1491\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserGQL.html":{"url":"injectables/UserGQL.html","title":"injectable - UserGQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserGQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/graphql.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                document\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/api/graphql.ts:1712\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        export type Maybe = T | null;\n\nexport interface DatePeriod {\n  from: Date;\n\n  to: Date;\n}\n\nexport interface TeamIdPair {\n  home_team_id: string;\n\n  guest_team_id: string;\n}\n\nexport enum SeasonState {\n  Preparation = \"preparation\",\n  Progress = \"progress\",\n  Ended = \"ended\"\n}\n\nexport enum UserRole {\n  Admin = \"admin\",\n  TeamManager = \"team_manager\"\n}\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type DateTime = any;\n\n/** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */\nexport type Date = any;\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport namespace SubmitResult {\n  export type Variables = {\n    match_id: string;\n    home_score: number;\n    guest_score: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    submitMatchResult: Maybe;\n  };\n}\n\nexport namespace ScheduleMatch {\n  export type Variables = {\n    match_id: string;\n    kickoff: DateTime;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    scheduleMatch: Maybe;\n  };\n}\n\nexport namespace LocateMatch {\n  export type Variables = {\n    match_id: string;\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    locateMatch: Maybe;\n  };\n}\n\nexport namespace CancelMatch {\n  export type Variables = {\n    match_id: string;\n    reason: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    cancelMatch: Maybe;\n  };\n}\n\nexport namespace PasswordReset {\n  export type Variables = {\n    email: string;\n    target_path: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    sendPasswordResetMail: Maybe;\n  };\n}\n\nexport namespace PasswordChange {\n  export type Variables = {\n    new_password: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    changeUserPassword: Maybe;\n  };\n}\n\nexport namespace AddRankingPenalty {\n  export type Variables = {\n    id: string;\n    season_id: string;\n    team_id: string;\n    reason: string;\n    points: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addRankingPenalty: Maybe;\n  };\n}\n\nexport namespace RemoveRankingPenalty {\n  export type Variables = {\n    ranking_penalty_id: string;\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeRankingPenalty: Maybe;\n  };\n}\n\nexport namespace DeletePitch {\n  export type Variables = {\n    pitch_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deletePitch: Maybe;\n  };\n}\n\nexport namespace UpdatePitchContact {\n  export type Variables = {\n    pitch_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updatePitchContact: Maybe;\n  };\n}\n\nexport namespace CreatePitch {\n  export type Variables = {\n    id: string;\n    label: string;\n    longitude: number;\n    latitude: number;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createPitch: Maybe;\n  };\n}\n\nexport namespace CreateSeason {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createSeason: Maybe;\n  };\n}\n\nexport namespace AddTeamToSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    addTeamToSeason: Maybe;\n  };\n}\n\nexport namespace RemoveTeamFromSeason {\n  export type Variables = {\n    season_id: string;\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    removeTeamFromSeason: Maybe;\n  };\n}\n\nexport namespace CreateMatchesForSeason {\n  export type Variables = {\n    season_id: string;\n    dates: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createMatchesForSeason: Maybe;\n  };\n}\n\nexport namespace RescheduleMatchDay {\n  export type Variables = {\n    match_day_id: string;\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    rescheduleMatchDay: Maybe;\n  };\n}\n\nexport namespace StartSeason {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    startSeason: Maybe;\n  };\n}\n\nexport namespace EndSeason {\n  export type Variables = {\n    season_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    endSeason: Maybe;\n  };\n}\n\nexport namespace CreateTeam {\n  export type Variables = {\n    id: string;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTeam: Maybe;\n  };\n}\n\nexport namespace UpdateTeamContact {\n  export type Variables = {\n    team_id: string;\n    first_name: string;\n    last_name: string;\n    phone: string;\n    email: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateTeamContact: Maybe;\n  };\n}\n\nexport namespace RenameTeam {\n  export type Variables = {\n    team_id: string;\n    new_name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    renameTeam: Maybe;\n  };\n}\n\nexport namespace DeleteTeam {\n  export type Variables = {\n    team_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTeam: Maybe;\n  };\n}\n\nexport namespace CreateTournament {\n  export type Variables = {\n    id?: Maybe;\n    name: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createTournament: Maybe;\n  };\n}\n\nexport namespace CreateTournamentRound {\n  export type Variables = {\n    tournament_id: string;\n    round: number;\n    team_id_pairs: (Maybe)[];\n    date_period: DatePeriod;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    setTournamentRound: Maybe;\n  };\n}\n\nexport namespace DeleteTournament {\n  export type Variables = {\n    tournament_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteTournament: Maybe;\n  };\n}\n\nexport namespace CreateUser {\n  export type Variables = {\n    id?: Maybe;\n    email: string;\n    password: string;\n    first_name: string;\n    last_name: string;\n    role: string;\n    team_ids: (Maybe)[];\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    createUser: Maybe;\n  };\n}\n\nexport namespace UpdateUser {\n  export type Variables = {\n    user_id: string;\n    email?: Maybe;\n    first_name?: Maybe;\n    last_name?: Maybe;\n    role?: Maybe;\n    team_ids?: Maybe)[]>;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    updateUser: Maybe;\n  };\n}\n\nexport namespace DeleteUser {\n  export type Variables = {\n    user_id: string;\n  };\n\n  export type Mutation = {\n    __typename?: \"Mutation\";\n\n    deleteUser: Maybe;\n  };\n}\n\nexport namespace Event {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    event: Maybe;\n  };\n\n  export type Event = Event.Fragment;\n}\n\nexport namespace LatestEvent {\n  export type Variables = {\n    start_date?: Maybe;\n    end_date?: Maybe;\n    type?: Maybe;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    latestEvents: Maybe)[]>;\n  };\n\n  export type LatestEvents = Event.Fragment;\n}\n\nexport namespace Match {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    match: Maybe;\n  };\n\n  export type Match = Match.Fragment;\n}\n\nexport namespace MatchPlan {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Season.Fragment;\n}\n\nexport namespace SeasonPenalties {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    teams: Maybe)[]>;\n\n    ranking: Maybe;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Pitches {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allPitches: Maybe)[]>;\n  };\n\n  export type AllPitches = Pitch.Fragment;\n}\n\nexport namespace Ranking {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    season: Maybe;\n  };\n\n  export type Season = Ranking.Fragment;\n}\n\nexport namespace AllSeasonsList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allSeasons: Maybe)[]>;\n  };\n\n  export type AllSeasons = AllSeasons.Fragment;\n}\n\nexport namespace AllTeams {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTeams: Maybe)[]>;\n  };\n\n  export type AllTeams = Team.Fragment;\n}\n\nexport namespace AllTournamentList {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allTournaments: Maybe)[]>;\n  };\n\n  export type AllTournaments = AllTournaments.Fragment;\n}\n\nexport namespace Tournament {\n  export type Variables = {\n    id: string;\n  };\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    tournament: Maybe;\n  };\n\n  export type Tournament = Tournament.Fragment;\n}\n\nexport namespace User {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    authenticatedUser: Maybe;\n  };\n\n  export type AuthenticatedUser = User.Fragment;\n}\n\nexport namespace AllUsers {\n  export type Variables = {};\n\n  export type Query = {\n    __typename?: \"Query\";\n\n    allUsers: Maybe)[]>;\n  };\n\n  export type AllUsers = User.Fragment;\n}\n\nexport namespace Match {\n  export type Fragment = {\n    __typename?: \"Match\";\n\n    id: string;\n\n    home_team: HomeTeam;\n\n    home_score: Maybe;\n\n    guest_team: GuestTeam;\n\n    guest_score: Maybe;\n\n    kickoff: Maybe;\n\n    pitch: Maybe;\n\n    cancelled_at: Maybe;\n\n    cancellation_reason: Maybe;\n  };\n\n  export type HomeTeam = Team.Fragment;\n\n  export type GuestTeam = Team.Fragment;\n\n  export type Pitch = Pitch.Fragment;\n}\n\nexport namespace MatchDay {\n  export type Fragment = {\n    __typename?: \"MatchDay\";\n\n    id: string;\n\n    number: number;\n\n    start_date: string;\n\n    end_date: string;\n\n    matches: Maybe)[]>;\n  };\n\n  export type Matches = Match.Fragment;\n}\n\nexport namespace Pitch {\n  export type Fragment = {\n    __typename?: \"Pitch\";\n\n    id: string;\n\n    label: string;\n\n    location_longitude: number;\n\n    location_latitude: number;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Team {\n  export type Fragment = {\n    __typename?: \"Team\";\n\n    id: string;\n\n    name: string;\n\n    created_at: string;\n\n    contact: Maybe;\n  };\n\n  export type Contact = Contact.Fragment;\n}\n\nexport namespace Contact {\n  export type Fragment = {\n    __typename?: \"Contact\";\n\n    first_name: string;\n\n    last_name: string;\n\n    phone: string;\n\n    email: string;\n  };\n}\n\nexport namespace Season {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    teams: Maybe)[]>;\n\n    match_days: Maybe)[]>;\n  };\n\n  export type Teams = Team.Fragment;\n\n  export type MatchDays = MatchDay.Fragment;\n}\n\nexport namespace AllSeasons {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    name: string;\n\n    state: SeasonState;\n  };\n}\n\nexport namespace AllTournaments {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n  };\n}\n\nexport namespace Tournament {\n  export type Fragment = {\n    __typename?: \"Tournament\";\n\n    id: string;\n\n    name: string;\n\n    rounds: Maybe)[]>;\n  };\n\n  export type Rounds = MatchDay.Fragment;\n}\n\nexport namespace User {\n  export type Fragment = {\n    __typename?: \"User\";\n\n    id: string;\n\n    email: string;\n\n    teams: Maybe)[]>;\n\n    role: UserRole;\n\n    first_name: string;\n\n    last_name: string;\n  };\n\n  export type Teams = Team.Fragment;\n}\n\nexport namespace Event {\n  export type Fragment = {\n    __typename?: \"Event\";\n\n    id: string;\n\n    occurred_at: string;\n\n    type: string;\n  };\n}\n\nexport namespace Ranking {\n  export type Fragment = {\n    __typename?: \"Season\";\n\n    id: string;\n\n    ranking: Maybe;\n  };\n\n  export type Ranking = {\n    __typename?: \"Ranking\";\n\n    updated_at: Maybe;\n\n    positions: Maybe)[]>;\n\n    penalties: Maybe)[]>;\n  };\n\n  export type Positions = {\n    __typename?: \"RankingPosition\";\n\n    team: Team;\n\n    sort_index: number;\n\n    number: number;\n\n    matches: number;\n\n    wins: number;\n\n    draws: number;\n\n    losses: number;\n\n    scored_goals: number;\n\n    conceded_goals: number;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n\n  export type Penalties = Penalty.Fragment;\n}\n\nexport namespace Penalty {\n  export type Fragment = {\n    __typename?: \"RankingPenalty\";\n\n    id: string;\n\n    team: Team;\n\n    reason: string;\n\n    created_at: string;\n\n    points: number;\n  };\n\n  export type Team = Team.Fragment;\n}\n\n// ====================================================\n// START: Apollo Angular template\n// ====================================================\n\nimport { Injectable } from \"@angular/core\";\nimport * as Apollo from \"apollo-angular\";\n\nimport gql from \"graphql-tag\";\n\n// ====================================================\n// GraphQL Fragments\n// ====================================================\n\nexport const ContactFragment = gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`;\n\nexport const TeamFragment = gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const PitchFragment = gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`;\n\nexport const MatchFragment = gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`;\n\nexport const MatchDayFragment = gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`;\n\nexport const SeasonFragment = gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`;\n\nexport const AllSeasonsFragment = gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`;\n\nexport const AllTournamentsFragment = gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`;\n\nexport const TournamentFragment = gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`;\n\nexport const UserFragment = gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`;\n\nexport const EventFragment = gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`;\n\nexport const PenaltyFragment = gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`;\n\nexport const RankingFragment = gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`;\n\n// ====================================================\n// Apollo Services\n// ====================================================\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SubmitResultGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation SubmitResult(\n      $match_id: String!\n      $home_score: Int!\n      $guest_score: Int!\n    ) {\n      submitMatchResult(\n        match_id: $match_id\n        home_score: $home_score\n        guest_score: $guest_score\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ScheduleMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation ScheduleMatch($match_id: String!, $kickoff: DateTime!) {\n      scheduleMatch(match_id: $match_id, kickoff: $kickoff)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LocateMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation LocateMatch($match_id: String!, $pitch_id: String!) {\n      locateMatch(match_id: $match_id, pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CancelMatchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CancelMatch($match_id: String!, $reason: String!) {\n      cancelMatch(match_id: $match_id, reason: $reason)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordResetGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordReset($email: String!, $target_path: String!) {\n      sendPasswordResetMail(email: $email, target_path: $target_path)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PasswordChangeGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation PasswordChange($new_password: String!) {\n      changeUserPassword(new_password: $new_password)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddRankingPenalty(\n      $id: String!\n      $season_id: String!\n      $team_id: String!\n      $reason: String!\n      $points: Int!\n    ) {\n      addRankingPenalty(\n        id: $id\n        season_id: $season_id\n        team_id: $team_id\n        reason: $reason\n        points: $points\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveRankingPenaltyGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveRankingPenalty(\n      $ranking_penalty_id: String!\n      $season_id: String!\n    ) {\n      removeRankingPenalty(\n        ranking_penalty_id: $ranking_penalty_id\n        season_id: $season_id\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeletePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeletePitch($pitch_id: String!) {\n      deletePitch(pitch_id: $pitch_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdatePitchContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdatePitchContact(\n      $pitch_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updatePitchContact(\n        pitch_id: $pitch_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreatePitchGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreatePitch(\n      $id: String!\n      $label: String!\n      $longitude: Float!\n      $latitude: Float!\n    ) {\n      createPitch(\n        id: $id\n        label: $label\n        longitude: $longitude\n        latitude: $latitude\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateSeason($id: String, $name: String!) {\n      createSeason(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AddTeamToSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation AddTeamToSeason($season_id: String!, $team_id: String!) {\n      addTeamToSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RemoveTeamFromSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RemoveTeamFromSeason($season_id: String!, $team_id: String!) {\n      removeTeamFromSeason(season_id: $season_id, team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateMatchesForSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateMatchesForSeason(\n      $season_id: String!\n      $dates: [DatePeriod]!\n    ) {\n      createMatchesForSeason(season_id: $season_id, dates: $dates)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RescheduleMatchDayGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RescheduleMatchDay(\n      $match_day_id: String!\n      $date_period: DatePeriod!\n    ) {\n      rescheduleMatchDay(match_day_id: $match_day_id, date_period: $date_period)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class StartSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation StartSeason($id: String!) {\n      startSeason(season_id: $id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EndSeasonGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation EndSeason($season_id: String!) {\n      endSeason(season_id: $season_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTeam($id: String!, $name: String!) {\n      createTeam(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateTeamContactGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateTeamContact(\n      $team_id: String!\n      $first_name: String!\n      $last_name: String!\n      $phone: String!\n      $email: String!\n    ) {\n      updateTeamContact(\n        team_id: $team_id\n        first_name: $first_name\n        last_name: $last_name\n        phone: $phone\n        email: $email\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RenameTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation RenameTeam($team_id: String!, $new_name: String!) {\n      renameTeam(team_id: $team_id, new_name: $new_name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTeamGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTeam($team_id: String!) {\n      deleteTeam(team_id: $team_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournament($id: String, $name: String!) {\n      createTournament(id: $id, name: $name)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateTournamentRoundGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateTournamentRound(\n      $tournament_id: String!\n      $round: Int!\n      $team_id_pairs: [TeamIdPair]!\n      $date_period: DatePeriod!\n    ) {\n      setTournamentRound(\n        tournament_id: $tournament_id\n        round: $round\n        team_id_pairs: $team_id_pairs\n        date_period: $date_period\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteTournamentGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteTournament($tournament_id: String!) {\n      deleteTournament(tournament_id: $tournament_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CreateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation CreateUser(\n      $id: String\n      $email: String!\n      $password: String!\n      $first_name: String!\n      $last_name: String!\n      $role: String!\n      $team_ids: [String]!\n    ) {\n      createUser(\n        id: $id\n        email: $email\n        password: $password\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UpdateUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation UpdateUser(\n      $user_id: String!\n      $email: String\n      $first_name: String\n      $last_name: String\n      $role: String\n      $team_ids: [String]\n    ) {\n      updateUser(\n        user_id: $user_id\n        email: $email\n        first_name: $first_name\n        last_name: $last_name\n        role: $role\n        team_ids: $team_ids\n      )\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DeleteUserGQL extends Apollo.Mutation {\n  document: any = gql`\n    mutation DeleteUser($user_id: String!) {\n      deleteUser(user_id: $user_id)\n    }\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class EventGQL extends Apollo.Query {\n  document: any = gql`\n    query Event($id: String!) {\n      event(id: $id) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class LatestEventGQL extends Apollo.Query {\n  document: any = gql`\n    query LatestEvent($start_date: Date, $end_date: Date, $type: String) {\n      latestEvents(start_date: $start_date, end_date: $end_date, type: $type) {\n        ...Event\n      }\n    }\n\n    ${EventFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchGQL extends Apollo.Query {\n  document: any = gql`\n    query Match($id: String!) {\n      match(id: $id) {\n        ...Match\n      }\n    }\n\n    ${MatchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MatchPlanGQL extends Apollo.Query {\n  document: any = gql`\n    query MatchPlan($id: String!) {\n      season(id: $id) {\n        ...Season\n      }\n    }\n\n    ${SeasonFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SeasonPenaltiesGQL extends Apollo.Query {\n  document: any = gql`\n    query SeasonPenalties($id: String!) {\n      season(id: $id) {\n        id\n        teams {\n          ...Team\n        }\n        ranking {\n          penalties {\n            ...Penalty\n          }\n        }\n      }\n    }\n\n    ${TeamFragment}\n    ${PenaltyFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class PitchesGQL extends Apollo.Query {\n  document: any = gql`\n    query Pitches {\n      allPitches {\n        ...Pitch\n      }\n    }\n\n    ${PitchFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RankingGQL extends Apollo.Query {\n  document: any = gql`\n    query Ranking($id: String!) {\n      season(id: $id) {\n        ...Ranking\n      }\n    }\n\n    ${RankingFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllSeasonsListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllSeasonsList {\n      allSeasons {\n        ...AllSeasons\n      }\n    }\n\n    ${AllSeasonsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTeamsGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTeams {\n      allTeams {\n        ...Team\n      }\n    }\n\n    ${TeamFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllTournamentListGQL extends Apollo.Query {\n  document: any = gql`\n    query AllTournamentList {\n      allTournaments {\n        ...AllTournaments\n      }\n    }\n\n    ${AllTournamentsFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class TournamentGQL extends Apollo.Query {\n  document: any = gql`\n    query Tournament($id: String!) {\n      tournament(id: $id) {\n        ...Tournament\n      }\n    }\n\n    ${TournamentFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UserGQL extends Apollo.Query {\n  document: any = gql`\n    query User {\n      authenticatedUser {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllUsersGQL extends Apollo.Query {\n  document: any = gql`\n    query AllUsers {\n      allUsers {\n        ...User\n      }\n    }\n\n    ${UserFragment}\n  `;\n}\n\n// ====================================================\n// END: Apollo Angular template\n// ====================================================\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/manageusers/user-list/user-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                styleUrls\n                ./user-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(allUsersGQL: AllUsersGQL, deleteUserGQL: DeleteUserGQL, notify: NotificationService, translateService: TranslateService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        allUsersGQL\n                                                  \n                                                        \n                                                                        AllUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteUserGQL\n                                                  \n                                                        \n                                                                        DeleteUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(user: User.Fragment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User.Fragment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/manageusers/user-list/user-list.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AllUsersGQL, User, DeleteUserGQL } from 'src/api/graphql';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\nimport { ConfirmDialogComponent } from 'src/app/components/shared/confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from 'src/app/services/notification.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  allUsers: Observable;\n\n  constructor(\n    private allUsersGQL: AllUsersGQL,\n    private deleteUserGQL: DeleteUserGQL,\n    private notify: NotificationService,\n    private translateService: TranslateService,\n    private dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.allUsers = this.allUsersGQL.watch().valueChanges.pipe(\n      map(({ data }) => data.allUsers.sort((a, b) => a.email.toLowerCase() > b.email.toLowerCase() ? 1 : -1))\n    );\n  }\n\n  createNewUser() {\n    this.dialog.open(EditUserDialogComponent);\n  }\n\n  editUser(user: User.Fragment) {\n\n    this.dialog.open(EditUserDialogComponent, {\n      data: user\n    });\n  }\n\n  deleteUser(user: User.Fragment) {\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: {\n        message: this.translateService.instant('CONFIRM_DELETE', { thing: user.email })\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      async (confirm) => {\n        if (confirm) {\n          try {\n            await this.deleteUserGQL.mutate({\n              user_id: user.id\n            }, {\n                refetchQueries: [\n                  {\n                    query: this.allUsersGQL.document\n                  }\n                ]\n              }).toPromise();\n            this.notify.showSuccessNotification(this.translateService.instant('DELETE_USER_SUCCESS', { user: user.email }));\n          } catch (error) {\n            this.notify.showErrorNotification(this.translateService.instant('DELETE_USER_ERROR'), error);\n          }\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          add\n        \n      \n    \n  \n  \n    \n      {{ 'USERNAME' | translate }}\n    \n    \n      {{ 'FIRST_NAME' | translate }} {{ 'LAST_NAME' | translate }}\n    \n    \n      {{ 'USER_ROLE' | translate }}\n    \n    \n      {{ 'TEAMS' | translate }}\n    \n    \n      &nbsp;\n    \n  \n  \n    \n      {{ user.email }}\n    \n    \n      {{ user.first_name }} {{ user.last_name }}\n    \n    \n      {{ user.role }}\n    \n    \n      \n        \n          {{ team.name }}\n        \n      \n    \n    \n      \n        \n          edit\n        \n      \n      \n        \n          delete\n        \n      \n    \n  \n    \n\n    \n                \n                    ./user-list.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              add                                {{ \\'USERNAME\\' | translate }}              {{ \\'FIRST_NAME\\' | translate }} {{ \\'LAST_NAME\\' | translate }}              {{ \\'USER_ROLE\\' | translate }}              {{ \\'TEAMS\\' | translate }}                                 {{ user.email }}              {{ user.first_name }} {{ user.last_name }}              {{ user.role }}                                {{ team.name }}                                              edit                                      delete                    '\n    var COMPONENTS = [{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CancelMatchDialogComponent', 'selector': 'app-cancel-match-dialog'},{'name': 'ChangepasswordComponent', 'selector': 'app-changepassword'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ContactlistComponent', 'selector': 'app-contactlist'},{'name': 'ContactPersonComponent', 'selector': 'app-contact-person'},{'name': 'CreatePitchDialogComponent', 'selector': 'app-create-pitch-dialog'},{'name': 'EditContactComponent', 'selector': 'app-edit-contact'},{'name': 'EditmatchPitchComponent', 'selector': 'app-editmatch.pitch'},{'name': 'EditmatchResultComponent', 'selector': 'app-editmatchresult'},{'name': 'EditmatchTimeComponent', 'selector': 'app-editmatch.time'},{'name': 'EditPitchContactDialogComponent', 'selector': 'app-edit-pitch-contact-dialog'},{'name': 'EditRankingPenaltyComponent', 'selector': 'app-edit-ranking-penalty'},{'name': 'EditTournamentRoundComponent', 'selector': 'app-edit-tournament-round'},{'name': 'EditUserDialogComponent', 'selector': 'app-edit-user-dialog'},{'name': 'EventsComponent', 'selector': 'app-events'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ManagePenaltyComponent', 'selector': 'app-manage-penalty'},{'name': 'ManagepitchesComponent', 'selector': 'app-managepitches'},{'name': 'ManageseasonComponent', 'selector': 'app-manageseason'},{'name': 'ManageteamsComponent', 'selector': 'app-manageteams'},{'name': 'ManagetournamentComponent', 'selector': 'app-managetournament'},{'name': 'ManageusersComponent', 'selector': 'app-manageusers'},{'name': 'MatchComponent', 'selector': 'app-match'},{'name': 'MatchplanComponent', 'selector': 'app-matchplan'},{'name': 'MatchSchedulingComponent', 'selector': 'app-match-scheduling'},{'name': 'NewpasswordComponent', 'selector': 'app-newpassword'},{'name': 'PitchesComponent', 'selector': 'app-pitches'},{'name': 'RenameTeamComponent', 'selector': 'app-rename-team'},{'name': 'SeasonchooserComponent', 'selector': 'app-seasonchooser'},{'name': 'SnackbarComponent', 'selector': 'app-snackbar'},{'name': 'TableComponent', 'selector': 'app-table'},{'name': 'TeamadminComponent', 'selector': 'app-teamadmin'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TournamentComponent', 'selector': 'app-tournament'},{'name': 'UserListComponent', 'selector': 'app-user-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AddTeamToSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllSeasonsListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTeamsGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllTournamentListGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            AllUsersGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CancelMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateMatchesForSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreatePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateTournamentRoundGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            CreateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeletePitchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteTournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            DeleteUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EndSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            EventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LatestEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            LocateMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            MatchPlanGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordChangeGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PasswordResetGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            PitchesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RankingGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveRankingPenaltyGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RemoveTeamFromSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RenameTeamGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            RescheduleMatchDayGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            ScheduleMatchGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SeasonPenaltiesGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            StartSeasonGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            SubmitResultGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            TournamentGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdatePitchContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateTeamContactGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UpdateUserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            injectable\n            UserGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            DatePeriod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            interface\n            TeamIdPair\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllSeasonsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            AllTournamentsFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            ContactFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            EventFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchDayFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            MatchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PenaltyFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            PitchFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            RankingFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            SeasonFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TeamFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            TournamentFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphql.ts\n            \n            variable\n            UserFragment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            injectable\n            RedisEventGQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/graphqlsubs.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            interface\n            IntrospectionResultData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/introspection-result.ts\n            \n            variable\n            result\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            i18ServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            loadAppsettingsFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/admin/events/events.component.ts\n            \n            component\n            EventsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managepitches/managepitches.component.ts\n            \n            component\n            ManagepitchesComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            component\n            EditRankingPenaltyComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/edit-ranking-penalty/edit-ranking-penalty.component.ts\n            \n            interface\n            EditRankingPenaltyComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manage-penalty/manage-penalty.component.ts\n            \n            component\n            ManagePenaltyComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            component\n            ManageseasonComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/manageseason.component.ts\n            \n            variable\n            MANAGE_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            component\n            MatchSchedulingComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            IPossibleKickoffs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageseason/match-scheduling/match-scheduling.component.ts\n            \n            interface\n            ITeamCanPlayAtDate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/manageteams.component.ts\n            \n            component\n            ManageteamsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageteams/rename-team/rename-team.component.ts\n            \n            component\n            RenameTeamComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            component\n            EditTournamentRoundComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            AddMatchData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/edit-tournament-round/edit-tournament-round.component.ts\n            \n            interface\n            RoundTeam\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            component\n            ManagetournamentComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/admin/managetournament/managetournament.component.ts\n            \n            variable\n            MANAGE_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/edit-user-dialog/edit-user-dialog.component.ts\n            \n            component\n            EditUserDialogComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/manageusers.component.ts\n            \n            component\n            ManageusersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/admin/manageusers/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/changepassword/changepassword.component.ts\n            \n            component\n            ChangepasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/contactlist.component.ts\n            \n            component\n            ContactlistComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/pitches/pitches.component.ts\n            \n            component\n            PitchesComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/contactlist/teams/teams.component.ts\n            \n            component\n            TeamsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            component\n            MatchplanComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            HIDE_PLAYED_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_MATCHDAY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/matchplan/matchplan.component.ts\n            \n            variable\n            SELECTED_TEAM_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/newpassword/newpassword.component.ts\n            \n            component\n            NewpasswordComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/shared/cancel-match-dialog/cancel-match-dialog.component.ts\n            \n            component\n            CancelMatchDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/confirm-dialog/confirm-dialog.component.ts\n            \n            interface\n            ConfirmDialogComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact-person/contact-person.component.ts\n            \n            component\n            ContactPersonComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/contact/contact.component.ts\n            \n            interface\n            ContactComponentData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/shared/create-pitch-dialog/create-pitch-dialog.component.ts\n            \n            component\n            CreatePitchDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-contact/edit-contact.component.ts\n            \n            component\n            EditContactComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/edit-pitch-contact-dialog/edit-pitch-contact-dialog.component.ts\n            \n            component\n            EditPitchContactDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.pitch.component.ts\n            \n            component\n            EditmatchPitchComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.result.component.ts\n            \n            component\n            EditmatchResultComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/shared/editmatch/editmatch.time.component.ts\n            \n            component\n            EditmatchTimeComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/shared/match/match.component.ts\n            \n            component\n            MatchComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/shared/seasonchooser/seasonchooser.component.ts\n            \n            component\n            SeasonchooserComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            component\n            SnackbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/shared/snackbar/snackbar.component.ts\n            \n            interface\n            ISnackBarData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/table/table.component.ts\n            \n            component\n            TableComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.component.ts\n            \n            component\n            TeamadminComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/teamadmin/teamadmin.guard.ts\n            \n            guard\n            TeamadminGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            component\n            TournamentComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/tournament/tournament.component.ts\n            \n            variable\n            SELECTED_TOURNAMENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            injectable\n            AppsettingsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/appsettings.service.ts\n            \n            interface\n            AppsettingsModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            interface\n            LoginContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ACCESS_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            injectable\n            GraphqlSubscriptionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql-subscription.service.ts\n            \n            interface\n            MatchEventPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/graphql.service.ts\n            \n            injectable\n            GraphqlService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            injectable\n            I18Service\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/i18.service.ts\n            \n            variable\n            LANG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/i18n/customowldatetimeintl.ts\n            \n            injectable\n            CustomOwlDateTimeIntl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/match.service.ts\n            \n            injectable\n            MatchService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/pitch.service.ts\n            \n            injectable\n            PitchService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            injectable\n            SeasonService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/season.service.ts\n            \n            variable\n            SELECTED_SEASON_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/team.service.ts\n            \n            injectable\n            TeamService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.app.local.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.app.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.9\n        \n            @angular/cdk : ^7.3.4\n        \n            @angular/common : ^7.2.9\n        \n            @angular/compiler : ^7.2.9\n        \n            @angular/core : ^7.2.9\n        \n            @angular/flex-layout : ^7.0.0-beta.23\n        \n            @angular/forms : ^7.2.9\n        \n            @angular/http : ^7.2.9\n        \n            @angular/material : ^7.3.4\n        \n            @angular/platform-browser : ^7.2.9\n        \n            @angular/platform-browser-dynamic : ^7.2.9\n        \n            @angular/router : ^7.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/googlemaps : ^3.30.19\n        \n            adm-zip : >=0.4.13\n        \n            apollo-angular : ^1.5.0\n        \n            apollo-angular-link-http : ^1.5.0\n        \n            apollo-cache-hermes : ^0.8.8\n        \n            apollo-cache-inmemory : ^1.5.1\n        \n            apollo-cache-persist : ^0.1.1\n        \n            apollo-client : ^2.5.1\n        \n            apollo-link-context : ^1.0.17\n        \n            apollo-link-error : ^1.1.10\n        \n            apollo-link-ws : ^1.0.17\n        \n            bootstrap : ^4.3.1\n        \n            codacy-coverage : ^3.4.0\n        \n            command-line-args : ^5.0.2\n        \n            cordova-set-version : ^7.0.4\n        \n            core-js : ^2.6.5\n        \n            exec : ^0.2.1\n        \n            graphql : ^14.1.1\n        \n            graphql-code-generator : ^0.18.0\n        \n            graphql-codegen-add : ^0.18.0\n        \n            graphql-codegen-fragment-matcher : ^0.18.0\n        \n            graphql-codegen-introspection : ^0.18.0\n        \n            graphql-codegen-typescript-apollo-angular : ^0.18.0\n        \n            graphql-codegen-typescript-client : ^0.18.0\n        \n            graphql-codegen-typescript-common : ^0.18.0\n        \n            graphql-codegen-typescript-server : ^0.18.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.3.1\n        \n            js-base64 : ^2.5.1\n        \n            jslint : ^0.12.1\n        \n            karma-firefox-launcher : ^1.1.0\n        \n            material-design-icons : ^3.0.1\n        \n            moment : ^2.24.0\n        \n            ng-pick-datetime : ^7.0.0\n        \n            ngx-store : ^2.1.0\n        \n            nswag : ^11.20.1\n        \n            popper.js : ^1.14.7\n        \n            queueing-subject : ^0.3.0\n        \n            rimraf : ^2.6.3\n        \n            rxjs : ^6.4.0\n        \n            rxjs-websockets : ^6.0.2\n        \n            subscriptions-transport-ws : ^0.9.16\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SeasonState   (src/.../graphql.ts)\n                        \n                        \n                            UserRole   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n        \n            \n                \n                    \n                        \n                        SeasonState\n                    \n                \n                        \n                            \n                                 Preparation\n                            \n                        \n                        \n                            \n                                Value : preparation\n                            \n                        \n                        \n                            \n                                 Progress\n                            \n                        \n                        \n                            \n                                Value : progress\n                            \n                        \n                        \n                            \n                                 Ended\n                            \n                        \n                        \n                            \n                                Value : ended\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 TeamManager\n                            \n                        \n                        \n                            \n                                Value : team_manager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            i18ServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            loadAppsettingsFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            i18ServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \ni18ServiceFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAppsettingsFactory\n                        \n                        \n                    \n                \n            \n            \n                \nloadAppsettingsFactory(provider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nLiga Manager UI\nDocumentation\nhttps://robertkitzing.github.io/liga-manager-ui/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AdminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppCoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactlistRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MatchplanRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewpasswordRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamadminRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TournamentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_declarations\n\n\n\ncluster_AdminModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContactlistModule\n\n\n\ncluster_ContactlistModule_declarations\n\n\n\ncluster_ContactlistModule_imports\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_declarations\n\n\n\ncluster_EventsModule_imports\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GraphQLModule\n\n\n\ncluster_GraphQLModule_providers\n\n\n\ncluster_MatchplanModule\n\n\n\ncluster_MatchplanModule_declarations\n\n\n\ncluster_MatchplanModule_imports\n\n\n\ncluster_NewpasswordModule\n\n\n\ncluster_NewpasswordModule_declarations\n\n\n\ncluster_NewpasswordModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_declarations\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TeamadminModule\n\n\n\ncluster_TeamadminModule_declarations\n\n\n\ncluster_TeamadminModule_imports\n\n\n\ncluster_TournamentModule\n\n\n\ncluster_TournamentModule_declarations\n\n\n\ncluster_TournamentModule_imports\n\n\n\n\nAdminComponent\n\nAdminComponent\n\n\n\nAdminModule\n\nAdminModule\n\nAdminModule -->\n\nAdminComponent->AdminModule\n\n\n\n\n\nEditRankingPenaltyComponent\n\nEditRankingPenaltyComponent\n\nAdminModule -->\n\nEditRankingPenaltyComponent->AdminModule\n\n\n\n\n\nEditTournamentRoundComponent\n\nEditTournamentRoundComponent\n\nAdminModule -->\n\nEditTournamentRoundComponent->AdminModule\n\n\n\n\n\nEditUserDialogComponent\n\nEditUserDialogComponent\n\nAdminModule -->\n\nEditUserDialogComponent->AdminModule\n\n\n\n\n\nManagePenaltyComponent\n\nManagePenaltyComponent\n\nAdminModule -->\n\nManagePenaltyComponent->AdminModule\n\n\n\n\n\nManagepitchesComponent\n\nManagepitchesComponent\n\nAdminModule -->\n\nManagepitchesComponent->AdminModule\n\n\n\n\n\nManageseasonComponent\n\nManageseasonComponent\n\nAdminModule -->\n\nManageseasonComponent->AdminModule\n\n\n\n\n\nManageteamsComponent\n\nManageteamsComponent\n\nAdminModule -->\n\nManageteamsComponent->AdminModule\n\n\n\n\n\nManagetournamentComponent\n\nManagetournamentComponent\n\nAdminModule -->\n\nManagetournamentComponent->AdminModule\n\n\n\n\n\nManageusersComponent\n\nManageusersComponent\n\nAdminModule -->\n\nManageusersComponent->AdminModule\n\n\n\n\n\nMatchSchedulingComponent\n\nMatchSchedulingComponent\n\nAdminModule -->\n\nMatchSchedulingComponent->AdminModule\n\n\n\n\n\nRenameTeamComponent\n\nRenameTeamComponent\n\nAdminModule -->\n\nRenameTeamComponent->AdminModule\n\n\n\n\n\nUserListComponent\n\nUserListComponent\n\nAdminModule -->\n\nUserListComponent->AdminModule\n\n\n\n\n\nAdminRoutingModule\n\nAdminRoutingModule\n\nAdminModule -->\n\nAdminRoutingModule->AdminModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAdminModule -->\n\nEventsModule->AdminModule\n\n\n\n\n\nEventsComponent \n\nEventsComponent \n\nEventsComponent  -->\n\nEventsModule->EventsComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAdminModule -->\n\nSharedModule->AdminModule\n\n\n\nEventsModule -->\n\nSharedModule->EventsModule\n\n\n\n\n\nContactlistModule\n\nContactlistModule\n\nContactlistModule -->\n\nSharedModule->ContactlistModule\n\n\n\n\n\nMatchplanModule\n\nMatchplanModule\n\nMatchplanModule -->\n\nSharedModule->MatchplanModule\n\n\n\n\n\nNewpasswordModule\n\nNewpasswordModule\n\nNewpasswordModule -->\n\nSharedModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent \n\nCancelMatchDialogComponent  -->\n\nSharedModule->CancelMatchDialogComponent \n\n\n\n\n\nContactPersonComponent \n\nContactPersonComponent \n\nContactPersonComponent  -->\n\nSharedModule->ContactPersonComponent \n\n\n\n\n\nEditContactComponent \n\nEditContactComponent \n\nEditContactComponent  -->\n\nSharedModule->EditContactComponent \n\n\n\n\n\nMatchComponent \n\nMatchComponent \n\nMatchComponent  -->\n\nSharedModule->MatchComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nSeasonchooserComponent \n\nSeasonchooserComponent \n\nSeasonchooserComponent  -->\n\nSharedModule->SeasonchooserComponent \n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nSharedModule->TableModule\n\n\n\n\n\nTeamadminModule\n\nTeamadminModule\n\nTeamadminModule -->\n\nSharedModule->TeamadminModule\n\n\n\n\n\nTournamentModule\n\nTournamentModule\n\nTournamentModule -->\n\nSharedModule->TournamentModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChangepasswordComponent\n\nChangepasswordComponent\n\nAppModule -->\n\nChangepasswordComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nContactlistComponent\n\nContactlistComponent\n\nContactlistModule -->\n\nContactlistComponent->ContactlistModule\n\n\n\n\n\nPitchesComponent\n\nPitchesComponent\n\nContactlistModule -->\n\nPitchesComponent->ContactlistModule\n\n\n\n\n\nTeamsComponent\n\nTeamsComponent\n\nContactlistModule -->\n\nTeamsComponent->ContactlistModule\n\n\n\n\n\nContactlistRoutingModule\n\nContactlistRoutingModule\n\nContactlistModule -->\n\nContactlistRoutingModule->ContactlistModule\n\n\n\n\n\nEventsComponent\n\nEventsComponent\n\nEventsModule -->\n\nEventsComponent->EventsModule\n\n\n\n\n\nAppCoreModule\n\nAppCoreModule\n\nEventsModule -->\n\nAppCoreModule->EventsModule\n\n\n\nMatchplanModule -->\n\nAppCoreModule->MatchplanModule\n\n\n\n\n\nEventsRoutingModule\n\nEventsRoutingModule\n\nEventsModule -->\n\nEventsRoutingModule->EventsModule\n\n\n\n\n\nGraphqlService\n\nGraphqlService\n\nGraphQLModule -->\n\nGraphqlService->GraphQLModule\n\n\n\n\n\nGraphqlSubscriptionService\n\nGraphqlSubscriptionService\n\nGraphQLModule -->\n\nGraphqlSubscriptionService->GraphQLModule\n\n\n\n\n\nMatchplanComponent\n\nMatchplanComponent\n\nMatchplanModule -->\n\nMatchplanComponent->MatchplanModule\n\n\n\n\n\nMatchplanRoutingModule\n\nMatchplanRoutingModule\n\nMatchplanModule -->\n\nMatchplanRoutingModule->MatchplanModule\n\n\n\n\n\nNewpasswordComponent\n\nNewpasswordComponent\n\nNewpasswordModule -->\n\nNewpasswordComponent->NewpasswordModule\n\n\n\n\n\nNewpasswordRoutingModule\n\nNewpasswordRoutingModule\n\nNewpasswordModule -->\n\nNewpasswordRoutingModule->NewpasswordModule\n\n\n\n\n\nCancelMatchDialogComponent\n\nCancelMatchDialogComponent\n\nSharedModule -->\n\nCancelMatchDialogComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nSharedModule -->\n\nContactComponent->SharedModule\n\n\n\n\n\nContactPersonComponent\n\nContactPersonComponent\n\nSharedModule -->\n\nContactPersonComponent->SharedModule\n\n\n\n\n\nCreatePitchDialogComponent\n\nCreatePitchDialogComponent\n\nSharedModule -->\n\nCreatePitchDialogComponent->SharedModule\n\n\n\n\n\nEditContactComponent\n\nEditContactComponent\n\nSharedModule -->\n\nEditContactComponent->SharedModule\n\n\n\n\n\nEditPitchContactDialogComponent\n\nEditPitchContactDialogComponent\n\nSharedModule -->\n\nEditPitchContactDialogComponent->SharedModule\n\n\n\n\n\nEditmatchPitchComponent\n\nEditmatchPitchComponent\n\nSharedModule -->\n\nEditmatchPitchComponent->SharedModule\n\n\n\n\n\nEditmatchResultComponent\n\nEditmatchResultComponent\n\nSharedModule -->\n\nEditmatchResultComponent->SharedModule\n\n\n\n\n\nEditmatchTimeComponent\n\nEditmatchTimeComponent\n\nSharedModule -->\n\nEditmatchTimeComponent->SharedModule\n\n\n\n\n\nMatchComponent\n\nMatchComponent\n\nSharedModule -->\n\nMatchComponent->SharedModule\n\n\n\n\n\nSeasonchooserComponent\n\nSeasonchooserComponent\n\nSharedModule -->\n\nSeasonchooserComponent->SharedModule\n\n\n\n\n\nSnackbarComponent\n\nSnackbarComponent\n\nSharedModule -->\n\nSnackbarComponent->SharedModule\n\n\n\n\n\nTableComponent\n\nTableComponent\n\nTableModule -->\n\nTableComponent->TableModule\n\n\n\n\n\nTableRoutingModule\n\nTableRoutingModule\n\nTableModule -->\n\nTableRoutingModule->TableModule\n\n\n\n\n\nTeamadminComponent\n\nTeamadminComponent\n\nTeamadminModule -->\n\nTeamadminComponent->TeamadminModule\n\n\n\n\n\nTeamadminRoutingModule\n\nTeamadminRoutingModule\n\nTeamadminModule -->\n\nTeamadminRoutingModule->TeamadminModule\n\n\n\n\n\nTournamentComponent\n\nTournamentComponent\n\nTournamentModule -->\n\nTournamentComponent->TournamentModule\n\n\n\n\n\nTournamentRoutingModule\n\nTournamentRoutingModule\n\nTournamentModule -->\n\nTournamentRoutingModule->TournamentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    53 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nRemove GoogleMapsApiKey from github\nFix loading template on error\nImplement RankingPenalty Display\nRedesign Dialogs\nCleanup Code\nTesting\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllPitches   (src/.../graphql.ts)\n                        \n                        \n                            AllSeasons   (src/.../graphql.ts)\n                        \n                        \n                            AllTeams   (src/.../graphql.ts)\n                        \n                        \n                            AllTournaments   (src/.../graphql.ts)\n                        \n                        \n                            AllUsers   (src/.../graphql.ts)\n                        \n                        \n                            AuthenticatedUser   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Contact   (src/.../graphql.ts)\n                        \n                        \n                            Date   (src/.../graphql.ts)\n                        \n                        \n                            DateTime   (src/.../graphqlsubs.ts)\n                        \n                        \n                            DateTime   (src/.../graphql.ts)\n                        \n                        \n                            Event   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            Fragment   (src/.../graphql.ts)\n                        \n                        \n                            GuestTeam   (src/.../graphql.ts)\n                        \n                        \n                            HomeTeam   (src/.../graphql.ts)\n                        \n                        \n                            LatestEvents   (src/.../graphql.ts)\n                        \n                        \n                            Match   (src/.../graphql.ts)\n                        \n                        \n                            MatchDays   (src/.../graphql.ts)\n                        \n                        \n                            Matches   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphql.ts)\n                        \n                        \n                            Maybe   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Mutation   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Penalties   (src/.../graphql.ts)\n                        \n                        \n                            Pitch   (src/.../graphql.ts)\n                        \n                        \n                            Positions   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Query   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Ranking   (src/.../graphql.ts)\n                        \n                        \n                            Redisevent   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Rounds   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Season   (src/.../graphql.ts)\n                        \n                        \n                            Subscription   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Team   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Teams   (src/.../graphql.ts)\n                        \n                        \n                            Tournament   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphqlsubs.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                        \n                            Variables   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/graphql.ts\n    \n    \n        \n            \n                \n                    \n                    AllPitches\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllSeasons\n                \n            \n            \n                \n                        AllSeasons.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTeams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllTournaments\n                \n            \n            \n                \n                        AllTournaments.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AllUsers\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AuthenticatedUser\n                \n            \n            \n                \n                        User.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Contact\n                \n            \n            \n                \n                        Contact.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Date\n                \n            \n            \n                \n                    The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. \n\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                    The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. \n\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Event\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Fragment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuestTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HomeTeam\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LatestEvents\n                \n            \n            \n                \n                        Event.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Match\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MatchDays\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Matches\n                \n            \n            \n                \n                        Match.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Mutation\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Penalties\n                \n            \n            \n                \n                        Penalty.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Pitch\n                \n            \n            \n                \n                        Pitch.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Positions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Query\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Ranking\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Rounds\n                \n            \n            \n                \n                        MatchDay.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Season.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Season\n                \n            \n            \n                \n                        Ranking.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Team\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Teams\n                \n            \n            \n                \n                        Team.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Tournament\n                \n            \n            \n                \n                        Tournament.Fragment\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/api/graphqlsubs.ts\n    \n    \n        \n            \n                \n                    \n                    DateTime\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Maybe\n                \n            \n            \n                \n                        T | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Redisevent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subscription\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Variables\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_KEY   (src/.../authentication.service.ts)\n                        \n                        \n                            AllSeasonsFragment   (src/.../graphql.ts)\n                        \n                        \n                            AllTournamentsFragment   (src/.../graphql.ts)\n                        \n                        \n                            ContactFragment   (src/.../graphql.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.app.local.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.app.ts)\n                        \n                        \n                            EventFragment   (src/.../graphql.ts)\n                        \n                        \n                            HIDE_PLAYED_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            LANG_KEY   (src/.../i18.service.ts)\n                        \n                        \n                            MANAGE_SEASON_KEY   (src/.../manageseason.component.ts)\n                        \n                        \n                            MANAGE_TOURNAMENT_KEY   (src/.../managetournament.component.ts)\n                        \n                        \n                            MatchDayFragment   (src/.../graphql.ts)\n                        \n                        \n                            MatchFragment   (src/.../graphql.ts)\n                        \n                        \n                            PenaltyFragment   (src/.../graphql.ts)\n                        \n                        \n                            PitchFragment   (src/.../graphql.ts)\n                        \n                        \n                            RankingFragment   (src/.../graphql.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            result   (src/.../introspection-result.ts)\n                        \n                        \n                            result   (src/.../graphqlsubs.ts)\n                        \n                        \n                            SeasonFragment   (src/.../graphql.ts)\n                        \n                        \n                            SELECTED_MATCHDAY_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_SEASON_KEY   (src/.../season.service.ts)\n                        \n                        \n                            SELECTED_TEAM_KEY   (src/.../matchplan.component.ts)\n                        \n                        \n                            SELECTED_TOURNAMENT_KEY   (src/.../tournament.component.ts)\n                        \n                        \n                            TeamFragment   (src/.../graphql.ts)\n                        \n                        \n                            TournamentFragment   (src/.../graphql.ts)\n                        \n                        \n                            UserFragment   (src/.../graphql.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCESS_TOKEN_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ACCESS_TOKEN'\n                        \n                    \n\n\n            \n        \n\n    src/api/graphql.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AllSeasonsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllSeasons on Season {\n    id\n    name\n    state\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AllTournamentsFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment AllTournaments on Tournament {\n    id\n    name\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ContactFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Contact on Contact {\n    first_name\n    last_name\n    phone\n    email\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Event on Event {\n    id\n    occurred_at\n    type\n  }\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchDayFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment MatchDay on MatchDay {\n    id\n    number\n    start_date\n    end_date\n    matches {\n      ...Match\n    }\n  }\n\n  ${MatchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MatchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Match on Match {\n    id\n    home_team {\n      ...Team\n    }\n    home_score\n    guest_team {\n      ...Team\n    }\n    guest_score\n    kickoff\n    pitch {\n      ...Pitch\n    }\n    cancelled_at\n    cancellation_reason\n  }\n\n  ${TeamFragment}\n  ${PitchFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PenaltyFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Penalty on RankingPenalty {\n    id\n    team {\n      ...Team\n    }\n    reason\n    created_at\n    points\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PitchFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Pitch on Pitch {\n    id\n    label\n    location_longitude\n    location_latitude\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RankingFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Ranking on Season {\n    id\n    ranking {\n      updated_at\n      positions {\n        team {\n          ...Team\n        }\n        sort_index\n        number\n        matches\n        wins\n        draws\n        losses\n        scored_goals\n        conceded_goals\n        points\n      }\n      penalties {\n        ...Penalty\n      }\n    }\n  }\n\n  ${TeamFragment}\n  ${PenaltyFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SeasonFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Season on Season {\n    id\n    name\n    teams {\n      ...Team\n    }\n    match_days {\n      ...MatchDay\n    }\n  }\n\n  ${TeamFragment}\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TeamFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Team on Team {\n    id\n    name\n    created_at\n    contact {\n      ...Contact\n    }\n  }\n\n  ${ContactFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TournamentFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment Tournament on Tournament {\n    id\n    name\n    rounds {\n      ...MatchDay\n    }\n  }\n\n  ${MatchDayFragment}\n`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserFragment\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : gql`\n  fragment User on User {\n    id\n    email\n    teams {\n      ...Team\n    }\n    role\n    first_name\n    last_name\n  }\n\n  ${TeamFragment}\n`\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.local.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    production: true,\n    persistCache: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/matchplan/matchplan.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_PLAYED_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HIDE_PLAYED'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_MATCHDAY_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_MATCHDAY'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TEAM_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TEAM'\n                        \n                    \n\n\n            \n        \n\n    src/app/services/i18.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LANG_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LANG'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/manageseason/manageseason.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_SEASON_ID_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/admin/managetournament/managetournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MANAGE_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'MANAGE_TOURNAMENT_KEY'\n                        \n                    \n\n\n            \n        \n\n    src/api/introspection-result.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/api/graphqlsubs.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IntrospectionResultData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  __schema: {\n    types: []\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/season.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_SEASON_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_SEASON'\n                        \n                    \n\n\n            \n        \n\n    src/app/components/tournament/tournament.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SELECTED_TOURNAMENT_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SELECTED_TOURNAMENT'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
